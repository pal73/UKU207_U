; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\control.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\control.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\control.crf control.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ke_start PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;294    {          
000004  4606              MOV      r6,r0
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  f04f0400          MOV      r4,#0
00000a  4dff              LDR      r5,|L1.1032|
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000c  f04f0064          MOV      r0,#0x64
000010  7728              STRB     r0,[r5,#0x1c]
;;;312    
;;;313    	spc_stat=spcKE;
000012  f04f0701          MOV      r7,#1
000016  762f              STRB     r7,[r5,#0x18]
;;;314    	__ee_spc_stat=spcKE;
000018  f8a57066          STRH     r7,[r5,#0x66]
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001c  4639              MOV      r1,r7
00001e  f240209a          MOV      r0,#0x29a
000022  f7fffffe          BL       lc640_write_int
;;;316    	
;;;317    	spc_bat=0;
000026  766c              STRB     r4,[r5,#0x19]
;;;318    	__ee_spc_bat=0;
000028  f8a54068          STRH     r4,[r5,#0x68]
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  4621              MOV      r1,r4
00002e  f240209e          MOV      r0,#0x29e
000032  f7fffffe          BL       lc640_write_int
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000036  f8df83d4          LDR      r8,|L1.1036|
00003a  f8c84018          STR      r4,[r8,#0x18]  ; bat
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
00003e  48f4              LDR      r0,|L1.1040|
000040  2100              MOVS     r1,#0
000042  f9b00000          LDRSH    r0,[r0,#0]  ; ADR_EE_BAT_ZAR_CNT_KE
000046  f7fffffe          BL       lc640_write_int
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004a  f8a8404a          STRH     r4,[r8,#0x4a]
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
00004e  2100              MOVS     r1,#0
000050  f44f70e3          MOV      r0,#0x1c6
000054  f7fffffe          BL       lc640_write_int
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  76ac              STRB     r4,[r5,#0x1a]
;;;329    	__ee_spc_phase=0;
00005a  f8a5406a          STRH     r4,[r5,#0x6a]
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  4621              MOV      r1,r4
000060  f44f7028          MOV      r0,#0x2a0
000064  f7fffffe          BL       lc640_write_int
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
000068  eb060046          ADD      r0,r6,r6,LSL #1
00006c  eb001006          ADD      r0,r0,r6,LSL #4
000070  eb080180          ADD      r1,r8,r0,LSL #2
000074  48e7              LDR      r0,|L1.1044|
000076  8800              LDRH     r0,[r0,#0]  ; bat_u_old_cnt
000078  f1000001          ADD      r0,r0,#1
00007c  f0000007          AND      r0,r0,#7
000080  eb010040          ADD      r0,r1,r0,LSL #1
000084  8c00              LDRH     r0,[r0,#0x20]
000086  9001              STR      r0,[sp,#4]
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  4ee3              LDR      r6,|L1.1048|
00008a  8bb0              LDRH     r0,[r6,#0x1c]
00008c  9000              STR      r0,[sp,#0]
;;;340    		gran_char(&temp,1,99);
00008e  f04f0263          MOV      r2,#0x63
000092  f04f0101          MOV      r1,#1
000096  4668              MOV      r0,sp
000098  f7fffffe          BL       gran_char
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  f10504ec          ADD      r4,r5,#0xec
0000a0  f89d0000          LDRB     r0,[sp,#0]
0000a4  7020              STRB     r0,[r4,#0]
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  7e30              LDRB     r0,[r6,#0x18]
0000a8  9000              STR      r0,[sp,#0]
;;;344    		gran_char(&temp,1,12);
0000aa  220c              MOVS     r2,#0xc
0000ac  2101              MOVS     r1,#1
0000ae  4668              MOV      r0,sp
0000b0  f7fffffe          BL       gran_char
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  f89d0000          LDRB     r0,[sp,#0]
0000b8  7060              STRB     r0,[r4,#1]
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000ba  7b30              LDRB     r0,[r6,#0xc]
0000bc  9000              STR      r0,[sp,#0]
;;;348    		gran_char(&temp,1,31);
0000be  221f              MOVS     r2,#0x1f
0000c0  2101              MOVS     r1,#1
0000c2  4668              MOV      r0,sp
0000c4  f7fffffe          BL       gran_char
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000c8  f89d0000          LDRB     r0,[sp,#0]
0000cc  70a0              STRB     r0,[r4,#2]
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000ce  f89d0004          LDRB     r0,[sp,#4]
0000d2  70e0              STRB     r0,[r4,#3]
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d4  f24020a2          MOV      r0,#0x2a2
0000d8  6821              LDR      r1,[r4,#0]  ; ke_date
0000da  f7fffffe          BL       lc640_write_long
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000de  7a30              LDRB     r0,[r6,#8]
0000e0  9000              STR      r0,[sp,#0]
;;;355    		gran_char(&temp,0,23);
0000e2  2217              MOVS     r2,#0x17
0000e4  2100              MOVS     r1,#0
0000e6  4668              MOV      r0,sp
0000e8  f7fffffe          BL       gran_char
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ec  f89d0000          LDRB     r0,[sp,#0]
0000f0  7120              STRB     r0,[r4,#4]
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f2  7930              LDRB     r0,[r6,#4]
0000f4  9000              STR      r0,[sp,#0]
;;;359    		gran_char(&temp,0,59);
0000f6  223b              MOVS     r2,#0x3b
0000f8  2100              MOVS     r1,#0
0000fa  4668              MOV      r0,sp
0000fc  f7fffffe          BL       gran_char
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  f89d0000          LDRB     r0,[sp,#0]
000104  7160              STRB     r0,[r4,#5]
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  7830              LDRB     r0,[r6,#0]
000108  9000              STR      r0,[sp,#0]
;;;363    		gran_char(&temp,0,59);
00010a  223b              MOVS     r2,#0x3b
00010c  2100              MOVS     r1,#0
00010e  4668              MOV      r0,sp
000110  f7fffffe          BL       gran_char
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  f89d0000          LDRB     r0,[sp,#0]
000118  71a0              STRB     r0,[r4,#6]
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011a  f89d0005          LDRB     r0,[sp,#5]
00011e  71e0              STRB     r0,[r4,#7]
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000120  f24020a6          MOV      r0,#0x2a6
000124  6861              LDR      r1,[r4,#4]  ; ke_date
000126  f7fffffe          BL       lc640_write_long
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
00012a  70af              STRB     r7,[r5,#2]
;;;370    	}
;;;371    }
00012c  e8bd81fc          POP      {r2-r8,pc}
;;;372    #endif
                          ENDP

                  ke_drv PROC
;;;454    //-----------------------------------------------
;;;455    void ke_drv(void)
000130  e92d47f0          PUSH     {r4-r10,lr}
;;;456    {
000134  b088              SUB      sp,sp,#0x20
;;;457    static char ke_drv_cnt_10s;
;;;458    static short i_bat_buff[6];
;;;459    static char i_bat_buff_cnt;
;;;460    short ke_drv_i_temp;
;;;461    short ke_drv_i_avg;
;;;462    char i;
;;;463    short ke_drv_i_temp_temp;
;;;464    const long bat_hndl_t_razr_const[7]={600L,1800L,3600L,10800L,18000L,36000L,72000L};
000136  f04f021c          MOV      r2,#0x1c
00013a  49b8              LDR      r1,|L1.1052|
00013c  a801              ADD      r0,sp,#4
00013e  f7fffffe          BL       __aeabi_memcpy4
;;;465    
;;;466    if(bat_hndl_zvu_ke_init==1)	  //Инициализация при включении контроля емкости 
000142  4eb1              LDR      r6,|L1.1032|
;;;467    	{
;;;468    	
;;;469    	i_bat_buff[0]=0;
000144  4bb6              LDR      r3,|L1.1056|
000146  2500              MOVS     r5,#0
000148  78b0              LDRB     r0,[r6,#2]            ;466  ; bat_hndl_zvu_ke_init
00014a  2801              CMP      r0,#1                 ;466
00014c  d102              BNE      |L1.340|
00014e  801d              STRH     r5,[r3,#0]
;;;470    	i_bat_buff[0]=0;
;;;471    	i_bat_buff[0]=0;
;;;472    	i_bat_buff[0]=0;
;;;473    	i_bat_buff[0]=0;
;;;474    	i_bat_buff[0]=0;
;;;475    	i_bat_buff_cnt=0;
000150  7135              STRB     r5,[r6,#4]
;;;476    
;;;477    	bat_hndl_zvu_ke_init=0;
000152  70b5              STRB     r5,[r6,#2]
                  |L1.340|
;;;478    	}
;;;479    
;;;480    
;;;481    
;;;482    
;;;483    if(spc_stat==spcKE)
000154  7e30              LDRB     r0,[r6,#0x18]  ; spc_stat
000156  2801              CMP      r0,#1
000158  d17e              BNE      |L1.600|
;;;484    	{
;;;485    	ke_drv_i_temp=-Ib_ips_termokompensat/10;
00015a  48b2              LDR      r0,|L1.1060|
00015c  f04f070a          MOV      r7,#0xa
000160  f9b00000          LDRSH    r0,[r0,#0]  ; Ib_ips_termokompensat
000164  f1c00000          RSB      r0,r0,#0
000168  fb90f0f7          SDIV     r0,r0,r7
00016c  b200              SXTH     r0,r0
;;;486    	if(ke_drv_i_temp<0)ke_drv_i_temp=0;
00016e  2800              CMP      r0,#0
000170  da01              BGE      |L1.374|
000172  f04f0000          MOV      r0,#0
                  |L1.374|
;;;487    
;;;488    	bat_hndl_plazma[3]=ke_drv_cnt_10s;
000176  4aac              LDR      r2,|L1.1064|
000178  78f1              LDRB     r1,[r6,#3]  ; ke_drv_cnt_10s
00017a  60d1              STR      r1,[r2,#0xc]  ; bat_hndl_plazma
;;;489    	if(++ke_drv_cnt_10s>10)
00017c  1c49              ADDS     r1,r1,#1
;;;490    		{
;;;491    		ke_drv_cnt_10s=0;
;;;492    
;;;493    		i_bat_buff_cnt++;
;;;494    		if(i_bat_buff_cnt>=6)i_bat_buff_cnt=0;
;;;495    		bat_hndl_plazma[2]=i_bat_buff_cnt;
;;;496    		i_bat_buff[i_bat_buff_cnt]=ke_drv_i_temp;
;;;497    		ke_drv_i_temp_temp=0;
;;;498    		for(i=0;i<6;i++)
;;;499    			{
;;;500    			ke_drv_i_temp_temp+=i_bat_buff[i];
;;;501    			}
;;;502    		ke_drv_i_avg=ke_drv_i_temp_temp/6;
;;;503    
;;;504    		I_from_t_table[0]=BAT_C_POINT_1_6*6; 	//Ток при котором батарея разрядится за 1/6 часа (0.1А)
;;;505    		I_from_t_table[1]=BAT_C_POINT_1_2*2; 	//Ток при котором батарея разрядится за 1/2 часа (0.1А)
;;;506    		I_from_t_table[2]=BAT_C_POINT_1; 		//Ток при котором батарея разрядится за 1 час (0.1А)
;;;507    		I_from_t_table[3]=BAT_C_POINT_3/3; 		//Ток при котором батарея разрядится за 3 часа (0.1А)
;;;508    		I_from_t_table[4]=BAT_C_POINT_5/5; 		//Ток при котором батарея разрядится за 5 часов (0.1А)
;;;509    		I_from_t_table[5]=BAT_C_POINT_10/10; 	//Ток при котором батарея разрядится за 10 часов (0.1А)
;;;510    		I_from_t_table[6]=BAT_C_POINT_20/20; 	//Ток при котором батарея разрядится за 20 часов (0.1А)
;;;511    		
;;;512    		U_end_from_i_table[0]=BAT_U_END_1_6;	//Конечное напряжение контроля емкости при разряде за 1/6 часа
;;;513    		U_end_from_i_table[1]=BAT_U_END_1_2;	//Конечное напряжение контроля емкости при разряде за 1/2 часа
;;;514    		U_end_from_i_table[2]=BAT_U_END_1;		//Конечное напряжение контроля емкости при разряде за 1 час
;;;515    		U_end_from_i_table[3]=BAT_U_END_3;		//Конечное напряжение контроля емкости при разряде за 3 часа
;;;516    		U_end_from_i_table[4]=BAT_U_END_5;		//Конечное напряжение контроля емкости при разряде за 5 часов
;;;517    		U_end_from_i_table[5]=BAT_U_END_10;		//Конечное напряжение контроля емкости при разряде за 10 часов
;;;518    		U_end_from_i_table[6]=BAT_U_END_20;		//Конечное напряжение контроля емкости при разряде за 20 часов		
;;;519    
;;;520    		bat_hndl_plazma[1]=ke_drv_i_avg;
;;;521    		bat_hndl_i_temp=ke_drv_i_avg;
00017e  4ca2              LDR      r4,|L1.1032|
000180  b2c9              UXTB     r1,r1                 ;489
000182  3480              ADDS     r4,r4,#0x80
000184  70f1              STRB     r1,[r6,#3]            ;489
000186  290a              CMP      r1,#0xa               ;489
000188  d967              BLS      |L1.602|
00018a  70f5              STRB     r5,[r6,#3]            ;491
00018c  7931              LDRB     r1,[r6,#4]            ;493  ; i_bat_buff_cnt
00018e  f1010101          ADD      r1,r1,#1              ;493
000192  b2c9              UXTB     r1,r1                 ;493
000194  7131              STRB     r1,[r6,#4]            ;493
000196  2906              CMP      r1,#6                 ;494
000198  d300              BCC      |L1.412|
00019a  7135              STRB     r5,[r6,#4]            ;494
                  |L1.412|
00019c  7931              LDRB     r1,[r6,#4]            ;495  ; i_bat_buff_cnt
00019e  6091              STR      r1,[r2,#8]            ;495  ; bat_hndl_plazma
0001a0  f8230011          STRH     r0,[r3,r1,LSL #1]     ;496
0001a4  f04f0100          MOV      r1,#0                 ;497
0001a8  4608              MOV      r0,r1                 ;498
                  |L1.426|
0001aa  f833c010          LDRH     r12,[r3,r0,LSL #1]    ;500
0001ae  4461              ADD      r1,r1,r12             ;500
0001b0  b209              SXTH     r1,r1                 ;500
0001b2  f1000001          ADD      r0,r0,#1              ;498
0001b6  b2c0              UXTB     r0,r0                 ;498
0001b8  2806              CMP      r0,#6                 ;498
0001ba  d3f6              BCC      |L1.426|
0001bc  f04f0006          MOV      r0,#6                 ;502
0001c0  fb91f0f0          SDIV     r0,r1,r0              ;502
0001c4  b201              SXTH     r1,r0                 ;502
0001c6  4899              LDR      r0,|L1.1068|
0001c8  f8df825c          LDR      r8,|L1.1064|
0001cc  8800              LDRH     r0,[r0,#0]            ;504  ; BAT_C_POINT_1_6
0001ce  f1a8081c          SUB      r8,r8,#0x1c           ;504
0001d2  eb000040          ADD      r0,r0,r0,LSL #1       ;504
0001d6  ea4f0040          LSL      r0,r0,#1              ;504
0001da  f8a80000          STRH     r0,[r8,#0]            ;504
0001de  4894              LDR      r0,|L1.1072|
0001e0  8800              LDRH     r0,[r0,#0]            ;505  ; BAT_C_POINT_1_2
0001e2  ea4f0040          LSL      r0,r0,#1              ;505
0001e6  f8a80002          STRH     r0,[r8,#2]            ;505
0001ea  4892              LDR      r0,|L1.1076|
0001ec  8800              LDRH     r0,[r0,#0]            ;506  ; BAT_C_POINT_1
0001ee  f8a80004          STRH     r0,[r8,#4]            ;506
0001f2  4891              LDR      r0,|L1.1080|
0001f4  f04f0303          MOV      r3,#3                 ;507
0001f8  f9b00000          LDRSH    r0,[r0,#0]            ;507  ; BAT_C_POINT_3
0001fc  fb90f0f3          SDIV     r0,r0,r3              ;507
000200  f8a80006          STRH     r0,[r8,#6]            ;507
000204  488d              LDR      r0,|L1.1084|
000206  f04f0305          MOV      r3,#5                 ;508
00020a  f9b00000          LDRSH    r0,[r0,#0]            ;508  ; BAT_C_POINT_5
00020e  fb90f0f3          SDIV     r0,r0,r3              ;508
000212  f8a80008          STRH     r0,[r8,#8]            ;508
000216  488a              LDR      r0,|L1.1088|
000218  f9b00000          LDRSH    r0,[r0,#0]            ;509  ; BAT_C_POINT_10
00021c  fb90f0f7          SDIV     r0,r0,r7              ;509
000220  f8a8000a          STRH     r0,[r8,#0xa]          ;509
000224  4887              LDR      r0,|L1.1092|
000226  f04f0314          MOV      r3,#0x14              ;510
00022a  f9b00000          LDRSH    r0,[r0,#0]            ;510  ; BAT_C_POINT_20
00022e  fb90f0f3          SDIV     r0,r0,r3              ;510
000232  f8a8000c          STRH     r0,[r8,#0xc]          ;510
000236  4884              LDR      r0,|L1.1096|
000238  f108090e          ADD      r9,r8,#0xe            ;512
00023c  f9b07000          LDRSH    r7,[r0,#0]            ;512  ; BAT_U_END_1_6
000240  f8a97000          STRH     r7,[r9,#0]            ;512
000244  4881              LDR      r0,|L1.1100|
000246  8800              LDRH     r0,[r0,#0]            ;513  ; BAT_U_END_1_2
000248  f8a90002          STRH     r0,[r9,#2]            ;513
00024c  4880              LDR      r0,|L1.1104|
00024e  8800              LDRH     r0,[r0,#0]            ;514  ; BAT_U_END_1
000250  f8a90004          STRH     r0,[r9,#4]            ;514
000254  487f              LDR      r0,|L1.1108|
000256  e001              B        |L1.604|
                  |L1.600|
000258  e11b              B        |L1.1170|
                  |L1.602|
00025a  e061              B        |L1.800|
                  |L1.604|
00025c  8800              LDRH     r0,[r0,#0]            ;515  ; BAT_U_END_3
00025e  f8a90006          STRH     r0,[r9,#6]            ;515
000262  487d              LDR      r0,|L1.1112|
000264  8800              LDRH     r0,[r0,#0]            ;516  ; BAT_U_END_5
000266  f8a90008          STRH     r0,[r9,#8]            ;516
00026a  487c              LDR      r0,|L1.1116|
00026c  8800              LDRH     r0,[r0,#0]            ;517  ; BAT_U_END_10
00026e  f8a9000a          STRH     r0,[r9,#0xa]          ;517
000272  487b              LDR      r0,|L1.1120|
000274  f9b0c000          LDRSH    r12,[r0,#0]           ;518  ; BAT_U_END_20
000278  f8a9c00c          STRH     r12,[r9,#0xc]         ;518
00027c  6051              STR      r1,[r2,#4]            ;520  ; bat_hndl_plazma
00027e  80a1              STRH     r1,[r4,#4]
;;;522    		
;;;523    		for(i=0;i<7;i++)
000280  f04f0000          MOV      r0,#0
                  |L1.644|
;;;524    			{
;;;525    			if(bat_hndl_i_temp>=I_from_t_table[i])
000284  f9383010          LDRSH    r3,[r8,r0,LSL #1]
000288  428b              CMP      r3,r1
00028a  dd04              BLE      |L1.662|
00028c  f1000001          ADD      r0,r0,#1              ;523
000290  b2c0              UXTB     r0,r0                 ;523
000292  2807              CMP      r0,#7                 ;523
000294  d3f6              BCC      |L1.644|
                  |L1.662|
;;;526    				{
;;;527    				break;
;;;528    				}
;;;529    			}
;;;530    
;;;531    		bat_hndl_plazma[0]=i;
000296  6010              STR      r0,[r2,#0]  ; bat_hndl_plazma
000298  f10d0a04          ADD      r10,sp,#4             ;464
;;;532    
;;;533    		 if(i==0) bat_hndl_t_razr_ke=bat_hndl_t_razr_const[0];
00029c  b1c8              CBZ      r0,|L1.722|
;;;534    		 else if((i>=1)&&(i<7))
00029e  1e42              SUBS     r2,r0,#1
0002a0  2a06              CMP      r2,#6
0002a2  d219              BCS      |L1.728|
;;;535    		 	{
;;;536    			short i1,i2;
;;;537    			i1=I_from_t_table[i-1]-bat_hndl_i_temp;
0002a4  f8383012          LDRH     r3,[r8,r2,LSL #1]
0002a8  eba30101          SUB      r1,r3,r1
0002ac  b209              SXTH     r1,r1
;;;538    			i2=I_from_t_table[i-1]-I_from_t_table[i];
0002ae  f8388010          LDRH     r8,[r8,r0,LSL #1]
0002b2  eba30308          SUB      r3,r3,r8
0002b6  b21b              SXTH     r3,r3
;;;539    			bat_hndl_t_razr_ke=bat_hndl_t_razr_const[i]-bat_hndl_t_razr_const[i-1];
0002b8  f85a8020          LDR      r8,[r10,r0,LSL #2]
0002bc  f85a2022          LDR      r2,[r10,r2,LSL #2]
0002c0  eba80802          SUB      r8,r8,r2
;;;540    			bat_hndl_t_razr_ke*=(long)i1;
0002c4  fb08f801          MUL      r8,r8,r1
;;;541    			bat_hndl_t_razr_ke/=(long)i2;
0002c8  fb98f1f3          SDIV     r1,r8,r3
;;;542    			bat_hndl_t_razr_ke+=bat_hndl_t_razr_const[i-1];
0002cc  4411              ADD      r1,r1,r2
0002ce  6461              STR      r1,[r4,#0x44]  ; bat_hndl_t_razr_ke
;;;543    			}
0002d0  e006              B        |L1.736|
                  |L1.722|
0002d2  9901              LDR      r1,[sp,#4]            ;533
0002d4  6461              STR      r1,[r4,#0x44]         ;533  ; bat_hndl_t_razr_ke
0002d6  e003              B        |L1.736|
                  |L1.728|
;;;544    		else if(i>=7)
0002d8  2807              CMP      r0,#7
0002da  d301              BCC      |L1.736|
;;;545    			{
;;;546    			bat_hndl_t_razr_ke=bat_hndl_t_razr_const[6];
0002dc  9907              LDR      r1,[sp,#0x1c]
0002de  6461              STR      r1,[r4,#0x44]  ; bat_hndl_t_razr_ke
                  |L1.736|
;;;547    			}
;;;548    
;;;549    		 if(i==0) bat_hndl_u_end=U_end_from_i_table[0];
0002e0  b1c0              CBZ      r0,|L1.788|
;;;550    		 else if((i>=1)&&(i<7))
0002e2  1e41              SUBS     r1,r0,#1
0002e4  2906              CMP      r1,#6
0002e6  d217              BCS      |L1.792|
;;;551    		 	{
;;;552    			long u1,tempL;
;;;553    
;;;554    			tempL=(long)U_end_from_i_table[i]-(long)U_end_from_i_table[i-1];
0002e8  f9393010          LDRSH    r3,[r9,r0,LSL #1]
0002ec  f9392011          LDRSH    r2,[r9,r1,LSL #1]
0002f0  eba30302          SUB      r3,r3,r2
;;;555    			u1=bat_hndl_t_razr_ke-bat_hndl_t_razr_const[i-1];
0002f4  f85a1021          LDR      r1,[r10,r1,LSL #2]
0002f8  6c67              LDR      r7,[r4,#0x44]  ; bat_hndl_t_razr_ke
0002fa  eba70701          SUB      r7,r7,r1
;;;556    			tempL*=u1;
0002fe  fb03f307          MUL      r3,r3,r7
;;;557    			u1=bat_hndl_t_razr_const[i]-bat_hndl_t_razr_const[i-1];
000302  f85a0020          LDR      r0,[r10,r0,LSL #2]
000306  eba00001          SUB      r0,r0,r1
;;;558    			tempL/=u1;
00030a  fb93f0f0          SDIV     r0,r3,r0
;;;559    			tempL+=(long)U_end_from_i_table[i-1];
00030e  4410              ADD      r0,r0,r2
;;;560    			bat_hndl_u_end=(short)tempL;
000310  80e0              STRH     r0,[r4,#6]
;;;561    			}
000312  e005              B        |L1.800|
                  |L1.788|
000314  80e7              STRH     r7,[r4,#6]            ;549
000316  e003              B        |L1.800|
                  |L1.792|
;;;562    		else if(i>=7)
000318  2807              CMP      r0,#7
00031a  d301              BCC      |L1.800|
;;;563    			{
;;;564    			bat_hndl_u_end=U_end_from_i_table[6];
00031c  f8a4c006          STRH     r12,[r4,#6]
                  |L1.800|
;;;565    			}
;;;566    
;;;567    		}
;;;568    
;;;569    
;;;570    
;;;571    	if(spc_phase==0)
000320  7eb0              LDRB     r0,[r6,#0x1a]  ; spc_phase
;;;572    		{
;;;573    		//mess_send(MESS2BAT_HNDL,PARAM_BAT_MASK_OFF_AFTER_2SEC,(1<<(1-spc_bat)),20);
;;;574    		mess_send(MESS2BPS_HNDL,PARAM_BPS_ALL_OFF_AFTER_2SEC,0xffff,20);
;;;575    
;;;576    		bat[0]._zar_cnt_ke+=abs(bat[spc_bat]._Ib);
;;;577    	    	
;;;578    		if(bat[0]._zar_cnt_ke>=AH_CONSTANT)
;;;579    			{
;;;580    			bat[0]._zar_cnt_ke-=AH_CONSTANT;
;;;581    			lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[0])+1);
000322  4f3b              LDR      r7,|L1.1040|
;;;582    			}
;;;583    
;;;584    		bat[0]._time_min_cnt_ke++;
;;;585    		if(bat[0]._time_min_cnt_ke>=60)
;;;586    			{
;;;587    			lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,lc640_read_int(EE_ZVU_BAT_MIN_CNT_KE)+1);
000324  f44f78e3          MOV      r8,#0x1c6
000328  bbe0              CBNZ     r0,|L1.932|
00032a  2314              MOVS     r3,#0x14              ;574
00032c  f04f32ff          MOV      r2,#0xffffffff        ;574
000330  21ce              MOVS     r1,#0xce              ;574
000332  20cd              MOVS     r0,#0xcd              ;574
000334  f7fffffe          BL       mess_send
000338  7e71              LDRB     r1,[r6,#0x19]         ;576  ; spc_bat
00033a  f8df90d0          LDR      r9,|L1.1036|
00033e  eb010041          ADD      r0,r1,r1,LSL #1       ;576
000342  eb001001          ADD      r0,r0,r1,LSL #4       ;576
000346  eb090080          ADD      r0,r9,r0,LSL #2       ;576
00034a  f9b00008          LDRSH    r0,[r0,#8]            ;576
00034e  f7fffffe          BL       abs
000352  f8d91018          LDR      r1,[r9,#0x18]         ;576  ; bat
000356  4401              ADD      r1,r1,r0              ;576
000358  f8c91018          STR      r1,[r9,#0x18]         ;576  ; bat
00035c  f64840a0          MOV      r0,#0x8ca0            ;578
000360  4281              CMP      r1,r0                 ;578
000362  db0c              BLT      |L1.894|
000364  eba10100          SUB      r1,r1,r0              ;580
000368  f8c91018          STR      r1,[r9,#0x18]         ;580  ; bat
00036c  8838              LDRH     r0,[r7,#0]            ;581  ; ADR_EE_BAT_ZAR_CNT_KE
00036e  f7fffffe          BL       lc640_read_int
000372  1c40              ADDS     r0,r0,#1              ;581
000374  b201              SXTH     r1,r0                 ;581
000376  f9b70000          LDRSH    r0,[r7,#0]            ;581  ; ADR_EE_BAT_ZAR_CNT_KE
00037a  f7fffffe          BL       lc640_write_int
                  |L1.894|
00037e  f8b9004a          LDRH     r0,[r9,#0x4a]         ;584  ; bat
000382  f1000001          ADD      r0,r0,#1              ;584
000386  b281              UXTH     r1,r0                 ;584
000388  f8a9104a          STRH     r1,[r9,#0x4a]         ;584
00038c  293c              CMP      r1,#0x3c              ;585
00038e  d309              BCC      |L1.932|
000390  4640              MOV      r0,r8
000392  f7fffffe          BL       lc640_read_int
000396  1c40              ADDS     r0,r0,#1
000398  b201              SXTH     r1,r0
00039a  4640              MOV      r0,r8
00039c  f7fffffe          BL       lc640_write_int
;;;588    			bat[0]._time_min_cnt_ke=0;
0003a0  f8a9504a          STRH     r5,[r9,#0x4a]
                  |L1.932|
;;;589    			}
;;;590    		}
;;;591    
;;;592    	else if(spc_phase==1)
;;;593    		{
;;;594    		//mess_send(MESS2BAT_HNDL,PARAM_BAT_MASK_OFF_AFTER_2SEC,(1<<(1-spc_bat)),20);
;;;595    		}
;;;596    
;;;597    	if(out_U<bat_hndl_u_end)
0003a4  482f              LDR      r0,|L1.1124|
0003a6  f9b41006          LDRSH    r1,[r4,#6]  ; bat_hndl_u_end
0003aa  f9b00000          LDRSH    r0,[r0,#0]  ; out_U
0003ae  4288              CMP      r0,r1
0003b0  da6d              BGE      |L1.1166|
;;;598    		{
;;;599    		cnt_end_ke++;
0003b2  f8b60062          LDRH     r0,[r6,#0x62]  ; cnt_end_ke
0003b6  f1000001          ADD      r0,r0,#1
0003ba  b200              SXTH     r0,r0
0003bc  f8a60062          STRH     r0,[r6,#0x62]
;;;600    		if(cnt_end_ke>=30)
0003c0  281e              CMP      r0,#0x1e
0003c2  db66              BLT      |L1.1170|
;;;601    			{
;;;602    			
;;;603    			if((spc_stat==spcKE)&&(spc_phase==0))
0003c4  7e30              LDRB     r0,[r6,#0x18]  ; spc_stat
0003c6  2801              CMP      r0,#1
0003c8  d156              BNE      |L1.1144|
0003ca  7eb0              LDRB     r0,[r6,#0x1a]  ; spc_phase
0003cc  b9d8              CBNZ     r0,|L1.1030|
;;;604    				{
;;;605    				lc640_write_int(ADR_EE_BAT_C_REAL[0],lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[0]));
0003ce  8838              LDRH     r0,[r7,#0]  ; ADR_EE_BAT_ZAR_CNT_KE
0003d0  f7fffffe          BL       lc640_read_int
0003d4  b201              SXTH     r1,r0
0003d6  4824              LDR      r0,|L1.1128|
0003d8  f9b00000          LDRSH    r0,[r0,#0]  ; ADR_EE_BAT_C_REAL
0003dc  f7fffffe          BL       lc640_write_int
;;;606    				ke_zvu_mem_hndl(0,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[0]),lc640_read_int(EE_ZVU_BAT_MIN_CNT_KE));
0003e0  4640              MOV      r0,r8
0003e2  f7fffffe          BL       lc640_read_int
0003e6  b284              UXTH     r4,r0
0003e8  8838              LDRH     r0,[r7,#0]  ; ADR_EE_BAT_ZAR_CNT_KE
0003ea  f7fffffe          BL       lc640_read_int
0003ee  b281              UXTH     r1,r0
0003f0  4622              MOV      r2,r4
0003f2  2000              MOVS     r0,#0
0003f4  f7fffffe          BL       ke_zvu_mem_hndl
;;;607    				lc640_write_int(ADR_EE_BAT_ZAR_CNT[0],0);
0003f8  481c              LDR      r0,|L1.1132|
0003fa  2100              MOVS     r1,#0
0003fc  f9b00000          LDRSH    r0,[r0,#0]  ; ADR_EE_BAT_ZAR_CNT
000400  f7fffffe          BL       lc640_write_int
;;;608    				cntrl_stat=50;
000404  e034              B        |L1.1136|
                  |L1.1030|
000406  e037              B        |L1.1144|
                  |L1.1032|
                          DCD      ||area_number.25||
                  |L1.1036|
                          DCD      bat
                  |L1.1040|
                          DCD      ADR_EE_BAT_ZAR_CNT_KE
                  |L1.1044|
                          DCD      bat_u_old_cnt
                  |L1.1048|
                          DCD      0x40024020
                  |L1.1052|
                          DCD      ||area_number.19||+0x4
                  |L1.1056|
                          DCD      ||.bss||
                  |L1.1060|
                          DCD      Ib_ips_termokompensat
                  |L1.1064|
                          DCD      ||.bss||+0x468
                  |L1.1068|
                          DCD      BAT_C_POINT_1_6
                  |L1.1072|
                          DCD      BAT_C_POINT_1_2
                  |L1.1076|
                          DCD      BAT_C_POINT_1
                  |L1.1080|
                          DCD      BAT_C_POINT_3
                  |L1.1084|
                          DCD      BAT_C_POINT_5
                  |L1.1088|
                          DCD      BAT_C_POINT_10
                  |L1.1092|
                          DCD      BAT_C_POINT_20
                  |L1.1096|
                          DCD      BAT_U_END_1_6
                  |L1.1100|
                          DCD      BAT_U_END_1_2
                  |L1.1104|
                          DCD      BAT_U_END_1
                  |L1.1108|
                          DCD      BAT_U_END_3
                  |L1.1112|
                          DCD      BAT_U_END_5
                  |L1.1116|
                          DCD      BAT_U_END_10
                  |L1.1120|
                          DCD      BAT_U_END_20
                  |L1.1124|
                          DCD      out_U
                  |L1.1128|
                          DCD      ADR_EE_BAT_C_REAL
                  |L1.1132|
                          DCD      ADR_EE_BAT_ZAR_CNT
                  |L1.1136|
000470  f04f0032          MOV      r0,#0x32
000474  8570              STRH     r0,[r6,#0x2a]
;;;609    				cntrl_stat_old=50;
000476  85b0              STRH     r0,[r6,#0x2c]
                  |L1.1144|
;;;610    				}
;;;611    
;;;612    			spc_stat=spcOFF;
000478  7635              STRB     r5,[r6,#0x18]
;;;613    			__ee_spc_stat=spcOFF;
00047a  f8a65066          STRH     r5,[r6,#0x66]
;;;614    			lc640_write_int(EE_SPC_STAT,spcOFF);
00047e  b008              ADD      sp,sp,#0x20
000480  2100              MOVS     r1,#0
000482  e8bd47f0          POP      {r4-r10,lr}
000486  f240209a          MOV      r0,#0x29a
00048a  f7ffbffe          B.W      lc640_write_int
                  |L1.1166|
;;;615    
;;;616    			}
;;;617    		}
;;;618    	else cnt_end_ke=0;
00048e  f8a65062          STRH     r5,[r6,#0x62]
                  |L1.1170|
;;;619    
;;;620    	}
;;;621    			
;;;622    }
000492  b008              ADD      sp,sp,#0x20
000494  e8bd87f0          POP      {r4-r10,pc}
;;;623    #endif
                          ENDP

                  vz_start PROC
;;;693    //-----------------------------------------------
;;;694    char vz_start(char hour)
000498  b570              PUSH     {r4-r6,lr}
;;;695    {          
00049a  4605              MOV      r5,r0
;;;696    char out;
;;;697    out=0;
00049c  f04f0600          MOV      r6,#0
;;;698    if((spc_stat==spcOFF)&&(speedChrgBlckStat!=1))
0004a0  4cff              LDR      r4,|L1.2208|
0004a2  7e20              LDRB     r0,[r4,#0x18]  ; spc_stat
0004a4  bb90              CBNZ     r0,|L1.1292|
0004a6  48ff              LDR      r0,|L1.2212|
0004a8  8800              LDRH     r0,[r0,#0]  ; speedChrgBlckStat
0004aa  2801              CMP      r0,#1
0004ac  d02e              BEQ      |L1.1292|
;;;699    	{
;;;700    	spc_stat=spcVZ;
0004ae  f04f0102          MOV      r1,#2
0004b2  7621              STRB     r1,[r4,#0x18]
;;;701    	__ee_spc_stat=spcVZ; 
0004b4  f8a41066          STRH     r1,[r4,#0x66]
;;;702    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);   
0004b8  f240209a          MOV      r0,#0x29a
0004bc  f7fffffe          BL       lc640_write_int
;;;703    	vz_cnt_h=hour;
0004c0  f8a4505e          STRH     r5,[r4,#0x5e]
;;;704    	__ee_vz_cnt=hour*60;
0004c4  ebc51005          RSB      r0,r5,r5,LSL #4
0004c8  ea4f0080          LSL      r0,r0,#2
0004cc  f8a40064          STRH     r0,[r4,#0x64]
;;;705    	if(hour==0)__ee_vz_cnt=30;
0004d0  b91d              CBNZ     r5,|L1.1242|
0004d2  f04f001e          MOV      r0,#0x1e
0004d6  f8a40064          STRH     r0,[r4,#0x64]
                  |L1.1242|
;;;706    	lc640_write_int(EE_VZ_CNT,__ee_vz_cnt);
0004da  f104045a          ADD      r4,r4,#0x5a
0004de  f44f7027          MOV      r0,#0x29c
0004e2  f9b4100a          LDRSH    r1,[r4,#0xa]  ; __ee_vz_cnt
0004e6  f7fffffe          BL       lc640_write_int
;;;707    	lc640_write_int(EE_SPC_VZ_LENGT,__ee_vz_cnt);	
0004ea  f9b4100a          LDRSH    r1,[r4,#0xa]  ; __ee_vz_cnt
0004ee  f44f702a          MOV      r0,#0x2a8
0004f2  f7fffffe          BL       lc640_write_int
;;;708    	vz_cnt_h_=0;
0004f6  f04f0000          MOV      r0,#0
0004fa  80e0              STRH     r0,[r4,#6]
;;;709    	vz_cnt_s=0;
0004fc  8020              STRH     r0,[r4,#0]
;;;710    	vz_cnt_s_=0;
0004fe  8060              STRH     r0,[r4,#2]
;;;711    	out=1;
000500  f04f0601          MOV      r6,#1
;;;712    	vz_mem_hndl(1);
000504  f04f0001          MOV      r0,#1
000508  f7fffffe          BL       vz_mem_hndl
                  |L1.1292|
;;;713    	}
;;;714    //else if((spc_stat==spc_KE1p1)||(spc_stat==spc_KE1p2)) out=22; 
;;;715    //else if((spc_stat==spc_KE2p1)||(spc_stat==spc_KE2p2)) out=33;
;;;716    //plazma=out;	
;;;717    return out;
00050c  4630              MOV      r0,r6
;;;718    }
00050e  bd70              POP      {r4-r6,pc}
;;;719    
                          ENDP

                  vz_stop PROC
;;;720    //-----------------------------------------------
;;;721    void vz_stop(void)
000510  b510              PUSH     {r4,lr}
;;;722    {
;;;723    if(spc_stat==spcVZ)
000512  4ce3              LDR      r4,|L1.2208|
000514  7e20              LDRB     r0,[r4,#0x18]  ; spc_stat
000516  2802              CMP      r0,#2
000518  d113              BNE      |L1.1346|
;;;724         {
;;;725    vz_mem_hndl(vz_cnt_h);          
00051a  f1040428          ADD      r4,r4,#0x28
00051e  8ee0              LDRH     r0,[r4,#0x36]  ; vz_cnt_h
000520  f7fffffe          BL       vz_mem_hndl
;;;726    vz_cnt_s=0;
000524  f04f0000          MOV      r0,#0
000528  8660              STRH     r0,[r4,#0x32]
;;;727    vz_cnt_h=0;
00052a  86e0              STRH     r0,[r4,#0x36]
;;;728    vz_cnt_h_=0;
00052c  8720              STRH     r0,[r4,#0x38]
;;;729    spc_stat=spcOFF;
00052e  f8040c10          STRB     r0,[r4,#-0x10]
;;;730    
;;;731    		__ee_spc_stat=spcOFF;
000532  87e0              STRH     r0,[r4,#0x3e]
;;;732    		lc640_write_int(EE_SPC_STAT,spcOFF);
000534  4601              MOV      r1,r0
000536  e8bd4010          POP      {r4,lr}
00053a  f240209a          MOV      r0,#0x29a
00053e  f7ffbffe          B.W      lc640_write_int
                  |L1.1346|
;;;733         }
;;;734    
;;;735    }
000542  bd10              POP      {r4,pc}
;;;736    
                          ENDP

                  amper_chas_cnt_drv PROC
;;;738    //-----------------------------------------------
;;;739    void amper_chas_cnt_drv(void)
000544  b510              PUSH     {r4,lr}
;;;740    {
;;;741    
;;;742    amper_chas_cnt_drv_summ+=(long)Ib_ips_termokompensat;
000546  4ad6              LDR      r2,|L1.2208|
000548  49d7              LDR      r1,|L1.2216|
00054a  3280              ADDS     r2,r2,#0x80
00054c  f9b11000          LDRSH    r1,[r1,#0]  ; Ib_ips_termokompensat
000550  6d50              LDR      r0,[r2,#0x54]  ; amper_chas_cnt_drv_summ
000552  4401              ADD      r1,r1,r0
000554  6551              STR      r1,[r2,#0x54]  ; amper_chas_cnt_drv_summ
;;;743    
;;;744    if(amper_chas_cnt_drv_summ>=36000L)
000556  f64843a0          MOV      r3,#0x8ca0
;;;745    	{
;;;746    	amper_chas_cnt_drv_summ-=36000L;
;;;747    	lc640_write_int(EE_AMPER_CHAS_CNT,lc640_read_int(EE_AMPER_CHAS_CNT)+1);
00055a  f44f74e4          MOV      r4,#0x1c8
00055e  4299              CMP      r1,r3                 ;744
000560  db0c              BLT      |L1.1404|
000562  eba10103          SUB      r1,r1,r3              ;746
000566  6551              STR      r1,[r2,#0x54]         ;746  ; amper_chas_cnt_drv_summ
000568  4620              MOV      r0,r4
00056a  f7fffffe          BL       lc640_read_int
00056e  1c40              ADDS     r0,r0,#1
000570  b201              SXTH     r1,r0
000572  4620              MOV      r0,r4
000574  e8bd4010          POP      {r4,lr}
000578  f7ffbffe          B.W      lc640_write_int
                  |L1.1404|
;;;748    	}
;;;749    else if(amper_chas_cnt_drv_summ<=-36000L)
00057c  48cb              LDR      r0,|L1.2220|
00057e  4281              CMP      r1,r0
000580  dc0c              BGT      |L1.1436|
;;;750    	{
;;;751    	amper_chas_cnt_drv_summ+=36000L;
000582  eb010003          ADD      r0,r1,r3
000586  6550              STR      r0,[r2,#0x54]  ; amper_chas_cnt_drv_summ
;;;752    	lc640_write_int(EE_AMPER_CHAS_CNT,lc640_read_int(EE_AMPER_CHAS_CNT)-1);
000588  4620              MOV      r0,r4
00058a  f7fffffe          BL       lc640_read_int
00058e  1e40              SUBS     r0,r0,#1
000590  b201              SXTH     r1,r0
000592  4620              MOV      r0,r4
000594  e8bd4010          POP      {r4,lr}
000598  f7ffbffe          B.W      lc640_write_int
                  |L1.1436|
;;;753    	}
;;;754    }
00059c  bd10              POP      {r4,pc}
;;;755    #endif
                          ENDP

                  avz_next_date_hndl PROC
;;;757    //-----------------------------------------------
;;;758    void avz_next_date_hndl(void)
00059e  b570              PUSH     {r4-r6,lr}
;;;759    {
;;;760    if((LPC_RTC->MONTH+AVZ)>12)lc640_write_int(EE_YEAR_AVZ,LPC_RTC->YEAR+1);
0005a0  4cc3              LDR      r4,|L1.2224|
0005a2  f8940038          LDRB     r0,[r4,#0x38]
0005a6  4dc3              LDR      r5,|L1.2228|
0005a8  7829              LDRB     r1,[r5,#0]  ; AVZ
0005aa  4408              ADD      r0,r0,r1
0005ac  280c              CMP      r0,#0xc
0005ae  d906              BLS      |L1.1470|
0005b0  8fa0              LDRH     r0,[r4,#0x3c]
0005b2  1c40              ADDS     r0,r0,#1
0005b4  b201              SXTH     r1,r0
0005b6  20b8              MOVS     r0,#0xb8
0005b8  f7fffffe          BL       lc640_write_int
0005bc  e004              B        |L1.1480|
                  |L1.1470|
;;;761    else lc640_write_int(EE_YEAR_AVZ,LPC_RTC->YEAR);
0005be  f9b4103c          LDRSH    r1,[r4,#0x3c]
0005c2  20b8              MOVS     r0,#0xb8
0005c4  f7fffffe          BL       lc640_write_int
                  |L1.1480|
;;;762    
;;;763    //lc640_write_int(EE_YEAR_AVZ,6);
;;;764    
;;;765    if((LPC_RTC->MONTH+AVZ)>12)lc640_write_int(EE_MONTH_AVZ,(LPC_RTC->MONTH+AVZ)-12);
0005c8  f8941038          LDRB     r1,[r4,#0x38]
0005cc  7828              LDRB     r0,[r5,#0]  ; AVZ
0005ce  4401              ADD      r1,r1,r0
0005d0  290c              CMP      r1,#0xc
0005d2  d907              BLS      |L1.1508|
0005d4  f8941038          LDRB     r1,[r4,#0x38]
0005d8  380c              SUBS     r0,r0,#0xc
0005da  4401              ADD      r1,r1,r0
0005dc  20b6              MOVS     r0,#0xb6
0005de  f7fffffe          BL       lc640_write_int
0005e2  e005              B        |L1.1520|
                  |L1.1508|
;;;766    else lc640_write_int(EE_MONTH_AVZ,LPC_RTC->MONTH+AVZ);                                                 
0005e4  f8941038          LDRB     r1,[r4,#0x38]
0005e8  4401              ADD      r1,r1,r0
0005ea  20b6              MOVS     r0,#0xb6
0005ec  f7fffffe          BL       lc640_write_int
                  |L1.1520|
;;;767    
;;;768    //lc640_write_int(EE_MONTH_AVZ,5);
;;;769    
;;;770    if(LPC_RTC->DOM>28) lc640_write_int(EE_DATE_AVZ,28);
0005f0  f894002c          LDRB     r0,[r4,#0x2c]
0005f4  281c              CMP      r0,#0x1c
0005f6  d904              BLS      |L1.1538|
0005f8  211c              MOVS     r1,#0x1c
0005fa  20b4              MOVS     r0,#0xb4
0005fc  f7fffffe          BL       lc640_write_int
000600  e004              B        |L1.1548|
                  |L1.1538|
;;;771    else lc640_write_int(EE_DATE_AVZ,LPC_RTC->DOM);
000602  f894102c          LDRB     r1,[r4,#0x2c]
000606  20b4              MOVS     r0,#0xb4
000608  f7fffffe          BL       lc640_write_int
                  |L1.1548|
;;;772    
;;;773    //lc640_write_int(EE_DATE_AVZ,4);
;;;774    
;;;775    lc640_write_int(EE_HOUR_AVZ,LPC_RTC->HOUR);
00060c  f1040420          ADD      r4,r4,#0x20
000610  7a21              LDRB     r1,[r4,#8]
000612  f04f00ae          MOV      r0,#0xae
000616  f7fffffe          BL       lc640_write_int
;;;776    lc640_write_int(EE_MIN_AVZ,LPC_RTC->MIN);
00061a  7921              LDRB     r1,[r4,#4]
00061c  20b0              MOVS     r0,#0xb0
00061e  f7fffffe          BL       lc640_write_int
;;;777    lc640_write_int(EE_SEC_AVZ,LPC_RTC->SEC);
000622  7821              LDRB     r1,[r4,#0]
000624  e8bd4070          POP      {r4-r6,lr}
000628  20b2              MOVS     r0,#0xb2
00062a  f7ffbffe          B.W      lc640_write_int
;;;778    
;;;779    }
;;;780    
                          ENDP

                  avz_drv PROC
;;;781    //-----------------------------------------------
;;;782    void avz_drv(void)                               
00062e  b510              PUSH     {r4,lr}
;;;783    {                
;;;784    if(AVZ!=AVZ_OFF)
000630  48a0              LDR      r0,|L1.2228|
;;;785    	{
;;;786    	if((LPC_RTC->YEAR==YEAR_AVZ)&&(LPC_RTC->MONTH==MONTH_AVZ)&&(LPC_RTC->DOM==DATE_AVZ)&&(LPC_RTC->HOUR==HOUR_AVZ)&&(LPC_RTC->MIN==MIN_AVZ)&&(LPC_RTC->SEC==SEC_AVZ))
;;;787    		{
;;;788    		bAVZ=1;
000632  4c9b              LDR      r4,|L1.2208|
000634  7800              LDRB     r0,[r0,#0]            ;784  ; AVZ
000636  b330              CBZ      r0,|L1.1670|
000638  489d              LDR      r0,|L1.2224|
00063a  8f82              LDRH     r2,[r0,#0x3c]         ;786
00063c  499e              LDR      r1,|L1.2232|
00063e  8809              LDRH     r1,[r1,#0]            ;786  ; YEAR_AVZ
000640  428a              CMP      r2,r1                 ;786
000642  d120              BNE      |L1.1670|
000644  f8902038          LDRB     r2,[r0,#0x38]         ;786
000648  499c              LDR      r1,|L1.2236|
00064a  8809              LDRH     r1,[r1,#0]            ;786  ; MONTH_AVZ
00064c  428a              CMP      r2,r1                 ;786
00064e  d11a              BNE      |L1.1670|
000650  f890102c          LDRB     r1,[r0,#0x2c]         ;786
000654  4a9a              LDR      r2,|L1.2240|
000656  8812              LDRH     r2,[r2,#0]            ;786  ; DATE_AVZ
000658  4291              CMP      r1,r2                 ;786
00065a  d114              BNE      |L1.1670|
00065c  f8901028          LDRB     r1,[r0,#0x28]         ;786
000660  4a98              LDR      r2,|L1.2244|
000662  8812              LDRH     r2,[r2,#0]            ;786  ; HOUR_AVZ
000664  4291              CMP      r1,r2                 ;786
000666  d10e              BNE      |L1.1670|
000668  f8901024          LDRB     r1,[r0,#0x24]         ;786
00066c  4a96              LDR      r2,|L1.2248|
00066e  8812              LDRH     r2,[r2,#0]            ;786  ; MIN_AVZ
000670  4291              CMP      r1,r2                 ;786
000672  d108              BNE      |L1.1670|
000674  f8900020          LDRB     r0,[r0,#0x20]         ;786
000678  4994              LDR      r1,|L1.2252|
00067a  8809              LDRH     r1,[r1,#0]            ;786  ; SEC_AVZ
00067c  4288              CMP      r0,r1                 ;786
00067e  d102              BNE      |L1.1670|
000680  f04f0001          MOV      r0,#1
000684  76e0              STRB     r0,[r4,#0x1b]
                  |L1.1670|
;;;789    		}
;;;790    	}
;;;791    if(bAVZ)
000686  7ee0              LDRB     r0,[r4,#0x1b]  ; bAVZ
000688  2800              CMP      r0,#0
00068a  d00c              BEQ      |L1.1702|
;;;792    	{
;;;793    	if(vz_start(AVZ_TIME))
00068c  4890              LDR      r0,|L1.2256|
00068e  8800              LDRH     r0,[r0,#0]  ; AVZ_TIME
000690  b2c0              UXTB     r0,r0
000692  f7fffffe          BL       vz_start
000696  2800              CMP      r0,#0
000698  d005              BEQ      |L1.1702|
;;;794    		{
;;;795    		bAVZ=0;
00069a  f04f0000          MOV      r0,#0
00069e  76e0              STRB     r0,[r4,#0x1b]
;;;796    		avz_next_date_hndl();
0006a0  e8bd4010          POP      {r4,lr}
0006a4  e7fe              B        avz_next_date_hndl
                  |L1.1702|
;;;797    		}
;;;798    	}	
;;;799    
;;;800    }
0006a6  bd10              POP      {r4,pc}
;;;801    
                          ENDP

                  vz_drv PROC
;;;802    //-----------------------------------------------
;;;803    void vz_drv(void)
0006a8  b538              PUSH     {r3-r5,lr}
;;;804    { 
;;;805    if(spc_stat==spcVZ)
0006aa  4c7d              LDR      r4,|L1.2208|
0006ac  7e20              LDRB     r0,[r4,#0x18]  ; spc_stat
0006ae  2802              CMP      r0,#2
0006b0  d116              BNE      |L1.1760|
;;;806    	{
;;;807    	if(sk_stat[0]==1)
0006b2  4888              LDR      r0,|L1.2260|
0006b4  7800              LDRB     r0,[r0,#0]  ; sk_stat
0006b6  2801              CMP      r0,#1
0006b8  d013              BEQ      |L1.1762|
;;;808    		{
;;;809    
;;;810    	if(vz_cnt_s_<3600)
;;;811    		{
;;;812    		vz_cnt_s_++;
;;;813    		if(vz_cnt_s_>=3600)
;;;814    			{
;;;815    			vz_cnt_s_=0;
;;;816    			if(vz_cnt_h)
;;;817    				{
;;;818    				vz_cnt_h--;
;;;819    				vz_cnt_h_++;
;;;820    				}
;;;821    			}
;;;822    		}
;;;823    
;;;824    
;;;825    	if(vz_cnt_s<60)
;;;826    		{
;;;827    		vz_cnt_s++;
;;;828    		if(vz_cnt_s>=60)
;;;829    			{
;;;830    			vz_cnt_s=0;
;;;831    			
;;;832    			__ee_vz_cnt--;
;;;833    			lc640_write_int(EE_VZ_CNT,__ee_vz_cnt);
;;;834    			if((!__ee_vz_cnt)||(speedChrgBlckStat==1))
;;;835    				{
;;;836    				spc_stat=spcOFF;
;;;837    						__ee_spc_stat=spcOFF;
;;;838    		lc640_write_int(EE_SPC_STAT,spcOFF);
;;;839    
;;;840    //				hv_vz_stat=hvsOFF;
;;;841    //		lc640_write(EE_HV_VZ_STAT,hvsOFF);
;;;842    				vz_mem_hndl(0);
;;;843    				}
;;;844    			}
;;;845    		}
;;;846    
;;;847    		}
;;;848    	else 
;;;849    		{
;;;850    		if(((LPC_RTC->SEC)%10)==0)
0006ba  4887              LDR      r0,|L1.2264|
0006bc  7800              LDRB     r0,[r0,#0]
0006be  f04f010a          MOV      r1,#0xa
0006c2  fbb0f2f1          UDIV     r2,r0,r1
0006c6  fb010012          MLS      r0,r1,r2,r0
0006ca  2800              CMP      r0,#0
0006cc  d108              BNE      |L1.1760|
;;;851    			{
;;;852    			show_mess(	"ВЫРАВНИВАЮЩИЙ ЗАРЯД ",
0006ce  f2413088          MOV      r0,#0x1388
0006d2  9000              STR      r0,[sp,#0]
0006d4  a381              ADR      r3,|L1.2268|
0006d6  a287              ADR      r2,|L1.2292|
0006d8  a18c              ADR      r1,|L1.2316|
0006da  a092              ADR      r0,|L1.2340|
0006dc  f7fffffe          BL       show_mess
                  |L1.1760|
;;;853    						"    ЗАБЛОКИРОВАН    ",
;;;854    						"     НЕИСПРАВНА     ",
;;;855    						"    ВЕНТИЛЯЦИЯ!!!   ",
;;;856    						5000);			
;;;857    			}
;;;858    		}
;;;859    /*	if(vz_cnt_s_>=3)
;;;860    		{
;;;861    		if(sk_stat[0]==0)
;;;862    		} */
;;;863    
;;;864    	}
;;;865    
;;;866    
;;;867    } 
0006e0  bd38              POP      {r3-r5,pc}
                  |L1.1762|
0006e2  f8b4005c          LDRH     r0,[r4,#0x5c]         ;810  ; vz_cnt_s_
0006e6  f44f6161          MOV      r1,#0xe10             ;810
0006ea  2500              MOVS     r5,#0                 ;815
0006ec  4288              CMP      r0,r1                 ;810
0006ee  d215              BCS      |L1.1820|
0006f0  f1000001          ADD      r0,r0,#1              ;812
0006f4  b280              UXTH     r0,r0                 ;812
0006f6  f8a4005c          STRH     r0,[r4,#0x5c]         ;812
0006fa  4288              CMP      r0,r1                 ;813
0006fc  d30e              BCC      |L1.1820|
0006fe  f8a4505c          STRH     r5,[r4,#0x5c]         ;815
000702  f8b4005e          LDRH     r0,[r4,#0x5e]         ;816  ; vz_cnt_h
000706  b148              CBZ      r0,|L1.1820|
000708  f1a00001          SUB      r0,r0,#1              ;818
00070c  f8240f5e          STRH     r0,[r4,#0x5e]!        ;818
000710  8860              LDRH     r0,[r4,#2]            ;819  ; vz_cnt_h_
000712  f1000001          ADD      r0,r0,#1              ;819
000716  8060              STRH     r0,[r4,#2]            ;819
000718  f1a4045e          SUB      r4,r4,#0x5e           ;819
                  |L1.1820|
00071c  f8b4005a          LDRH     r0,[r4,#0x5a]         ;825  ; vz_cnt_s
000720  283c              CMP      r0,#0x3c              ;825
000722  d2dd              BCS      |L1.1760|
000724  f1000001          ADD      r0,r0,#1              ;827
000728  b280              UXTH     r0,r0                 ;827
00072a  f8a4005a          STRH     r0,[r4,#0x5a]         ;827
00072e  283c              CMP      r0,#0x3c              ;828
000730  d3d6              BCC      |L1.1760|
000732  f8245f5a          STRH     r5,[r4,#0x5a]!        ;830
000736  8960              LDRH     r0,[r4,#0xa]          ;832  ; __ee_vz_cnt
000738  f1a00001          SUB      r0,r0,#1              ;832
00073c  b201              SXTH     r1,r0                 ;832
00073e  8161              STRH     r1,[r4,#0xa]          ;832
000740  f44f7027          MOV      r0,#0x29c             ;833
000744  f7fffffe          BL       lc640_write_int
000748  8960              LDRH     r0,[r4,#0xa]          ;834  ; __ee_vz_cnt
00074a  f1a4045a          SUB      r4,r4,#0x5a           ;834
00074e  b118              CBZ      r0,|L1.1880|
000750  4854              LDR      r0,|L1.2212|
000752  8800              LDRH     r0,[r0,#0]            ;834  ; speedChrgBlckStat
000754  2801              CMP      r0,#1                 ;834
000756  d1c3              BNE      |L1.1760|
                  |L1.1880|
000758  7625              STRB     r5,[r4,#0x18]         ;836
00075a  f8a45066          STRH     r5,[r4,#0x66]         ;837
00075e  2100              MOVS     r1,#0                 ;838
000760  f240209a          MOV      r0,#0x29a             ;838
000764  f7fffffe          BL       lc640_write_int
000768  e8bd4038          POP      {r3-r5,lr}            ;842
00076c  2000              MOVS     r0,#0                 ;842
00076e  f7ffbffe          B.W      vz_mem_hndl
;;;868    
                          ENDP

                  vz1_drv PROC
;;;870    //драйвер уравнительного заряда
;;;871    void vz1_drv(void)
000772  e92d4ff8          PUSH     {r3-r11,lr}
;;;872    {
;;;873    if(volt_region_cnt)volt_region_cnt--;
000776  f8df8128          LDR      r8,|L1.2208|
00077a  f9b80074          LDRSH    r0,[r8,#0x74]  ; volt_region_cnt
00077e  b118              CBZ      r0,|L1.1928|
000780  f1a00001          SUB      r0,r0,#1
000784  f8a80074          STRH     r0,[r8,#0x74]
                  |L1.1928|
;;;874    if(vz1_stat==vz1sOFF)
000788  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
00078c  b928              CBNZ     r0,|L1.1946|
;;;875    	{
;;;876    	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
00078e  2314              MOVS     r3,#0x14
000790  2200              MOVS     r2,#0
000792  2164              MOVS     r1,#0x64
000794  20d2              MOVS     r0,#0xd2
000796  f7fffffe          BL       mess_send
                  |L1.1946|
;;;877    	}
;;;878    if(vz1_stat==vz1sSTEP1)
00079a  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
;;;879    	{
;;;880    	if(vz1_stat_old!=vz1_stat)
;;;881    		{
;;;882    		vz1_stat_cnt=5;
;;;883    		}
;;;884    	if(vz1_stat_cnt)
;;;885    		{
;;;886    		vz1_stat_cnt--;
;;;887    		if(vz1_stat_cnt==0)
;;;888    			{
;;;889    			vz1_stat=vz1sERR1; 	//Не включилась вентиляция;
;;;890    			lc640_write(EE_VZ1_STAT,vz1sERR1);
;;;891    			}
;;;892    		}
;;;893    	if(sk_stat[0]==1)
00079e  4d4d              LDR      r5,|L1.2260|
0007a0  f44f7bc9          MOV      r11,#0x192            ;890
0007a4  2801              CMP      r0,#1                 ;878
0007a6  d139              BNE      |L1.2076|
0007a8  f8980025          LDRB     r0,[r8,#0x25]         ;880  ; vz1_stat_old
0007ac  2801              CMP      r0,#1                 ;880
0007ae  d003              BEQ      |L1.1976|
0007b0  f04f0005          MOV      r0,#5                 ;882
0007b4  f8a80072          STRH     r0,[r8,#0x72]         ;882
                  |L1.1976|
0007b8  f9b80072          LDRSH    r0,[r8,#0x72]         ;884  ; vz1_stat_cnt
0007bc  b168              CBZ      r0,|L1.2010|
0007be  f1a00001          SUB      r0,r0,#1              ;886
0007c2  b200              SXTH     r0,r0                 ;886
0007c4  f8a80072          STRH     r0,[r8,#0x72]         ;886
0007c8  b938              CBNZ     r0,|L1.2010|
0007ca  f04f000b          MOV      r0,#0xb               ;889
0007ce  f8880024          STRB     r0,[r8,#0x24]         ;889
0007d2  4601              MOV      r1,r0                 ;890
0007d4  4658              MOV      r0,r11                ;890
0007d6  f7fffffe          BL       lc640_write
                  |L1.2010|
0007da  7828              LDRB     r0,[r5,#0]  ; sk_stat
0007dc  2801              CMP      r0,#1
0007de  d117              BNE      |L1.2064|
;;;894    		{
;;;895    		vz1_stat=vz1sSTEP2;
0007e0  f04f0002          MOV      r0,#2
0007e4  f8880024          STRB     r0,[r8,#0x24]
;;;896    		lc640_write(EE_VZ1_STAT,vz1sSTEP2);
0007e8  4601              MOV      r1,r0
0007ea  4658              MOV      r0,r11
0007ec  f7fffffe          BL       lc640_write
;;;897    		tree_up(iVZ1_STEP2_2,1,0,0);
0007f0  2300              MOVS     r3,#0
0007f2  461a              MOV      r2,r3
0007f4  2101              MOVS     r1,#1
0007f6  20de              MOVS     r0,#0xde
0007f8  f7fffffe          BL       tree_up
;;;898    		tree_up(iVZ1_STEP2_1,0,0,0);
0007fc  2300              MOVS     r3,#0
0007fe  461a              MOV      r2,r3
000800  4619              MOV      r1,r3
000802  20dd              MOVS     r0,#0xdd
000804  f7fffffe          BL       tree_up
;;;899    		ret(1200);
000808  f44f6096          MOV      r0,#0x4b0
00080c  f7fffffe          BL       ||ret||
                  |L1.2064|
;;;900    		}
;;;901    	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000810  2314              MOVS     r3,#0x14
000812  2200              MOVS     r2,#0
000814  2164              MOVS     r1,#0x64
000816  20d2              MOVS     r0,#0xd2
000818  f7fffffe          BL       mess_send
                  |L1.2076|
;;;902    	}
;;;903    
;;;904    if(vz1_stat==vz1sSTEP2)
00081c  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
;;;905    	{
;;;906    	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
;;;907    		{
;;;908    		vz1_stat_cnt=15;
000820  f04f090f          MOV      r9,#0xf
000824  2802              CMP      r0,#2                 ;904
000826  d118              BNE      |L1.2138|
000828  f8980025          LDRB     r0,[r8,#0x25]         ;906  ; vz1_stat_old
00082c  2802              CMP      r0,#2                 ;906
00082e  d102              BNE      |L1.2102|
000830  f8b80072          LDRH     r0,[r8,#0x72]         ;906  ; vz1_stat_cnt
000834  b908              CBNZ     r0,|L1.2106|
                  |L1.2102|
000836  f8a89072          STRH     r9,[r8,#0x72]
                  |L1.2106|
;;;909    		}
;;;910    	vz1_stat_cnt--;
00083a  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
00083e  f1a00001          SUB      r0,r0,#1
000842  f8a80072          STRH     r0,[r8,#0x72]
;;;911    	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000846  f04f0314          MOV      r3,#0x14
00084a  f04f0200          MOV      r2,#0
00084e  f04f0164          MOV      r1,#0x64
000852  f04f00d2          MOV      r0,#0xd2
000856  f7fffffe          BL       mess_send
                  |L1.2138|
;;;912    	}
;;;913    
;;;914    if(vz1_stat==vz1sSTEP3)
00085a  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
;;;915    	{
;;;916    	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
;;;917    		{
;;;918    		vz1_stat_cnt=10;
00085e  240a              MOVS     r4,#0xa
000860  2600              MOVS     r6,#0                 ;873
000862  f04f0a01          MOV      r10,#1                ;874
;;;919    
;;;920    		}
;;;921    	vz1_stat_cnt--;
;;;922    	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
;;;923    		{
;;;924    		show_mess(	"     ВКЛЮЧИТЕ       ",
000866  f2413788          MOV      r7,#0x1388
00086a  2803              CMP      r0,#3                 ;914
00086c  d117              BNE      |L1.2206|
00086e  f8980025          LDRB     r0,[r8,#0x25]         ;916  ; vz1_stat_old
000872  2803              CMP      r0,#3                 ;916
000874  d102              BNE      |L1.2172|
000876  f8b80072          LDRH     r0,[r8,#0x72]         ;916  ; vz1_stat_cnt
00087a  b908              CBNZ     r0,|L1.2176|
                  |L1.2172|
00087c  f8a84072          STRH     r4,[r8,#0x72]         ;918
                  |L1.2176|
000880  f8b80072          LDRH     r0,[r8,#0x72]         ;921  ; vz1_stat_cnt
000884  f1a00001          SUB      r0,r0,#1              ;921
000888  b200              SXTH     r0,r0                 ;921
00088a  f8a80072          STRH     r0,[r8,#0x72]         ;921
00088e  280a              CMP      r0,#0xa               ;922
000890  d001              BEQ      |L1.2198|
000892  2809              CMP      r0,#9                 ;922
000894  d17b              BNE      |L1.2446|
                  |L1.2198|
000896  a329              ADR      r3,|L1.2364|
000898  a22e              ADR      r2,|L1.2388|
00089a  a134              ADR      r1,|L1.2412|
00089c  e073              B        |L1.2438|
                  |L1.2206|
00089e  e08d              B        |L1.2492|
                  |L1.2208|
                          DCD      ||area_number.25||
                  |L1.2212|
                          DCD      speedChrgBlckStat
                  |L1.2216|
                          DCD      Ib_ips_termokompensat
                  |L1.2220|
                          DCD      0xffff7360
                  |L1.2224|
                          DCD      0x40024000
                  |L1.2228|
                          DCD      AVZ
                  |L1.2232|
                          DCD      YEAR_AVZ
                  |L1.2236|
                          DCD      MONTH_AVZ
                  |L1.2240|
                          DCD      DATE_AVZ
                  |L1.2244|
                          DCD      HOUR_AVZ
                  |L1.2248|
                          DCD      MIN_AVZ
                  |L1.2252|
                          DCD      SEC_AVZ
                  |L1.2256|
                          DCD      AVZ_TIME
                  |L1.2260|
                          DCD      sk_stat
                  |L1.2264|
                          DCD      0x40024020
                  |L1.2268|
0008dc  20202020          DCB      "    ",194,197,205,210,200,203,223,214,200,223,"!!!   ",0
0008e0  c2c5cdd2
0008e4  c8cbdfd6
0008e8  c8df2121
0008ec  21202020
0008f0  00      
0008f1  00                DCB      0
0008f2  00                DCB      0
0008f3  00                DCB      0
                  |L1.2292|
0008f4  20202020          DCB      "     ",205,197,200,209,207,208,192,194,205,192,"     ",0
0008f8  20cdc5c8
0008fc  d1cfd0c0
000900  c2cdc020
000904  20202020
000908  00      
000909  00                DCB      0
00090a  00                DCB      0
00090b  00                DCB      0
                  |L1.2316|
00090c  20202020          DCB      "    ",199,192,193,203,206,202,200,208,206,194,192,205," "
000910  c7c0c1cb
000914  cecac8d0
000918  cec2c0cd
00091c  20      
00091d  20202000          DCB      "   ",0
000921  00                DCB      0
000922  00                DCB      0
000923  00                DCB      0
                  |L1.2340|
000924  c2dbd0c0          DCB      194,219,208,192,194,205,200,194,192,222,217,200,201," ",199
000928  c2cdc8c2
00092c  c0ded9c8
000930  c920c7  
000933  c0d0dfc4          DCB      192,208,223,196," ",0
000937  2000    
000939  00                DCB      0
00093a  00                DCB      0
00093b  00                DCB      0
                  |L1.2364|
00093c  20202020          DCB      "    ",205,192,207,208,223,198,197,205,200,223,"      ",0
000940  cdc0cfd0
000944  dfc6c5cd
000948  c8df2020
00094c  20202020
000950  00      
000951  00                DCB      0
000952  00                DCB      0
000953  00                DCB      0
                  |L1.2388|
000954  20202020          DCB      "     ",194,219,209,206,202,206,195,206,"       ",0
000958  20c2dbd1
00095c  cecacec3
000960  ce202020
000964  20202020
000968  00      
000969  00                DCB      0
00096a  00                DCB      0
00096b  00                DCB      0
                  |L1.2412|
00096c  20202020          DCB      "      ",210,211,204,193,203,197,208,"       ",0
000970  2020d2d3
000974  ccc1cbc5
000978  d0202020
00097c  20202020
000980  00      
000981  00                DCB      0
000982  00                DCB      0
000983  00                DCB      0
000984  e003              B        |L1.2446|
                  |L1.2438|
000986  a0f9              ADR      r0,|L1.3436|
000988  9700              STR      r7,[sp,#0]
00098a  f7fffffe          BL       show_mess
                  |L1.2446|
;;;925    					"      ТУМБЛЕР       ",
;;;926    					"     ВЫСОКОГО       ",
;;;927    					"    НАПРЯЖЕНИЯ      ",
;;;928    					5000);
;;;929    		}
;;;930    	if(sk_stat[1]==1)
00098e  7868              LDRB     r0,[r5,#1]  ; sk_stat
000990  2801              CMP      r0,#1
000992  d10d              BNE      |L1.2480|
;;;931    		{
;;;932    		vz1_stat=vz1sWRK;
000994  f8884024          STRB     r4,[r8,#0x24]
;;;933    		lc640_write(EE_VZ1_STAT,vz1sWRK);
000998  210a              MOVS     r1,#0xa
00099a  4658              MOV      r0,r11
00099c  f7fffffe          BL       lc640_write
;;;934    		volt_region=1;
0009a0  f888a026          STRB     r10,[r8,#0x26]
;;;935    		cntrl_stat=0;
0009a4  f8a8602a          STRH     r6,[r8,#0x2a]
;;;936    		cntrl_stat_new=0;
0009a8  f8a86040          STRH     r6,[r8,#0x40]
;;;937    		cntrl_stat_old=0;
0009ac  f8a8602c          STRH     r6,[r8,#0x2c]
                  |L1.2480|
;;;938    		}
;;;939    	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0009b0  2314              MOVS     r3,#0x14
0009b2  2200              MOVS     r2,#0
0009b4  2164              MOVS     r1,#0x64
0009b6  20d2              MOVS     r0,#0xd2
0009b8  f7fffffe          BL       mess_send
                  |L1.2492|
;;;940    	}
;;;941    
;;;942    if(vz1_stat==vz1sWRK)
0009bc  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
0009c0  280a              CMP      r0,#0xa
0009c2  d17d              BNE      |L1.2752|
;;;943    	{
;;;944    	if(vz1_stat_old!=vz1_stat)
0009c4  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
;;;945    		{
;;;946    		vz1_wrk_cnt=3600L/*100L*/*((long)UZ_T);
0009c8  49ee              LDR      r1,|L1.3460|
0009ca  280a              CMP      r0,#0xa               ;944
0009cc  d008              BEQ      |L1.2528|
0009ce  48ee              LDR      r0,|L1.3464|
0009d0  f44f6261          MOV      r2,#0xe10
0009d4  f9b00000          LDRSH    r0,[r0,#0]  ; UZ_T
0009d8  fb00f002          MUL      r0,r0,r2
0009dc  6308              STR      r0,[r1,#0x30]  ; vz1_wrk_cnt
;;;947    		//if(VZ_HR==0)  	hv_vz_wrk_cnt=1800L;
;;;948    		vz1_up_cnt=0L;
0009de  634e              STR      r6,[r1,#0x34]  ; vz1_up_cnt
                  |L1.2528|
;;;949    
;;;950    		}
;;;951    	vz1_wrk_cnt--;
0009e0  6b08              LDR      r0,[r1,#0x30]  ; vz1_wrk_cnt
0009e2  f1a00001          SUB      r0,r0,#1
0009e6  6308              STR      r0,[r1,#0x30]  ; vz1_wrk_cnt
;;;952    	vz1_up_cnt++;
0009e8  6b4a              LDR      r2,[r1,#0x34]  ; vz1_up_cnt
0009ea  f1020201          ADD      r2,r2,#1
0009ee  634a              STR      r2,[r1,#0x34]  ; vz1_up_cnt
;;;953    
;;;954    	if(vz1_wrk_cnt==0)
0009f0  b940              CBNZ     r0,|L1.2564|
;;;955    		{
;;;956    		vz1_stat=vz1sFINE;
0009f2  f8889024          STRB     r9,[r8,#0x24]
;;;957    		lc640_write(EE_VZ1_STAT,vz1sFINE);
0009f6  210f              MOVS     r1,#0xf
0009f8  4658              MOV      r0,r11
0009fa  f7fffffe          BL       lc640_write
;;;958    		uz_mem_hndl(0);
0009fe  2000              MOVS     r0,#0
000a00  f7fffffe          BL       uz_mem_hndl
                  |L1.2564|
;;;959    		}
;;;960    	if(sk_stat[0]==0)
000a04  7828              LDRB     r0,[r5,#0]  ; sk_stat
000a06  b938              CBNZ     r0,|L1.2584|
;;;961    		{
;;;962    		vz1_stat=vz1sERR2;
000a08  f04f000c          MOV      r0,#0xc
000a0c  f8880024          STRB     r0,[r8,#0x24]
;;;963    		lc640_write(EE_VZ1_STAT,vz1sERR2);
000a10  4601              MOV      r1,r0
000a12  4658              MOV      r0,r11
000a14  f7fffffe          BL       lc640_write
                  |L1.2584|
;;;964    		}
;;;965    	if(sk_stat[1]==0)
000a18  7868              LDRB     r0,[r5,#1]  ; sk_stat
000a1a  b938              CBNZ     r0,|L1.2604|
;;;966    		{
;;;967    		vz1_stat=vz1sERR3;
000a1c  f04f000d          MOV      r0,#0xd
000a20  f8880024          STRB     r0,[r8,#0x24]
;;;968    		lc640_write(EE_VZ1_STAT,vz1sERR3);
000a24  4601              MOV      r1,r0
000a26  4658              MOV      r0,r11
000a28  f7fffffe          BL       lc640_write
                  |L1.2604|
;;;969    		}
;;;970    	if(((Ibmax/10)>IZMAX_)&&(cntrl_stat<=20)&&(volt_region==1)&&(volt_region_cnt==0))
000a2c  f9b80042          LDRSH    r0,[r8,#0x42]  ; Ibmax
000a30  f8b81044          LDRH     r1,[r8,#0x44]  ; IZMAX_
000a34  fb90f0f4          SDIV     r0,r0,r4
;;;971    		{
;;;972    		volt_region=0;
;;;973    		cntrl_stat=1000;
000a38  f44f727a          MOV      r2,#0x3e8
000a3c  4288              CMP      r0,r1                 ;970
000a3e  dd16              BLE      |L1.2670|
000a40  f9b8302a          LDRSH    r3,[r8,#0x2a]         ;970  ; cntrl_stat
000a44  2b14              CMP      r3,#0x14              ;970
000a46  dc12              BGT      |L1.2670|
000a48  f8983026          LDRB     r3,[r8,#0x26]         ;970  ; volt_region
000a4c  2b01              CMP      r3,#1                 ;970
000a4e  d10e              BNE      |L1.2670|
000a50  f8b83074          LDRH     r3,[r8,#0x74]         ;970  ; volt_region_cnt
000a54  b95b              CBNZ     r3,|L1.2670|
000a56  f8886026          STRB     r6,[r8,#0x26]         ;972
000a5a  f8a8202a          STRH     r2,[r8,#0x2a]
;;;974    		cntrl_stat_new=1000;
000a5e  f8a82040          STRH     r2,[r8,#0x40]
;;;975    		cntrl_stat_old=1000;
000a62  f8a8202c          STRH     r2,[r8,#0x2c]
;;;976    		volt_region_cnt=110;
000a66  f04f036e          MOV      r3,#0x6e
000a6a  f8a83074          STRH     r3,[r8,#0x74]
                  |L1.2670|
;;;977    		}
;;;978    	if(((Ibmax/10)<IZMAX_)&&(cntrl_stat>=1000)&&(volt_region==0)&&(volt_region_cnt==0))
000a6e  4288              CMP      r0,r1
000a70  da13              BGE      |L1.2714|
000a72  f9b8002a          LDRSH    r0,[r8,#0x2a]  ; cntrl_stat
000a76  4290              CMP      r0,r2
000a78  db0f              BLT      |L1.2714|
000a7a  f8980026          LDRB     r0,[r8,#0x26]  ; volt_region
000a7e  b960              CBNZ     r0,|L1.2714|
000a80  f8b80074          LDRH     r0,[r8,#0x74]  ; volt_region_cnt
000a84  b948              CBNZ     r0,|L1.2714|
;;;979    		{
;;;980    		volt_region=1;
000a86  f888a026          STRB     r10,[r8,#0x26]
;;;981    		cntrl_stat=10;
000a8a  f8a8402a          STRH     r4,[r8,#0x2a]
;;;982    		cntrl_stat_new=10;
000a8e  f8a84040          STRH     r4,[r8,#0x40]
;;;983    		cntrl_stat_old=10;
000a92  f8a8402c          STRH     r4,[r8,#0x2c]
;;;984    		volt_region_cnt=10;
000a96  f8a84074          STRH     r4,[r8,#0x74]
                  |L1.2714|
;;;985    		}
;;;986    	if(volt_region==0) 		mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000a9a  f8980026          LDRB     r0,[r8,#0x26]  ; volt_region
000a9e  b110              CBZ      r0,|L1.2726|
;;;987    	else if(volt_region==1) mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,1,20);
000aa0  2801              CMP      r0,#1
000aa2  d007              BEQ      |L1.2740|
000aa4  e00c              B        |L1.2752|
                  |L1.2726|
000aa6  2314              MOVS     r3,#0x14              ;986
000aa8  2200              MOVS     r2,#0                 ;986
000aaa  2164              MOVS     r1,#0x64              ;986
000aac  20d2              MOVS     r0,#0xd2              ;986
000aae  f7fffffe          BL       mess_send
000ab2  e005              B        |L1.2752|
                  |L1.2740|
000ab4  2314              MOVS     r3,#0x14
000ab6  2201              MOVS     r2,#1
000ab8  2164              MOVS     r1,#0x64
000aba  20d2              MOVS     r0,#0xd2
000abc  f7fffffe          BL       mess_send
                  |L1.2752|
;;;988    	}
;;;989    
;;;990    if(vz1_stat==vz1sERR1)		//Отсутствует вентиляция при включении
000ac0  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000ac4  280b              CMP      r0,#0xb
000ac6  d120              BNE      |L1.2826|
;;;991    	{
;;;992    	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
000ac8  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
000acc  280b              CMP      r0,#0xb
000ace  d102              BNE      |L1.2774|
000ad0  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000ad4  b908              CBNZ     r0,|L1.2778|
                  |L1.2774|
;;;993    		{
;;;994    		vz1_stat_cnt=10;
000ad6  f8a84072          STRH     r4,[r8,#0x72]
                  |L1.2778|
;;;995    		}
;;;996    	vz1_stat_cnt--;
000ada  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000ade  f1a00001          SUB      r0,r0,#1
000ae2  b200              SXTH     r0,r0
000ae4  f8a80072          STRH     r0,[r8,#0x72]
;;;997    	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
000ae8  280a              CMP      r0,#0xa
000aea  d001              BEQ      |L1.2800|
000aec  2809              CMP      r0,#9
000aee  d106              BNE      |L1.2814|
                  |L1.2800|
;;;998    		{
;;;999    		show_mess(	"УРАВНИТЕЛЬНЫЙ ЗАРЯД ",
000af0  a3a6              ADR      r3,|L1.3468|
000af2  a2ac              ADR      r2,|L1.3492|
000af4  a1b1              ADR      r1,|L1.3516|
000af6  a0b7              ADR      r0,|L1.3540|
000af8  9700              STR      r7,[sp,#0]
000afa  f7fffffe          BL       show_mess
                  |L1.2814|
;;;1000   					"   НЕ МОЖЕТ БЫТЬ    ",
;;;1001   					"      ВКЛЮЧЕН       ",
;;;1002   					"  БЕЗ ВЕНТИЛЯЦИИ!!  ",
;;;1003   					5000);
;;;1004   		}
;;;1005   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000afe  2314              MOVS     r3,#0x14
000b00  2200              MOVS     r2,#0
000b02  2164              MOVS     r1,#0x64
000b04  20d2              MOVS     r0,#0xd2
000b06  f7fffffe          BL       mess_send
                  |L1.2826|
;;;1006   	}
;;;1007   if(vz1_stat==vz1sERR2)		//Пропала вентиляция при работе
000b0a  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000b0e  280c              CMP      r0,#0xc
000b10  d12c              BNE      |L1.2924|
;;;1008   	{
;;;1009   	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
000b12  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
000b16  280c              CMP      r0,#0xc
000b18  d102              BNE      |L1.2848|
000b1a  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000b1e  b908              CBNZ     r0,|L1.2852|
                  |L1.2848|
;;;1010   		{
;;;1011   		vz1_stat_cnt=10;
000b20  f8a84072          STRH     r4,[r8,#0x72]
                  |L1.2852|
;;;1012   		}
;;;1013   	vz1_stat_cnt--;
000b24  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000b28  f1a00001          SUB      r0,r0,#1
000b2c  b200              SXTH     r0,r0
000b2e  f8a80072          STRH     r0,[r8,#0x72]
;;;1014   	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
000b32  280a              CMP      r0,#0xa
000b34  d001              BEQ      |L1.2874|
000b36  2809              CMP      r0,#9
000b38  d109              BNE      |L1.2894|
                  |L1.2874|
;;;1015   		{
;;;1016   		show_mess(	"УРАВНИТЕЛЬНЫЙ ЗАРЯД ",
000b3a  f2af2360          ADR      r3,|L1.2268|
000b3e  f2af224c          ADR      r2,|L1.2292|
000b42  f2af2138          ADR      r1,|L1.2316|
000b46  a0a3              ADR      r0,|L1.3540|
000b48  9700              STR      r7,[sp,#0]
000b4a  f7fffffe          BL       show_mess
                  |L1.2894|
;;;1017   					"    ЗАБЛОКИРОВАН    ",
;;;1018   					"     НЕИСПРАВНА     ",
;;;1019   					"    ВЕНТИЛЯЦИЯ!!!   ",
;;;1020   					5000);
;;;1021   		}
;;;1022   	if(sk_stat[0]==1)
000b4e  7828              LDRB     r0,[r5,#0]  ; sk_stat
000b50  2801              CMP      r0,#1
000b52  d105              BNE      |L1.2912|
;;;1023   		{
;;;1024   		vz1_stat=vz1sWRK;
000b54  f8884024          STRB     r4,[r8,#0x24]
;;;1025   		lc640_write(EE_VZ1_STAT,vz1sWRK);
000b58  210a              MOVS     r1,#0xa
000b5a  4658              MOV      r0,r11
000b5c  f7fffffe          BL       lc640_write
                  |L1.2912|
;;;1026   		}
;;;1027   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000b60  2314              MOVS     r3,#0x14
000b62  2200              MOVS     r2,#0
000b64  2164              MOVS     r1,#0x64
000b66  20d2              MOVS     r0,#0xd2
000b68  f7fffffe          BL       mess_send
                  |L1.2924|
;;;1028   	}
;;;1029   
;;;1030   if(vz1_stat==vz1sERR3)		//Отключен тумблер "Высокое напряжение"
000b6c  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000b70  280d              CMP      r0,#0xd
000b72  d129              BNE      |L1.3016|
;;;1031   	{
;;;1032   	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
000b74  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
000b78  280d              CMP      r0,#0xd
000b7a  d102              BNE      |L1.2946|
000b7c  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000b80  b908              CBNZ     r0,|L1.2950|
                  |L1.2946|
;;;1033   		{
;;;1034   		vz1_stat_cnt=10;
000b82  f8a84072          STRH     r4,[r8,#0x72]
                  |L1.2950|
;;;1035   		}
;;;1036   	vz1_stat_cnt--;
000b86  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000b8a  f1a00001          SUB      r0,r0,#1
000b8e  b200              SXTH     r0,r0
000b90  f8a80072          STRH     r0,[r8,#0x72]
;;;1037   	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
000b94  280a              CMP      r0,#0xa
000b96  d001              BEQ      |L1.2972|
000b98  2809              CMP      r0,#9
000b9a  d106              BNE      |L1.2986|
                  |L1.2972|
;;;1038   		{
;;;1039   		show_mess(	"УРАВНИТЕЛЬНЫЙ ЗАРЯД ",
000b9c  a393              ADR      r3,|L1.3564|
000b9e  a299              ADR      r2,|L1.3588|
000ba0  a19e              ADR      r1,|L1.3612|
000ba2  a08c              ADR      r0,|L1.3540|
000ba4  9700              STR      r7,[sp,#0]
000ba6  f7fffffe          BL       show_mess
                  |L1.2986|
;;;1040   					"  БУДЕТ ПРОДОЛЖЕН   ",
;;;1041   					"  ПОСЛЕ ВКЛЮЧЕНИЯ   ",
;;;1042   					"*   ТУМБЛЕРА!!!     ",
;;;1043   					5000);
;;;1044   		}
;;;1045   	if(sk_stat[1]==1)
000baa  7868              LDRB     r0,[r5,#1]  ; sk_stat
000bac  2801              CMP      r0,#1
000bae  d105              BNE      |L1.3004|
;;;1046   		{
;;;1047   		vz1_stat=vz1sWRK;
000bb0  f8884024          STRB     r4,[r8,#0x24]
;;;1048   		lc640_write(EE_VZ1_STAT,vz1sWRK);
000bb4  210a              MOVS     r1,#0xa
000bb6  4658              MOV      r0,r11
000bb8  f7fffffe          BL       lc640_write
                  |L1.3004|
;;;1049   		}
;;;1050   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000bbc  2314              MOVS     r3,#0x14
000bbe  2200              MOVS     r2,#0
000bc0  2164              MOVS     r1,#0x64
000bc2  20d2              MOVS     r0,#0xd2
000bc4  f7fffffe          BL       mess_send
                  |L1.3016|
;;;1051   	}
;;;1052   if(vz1_stat==vz1sERR4)		//ВЗ закончился а тумблер включен
000bc8  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000bcc  280e              CMP      r0,#0xe
000bce  d12d              BNE      |L1.3116|
;;;1053   	{
;;;1054   	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
000bd0  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
000bd4  280e              CMP      r0,#0xe
000bd6  d102              BNE      |L1.3038|
000bd8  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000bdc  b908              CBNZ     r0,|L1.3042|
                  |L1.3038|
;;;1055   		{
;;;1056   		vz1_stat_cnt=10;
000bde  f8a84072          STRH     r4,[r8,#0x72]
                  |L1.3042|
;;;1057   		}
;;;1058   	vz1_stat_cnt--;
000be2  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000be6  f1a00001          SUB      r0,r0,#1
000bea  b200              SXTH     r0,r0
000bec  f8a80072          STRH     r0,[r8,#0x72]
;;;1059   	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
000bf0  280a              CMP      r0,#0xa
000bf2  d001              BEQ      |L1.3064|
000bf4  2809              CMP      r0,#9
000bf6  d109              BNE      |L1.3084|
                  |L1.3064|
;;;1060   		{
;;;1061   		show_mess(	"*    ВЫКЛЮЧИТЕ      ",
000bf8  f2af23c0          ADR      r3,|L1.2364|
000bfc  f2af22ac          ADR      r2,|L1.2388|
000c00  f2af2198          ADR      r1,|L1.2412|
000c04  a08b              ADR      r0,|L1.3636|
000c06  9700              STR      r7,[sp,#0]
000c08  f7fffffe          BL       show_mess
                  |L1.3084|
;;;1062   					"      ТУМБЛЕР       ",
;;;1063   					"     ВЫСОКОГО       ",
;;;1064   					"    НАПРЯЖЕНИЯ      ",
;;;1065   					5000);
;;;1066   		}
;;;1067   	if(sk_stat[1]==0)
000c0c  7868              LDRB     r0,[r5,#1]  ; sk_stat
000c0e  b938              CBNZ     r0,|L1.3104|
;;;1068   		{
;;;1069   		vz1_stat=vz1sOFF;
000c10  f8886024          STRB     r6,[r8,#0x24]
;;;1070   		lc640_write(EE_VZ1_STAT,vz1sOFF);
000c14  2100              MOVS     r1,#0
000c16  4658              MOV      r0,r11
000c18  f7fffffe          BL       lc640_write
;;;1071   		vz_stop();
000c1c  f7fffffe          BL       vz_stop
                  |L1.3104|
;;;1072   
;;;1073   		}
;;;1074   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,1,20);
000c20  2314              MOVS     r3,#0x14
000c22  2201              MOVS     r2,#1
000c24  2164              MOVS     r1,#0x64
000c26  20d2              MOVS     r0,#0xd2
000c28  f7fffffe          BL       mess_send
                  |L1.3116|
;;;1075   	}
;;;1076   if(vz1_stat==vz1sFINE)		//УЗ закончился, напоминание
000c2c  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
;;;1077   	{
;;;1078   	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
;;;1079   		{
;;;1080   		vz1_stat_cnt=10;
;;;1081   		}
;;;1082   	vz1_stat_cnt--;
;;;1083   	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
;;;1084   		{
;;;1085   		show_mess(	"   УРАВНИТЕЛЬНЫЙ    ",
000c30  f64037b8          MOV      r7,#0xbb8
000c34  280f              CMP      r0,#0xf               ;1076
000c36  d138              BNE      |L1.3242|
000c38  f8980025          LDRB     r0,[r8,#0x25]         ;1078  ; vz1_stat_old
000c3c  280f              CMP      r0,#0xf               ;1078
000c3e  d102              BNE      |L1.3142|
000c40  f8b80072          LDRH     r0,[r8,#0x72]         ;1078  ; vz1_stat_cnt
000c44  b908              CBNZ     r0,|L1.3146|
                  |L1.3142|
000c46  f8a84072          STRH     r4,[r8,#0x72]         ;1080
                  |L1.3146|
000c4a  f8b80072          LDRH     r0,[r8,#0x72]         ;1082  ; vz1_stat_cnt
000c4e  f1a00001          SUB      r0,r0,#1              ;1082
000c52  b200              SXTH     r0,r0                 ;1082
000c54  f8a80072          STRH     r0,[r8,#0x72]         ;1082
000c58  280a              CMP      r0,#0xa               ;1083
000c5a  d001              BEQ      |L1.3168|
000c5c  2809              CMP      r0,#9                 ;1083
000c5e  d106              BNE      |L1.3182|
                  |L1.3168|
000c60  a37a              ADR      r3,|L1.3660|
000c62  a280              ADR      r2,|L1.3684|
000c64  a185              ADR      r1,|L1.3708|
000c66  a08b              ADR      r0,|L1.3732|
000c68  9700              STR      r7,[sp,#0]
000c6a  f7fffffe          BL       show_mess
                  |L1.3182|
;;;1086   					"       ЗАРЯД        ",
;;;1087   					"      УСПЕШНО       ",
;;;1088   					"     ЗАВЕРШЕН       ",
;;;1089   					3000);
;;;1090   		}
;;;1091   	if((vz1_stat_cnt==6)||(vz1_stat_cnt==5))
000c6e  f9b80072          LDRSH    r0,[r8,#0x72]  ; vz1_stat_cnt
000c72  2806              CMP      r0,#6
000c74  d001              BEQ      |L1.3194|
000c76  2805              CMP      r0,#5
000c78  d109              BNE      |L1.3214|
                  |L1.3194|
;;;1092   		{
;;;1093   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
000c7a  f2af3340          ADR      r3,|L1.2364|
000c7e  f2af322c          ADR      r2,|L1.2388|
000c82  f2af3118          ADR      r1,|L1.2412|
000c86  a089              ADR      r0,|L1.3756|
000c88  9700              STR      r7,[sp,#0]
000c8a  f7fffffe          BL       show_mess
                  |L1.3214|
;;;1094   					"      ТУМБЛЕР       ",
;;;1095   					"     ВЫСОКОГО       ",
;;;1096   					"    НАПРЯЖЕНИЯ      ",
;;;1097   					3000);
;;;1098   		}
;;;1099   	if(sk_stat[1]==0)
000c8e  7868              LDRB     r0,[r5,#1]  ; sk_stat
000c90  b928              CBNZ     r0,|L1.3230|
;;;1100   		{
;;;1101   		vz1_stat=vz1sOFF;
000c92  f8886024          STRB     r6,[r8,#0x24]
;;;1102   		lc640_write(EE_VZ1_STAT,vz1sOFF);
000c96  2100              MOVS     r1,#0
000c98  4658              MOV      r0,r11
000c9a  f7fffffe          BL       lc640_write
                  |L1.3230|
;;;1103   		}
;;;1104   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000c9e  2314              MOVS     r3,#0x14
000ca0  2200              MOVS     r2,#0
000ca2  2164              MOVS     r1,#0x64
000ca4  20d2              MOVS     r0,#0xd2
000ca6  f7fffffe          BL       mess_send
                  |L1.3242|
;;;1105   	}
;;;1106   
;;;1107   if(vz1_stat==vz1sSTOP)		//УЗ прекращен, напоминание
000caa  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000cae  2810              CMP      r0,#0x10
000cb0  d138              BNE      |L1.3364|
;;;1108   	{
;;;1109   	if((vz1_stat_old!=vz1_stat)||(vz1_stat_cnt==0))
000cb2  f8980025          LDRB     r0,[r8,#0x25]  ; vz1_stat_old
000cb6  2810              CMP      r0,#0x10
000cb8  d102              BNE      |L1.3264|
000cba  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000cbe  b908              CBNZ     r0,|L1.3268|
                  |L1.3264|
;;;1110   		{
;;;1111   		vz1_stat_cnt=10;
000cc0  f8a84072          STRH     r4,[r8,#0x72]
                  |L1.3268|
;;;1112   		}
;;;1113   	vz1_stat_cnt--;
000cc4  f8b80072          LDRH     r0,[r8,#0x72]  ; vz1_stat_cnt
000cc8  f1a00001          SUB      r0,r0,#1
000ccc  b200              SXTH     r0,r0
000cce  f8a80072          STRH     r0,[r8,#0x72]
;;;1114   	if((vz1_stat_cnt==10)||(vz1_stat_cnt==9))
000cd2  280a              CMP      r0,#0xa
000cd4  d001              BEQ      |L1.3290|
000cd6  2809              CMP      r0,#9
000cd8  d106              BNE      |L1.3304|
                  |L1.3290|
;;;1115   		{
;;;1116   		show_mess(	"   УРАВНИТЕЛЬНЫЙ    ",
000cda  a37a              ADR      r3,|L1.3780|
000cdc  a27f              ADR      r2,|L1.3804|
000cde  a167              ADR      r1,|L1.3708|
000ce0  a06c              ADR      r0,|L1.3732|
000ce2  9700              STR      r7,[sp,#0]
000ce4  f7fffffe          BL       show_mess
                  |L1.3304|
;;;1117   					"       ЗАРЯД        ",
;;;1118   					"     ПРЕКРАЩЕН      ",
;;;1119   					"                    ",
;;;1120   					3000);
;;;1121   		}
;;;1122   	if((vz1_stat_cnt==6)||(vz1_stat_cnt==5))
000ce8  f9b80072          LDRSH    r0,[r8,#0x72]  ; vz1_stat_cnt
000cec  2806              CMP      r0,#6
000cee  d001              BEQ      |L1.3316|
000cf0  2805              CMP      r0,#5
000cf2  d109              BNE      |L1.3336|
                  |L1.3316|
;;;1123   		{
;;;1124   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
000cf4  f2af33bc          ADR      r3,|L1.2364|
000cf8  f2af32a8          ADR      r2,|L1.2388|
000cfc  f2af3194          ADR      r1,|L1.2412|
000d00  a06a              ADR      r0,|L1.3756|
000d02  9700              STR      r7,[sp,#0]
000d04  f7fffffe          BL       show_mess
                  |L1.3336|
;;;1125   					"      ТУМБЛЕР       ",
;;;1126   					"     ВЫСОКОГО       ",
;;;1127   					"    НАПРЯЖЕНИЯ      ",
;;;1128   					3000);
;;;1129   		}
;;;1130   	if(sk_stat[1]==0)
000d08  7868              LDRB     r0,[r5,#1]  ; sk_stat
000d0a  b928              CBNZ     r0,|L1.3352|
;;;1131   		{
;;;1132   		vz1_stat=vz1sOFF;
000d0c  f8886024          STRB     r6,[r8,#0x24]
;;;1133   		lc640_write(EE_VZ1_STAT,vz1sOFF);
000d10  2100              MOVS     r1,#0
000d12  4658              MOV      r0,r11
000d14  f7fffffe          BL       lc640_write
                  |L1.3352|
;;;1134   		}
;;;1135   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000d18  2314              MOVS     r3,#0x14
000d1a  2200              MOVS     r2,#0
000d1c  2164              MOVS     r1,#0x64
000d1e  20d2              MOVS     r0,#0xd2
000d20  f7fffffe          BL       mess_send
                  |L1.3364|
;;;1136   	}
;;;1137   
;;;1138   vz1_stat_old=vz1_stat;
000d24  f8980024          LDRB     r0,[r8,#0x24]  ; vz1_stat
000d28  f8880025          STRB     r0,[r8,#0x25]
;;;1139   
;;;1140   
;;;1141   
;;;1142   }
000d2c  e8bd8ff8          POP      {r3-r11,pc}
;;;1143   
                          ENDP

                  vz1_start PROC
;;;1145   //старт уравнительног заряда
;;;1146   char vz1_start(char hour)
000d30  b510              PUSH     {r4,lr}
;;;1147   {          
;;;1148   char out;
;;;1149   out=0;
000d32  f04f0000          MOV      r0,#0
;;;1150   if((spc_stat==spcOFF)&&(speedChrgBlckStat!=1)&&(vz1_stat==vz1sOFF))
000d36  4913              LDR      r1,|L1.3460|
000d38  f1a10180          SUB      r1,r1,#0x80
000d3c  7e0a              LDRB     r2,[r1,#0x18]  ; spc_stat
000d3e  2a00              CMP      r2,#0
000d40  d112              BNE      |L1.3432|
000d42  4a6c              LDR      r2,|L1.3828|
000d44  8812              LDRH     r2,[r2,#0]  ; speedChrgBlckStat
000d46  2a01              CMP      r2,#1
000d48  d00e              BEQ      |L1.3432|
000d4a  f8912024          LDRB     r2,[r1,#0x24]  ; vz1_stat
000d4e  2a00              CMP      r2,#0
000d50  d10a              BNE      |L1.3432|
;;;1151   	{
;;;1152   	if(vz1_stat==vz1sOFF)
;;;1153   		{
;;;1154   		vz1_stat=vz1sSTEP1;
000d52  f04f0001          MOV      r0,#1
000d56  f8810024          STRB     r0,[r1,#0x24]
;;;1155   		lc640_write(EE_VZ1_STAT,vz1sSTEP1);
000d5a  4601              MOV      r1,r0
000d5c  f44f70c9          MOV      r0,#0x192
000d60  f7fffffe          BL       lc640_write
;;;1156   		out=1;
000d64  f04f0001          MOV      r0,#1
                  |L1.3432|
;;;1157   		
;;;1158   		}
;;;1159   /*	spc_stat=spcVZ;
;;;1160   	__ee_spc_stat=spcVZ; 
;;;1161   	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);   
;;;1162   	vz_cnt_h=hour;
;;;1163   	__ee_vz_cnt=hour*60;
;;;1164   	if(hour==0)__ee_vz_cnt=30;
;;;1165   	lc640_write_int(EE_VZ_CNT,__ee_vz_cnt);
;;;1166   	lc640_write_int(EE_SPC_VZ_LENGT,__ee_vz_cnt);	
;;;1167   	vz_cnt_h_=0;
;;;1168   	vz_cnt_s=0;
;;;1169   	vz_cnt_s_=0;
;;;1170   	
;;;1171   		*/
;;;1172   	}
;;;1173   //else if((spc_stat==spc_KE1p1)||(spc_stat==spc_KE1p2)) out=22; 
;;;1174   //else if((spc_stat==spc_KE2p1)||(spc_stat==spc_KE2p2)) out=33;
;;;1175   //plazma=out;	
;;;1176   return out;
;;;1177   }
000d68  bd10              POP      {r4,pc}
000d6a  0000              DCW      0x0000
                  |L1.3436|
000d6c  20202020          DCB      "     ",194,202,203,222,215,200,210,197,"       ",0
000d70  20c2cacb
000d74  ded7c8d2
000d78  c5202020
000d7c  20202020
000d80  00      
000d81  00                DCB      0
000d82  00                DCB      0
000d83  00                DCB      0
                  |L1.3460|
                          DCD      ||area_number.25||+0x80
                  |L1.3464|
                          DCD      UZ_T
                  |L1.3468|
000d8c  2020c1c5          DCB      "  ",193,197,199," ",194,197,205,210,200,203,223,214,200
000d90  c720c2c5
000d94  cdd2c8cb
000d98  dfd6c8  
000d9b  c8212120          DCB      200,"!!  ",0
000d9f  2000    
000da1  00                DCB      0
000da2  00                DCB      0
000da3  00                DCB      0
                  |L1.3492|
000da4  20202020          DCB      "      ",194,202,203,222,215,197,205,"       ",0
000da8  2020c2ca
000dac  cbded7c5
000db0  cd202020
000db4  20202020
000db8  00      
000db9  00                DCB      0
000dba  00                DCB      0
000dbb  00                DCB      0
                  |L1.3516|
000dbc  202020cd          DCB      "   ",205,197," ",204,206,198,197,210," ",193,219,210,220
000dc0  c520ccce
000dc4  c6c5d220
000dc8  c1dbd2dc
000dcc  20202020          DCB      "    ",0
000dd0  00      
000dd1  00                DCB      0
000dd2  00                DCB      0
000dd3  00                DCB      0
                  |L1.3540|
000dd4  d3d0c0c2          DCB      211,208,192,194,205,200,210,197,203,220,205,219,201," ",199
000dd8  cdc8d2c5
000ddc  cbdccddb
000de0  c920c7  
000de3  c0d0dfc4          DCB      192,208,223,196," ",0
000de7  2000    
000de9  00                DCB      0
000dea  00                DCB      0
000deb  00                DCB      0
                  |L1.3564|
000dec  2a202020          DCB      "*   ",210,211,204,193,203,197,208,192,"!!!     ",0
000df0  d2d3ccc1
000df4  cbc5d0c0
000df8  21212120
000dfc  20202020
000e00  00      
000e01  00                DCB      0
000e02  00                DCB      0
000e03  00                DCB      0
                  |L1.3588|
000e04  2020cfce          DCB      "  ",207,206,209,203,197," ",194,202,203,222,215,197,205
000e08  d1cbc520
000e0c  c2cacbde
000e10  d7c5cd  
000e13  c8df2020          DCB      200,223,"   ",0
000e17  2000    
000e19  00                DCB      0
000e1a  00                DCB      0
000e1b  00                DCB      0
                  |L1.3612|
000e1c  2020c1d3          DCB      "  ",193,211,196,197,210," ",207,208,206,196,206,203,198
000e20  c4c5d220
000e24  cfd0cec4
000e28  cecbc6  
000e2b  c5cd2020          DCB      197,205,"   ",0
000e2f  2000    
000e31  00                DCB      0
000e32  00                DCB      0
000e33  00                DCB      0
                  |L1.3636|
000e34  2a202020          DCB      "*    ",194,219,202,203,222,215,200,210,197,"      ",0
000e38  20c2dbca
000e3c  cbded7c8
000e40  d2c52020
000e44  20202020
000e48  00      
000e49  00                DCB      0
000e4a  00                DCB      0
000e4b  00                DCB      0
                  |L1.3660|
000e4c  20202020          DCB      "     ",199,192,194,197,208,216,197,205,"       ",0
000e50  20c7c0c2
000e54  c5d0d8c5
000e58  cd202020
000e5c  20202020
000e60  00      
000e61  00                DCB      0
000e62  00                DCB      0
000e63  00                DCB      0
                  |L1.3684|
000e64  20202020          DCB      "      ",211,209,207,197,216,205,206,"       ",0
000e68  2020d3d1
000e6c  cfc5d8cd
000e70  ce202020
000e74  20202020
000e78  00      
000e79  00                DCB      0
000e7a  00                DCB      0
000e7b  00                DCB      0
                  |L1.3708|
000e7c  20202020          DCB      "       ",199,192,208,223,196,"        ",0
000e80  202020c7
000e84  c0d0dfc4
000e88  20202020
000e8c  20202020
000e90  00      
000e91  00                DCB      0
000e92  00                DCB      0
000e93  00                DCB      0
                  |L1.3732|
000e94  202020d3          DCB      "   ",211,208,192,194,205,200,210,197,203,220,205,219,201
000e98  d0c0c2cd
000e9c  c8d2c5cb
000ea0  dccddbc9
000ea4  20202020          DCB      "    ",0
000ea8  00      
000ea9  00                DCB      0
000eaa  00                DCB      0
000eab  00                DCB      0
                  |L1.3756|
000eac  20202020          DCB      "     ",194,219,202,203,222,215,200,210,197,"      ",0
000eb0  20c2dbca
000eb4  cbded7c8
000eb8  d2c52020
000ebc  20202020
000ec0  00      
000ec1  00                DCB      0
000ec2  00                DCB      0
000ec3  00                DCB      0
                  |L1.3780|
000ec4  20202020          DCB      "                    ",0
000ec8  20202020
000ecc  20202020
000ed0  20202020
000ed4  20202020
000ed8  00      
000ed9  00                DCB      0
000eda  00                DCB      0
000edb  00                DCB      0
                  |L1.3804|
000edc  20202020          DCB      "     ",207,208,197,202,208,192,217,197,205,"      ",0
000ee0  20cfd0c5
000ee4  cad0c0d9
000ee8  c5cd2020
000eec  20202020
000ef0  00      
000ef1  00                DCB      0
000ef2  00                DCB      0
000ef3  00                DCB      0
                  |L1.3828|
                          DCD      speedChrgBlckStat
                          ENDP

                  vz1_stop PROC
;;;1180   //стоп уравнительног заряда
;;;1181   void vz1_stop(void)
000ef8  48fa              LDR      r0,|L1.4836|
;;;1182   {
;;;1183   if(vz1_stat!=vz1sOFF)
000efa  f8901024          LDRB     r1,[r0,#0x24]  ; vz1_stat
000efe  2900              CMP      r1,#0
000f00  d007              BEQ      |L1.3858|
;;;1184   	{
;;;1185   	vz1_stat=vz1sSTOP;
000f02  f04f0110          MOV      r1,#0x10
000f06  f8801024          STRB     r1,[r0,#0x24]
;;;1186   	lc640_write(EE_VZ1_STAT,vz1sSTOP);
000f0a  f44f70c9          MOV      r0,#0x192
000f0e  f7ffbffe          B.W      lc640_write
                  |L1.3858|
;;;1187   	}
;;;1188   }
000f12  4770              BX       lr
;;;1189   
                          ENDP

                  vz2_drv PROC
;;;1191   //драйвер формовочного заряда
;;;1192   void vz2_drv(void)
000f14  e92d4ff8          PUSH     {r3-r11,lr}
;;;1193   {
;;;1194   
;;;1195   if(vz2_stat==vz2sSTEP1)
000f18  4ef2              LDR      r6,|L1.4836|
;;;1196   	{
;;;1197   	if(vz2_stat_old!=vz2_stat)
;;;1198   		{
;;;1199   		vz2_stat_cnt=5;
;;;1200   		}
;;;1201   	if(vz2_stat_cnt)
;;;1202   		{
;;;1203   		vz2_stat_cnt--;
;;;1204   		if(vz2_stat_cnt==0)
;;;1205   			{
;;;1206   			vz2_stat=vz2sERR1; 	//Не включилась вентиляция;
;;;1207   			lc640_write(EE_VZ2_STAT,vz2sERR1);
;;;1208   			}
;;;1209   		}
;;;1210   	if(sk_stat[0]==1)
000f1a  4df3              LDR      r5,|L1.4840|
000f1c  f8960027          LDRB     r0,[r6,#0x27]         ;1195  ; vz2_stat
000f20  2801              CMP      r0,#1                 ;1195
000f22  d13b              BNE      |L1.3996|
000f24  f8960028          LDRB     r0,[r6,#0x28]         ;1197  ; vz2_stat_old
000f28  2801              CMP      r0,#1                 ;1197
000f2a  d003              BEQ      |L1.3892|
000f2c  f04f0005          MOV      r0,#5                 ;1199
000f30  f8a60076          STRH     r0,[r6,#0x76]         ;1199
                  |L1.3892|
000f34  f9b60076          LDRSH    r0,[r6,#0x76]         ;1201  ; vz2_stat_cnt
000f38  b170              CBZ      r0,|L1.3928|
000f3a  f1a00001          SUB      r0,r0,#1              ;1203
000f3e  b200              SXTH     r0,r0                 ;1203
000f40  f8a60076          STRH     r0,[r6,#0x76]         ;1203
000f44  b940              CBNZ     r0,|L1.3928|
000f46  f04f000c          MOV      r0,#0xc               ;1206
000f4a  f8860027          STRB     r0,[r6,#0x27]         ;1206
000f4e  4601              MOV      r1,r0                 ;1207
000f50  f44f70ca          MOV      r0,#0x194             ;1207
000f54  f7fffffe          BL       lc640_write
                  |L1.3928|
000f58  7828              LDRB     r0,[r5,#0]  ; sk_stat
000f5a  2801              CMP      r0,#1
000f5c  d118              BNE      |L1.3984|
;;;1211   		{
;;;1212   		vz2_stat=vz2sSTEP2;
000f5e  f04f0002          MOV      r0,#2
000f62  f8860027          STRB     r0,[r6,#0x27]
;;;1213   		lc640_write(EE_VZ2_STAT,vz2sSTEP2);
000f66  4601              MOV      r1,r0
000f68  f44f70ca          MOV      r0,#0x194
000f6c  f7fffffe          BL       lc640_write
;;;1214   		tree_up(iVZ2_STEP2_2,1,0,0);
000f70  2300              MOVS     r3,#0
000f72  461a              MOV      r2,r3
000f74  2101              MOVS     r1,#1
000f76  20e0              MOVS     r0,#0xe0
000f78  f7fffffe          BL       tree_up
;;;1215   		tree_up(iVZ2_STEP2_1,0,0,0);
000f7c  2300              MOVS     r3,#0
000f7e  461a              MOV      r2,r3
000f80  4619              MOV      r1,r3
000f82  20df              MOVS     r0,#0xdf
000f84  f7fffffe          BL       tree_up
;;;1216   		ret(1200);
000f88  f44f6096          MOV      r0,#0x4b0
000f8c  f7fffffe          BL       ||ret||
                  |L1.3984|
;;;1217   		}
;;;1218   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000f90  2314              MOVS     r3,#0x14
000f92  2200              MOVS     r2,#0
000f94  2164              MOVS     r1,#0x64
000f96  20d2              MOVS     r0,#0xd2
000f98  f7fffffe          BL       mess_send
                  |L1.3996|
;;;1219   	}
;;;1220   
;;;1221   if(vz2_stat==vz2sSTEP2)
000f9c  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
000fa0  2802              CMP      r0,#2
000fa2  d11a              BNE      |L1.4058|
;;;1222   	{
;;;1223   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
000fa4  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
000fa8  2802              CMP      r0,#2
000faa  d102              BNE      |L1.4018|
000fac  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
000fb0  b918              CBNZ     r0,|L1.4026|
                  |L1.4018|
;;;1224   		{
;;;1225   		vz2_stat_cnt=15;
000fb2  f04f000f          MOV      r0,#0xf
000fb6  f8a60076          STRH     r0,[r6,#0x76]
                  |L1.4026|
;;;1226   		}
;;;1227   	vz2_stat_cnt--;
000fba  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
000fbe  f1a00001          SUB      r0,r0,#1
000fc2  f8a60076          STRH     r0,[r6,#0x76]
;;;1228   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
000fc6  f04f0314          MOV      r3,#0x14
000fca  f04f0200          MOV      r2,#0
000fce  f04f0164          MOV      r1,#0x64
000fd2  f04f00d2          MOV      r0,#0xd2
000fd6  f7fffffe          BL       mess_send
                  |L1.4058|
;;;1229   	}
;;;1230   
;;;1231   if(vz2_stat==vz2sSTEP3)
000fda  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
;;;1232   	{
;;;1233   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
;;;1234   		{
;;;1235   		vz2_stat_cnt=10;
000fde  240a              MOVS     r4,#0xa
000fe0  2700              MOVS     r7,#0
;;;1236   		cntrl_stat=0;
;;;1237   		cntrl_stat_new=0;
;;;1238   		cntrl_stat_old=0;
;;;1239   		}
;;;1240   	vz2_stat_cnt--;
;;;1241   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
;;;1242   		{
;;;1243   		show_mess(	"     ВКЛЮЧИТЕ       ",
000fe2  f2413888          MOV      r8,#0x1388
000fe6  2803              CMP      r0,#3                 ;1231
000fe8  d13d              BNE      |L1.4198|
000fea  f8960028          LDRB     r0,[r6,#0x28]         ;1233  ; vz2_stat_old
000fee  2803              CMP      r0,#3                 ;1233
000ff0  d102              BNE      |L1.4088|
000ff2  f8b60076          LDRH     r0,[r6,#0x76]         ;1233  ; vz2_stat_cnt
000ff6  b928              CBNZ     r0,|L1.4100|
                  |L1.4088|
000ff8  f8a64076          STRH     r4,[r6,#0x76]         ;1235
000ffc  8577              STRH     r7,[r6,#0x2a]         ;1236
000ffe  f8a67040          STRH     r7,[r6,#0x40]         ;1237
001002  85b7              STRH     r7,[r6,#0x2c]         ;1238
                  |L1.4100|
001004  f8b60076          LDRH     r0,[r6,#0x76]         ;1240  ; vz2_stat_cnt
001008  f1a00001          SUB      r0,r0,#1              ;1240
00100c  b200              SXTH     r0,r0                 ;1240
00100e  f8a60076          STRH     r0,[r6,#0x76]         ;1240
001012  280a              CMP      r0,#0xa               ;1241
001014  d001              BEQ      |L1.4122|
001016  2809              CMP      r0,#9                 ;1241
001018  d10b              BNE      |L1.4146|
                  |L1.4122|
00101a  f2af63e0          ADR      r3,|L1.2364|
00101e  f2af62cc          ADR      r2,|L1.2388|
001022  f2af61b8          ADR      r1,|L1.2412|
001026  f2af20bc          ADR      r0,|L1.3436|
00102a  f8cd8000          STR      r8,[sp,#0]
00102e  f7fffffe          BL       show_mess
                  |L1.4146|
;;;1244   					"      ТУМБЛЕР       ",
;;;1245   					"     ВЫСОКОГО       ",
;;;1246   					"    НАПРЯЖЕНИЯ      ",
;;;1247   					5000);
;;;1248   		}
;;;1249   	if(sk_stat[1]==1)
001032  7868              LDRB     r0,[r5,#1]  ; sk_stat
001034  2801              CMP      r0,#1
001036  d110              BNE      |L1.4186|
;;;1250   		{
;;;1251   		vz2_stat=vz2sWRK1;
001038  f1060626          ADD      r6,r6,#0x26
00103c  7074              STRB     r4,[r6,#1]
;;;1252   		lc640_write(EE_VZ2_STAT,vz2sWRK1);
00103e  f04f010a          MOV      r1,#0xa
001042  f44f70ca          MOV      r0,#0x194
001046  f7fffffe          BL       lc640_write
;;;1253   		volt_region=1;
00104a  f04f0001          MOV      r0,#1
00104e  7030              STRB     r0,[r6,#0]
;;;1254   		cntrl_stat=0;
001050  80b7              STRH     r7,[r6,#4]
;;;1255   		cntrl_stat_new=0;
001052  8377              STRH     r7,[r6,#0x1a]
;;;1256   		cntrl_stat_old=0;
001054  80f7              STRH     r7,[r6,#6]
001056  f1a60626          SUB      r6,r6,#0x26
                  |L1.4186|
;;;1257   		}
;;;1258   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
00105a  2314              MOVS     r3,#0x14
00105c  2200              MOVS     r2,#0
00105e  2164              MOVS     r1,#0x64
001060  20d2              MOVS     r0,#0xd2
001062  f7fffffe          BL       mess_send
                  |L1.4198|
;;;1259   	}
;;;1260   
;;;1261   if(vz2_stat==vz2sWRK1)
001066  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
;;;1262   	{
;;;1263   
;;;1264   	if(vz2_stat_old!=vz2_stat)
;;;1265   		{
;;;1266   		vz2_wrk_cnt=3600L/*100L*/*((long)FZ_T1);
00106a  f8df9278          LDR      r9,|L1.4836|
;;;1267   		//if(VZ_HR==0)  	hv_vz_wrk_cnt=1800L;
;;;1268   		vz2_up_cnt=0L;
;;;1269   
;;;1270   		}
;;;1271   	vz2_wrk_cnt--;
;;;1272   	vz2_up_cnt++;
;;;1273   
;;;1274   	if(vz2_wrk_cnt==0)
;;;1275   		{
;;;1276   		vz2_stat=vz2sWRK2;
;;;1277   		lc640_write(EE_VZ2_STAT,vz2sWRK2);
;;;1278   		}
;;;1279   	if(sk_stat[0]==0)
;;;1280   		{
;;;1281   		vz2_stat=vz2sERR2;
;;;1282   		lc640_write(EE_VZ2_STAT,vz2sERR2);
;;;1283   		}
;;;1284   	if(sk_stat[1]==0)
;;;1285   		{
;;;1286   		vz2_stat=vz2sERR3;
;;;1287   		lc640_write(EE_VZ2_STAT,vz2sERR3);
;;;1288   		}
;;;1289   	//if(abs(out_U-FZ_U1)<10)
;;;1290   	if((out_U<(FZ_U1+30))&&(out_U>(FZ_U1-10)))
;;;1291   		{
;;;1292   		if((Ib_ips_termokompensat/10)<FZ_ISW12)
;;;1293   			{
;;;1294   			if(vz2_stat_ph2_cnt)
;;;1295   				{
;;;1296   				vz2_stat_ph2_cnt--;
;;;1297   				if(vz2_stat_ph2_cnt==0)
;;;1298   					{
;;;1299   					vz2_stat=vz2sWRK2;
;;;1300   					lc640_write(EE_VZ2_STAT,vz2sWRK2);
;;;1301   					}
;;;1302   				}
;;;1303   			}
;;;1304   		else
;;;1305   			{
;;;1306   			vz2_stat_ph2_cnt=60;
;;;1307   			}
;;;1308   		}
;;;1309   	else
;;;1310   		{
;;;1311   		vz2_stat_ph2_cnt=60;
;;;1312   		}
;;;1313   	if(((Ibmax/10)>IZMAX_)&&(cntrl_stat<=20)&&(volt_region==1)&&(volt_region_cnt==0))
;;;1314   		{
;;;1315   		volt_region=0;
;;;1316   		cntrl_stat=1000;
00106e  f44f7b7a          MOV      r11,#0x3e8
001072  f1090980          ADD      r9,r9,#0x80           ;1266
001076  f04f0a0b          MOV      r10,#0xb              ;1276
00107a  280a              CMP      r0,#0xa               ;1261
00107c  d17e              BNE      |L1.4476|
00107e  f8960028          LDRB     r0,[r6,#0x28]         ;1264  ; vz2_stat_old
001082  280a              CMP      r0,#0xa               ;1264
001084  d00a              BEQ      |L1.4252|
001086  4899              LDR      r0,|L1.4844|
001088  f44f6161          MOV      r1,#0xe10             ;1266
00108c  f9b00000          LDRSH    r0,[r0,#0]            ;1266  ; FZ_T1
001090  fb00f001          MUL      r0,r0,r1              ;1266
001094  f8c90038          STR      r0,[r9,#0x38]         ;1266  ; vz2_wrk_cnt
001098  f8c9703c          STR      r7,[r9,#0x3c]         ;1268  ; vz2_up_cnt
                  |L1.4252|
00109c  f8d90038          LDR      r0,[r9,#0x38]         ;1271  ; vz2_wrk_cnt
0010a0  f1a00001          SUB      r0,r0,#1              ;1271
0010a4  f8c90038          STR      r0,[r9,#0x38]         ;1271  ; vz2_wrk_cnt
0010a8  f8d9103c          LDR      r1,[r9,#0x3c]         ;1272  ; vz2_up_cnt
0010ac  f1010101          ADD      r1,r1,#1              ;1272
0010b0  f8c9103c          STR      r1,[r9,#0x3c]         ;1272  ; vz2_up_cnt
0010b4  b930              CBNZ     r0,|L1.4292|
0010b6  f886a027          STRB     r10,[r6,#0x27]        ;1276
0010ba  210b              MOVS     r1,#0xb               ;1277
0010bc  f44f70ca          MOV      r0,#0x194             ;1277
0010c0  f7fffffe          BL       lc640_write
                  |L1.4292|
0010c4  7828              LDRB     r0,[r5,#0]            ;1279  ; sk_stat
0010c6  b940              CBNZ     r0,|L1.4314|
0010c8  f04f000d          MOV      r0,#0xd               ;1281
0010cc  f8860027          STRB     r0,[r6,#0x27]         ;1281
0010d0  4601              MOV      r1,r0                 ;1282
0010d2  f44f70ca          MOV      r0,#0x194             ;1282
0010d6  f7fffffe          BL       lc640_write
                  |L1.4314|
0010da  7868              LDRB     r0,[r5,#1]            ;1284  ; sk_stat
0010dc  b940              CBNZ     r0,|L1.4336|
0010de  f04f000e          MOV      r0,#0xe               ;1286
0010e2  f8860027          STRB     r0,[r6,#0x27]         ;1286
0010e6  4601              MOV      r1,r0                 ;1287
0010e8  f44f70ca          MOV      r0,#0x194             ;1287
0010ec  f7fffffe          BL       lc640_write
                  |L1.4336|
0010f0  487f              LDR      r0,|L1.4848|
0010f2  223c              MOVS     r2,#0x3c              ;1306
0010f4  f9b01000          LDRSH    r1,[r0,#0]            ;1290  ; out_U
0010f8  487e              LDR      r0,|L1.4852|
0010fa  f9b00000          LDRSH    r0,[r0,#0]            ;1290  ; FZ_U1
0010fe  f100031e          ADD      r3,r0,#0x1e           ;1290
001102  4299              CMP      r1,r3                 ;1290
001104  da20              BGE      |L1.4424|
001106  380a              SUBS     r0,r0,#0xa            ;1290
001108  4281              CMP      r1,r0                 ;1290
00110a  dd1d              BLE      |L1.4424|
00110c  487a              LDR      r0,|L1.4856|
00110e  497b              LDR      r1,|L1.4860|
001110  f9b00000          LDRSH    r0,[r0,#0]            ;1292  ; Ib_ips_termokompensat
001114  f9b11000          LDRSH    r1,[r1,#0]            ;1292  ; FZ_ISW12
001118  fb90f0f4          SDIV     r0,r0,r4              ;1292
00111c  4288              CMP      r0,r1                 ;1292
00111e  da10              BGE      |L1.4418|
001120  f9b60078          LDRSH    r0,[r6,#0x78]         ;1294  ; vz2_stat_ph2_cnt
001124  b190              CBZ      r0,|L1.4428|
001126  f1a00001          SUB      r0,r0,#1              ;1296
00112a  b200              SXTH     r0,r0                 ;1296
00112c  f8a60078          STRH     r0,[r6,#0x78]         ;1296
001130  b960              CBNZ     r0,|L1.4428|
001132  f886a027          STRB     r10,[r6,#0x27]        ;1299
001136  210b              MOVS     r1,#0xb               ;1300
001138  f44f70ca          MOV      r0,#0x194             ;1300
00113c  f7fffffe          BL       lc640_write
001140  e004              B        |L1.4428|
                  |L1.4418|
001142  f8a62078          STRH     r2,[r6,#0x78]         ;1306
001146  e001              B        |L1.4428|
                  |L1.4424|
001148  f8a62078          STRH     r2,[r6,#0x78]         ;1311
                  |L1.4428|
00114c  f9b60042          LDRSH    r0,[r6,#0x42]         ;1313  ; Ibmax
001150  f8b61044          LDRH     r1,[r6,#0x44]         ;1313  ; IZMAX_
001154  fb90f0f4          SDIV     r0,r0,r4              ;1313
001158  4288              CMP      r0,r1                 ;1313
00115a  dd18              BLE      |L1.4494|
00115c  f9b6202a          LDRSH    r2,[r6,#0x2a]         ;1313  ; cntrl_stat
001160  2a14              CMP      r2,#0x14              ;1313
001162  dc14              BGT      |L1.4494|
001164  f8962026          LDRB     r2,[r6,#0x26]         ;1313  ; volt_region
001168  2a01              CMP      r2,#1                 ;1313
00116a  d110              BNE      |L1.4494|
00116c  f8b62074          LDRH     r2,[r6,#0x74]         ;1313  ; volt_region_cnt
001170  b96a              CBNZ     r2,|L1.4494|
001172  f8867026          STRB     r7,[r6,#0x26]         ;1315
001176  f8a6b02a          STRH     r11,[r6,#0x2a]
;;;1317   		cntrl_stat_new=1000;
00117a  e000              B        |L1.4478|
                  |L1.4476|
00117c  e030              B        |L1.4576|
                  |L1.4478|
00117e  f8a6b040          STRH     r11,[r6,#0x40]
;;;1318   		cntrl_stat_old=1000;
001182  f8a6b02c          STRH     r11,[r6,#0x2c]
;;;1319   		volt_region_cnt=110;
001186  f04f026e          MOV      r2,#0x6e
00118a  f8a62074          STRH     r2,[r6,#0x74]
                  |L1.4494|
;;;1320   		}
;;;1321   	if(((Ibmax/10)<IZMAX_)&&(cntrl_stat>=1000)&&(volt_region==0)&&(volt_region_cnt==0))
00118e  4288              CMP      r0,r1
001190  da13              BGE      |L1.4538|
001192  f9b6002a          LDRSH    r0,[r6,#0x2a]  ; cntrl_stat
001196  4558              CMP      r0,r11
001198  db0f              BLT      |L1.4538|
00119a  f8960026          LDRB     r0,[r6,#0x26]  ; volt_region
00119e  b960              CBNZ     r0,|L1.4538|
0011a0  f8b60074          LDRH     r0,[r6,#0x74]  ; volt_region_cnt
0011a4  b948              CBNZ     r0,|L1.4538|
;;;1322   		{
;;;1323   		volt_region=1;
0011a6  f04f0001          MOV      r0,#1
0011aa  f8860026          STRB     r0,[r6,#0x26]
;;;1324   		cntrl_stat=10;
0011ae  8574              STRH     r4,[r6,#0x2a]
;;;1325   		cntrl_stat_new=10;
0011b0  f8a64040          STRH     r4,[r6,#0x40]
;;;1326   		cntrl_stat_old=10;
0011b4  85b4              STRH     r4,[r6,#0x2c]
;;;1327   		volt_region_cnt=10;
0011b6  f8a64074          STRH     r4,[r6,#0x74]
                  |L1.4538|
;;;1328   		}
;;;1329   	if(volt_region==0) 		mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0011ba  f8960026          LDRB     r0,[r6,#0x26]  ; volt_region
0011be  b110              CBZ      r0,|L1.4550|
;;;1330   	else if(volt_region==1) mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,1,20);
0011c0  2801              CMP      r0,#1
0011c2  d007              BEQ      |L1.4564|
0011c4  e00c              B        |L1.4576|
                  |L1.4550|
0011c6  2314              MOVS     r3,#0x14              ;1329
0011c8  2200              MOVS     r2,#0                 ;1329
0011ca  2164              MOVS     r1,#0x64              ;1329
0011cc  20d2              MOVS     r0,#0xd2              ;1329
0011ce  f7fffffe          BL       mess_send
0011d2  e005              B        |L1.4576|
                  |L1.4564|
0011d4  2314              MOVS     r3,#0x14
0011d6  2201              MOVS     r2,#1
0011d8  2164              MOVS     r1,#0x64
0011da  20d2              MOVS     r0,#0xd2
0011dc  f7fffffe          BL       mess_send
                  |L1.4576|
;;;1331   	}
;;;1332   
;;;1333   if(vz2_stat==vz2sWRK2)
0011e0  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
0011e4  280b              CMP      r0,#0xb
0011e6  d175              BNE      |L1.4820|
;;;1334   	{
;;;1335   	if(vz2_stat_old!=vz2_stat)
0011e8  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
0011ec  280b              CMP      r0,#0xb
0011ee  d008              BEQ      |L1.4610|
;;;1336   		{
;;;1337   		vz2_wrk_cnt=3600L/*100L*/*((long)FZ_T2);
0011f0  4843              LDR      r0,|L1.4864|
0011f2  f44f6161          MOV      r1,#0xe10
0011f6  f9b00000          LDRSH    r0,[r0,#0]  ; FZ_T2
0011fa  fb00f001          MUL      r0,r0,r1
0011fe  f8c90038          STR      r0,[r9,#0x38]  ; vz2_wrk_cnt
                  |L1.4610|
;;;1338   		//if(VZ_HR==0)  	hv_vz_wrk_cnt=1800L;
;;;1339   		//vz2_up_cnt=0L;
;;;1340   		}
;;;1341   	vz2_wrk_cnt--;
001202  f8d90038          LDR      r0,[r9,#0x38]  ; vz2_wrk_cnt
001206  f1a00001          SUB      r0,r0,#1
00120a  f8c90038          STR      r0,[r9,#0x38]  ; vz2_wrk_cnt
;;;1342   	vz2_up_cnt++;
00120e  f8d9103c          LDR      r1,[r9,#0x3c]  ; vz2_up_cnt
001212  f1010101          ADD      r1,r1,#1
001216  f8c9103c          STR      r1,[r9,#0x3c]  ; vz2_up_cnt
;;;1343   
;;;1344   	if(vz2_wrk_cnt==0)
00121a  b958              CBNZ     r0,|L1.4660|
;;;1345   		{
;;;1346   		vz2_stat=vz2sFINE;
00121c  f04f0012          MOV      r0,#0x12
001220  f8860027          STRB     r0,[r6,#0x27]
;;;1347   		lc640_write(EE_VZ2_STAT,vz2sFINE);
001224  4601              MOV      r1,r0
001226  f44f70ca          MOV      r0,#0x194
00122a  f7fffffe          BL       lc640_write
;;;1348   		fz_mem_hndl(0);
00122e  2000              MOVS     r0,#0
001230  f7fffffe          BL       fz_mem_hndl
                  |L1.4660|
;;;1349   		}
;;;1350   	if(sk_stat[0]==0)
001234  7828              LDRB     r0,[r5,#0]  ; sk_stat
001236  b940              CBNZ     r0,|L1.4682|
;;;1351   		{
;;;1352   		vz2_stat=vz2sERR5;
001238  f04f0010          MOV      r0,#0x10
00123c  f8860027          STRB     r0,[r6,#0x27]
;;;1353   		lc640_write(EE_VZ2_STAT,vz2sERR5);
001240  4601              MOV      r1,r0
001242  f44f70ca          MOV      r0,#0x194
001246  f7fffffe          BL       lc640_write
                  |L1.4682|
;;;1354   		}
;;;1355   	if(sk_stat[1]==0)
00124a  7868              LDRB     r0,[r5,#1]  ; sk_stat
00124c  b940              CBNZ     r0,|L1.4704|
;;;1356   		{
;;;1357   		vz2_stat=vz2sERR6;
00124e  f04f0011          MOV      r0,#0x11
001252  f8860027          STRB     r0,[r6,#0x27]
;;;1358   		lc640_write(EE_VZ2_STAT,vz2sERR6);
001256  4601              MOV      r1,r0
001258  f44f70ca          MOV      r0,#0x194
00125c  f7fffffe          BL       lc640_write
                  |L1.4704|
;;;1359   		}
;;;1360   	if(((Ibmax/10)>IZMAX_)&&(cntrl_stat<=20)&&(volt_region==1)&&(volt_region_cnt==0))
001260  f9b60042          LDRSH    r0,[r6,#0x42]  ; Ibmax
001264  f8b61044          LDRH     r1,[r6,#0x44]  ; IZMAX_
001268  fb90f0f4          SDIV     r0,r0,r4
00126c  4288              CMP      r0,r1
00126e  dd16              BLE      |L1.4766|
001270  f9b6202a          LDRSH    r2,[r6,#0x2a]  ; cntrl_stat
001274  2a14              CMP      r2,#0x14
001276  dc12              BGT      |L1.4766|
001278  f8962026          LDRB     r2,[r6,#0x26]  ; volt_region
00127c  2a01              CMP      r2,#1
00127e  d10e              BNE      |L1.4766|
001280  f8b62074          LDRH     r2,[r6,#0x74]  ; volt_region_cnt
001284  b95a              CBNZ     r2,|L1.4766|
;;;1361   		{
;;;1362   		volt_region=0;
001286  f8867026          STRB     r7,[r6,#0x26]
;;;1363   		cntrl_stat=1000;
00128a  f8a6b02a          STRH     r11,[r6,#0x2a]
;;;1364   		cntrl_stat_new=1000;
00128e  f8a6b040          STRH     r11,[r6,#0x40]
;;;1365   		cntrl_stat_old=1000;
001292  f8a6b02c          STRH     r11,[r6,#0x2c]
;;;1366   		volt_region_cnt=110;
001296  f04f026e          MOV      r2,#0x6e
00129a  f8a62074          STRH     r2,[r6,#0x74]
                  |L1.4766|
;;;1367   		}
;;;1368   	if(((Ibmax/10)<IZMAX_)&&(cntrl_stat>=1000)&&(volt_region==0)&&(volt_region_cnt==0))
00129e  4288              CMP      r0,r1
0012a0  da13              BGE      |L1.4810|
0012a2  f9b6002a          LDRSH    r0,[r6,#0x2a]  ; cntrl_stat
0012a6  4558              CMP      r0,r11
0012a8  db0f              BLT      |L1.4810|
0012aa  f8960026          LDRB     r0,[r6,#0x26]  ; volt_region
0012ae  b960              CBNZ     r0,|L1.4810|
0012b0  f8b60074          LDRH     r0,[r6,#0x74]  ; volt_region_cnt
0012b4  b948              CBNZ     r0,|L1.4810|
;;;1369   		{
;;;1370   		volt_region=1;
0012b6  f04f0001          MOV      r0,#1
0012ba  f8860026          STRB     r0,[r6,#0x26]
;;;1371   		cntrl_stat=10;
0012be  8574              STRH     r4,[r6,#0x2a]
;;;1372   		cntrl_stat_new=10;
0012c0  f8a64040          STRH     r4,[r6,#0x40]
;;;1373   		cntrl_stat_old=10;
0012c4  85b4              STRH     r4,[r6,#0x2c]
;;;1374   		volt_region_cnt=10;
0012c6  f8a64074          STRH     r4,[r6,#0x74]
                  |L1.4810|
;;;1375   		}
;;;1376   	if(volt_region==0) 		mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0012ca  f8960026          LDRB     r0,[r6,#0x26]  ; volt_region
0012ce  b110              CBZ      r0,|L1.4822|
;;;1377   	else if(volt_region==1) mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,1,20);
0012d0  2801              CMP      r0,#1
0012d2  d017              BEQ      |L1.4868|
                  |L1.4820|
0012d4  e01c              B        |L1.4880|
                  |L1.4822|
0012d6  2314              MOVS     r3,#0x14              ;1376
0012d8  2200              MOVS     r2,#0                 ;1376
0012da  2164              MOVS     r1,#0x64              ;1376
0012dc  20d2              MOVS     r0,#0xd2              ;1376
0012de  f7fffffe          BL       mess_send
0012e2  e015              B        |L1.4880|
                  |L1.4836|
                          DCD      ||area_number.25||
                  |L1.4840|
                          DCD      sk_stat
                  |L1.4844|
                          DCD      FZ_T1
                  |L1.4848|
                          DCD      out_U
                  |L1.4852|
                          DCD      FZ_U1
                  |L1.4856|
                          DCD      Ib_ips_termokompensat
                  |L1.4860|
                          DCD      FZ_ISW12
                  |L1.4864|
                          DCD      FZ_T2
                  |L1.4868|
001304  2314              MOVS     r3,#0x14
001306  2201              MOVS     r2,#1
001308  2164              MOVS     r1,#0x64
00130a  20d2              MOVS     r0,#0xd2
00130c  f7fffffe          BL       mess_send
                  |L1.4880|
;;;1378   	}
;;;1379   
;;;1380   if(vz2_stat==vz2sERR1)		//Отсутствует вентиляция при включении
001310  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
001314  280c              CMP      r0,#0xc
001316  d124              BNE      |L1.4962|
;;;1381   	{
;;;1382   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
001318  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
00131c  280c              CMP      r0,#0xc
00131e  d102              BNE      |L1.4902|
001320  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001324  b908              CBNZ     r0,|L1.4906|
                  |L1.4902|
;;;1383   		{
;;;1384   		vz2_stat_cnt=10;
001326  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.4906|
;;;1385   		}
;;;1386   	vz2_stat_cnt--;
00132a  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
00132e  f1a00001          SUB      r0,r0,#1
001332  b200              SXTH     r0,r0
001334  f8a60076          STRH     r0,[r6,#0x76]
;;;1387   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
001338  280a              CMP      r0,#0xa
00133a  d001              BEQ      |L1.4928|
00133c  2809              CMP      r0,#9
00133e  d10a              BNE      |L1.4950|
                  |L1.4928|
;;;1388   		{
;;;1389   		show_mess(	" ФОРМОВОЧНЫЙ ЗАРЯД  ",
001340  f2af53b8          ADR      r3,|L1.3468|
001344  f2af52a4          ADR      r2,|L1.3492|
001348  f2af5190          ADR      r1,|L1.3516|
00134c  a0ff              ADR      r0,|L1.5964|
00134e  f8cd8000          STR      r8,[sp,#0]
001352  f7fffffe          BL       show_mess
                  |L1.4950|
;;;1390   					"   НЕ МОЖЕТ БЫТЬ    ",
;;;1391   					"      ВКЛЮЧЕН       ",
;;;1392   					"  БЕЗ ВЕНТИЛЯЦИИ!!  ",
;;;1393   					5000);
;;;1394   		}
;;;1395   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
001356  2314              MOVS     r3,#0x14
001358  2200              MOVS     r2,#0
00135a  2164              MOVS     r1,#0x64
00135c  20d2              MOVS     r0,#0xd2
00135e  f7fffffe          BL       mess_send
                  |L1.4962|
;;;1396   	}
;;;1397   if(vz2_stat==vz2sERR2)		//Пропала вентиляция при работе в первой фазе ФЗ
001362  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
001366  280d              CMP      r0,#0xd
001368  d12e              BNE      |L1.5064|
;;;1398   	{
;;;1399   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
00136a  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
00136e  280d              CMP      r0,#0xd
001370  d102              BNE      |L1.4984|
001372  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001376  b908              CBNZ     r0,|L1.4988|
                  |L1.4984|
;;;1400   		{
;;;1401   		vz2_stat_cnt=10;
001378  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.4988|
;;;1402   		}
;;;1403   	vz2_stat_cnt--;
00137c  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001380  f1a00001          SUB      r0,r0,#1
001384  b200              SXTH     r0,r0
001386  f8a60076          STRH     r0,[r6,#0x76]
;;;1404   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
00138a  280a              CMP      r0,#0xa
00138c  d001              BEQ      |L1.5010|
00138e  2809              CMP      r0,#9
001390  d10a              BNE      |L1.5032|
                  |L1.5010|
;;;1405   		{
;;;1406   		show_mess(	" ФОРМОВОЧНЫЙ ЗАРЯД  ",
001392  f6af23b8          ADR      r3,|L1.2268|
001396  f6af22a4          ADR      r2,|L1.2292|
00139a  f6af2190          ADR      r1,|L1.2316|
00139e  a0eb              ADR      r0,|L1.5964|
0013a0  f8cd8000          STR      r8,[sp,#0]
0013a4  f7fffffe          BL       show_mess
                  |L1.5032|
;;;1407   					"    ЗАБЛОКИРОВАН    ",
;;;1408   					"     НЕИСПРАВНА     ",
;;;1409   					"    ВЕНТИЛЯЦИЯ!!!   ",
;;;1410   					5000);
;;;1411   		}
;;;1412   	if(sk_stat[0]==1)
0013a8  7828              LDRB     r0,[r5,#0]  ; sk_stat
0013aa  2801              CMP      r0,#1
0013ac  d106              BNE      |L1.5052|
;;;1413   		{
;;;1414   		vz2_stat=vz2sWRK1;
0013ae  f8864027          STRB     r4,[r6,#0x27]
;;;1415   		lc640_write(EE_VZ2_STAT,vz2sWRK1);
0013b2  210a              MOVS     r1,#0xa
0013b4  f44f70ca          MOV      r0,#0x194
0013b8  f7fffffe          BL       lc640_write
                  |L1.5052|
;;;1416   		}
;;;1417   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0013bc  2314              MOVS     r3,#0x14
0013be  2200              MOVS     r2,#0
0013c0  2164              MOVS     r1,#0x64
0013c2  20d2              MOVS     r0,#0xd2
0013c4  f7fffffe          BL       mess_send
                  |L1.5064|
;;;1418   	}
;;;1419   
;;;1420   if(vz2_stat==vz2sERR3)		//Отключен тумблер "Выравнивающий заряд" при работе в первой фазе ФЗ
0013c8  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
0013cc  280e              CMP      r0,#0xe
0013ce  d12d              BNE      |L1.5164|
;;;1421   	{
;;;1422   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
0013d0  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
0013d4  280e              CMP      r0,#0xe
0013d6  d102              BNE      |L1.5086|
0013d8  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
0013dc  b908              CBNZ     r0,|L1.5090|
                  |L1.5086|
;;;1423   		{
;;;1424   		vz2_stat_cnt=10;
0013de  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.5090|
;;;1425   		}
;;;1426   	vz2_stat_cnt--;
0013e2  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
0013e6  f1a00001          SUB      r0,r0,#1
0013ea  b200              SXTH     r0,r0
0013ec  f8a60076          STRH     r0,[r6,#0x76]
;;;1427   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
0013f0  280a              CMP      r0,#0xa
0013f2  d001              BEQ      |L1.5112|
0013f4  2809              CMP      r0,#9
0013f6  d109              BNE      |L1.5132|
                  |L1.5112|
;;;1428   		{
;;;1429   		show_mess(	" ФОРМОВОЧНЫЙ ЗАРЯД  ",
0013f8  a3da              ADR      r3,|L1.5988|
0013fa  f2af52f8          ADR      r2,|L1.3588|
0013fe  f2af51e4          ADR      r1,|L1.3612|
001402  a0d2              ADR      r0,|L1.5964|
001404  f8cd8000          STR      r8,[sp,#0]
001408  f7fffffe          BL       show_mess
                  |L1.5132|
;;;1430   					"  БУДЕТ ПРОДОЛЖЕН   ",
;;;1431   					"  ПОСЛЕ ВКЛЮЧЕНИЯ   ",
;;;1432   					"    ТУМБЛЕРА!!!     ",
;;;1433   					5000);
;;;1434   		}
;;;1435   	if(sk_stat[1]==1)
00140c  7868              LDRB     r0,[r5,#1]  ; sk_stat
00140e  2801              CMP      r0,#1
001410  d106              BNE      |L1.5152|
;;;1436   		{
;;;1437   		vz2_stat=vz2sWRK1;
001412  f8864027          STRB     r4,[r6,#0x27]
;;;1438   		lc640_write(EE_VZ2_STAT,vz2sWRK1);
001416  210a              MOVS     r1,#0xa
001418  f44f70ca          MOV      r0,#0x194
00141c  f7fffffe          BL       lc640_write
                  |L1.5152|
;;;1439   		}
;;;1440   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
001420  2314              MOVS     r3,#0x14
001422  2200              MOVS     r2,#0
001424  2164              MOVS     r1,#0x64
001426  20d2              MOVS     r0,#0xd2
001428  f7fffffe          BL       mess_send
                  |L1.5164|
;;;1441   	}
;;;1442   if(vz2_stat==vz2sERR5)		//Пропала вентиляция при работе
00142c  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
001430  2810              CMP      r0,#0x10
001432  d12e              BNE      |L1.5266|
;;;1443   	{
;;;1444   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
001434  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
001438  2810              CMP      r0,#0x10
00143a  d102              BNE      |L1.5186|
00143c  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001440  b908              CBNZ     r0,|L1.5190|
                  |L1.5186|
;;;1445   		{
;;;1446   		vz2_stat_cnt=10;
001442  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.5190|
;;;1447   		}
;;;1448   	vz2_stat_cnt--;
001446  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
00144a  f1a00001          SUB      r0,r0,#1
00144e  b200              SXTH     r0,r0
001450  f8a60076          STRH     r0,[r6,#0x76]
;;;1449   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
001454  280a              CMP      r0,#0xa
001456  d001              BEQ      |L1.5212|
001458  2809              CMP      r0,#9
00145a  d10a              BNE      |L1.5234|
                  |L1.5212|
;;;1450   		{
;;;1451   		show_mess(	" ФОРМОВОЧНЫЙ ЗАРЯД  ",
00145c  f6af3384          ADR      r3,|L1.2268|
001460  f6af3270          ADR      r2,|L1.2292|
001464  f6af315c          ADR      r1,|L1.2316|
001468  a0b8              ADR      r0,|L1.5964|
00146a  f8cd8000          STR      r8,[sp,#0]
00146e  f7fffffe          BL       show_mess
                  |L1.5234|
;;;1452   					"    ЗАБЛОКИРОВАН    ",
;;;1453   					"     НЕИСПРАВНА     ",
;;;1454   					"    ВЕНТИЛЯЦИЯ!!!   ",
;;;1455   					5000);
;;;1456   		}
;;;1457   	if(sk_stat[0]==1)
001472  7828              LDRB     r0,[r5,#0]  ; sk_stat
001474  2801              CMP      r0,#1
001476  d106              BNE      |L1.5254|
;;;1458   		{
;;;1459   		vz2_stat=vz2sWRK2;
001478  f886a027          STRB     r10,[r6,#0x27]
;;;1460   		lc640_write(EE_VZ2_STAT,vz2sWRK2);
00147c  210b              MOVS     r1,#0xb
00147e  f44f70ca          MOV      r0,#0x194
001482  f7fffffe          BL       lc640_write
                  |L1.5254|
;;;1461   		}
;;;1462   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
001486  2314              MOVS     r3,#0x14
001488  2200              MOVS     r2,#0
00148a  2164              MOVS     r1,#0x64
00148c  20d2              MOVS     r0,#0xd2
00148e  f7fffffe          BL       mess_send
                  |L1.5266|
;;;1463   	}
;;;1464   
;;;1465   if(vz2_stat==vz2sERR6)		//Отключен тумблер "Выравнивающий заряд"
001492  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
001496  2811              CMP      r0,#0x11
001498  d12d              BNE      |L1.5366|
;;;1466   	{
;;;1467   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
00149a  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
00149e  2811              CMP      r0,#0x11
0014a0  d102              BNE      |L1.5288|
0014a2  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
0014a6  b908              CBNZ     r0,|L1.5292|
                  |L1.5288|
;;;1468   		{
;;;1469   		vz2_stat_cnt=10;
0014a8  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.5292|
;;;1470   		}
;;;1471   	vz2_stat_cnt--;
0014ac  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
0014b0  f1a00001          SUB      r0,r0,#1
0014b4  b200              SXTH     r0,r0
0014b6  f8a60076          STRH     r0,[r6,#0x76]
;;;1472   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
0014ba  280a              CMP      r0,#0xa
0014bc  d001              BEQ      |L1.5314|
0014be  2809              CMP      r0,#9
0014c0  d109              BNE      |L1.5334|
                  |L1.5314|
;;;1473   		{
;;;1474   		show_mess(	" ФОРМОВОЧНЫЙ ЗАРЯД  ",
0014c2  a3a8              ADR      r3,|L1.5988|
0014c4  f2af62c4          ADR      r2,|L1.3588|
0014c8  f2af61b0          ADR      r1,|L1.3612|
0014cc  a09f              ADR      r0,|L1.5964|
0014ce  f8cd8000          STR      r8,[sp,#0]
0014d2  f7fffffe          BL       show_mess
                  |L1.5334|
;;;1475   					"  БУДЕТ ПРОДОЛЖЕН   ",
;;;1476   					"  ПОСЛЕ ВКЛЮЧЕНИЯ   ",
;;;1477   					"    ТУМБЛЕРА!!!     ",
;;;1478   					5000);
;;;1479   		}
;;;1480   	if(sk_stat[1]==1)
0014d6  7868              LDRB     r0,[r5,#1]  ; sk_stat
0014d8  2801              CMP      r0,#1
0014da  d106              BNE      |L1.5354|
;;;1481   		{
;;;1482   		vz2_stat=vz2sWRK2;
0014dc  f886a027          STRB     r10,[r6,#0x27]
;;;1483   		lc640_write(EE_VZ2_STAT,vz2sWRK2);
0014e0  210b              MOVS     r1,#0xb
0014e2  f44f70ca          MOV      r0,#0x194
0014e6  f7fffffe          BL       lc640_write
                  |L1.5354|
;;;1484   		}
;;;1485   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0014ea  2314              MOVS     r3,#0x14
0014ec  2200              MOVS     r2,#0
0014ee  2164              MOVS     r1,#0x64
0014f0  20d2              MOVS     r0,#0xd2
0014f2  f7fffffe          BL       mess_send
                  |L1.5366|
;;;1486   	}
;;;1487   if(vz2_stat==vz2sERR4)		//ВЗ закончился а тумблер включен
0014f6  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
0014fa  280f              CMP      r0,#0xf
0014fc  d130              BNE      |L1.5472|
;;;1488   	{
;;;1489   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
0014fe  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
001502  280f              CMP      r0,#0xf
001504  d102              BNE      |L1.5388|
001506  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
00150a  b908              CBNZ     r0,|L1.5392|
                  |L1.5388|
;;;1490   		{
;;;1491   		vz2_stat_cnt=10;
00150c  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.5392|
;;;1492   		}
;;;1493   	vz2_stat_cnt--;
001510  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001514  f1a00001          SUB      r0,r0,#1
001518  b200              SXTH     r0,r0
00151a  f8a60076          STRH     r0,[r6,#0x76]
;;;1494   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
00151e  280a              CMP      r0,#0xa
001520  d001              BEQ      |L1.5414|
001522  2809              CMP      r0,#9
001524  d10b              BNE      |L1.5438|
                  |L1.5414|
;;;1495   		{
;;;1496   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
001526  f6af33ec          ADR      r3,|L1.2364|
00152a  f6af32d8          ADR      r2,|L1.2388|
00152e  f6af31c4          ADR      r1,|L1.2412|
001532  f2af6088          ADR      r0,|L1.3756|
001536  f8cd8000          STR      r8,[sp,#0]
00153a  f7fffffe          BL       show_mess
                  |L1.5438|
;;;1497   					"      ТУМБЛЕР       ",
;;;1498   					"     ВЫСОКОГО       ",
;;;1499   					"    НАПРЯЖЕНИЯ      ",
;;;1500   					5000);
;;;1501   		}
;;;1502   	if(sk_stat[1]==0)
00153e  7868              LDRB     r0,[r5,#1]  ; sk_stat
001540  b940              CBNZ     r0,|L1.5460|
;;;1503   		{
;;;1504   		vz2_stat=vz2sOFF;
001542  f8867027          STRB     r7,[r6,#0x27]
;;;1505   		lc640_write(EE_VZ2_STAT,vz2sOFF);
001546  2100              MOVS     r1,#0
001548  f44f70ca          MOV      r0,#0x194
00154c  f7fffffe          BL       lc640_write
;;;1506   		vz_stop();
001550  f7fffffe          BL       vz_stop
                  |L1.5460|
;;;1507   
;;;1508   		}
;;;1509   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
001554  2314              MOVS     r3,#0x14
001556  2200              MOVS     r2,#0
001558  2164              MOVS     r1,#0x64
00155a  20d2              MOVS     r0,#0xd2
00155c  f7fffffe          BL       mess_send
                  |L1.5472|
;;;1510   	}
;;;1511   if(vz2_stat==vz2sFINE)		//ФЗ закончился, напоминание
001560  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
;;;1512   	{
;;;1513   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
;;;1514   		{
;;;1515   		vz2_stat_cnt=10;
;;;1516   		}
;;;1517   	vz2_stat_cnt--;
;;;1518   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
;;;1519   		{
;;;1520   		show_mess(	"    ФОРМОВОЧНЫЙ     ",
001564  f64038b8          MOV      r8,#0xbb8
001568  2812              CMP      r0,#0x12              ;1511
00156a  d13f              BNE      |L1.5612|
00156c  f8960028          LDRB     r0,[r6,#0x28]         ;1513  ; vz2_stat_old
001570  2812              CMP      r0,#0x12              ;1513
001572  d102              BNE      |L1.5498|
001574  f8b60076          LDRH     r0,[r6,#0x76]         ;1513  ; vz2_stat_cnt
001578  b908              CBNZ     r0,|L1.5502|
                  |L1.5498|
00157a  f8a64076          STRH     r4,[r6,#0x76]         ;1515
                  |L1.5502|
00157e  f8b60076          LDRH     r0,[r6,#0x76]         ;1517  ; vz2_stat_cnt
001582  f1a00001          SUB      r0,r0,#1              ;1517
001586  b200              SXTH     r0,r0                 ;1517
001588  f8a60076          STRH     r0,[r6,#0x76]         ;1517
00158c  280a              CMP      r0,#0xa               ;1518
00158e  d001              BEQ      |L1.5524|
001590  2809              CMP      r0,#9                 ;1518
001592  d10a              BNE      |L1.5546|
                  |L1.5524|
001594  f2af734c          ADR      r3,|L1.3660|
001598  f2af7238          ADR      r2,|L1.3684|
00159c  f2af7124          ADR      r1,|L1.3708|
0015a0  a076              ADR      r0,|L1.6012|
0015a2  f8cd8000          STR      r8,[sp,#0]
0015a6  f7fffffe          BL       show_mess
                  |L1.5546|
;;;1521   					"       ЗАРЯД        ",
;;;1522   					"      УСПЕШНО       ",
;;;1523   					"     ЗАВЕРШЕН       ",
;;;1524   					3000);
;;;1525   		}
;;;1526   	if((vz2_stat_cnt==6)||(vz2_stat_cnt==5))
0015aa  f9b60076          LDRSH    r0,[r6,#0x76]  ; vz2_stat_cnt
0015ae  2806              CMP      r0,#6
0015b0  d001              BEQ      |L1.5558|
0015b2  2805              CMP      r0,#5
0015b4  d10b              BNE      |L1.5582|
                  |L1.5558|
;;;1527   		{
;;;1528   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
0015b6  f6af437c          ADR      r3,|L1.2364|
0015ba  f6af4268          ADR      r2,|L1.2388|
0015be  f6af4154          ADR      r1,|L1.2412|
0015c2  f2af7018          ADR      r0,|L1.3756|
0015c6  f8cd8000          STR      r8,[sp,#0]
0015ca  f7fffffe          BL       show_mess
                  |L1.5582|
;;;1529   					"      ТУМБЛЕР       ",
;;;1530   					"     ВЫСОКОГО       ",
;;;1531   					"    НАПРЯЖЕНИЯ      ",
;;;1532   					3000);
;;;1533   		}
;;;1534   	if(sk_stat[1]==0)
0015ce  7868              LDRB     r0,[r5,#1]  ; sk_stat
0015d0  b930              CBNZ     r0,|L1.5600|
;;;1535   		{
;;;1536   		vz2_stat=vz2sOFF;
0015d2  f8867027          STRB     r7,[r6,#0x27]
;;;1537   		lc640_write(EE_VZ2_STAT,vz2sOFF);
0015d6  2100              MOVS     r1,#0
0015d8  f44f70ca          MOV      r0,#0x194
0015dc  f7fffffe          BL       lc640_write
                  |L1.5600|
;;;1538   		}
;;;1539   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
0015e0  2314              MOVS     r3,#0x14
0015e2  2200              MOVS     r2,#0
0015e4  2164              MOVS     r1,#0x64
0015e6  20d2              MOVS     r0,#0xd2
0015e8  f7fffffe          BL       mess_send
                  |L1.5612|
;;;1540   	}
;;;1541   if(vz2_stat==vz2sSTOP)		//ФЗ прекращен, напоминание
0015ec  f8960027          LDRB     r0,[r6,#0x27]  ; vz2_stat
0015f0  2813              CMP      r0,#0x13
0015f2  d13f              BNE      |L1.5748|
;;;1542   	{
;;;1543   	if((vz2_stat_old!=vz2_stat)||(vz2_stat_cnt==0))
0015f4  f8960028          LDRB     r0,[r6,#0x28]  ; vz2_stat_old
0015f8  2813              CMP      r0,#0x13
0015fa  d102              BNE      |L1.5634|
0015fc  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
001600  b908              CBNZ     r0,|L1.5638|
                  |L1.5634|
;;;1544   		{
;;;1545   		vz2_stat_cnt=10;
001602  f8a64076          STRH     r4,[r6,#0x76]
                  |L1.5638|
;;;1546   		}
;;;1547   	vz2_stat_cnt--;
001606  f8b60076          LDRH     r0,[r6,#0x76]  ; vz2_stat_cnt
00160a  f1a00001          SUB      r0,r0,#1
00160e  b200              SXTH     r0,r0
001610  f8a60076          STRH     r0,[r6,#0x76]
;;;1548   	if((vz2_stat_cnt==10)||(vz2_stat_cnt==9))
001614  280a              CMP      r0,#0xa
001616  d001              BEQ      |L1.5660|
001618  2809              CMP      r0,#9
00161a  d10a              BNE      |L1.5682|
                  |L1.5660|
;;;1549   		{
;;;1550   		show_mess(	"    ФОРМОВОЧНЫЙ     ",
00161c  f2af735c          ADR      r3,|L1.3780|
001620  f2af7248          ADR      r2,|L1.3804|
001624  f2af71ac          ADR      r1,|L1.3708|
001628  a054              ADR      r0,|L1.6012|
00162a  f8cd8000          STR      r8,[sp,#0]
00162e  f7fffffe          BL       show_mess
                  |L1.5682|
;;;1551   					"       ЗАРЯД        ",
;;;1552   					"     ПРЕКРАЩЕН      ",
;;;1553   					"                    ",
;;;1554   					3000);
;;;1555   		}
;;;1556   	if((vz2_stat_cnt==6)||(vz2_stat_cnt==5))
001632  f9b60076          LDRSH    r0,[r6,#0x76]  ; vz2_stat_cnt
001636  2806              CMP      r0,#6
001638  d001              BEQ      |L1.5694|
00163a  2805              CMP      r0,#5
00163c  d10b              BNE      |L1.5718|
                  |L1.5694|
;;;1557   		{
;;;1558   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
00163e  f6af5304          ADR      r3,|L1.2364|
001642  f6af42f0          ADR      r2,|L1.2388|
001646  f6af41dc          ADR      r1,|L1.2412|
00164a  f2af70a0          ADR      r0,|L1.3756|
00164e  f8cd8000          STR      r8,[sp,#0]
001652  f7fffffe          BL       show_mess
                  |L1.5718|
;;;1559   					"      ТУМБЛЕР       ",
;;;1560   					"     ВЫСОКОГО       ",
;;;1561   					"    НАПРЯЖЕНИЯ      ",
;;;1562   					3000);
;;;1563   		}
;;;1564   	if(sk_stat[1]==0)
001656  7868              LDRB     r0,[r5,#1]  ; sk_stat
001658  b930              CBNZ     r0,|L1.5736|
;;;1565   		{
;;;1566   		vz2_stat=vz2sOFF;
00165a  f8867027          STRB     r7,[r6,#0x27]
;;;1567   		lc640_write(EE_VZ2_STAT,vz2sOFF);
00165e  2100              MOVS     r1,#0
001660  f44f70ca          MOV      r0,#0x194
001664  f7fffffe          BL       lc640_write
                  |L1.5736|
;;;1568   		}
;;;1569   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,0,20);
001668  2314              MOVS     r3,#0x14
00166a  2200              MOVS     r2,#0
00166c  2164              MOVS     r1,#0x64
00166e  20d2              MOVS     r0,#0xd2
001670  f7fffffe          BL       mess_send
                  |L1.5748|
;;;1570   	}
;;;1571   vz2_stat_old=vz2_stat;
001674  f8160f27          LDRB     r0,[r6,#0x27]!  ; vz2_stat
001678  7070              STRB     r0,[r6,#1]
;;;1572   
;;;1573   }
00167a  e8bd8ff8          POP      {r3-r11,pc}
;;;1574   
                          ENDP

                  vz2_start PROC
;;;1576   //старт уравнительног заряда
;;;1577   char vz2_start(char hour)
00167e  b510              PUSH     {r4,lr}
;;;1578   {          
;;;1579   char out;
;;;1580   out=0;
001680  f04f0000          MOV      r0,#0
;;;1581   if((spc_stat==spcOFF)&&(speedChrgBlckStat!=1)&&(vz1_stat==vz1sOFF))
001684  4943              LDR      r1,|L1.6036|
001686  7e0a              LDRB     r2,[r1,#0x18]  ; spc_stat
001688  2a00              CMP      r2,#0
00168a  d112              BNE      |L1.5810|
00168c  4a42              LDR      r2,|L1.6040|
00168e  8812              LDRH     r2,[r2,#0]  ; speedChrgBlckStat
001690  2a01              CMP      r2,#1
001692  d00e              BEQ      |L1.5810|
001694  f8912024          LDRB     r2,[r1,#0x24]  ; vz1_stat
001698  2a00              CMP      r2,#0
00169a  d10a              BNE      |L1.5810|
;;;1582   	{
;;;1583   	if(vz1_stat==vz1sOFF)
;;;1584   		{
;;;1585   		vz2_stat=vz2sSTEP1;
00169c  f04f0001          MOV      r0,#1
0016a0  f8810027          STRB     r0,[r1,#0x27]
;;;1586   		lc640_write(EE_VZ2_STAT,vz2sSTEP1);
0016a4  4601              MOV      r1,r0
0016a6  f44f70ca          MOV      r0,#0x194
0016aa  f7fffffe          BL       lc640_write
;;;1587   		out=1;
0016ae  f04f0001          MOV      r0,#1
                  |L1.5810|
;;;1588   		
;;;1589   		}
;;;1590   /*	spc_stat=spcVZ;
;;;1591   	__ee_spc_stat=spcVZ; 
;;;1592   	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);   
;;;1593   	vz_cnt_h=hour;
;;;1594   	__ee_vz_cnt=hour*60;
;;;1595   	if(hour==0)__ee_vz_cnt=30;
;;;1596   	lc640_write_int(EE_VZ_CNT,__ee_vz_cnt);
;;;1597   	lc640_write_int(EE_SPC_VZ_LENGT,__ee_vz_cnt);	
;;;1598   	vz_cnt_h_=0;
;;;1599   	vz_cnt_s=0;
;;;1600   	vz_cnt_s_=0;
;;;1601   	
;;;1602   		*/
;;;1603   	}
;;;1604   //else if((spc_stat==spc_KE1p1)||(spc_stat==spc_KE1p2)) out=22; 
;;;1605   //else if((spc_stat==spc_KE2p1)||(spc_stat==spc_KE2p2)) out=33;
;;;1606   //plazma=out;	
;;;1607   return out;
;;;1608   }
0016b2  bd10              POP      {r4,pc}
;;;1609   //-----------------------------------------------
                          ENDP

                  vz2_stop PROC
;;;1610   //стоп формовочного заряда
;;;1611   void vz2_stop(void)
0016b4  4837              LDR      r0,|L1.6036|
;;;1612   {
;;;1613   if(vz2_stat!=vz2sOFF)
0016b6  f8901027          LDRB     r1,[r0,#0x27]  ; vz2_stat
0016ba  2900              CMP      r1,#0
0016bc  d007              BEQ      |L1.5838|
;;;1614   	{
;;;1615   	vz2_stat=vz2sSTOP;
0016be  f04f0113          MOV      r1,#0x13
0016c2  f8801027          STRB     r1,[r0,#0x27]
;;;1616   	lc640_write(EE_VZ2_STAT,vz2sSTOP);
0016c6  f44f70ca          MOV      r0,#0x194
0016ca  f7ffbffe          B.W      lc640_write
                  |L1.5838|
;;;1617   	}
;;;1618   }
0016ce  4770              BX       lr
;;;1619   
                          ENDP

                  kb_init PROC
;;;1620   //-----------------------------------------------
;;;1621   void kb_init(void)
0016d0  4832              LDR      r0,|L1.6044|
;;;1622   {
;;;1623   main_kb_cnt=(TBAT*60)-60/*120*/;
0016d2  f06f013b          MVN      r1,#0x3b
0016d6  8800              LDRH     r0,[r0,#0]  ; TBAT
0016d8  ebc01000          RSB      r0,r0,r0,LSL #4
0016dc  eb010080          ADD      r0,r1,r0,LSL #2
0016e0  492c              LDR      r1,|L1.6036|
0016e2  f8a1004a          STRH     r0,[r1,#0x4a]
;;;1624   }
0016e6  4770              BX       lr
;;;1625   
                          ENDP

                  kb_hndl PROC
;;;1626   //-----------------------------------------------
;;;1627   void kb_hndl(void)
0016e8  e92d5ff0          PUSH     {r4-r12,lr}
;;;1628   {
;;;1629   
;;;1630   static signed short ibat[2],ibat_[2];
;;;1631   #ifdef UKU_TELECORE2015
;;;1632   if(((++main_kb_cnt>=TBAT*60)&&(TBAT))&&(BAT_TYPE==0))
;;;1633   #else 
;;;1634   if(((++main_kb_cnt>=TBAT*60)&&(TBAT)))
0016ec  f8df80a4          LDR      r8,|L1.6036|
;;;1635   #endif
;;;1636   	{
;;;1637   	main_kb_cnt=0;
;;;1638   	
;;;1639   	kb_start[0]=0;
;;;1640   	kb_start[1]=0;
;;;1641   	kb_start_ips=0;
;;;1642   
;;;1643   	if( (BAT_IS_ON[0]==bisON) && (bat[0]._Ub>80) && ( (abs(bat[0]._Ib)<IKB) || (bat[0]._av&1) ) ) kb_start[0]=1;
;;;1644   	if( (BAT_IS_ON[1]==bisON) && (bat[1]._Ub>80) && ( (abs(bat[1]._Ib)<IKB) || (bat[1]._av&1) ) ) kb_start[1]=1;
;;;1645   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;1646   	if( (!ips_bat_av_vzvod)                      && ((abs(Ib_ips_termokompensat)<IKB) || (bat_ips._av&1) ) ) kb_start_ips=1;
0016f0  f8dfa0ac          LDR      r10,|L1.6048|
0016f4  2500              MOVS     r5,#0                 ;1634
0016f6  f8b8004a          LDRH     r0,[r8,#0x4a]         ;1634  ; main_kb_cnt
0016fa  4e2a              LDR      r6,|L1.6052|
0016fc  1c40              ADDS     r0,r0,#1              ;1634
0016fe  b201              SXTH     r1,r0                 ;1634
001700  4826              LDR      r0,|L1.6044|
001702  f8a8104a          STRH     r1,[r8,#0x4a]         ;1634
001706  f8df90a0          LDR      r9,|L1.6056|
00170a  f9b00000          LDRSH    r0,[r0,#0]            ;1634  ; TBAT
;;;1647   #endif	
;;;1648   	if( (net_av) || (num_of_wrks_bps==0) || ( (spc_stat!=spcOFF) && (spc_stat!=spcVZ) ) 
;;;1649   	  ||(vz1_stat!=vz1sOFF)||(vz2_stat!=vz2sOFF)||(sp_ch_stat!=scsOFF) 	)
;;;1650    
;;;1651   		{
;;;1652   		kb_start[0]=0;
;;;1653   		kb_start[1]=0;
;;;1654   		kb_start_ips=0;
;;;1655   		}
;;;1656   
;;;1657   	if((kb_start[0]==1)||(kb_start[1]==1)||(kb_start_ips==1))
;;;1658   		{
;;;1659   		kb_cnt_1lev=10;
00170e  270a              MOVS     r7,#0xa
001710  ebc01200          RSB      r2,r0,r0,LSL #4       ;1634
001714  f04f0b01          MOV      r11,#1                ;1643
001718  f1080450          ADD      r4,r8,#0x50           ;1639
00171c  ebb10f82          CMP      r1,r2,LSL #2          ;1634
001720  db7e              BLT      |L1.6176|
001722  2800              CMP      r0,#0                 ;1634
001724  d07c              BEQ      |L1.6176|
001726  f8a8504a          STRH     r5,[r8,#0x4a]         ;1637
00172a  7025              STRB     r5,[r4,#0]            ;1639
00172c  7065              STRB     r5,[r4,#1]            ;1640
00172e  f8885012          STRB     r5,[r8,#0x12]         ;1641
001732  481e              LDR      r0,|L1.6060|
001734  7800              LDRB     r0,[r0,#0]            ;1643  ; BAT_IS_ON
001736  2855              CMP      r0,#0x55              ;1643
001738  d144              BNE      |L1.6084|
00173a  f9b60002          LDRSH    r0,[r6,#2]            ;1643  ; bat
00173e  2850              CMP      r0,#0x50              ;1643
001740  dd40              BLE      |L1.6084|
001742  f9b60008          LDRSH    r0,[r6,#8]            ;1643  ; bat
001746  f7fffffe          BL       abs
00174a  e031              B        |L1.6064|
                  |L1.5964|
00174c  20d4ced0          DCB      " ",212,206,208,204,206,194,206,215,205,219,201," ",199,192
001750  cccec2ce
001754  d7cddbc9
001758  20c7c0  
00175b  d0dfc420          DCB      208,223,196,"  ",0
00175f  2000    
001761  00                DCB      0
001762  00                DCB      0
001763  00                DCB      0
                  |L1.5988|
001764  20202020          DCB      "    ",210,211,204,193,203,197,208,192,"!!!     ",0
001768  d2d3ccc1
00176c  cbc5d0c0
001770  21212120
001774  20202020
001778  00      
001779  00                DCB      0
00177a  00                DCB      0
00177b  00                DCB      0
                  |L1.6012|
00177c  20202020          DCB      "    ",212,206,208,204,206,194,206,215,205,219,201,"    "
001780  d4ced0cc
001784  cec2ced7
001788  cddbc920
00178c  202020  
00178f  2000              DCB      " ",0
001791  00                DCB      0
001792  00                DCB      0
001793  00                DCB      0
                  |L1.6036|
                          DCD      ||area_number.25||
                  |L1.6040|
                          DCD      speedChrgBlckStat
                  |L1.6044|
                          DCD      TBAT
                  |L1.6048|
                          DCD      Ib_ips_termokompensat
                  |L1.6052|
                          DCD      bat
                  |L1.6056|
                          DCD      IKB
                  |L1.6060|
                          DCD      BAT_IS_ON
                  |L1.6064|
0017b0  f9b91000          LDRSH    r1,[r9,#0]            ;1643  ; IKB
0017b4  4288              CMP      r0,r1                 ;1643
0017b6  db03              BLT      |L1.6080|
0017b8  f896003d          LDRB     r0,[r6,#0x3d]         ;1643  ; bat
0017bc  07c0              LSLS     r0,r0,#31             ;1643
0017be  d001              BEQ      |L1.6084|
                  |L1.6080|
0017c0  f884b000          STRB     r11,[r4,#0]           ;1643
                  |L1.6084|
0017c4  48ff              LDR      r0,|L1.7108|
0017c6  7840              LDRB     r0,[r0,#1]            ;1644  ; BAT_IS_ON
0017c8  2855              CMP      r0,#0x55              ;1644
0017ca  d111              BNE      |L1.6128|
0017cc  f9b6004e          LDRSH    r0,[r6,#0x4e]         ;1644  ; bat
0017d0  2850              CMP      r0,#0x50              ;1644
0017d2  dd0d              BLE      |L1.6128|
0017d4  f9b60054          LDRSH    r0,[r6,#0x54]         ;1644  ; bat
0017d8  f7fffffe          BL       abs
0017dc  f9b91000          LDRSH    r1,[r9,#0]            ;1644  ; IKB
0017e0  4288              CMP      r0,r1                 ;1644
0017e2  db03              BLT      |L1.6124|
0017e4  f8960089          LDRB     r0,[r6,#0x89]         ;1644  ; bat
0017e8  07c0              LSLS     r0,r0,#31             ;1644
0017ea  d001              BEQ      |L1.6128|
                  |L1.6124|
0017ec  f884b001          STRB     r11,[r4,#1]           ;1644
                  |L1.6128|
0017f0  48f5              LDR      r0,|L1.7112|
0017f2  7800              LDRB     r0,[r0,#0]            ;1646  ; ips_bat_av_vzvod
0017f4  b970              CBNZ     r0,|L1.6164|
0017f6  f9ba0000          LDRSH    r0,[r10,#0]           ;1646  ; Ib_ips_termokompensat
0017fa  f7fffffe          BL       abs
0017fe  f9b91000          LDRSH    r1,[r9,#0]            ;1646  ; IKB
001802  4288              CMP      r0,r1                 ;1646
001804  db04              BLT      |L1.6160|
001806  48f1              LDR      r0,|L1.7116|
001808  f890003d          LDRB     r0,[r0,#0x3d]         ;1646  ; bat_ips
00180c  07c0              LSLS     r0,r0,#31             ;1646
00180e  d001              BEQ      |L1.6164|
                  |L1.6160|
001810  f888b012          STRB     r11,[r8,#0x12]        ;1646
                  |L1.6164|
001814  48ee              LDR      r0,|L1.7120|
001816  7800              LDRB     r0,[r0,#0]            ;1648  ; net_av
001818  b990              CBNZ     r0,|L1.6208|
00181a  f8980013          LDRB     r0,[r8,#0x13]         ;1648  ; num_of_wrks_bps
00181e  e000              B        |L1.6178|
                  |L1.6176|
001820  e01e              B        |L1.6240|
                  |L1.6178|
001822  b168              CBZ      r0,|L1.6208|
001824  f8980018          LDRB     r0,[r8,#0x18]         ;1648  ; spc_stat
001828  b108              CBZ      r0,|L1.6190|
00182a  2802              CMP      r0,#2                 ;1648
00182c  d108              BNE      |L1.6208|
                  |L1.6190|
00182e  f8980024          LDRB     r0,[r8,#0x24]         ;1649  ; vz1_stat
001832  b928              CBNZ     r0,|L1.6208|
001834  f8980027          LDRB     r0,[r8,#0x27]         ;1649  ; vz2_stat
001838  b910              CBNZ     r0,|L1.6208|
00183a  48e6              LDR      r0,|L1.7124|
00183c  7800              LDRB     r0,[r0,#0]            ;1649  ; sp_ch_stat
00183e  b118              CBZ      r0,|L1.6216|
                  |L1.6208|
001840  7025              STRB     r5,[r4,#0]            ;1652
001842  7065              STRB     r5,[r4,#1]            ;1653
001844  f8885012          STRB     r5,[r8,#0x12]         ;1654
                  |L1.6216|
001848  7820              LDRB     r0,[r4,#0]            ;1657  ; kb_start
00184a  2801              CMP      r0,#1                 ;1657
00184c  d01e              BEQ      |L1.6284|
00184e  7860              LDRB     r0,[r4,#1]            ;1657  ; kb_start
001850  2801              CMP      r0,#1                 ;1657
001852  d01b              BEQ      |L1.6284|
001854  f8980012          LDRB     r0,[r8,#0x12]         ;1657  ; kb_start_ips
001858  2801              CMP      r0,#1                 ;1657
00185a  d017              BEQ      |L1.6284|
;;;1660   		}
;;;1661   	else kb_cnt_1lev=0;
00185c  f8a8504c          STRH     r5,[r8,#0x4c]
                  |L1.6240|
;;;1662   	}
;;;1663   
;;;1664   if(kb_cnt_1lev)
001860  4641              MOV      r1,r8
001862  f9b8004c          LDRSH    r0,[r8,#0x4c]  ; kb_cnt_1lev
;;;1665   	{
;;;1666   	kb_cnt_1lev--;
;;;1667   
;;;1668   	if(kb_cnt_1lev>5)mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_PLUS,30,15);
;;;1669   	else if(kb_cnt_1lev>0) mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_MINUS,30,15);
;;;1670   
;;;1671   
;;;1672   	if(kb_cnt_1lev==5)
;;;1673   		{
;;;1674   		ibat[0]=abs(bat[0]._Ib);
001866  f8df8370          LDR      r8,|L1.7128|
00186a  2800              CMP      r0,#0                 ;1664
00186c  d07e              BEQ      |L1.6508|
00186e  f1a00001          SUB      r0,r0,#1              ;1666
001872  b200              SXTH     r0,r0                 ;1666
001874  468b              MOV      r11,r1                ;1666
001876  f8a1004c          STRH     r0,[r1,#0x4c]         ;1666
00187a  2805              CMP      r0,#5                 ;1668
00187c  dd09              BLE      |L1.6290|
00187e  230f              MOVS     r3,#0xf               ;1668
001880  221e              MOVS     r2,#0x1e              ;1668
001882  2164              MOVS     r1,#0x64              ;1668
001884  20e1              MOVS     r0,#0xe1              ;1668
001886  f7fffffe          BL       mess_send
00188a  e00a              B        |L1.6306|
                  |L1.6284|
00188c  f8a8704c          STRH     r7,[r8,#0x4c]         ;1659
001890  e7e6              B        |L1.6240|
                  |L1.6290|
001892  2800              CMP      r0,#0                 ;1669
001894  dd05              BLE      |L1.6306|
001896  230f              MOVS     r3,#0xf               ;1669
001898  221e              MOVS     r2,#0x1e              ;1669
00189a  2169              MOVS     r1,#0x69              ;1669
00189c  20e1              MOVS     r0,#0xe1              ;1669
00189e  f7fffffe          BL       mess_send
                  |L1.6306|
0018a2  f8bb004c          LDRH     r0,[r11,#0x4c]        ;1672  ; kb_cnt_1lev
0018a6  2805              CMP      r0,#5                 ;1672
0018a8  d111              BNE      |L1.6350|
0018aa  f9b60008          LDRSH    r0,[r6,#8]  ; bat
0018ae  f7fffffe          BL       abs
0018b2  f8a80000          STRH     r0,[r8,#0]
;;;1675   		ibat[1]=abs(bat[1]._Ib);
0018b6  f9b60054          LDRSH    r0,[r6,#0x54]  ; bat
0018ba  f7fffffe          BL       abs
0018be  f8a80002          STRH     r0,[r8,#2]
;;;1676   		ibat_ips=abs(Ib_ips_termokompensat);
0018c2  f9ba0000          LDRSH    r0,[r10,#0]  ; Ib_ips_termokompensat
0018c6  f7fffffe          BL       abs
0018ca  f8ab0052          STRH     r0,[r11,#0x52]
                  |L1.6350|
;;;1677   		}
;;;1678   	
;;;1679   	if(kb_cnt_1lev==0)
0018ce  48c2              LDR      r0,|L1.7128|
0018d0  3888              SUBS     r0,r0,#0x88
0018d2  f8b0004c          LDRH     r0,[r0,#0x4c]  ; kb_cnt_1lev
0018d6  2800              CMP      r0,#0
0018d8  d158              BNE      |L1.6540|
;;;1680   		{
;;;1681   		ibat_[0]=abs(bat[0]._Ib);
0018da  f9b60008          LDRSH    r0,[r6,#8]  ; bat
0018de  f7fffffe          BL       abs
0018e2  f8dfb2f4          LDR      r11,|L1.7128|
0018e6  f10b0b04          ADD      r11,r11,#4
0018ea  f8ab0000          STRH     r0,[r11,#0]
;;;1682   		ibat_[1]=abs(bat[1]._Ib);
0018ee  f9b60054          LDRSH    r0,[r6,#0x54]  ; bat
0018f2  f7fffffe          BL       abs
0018f6  f8ab0002          STRH     r0,[r11,#2]
;;;1683   		ibat_ips_=abs(Ib_ips_termokompensat);
0018fa  f9ba0000          LDRSH    r0,[r10,#0]  ; Ib_ips_termokompensat
0018fe  f7fffffe          BL       abs
001902  f1ab0a8c          SUB      r10,r11,#0x8c
001906  f8aa0054          STRH     r0,[r10,#0x54]
;;;1684   
;;;1685   		kb_cnt_2lev=0;
00190a  f8aa504e          STRH     r5,[r10,#0x4e]
;;;1686   
;;;1687   
;;;1688   		if(( (ibat[0]+ibat_[0]) < IKB )&& (kb_start[0]==1))
00190e  f9b80000          LDRSH    r0,[r8,#0]  ; ibat
001912  f9bb1000          LDRSH    r1,[r11,#0]  ; ibat_
001916  4408              ADD      r0,r0,r1
001918  f9b91000          LDRSH    r1,[r9,#0]  ; IKB
00191c  4288              CMP      r0,r1
00191e  da02              BGE      |L1.6438|
001920  7820              LDRB     r0,[r4,#0]  ; kb_start
001922  2801              CMP      r0,#1
001924  d034              BEQ      |L1.6544|
                  |L1.6438|
;;;1689   			{
;;;1690   			kb_cnt_2lev=10;  
;;;1691   			}
;;;1692   		else if(bat[0]._Ub>200)
001926  f9b60002          LDRSH    r0,[r6,#2]  ; bat
00192a  28c8              CMP      r0,#0xc8
00192c  dd04              BLE      |L1.6456|
;;;1693   			{
;;;1694   			kb_start[0]=0;
00192e  7025              STRB     r5,[r4,#0]
;;;1695   			avar_bat_hndl(0,0);
001930  2100              MOVS     r1,#0
001932  4608              MOV      r0,r1
001934  f7fffffe          BL       avar_bat_hndl
                  |L1.6456|
;;;1696   			}
;;;1697   		
;;;1698   		if(( (ibat[1]+ibat_[1]) < IKB ) && (kb_start[1]==1))
001938  f9b80002          LDRSH    r0,[r8,#2]  ; ibat
00193c  f9bb1002          LDRSH    r1,[r11,#2]  ; ibat_
001940  4408              ADD      r0,r0,r1
001942  f9b91000          LDRSH    r1,[r9,#0]  ; IKB
001946  4288              CMP      r0,r1
001948  da02              BGE      |L1.6480|
00194a  7860              LDRB     r0,[r4,#1]  ; kb_start
00194c  2801              CMP      r0,#1
00194e  d022              BEQ      |L1.6550|
                  |L1.6480|
;;;1699   			{
;;;1700   			kb_cnt_2lev=10;     
;;;1701   			}
;;;1702   		else  if(bat[1]._Ub>200)
001950  f9b6004e          LDRSH    r0,[r6,#0x4e]  ; bat
001954  28c8              CMP      r0,#0xc8
001956  dd04              BLE      |L1.6498|
;;;1703   			{
;;;1704   			kb_start[1]=0;
001958  7065              STRB     r5,[r4,#1]
;;;1705   			avar_bat_hndl(1,0);
00195a  2100              MOVS     r1,#0
00195c  2001              MOVS     r0,#1
00195e  f7fffffe          BL       avar_bat_hndl
                  |L1.6498|
;;;1706   			}
;;;1707   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;1708   		if(( (ibat_ips+ibat_ips_) < IKB ) && (kb_start_ips==1))
001962  f9ba0052          LDRSH    r0,[r10,#0x52]  ; ibat_ips
001966  f9ba1054          LDRSH    r1,[r10,#0x54]  ; ibat_ips_
00196a  e000              B        |L1.6510|
                  |L1.6508|
00196c  e01c              B        |L1.6568|
                  |L1.6510|
00196e  4408              ADD      r0,r0,r1
001970  f9b91000          LDRSH    r1,[r9,#0]  ; IKB
001974  4288              CMP      r0,r1
001976  da09              BGE      |L1.6540|
001978  f89a0012          LDRB     r0,[r10,#0x12]  ; kb_start_ips
00197c  2801              CMP      r0,#1
00197e  d105              BNE      |L1.6540|
;;;1709   			{
;;;1710   			if(KB_ALGORITM==1)
001980  4896              LDR      r0,|L1.7132|
001982  8800              LDRH     r0,[r0,#0]  ; KB_ALGORITM
001984  2801              CMP      r0,#1
001986  d009              BEQ      |L1.6556|
;;;1711   				{
;;;1712   				avar_bat_ips_hndl(1);
;;;1713   				kb_start_ips=0;
;;;1714   				}
;;;1715   			else
;;;1716   				{
;;;1717   				kb_cnt_2lev=10;     
001988  f8aa704e          STRH     r7,[r10,#0x4e]
                  |L1.6540|
;;;1718   				}
;;;1719   			}
;;;1720   #endif
;;;1721   		}	
;;;1722   
;;;1723   
;;;1724   	}
;;;1725   else if(kb_cnt_2lev)
;;;1726   	{
;;;1727   	kb_cnt_2lev--;
;;;1728   
;;;1729   	if(kb_cnt_2lev>5)mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_PLUS,200,15);
;;;1730   	else if(kb_cnt_2lev>0) mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_MINUS,200,15);
;;;1731   
;;;1732   
;;;1733   	if(kb_cnt_2lev==5)
;;;1734   		{
;;;1735   		ibat[0]=abs(bat[0]._Ib);
;;;1736   		ibat[1]=abs(bat[1]._Ib);
;;;1737   		ibat_ips=abs(Ib_ips_termokompensat);
;;;1738   		}
;;;1739   	
;;;1740   	if(kb_cnt_2lev==0)
;;;1741   		{
;;;1742   		ibat_[0]=abs(bat[0]._Ib);
;;;1743   		ibat_[1]=abs(bat[1]._Ib);
;;;1744   		ibat_ips_=abs(Ib_ips_termokompensat);
;;;1745   
;;;1746   		kb_full_ver=0;
;;;1747   
;;;1748   		if(( (ibat[0]+ibat_[0]) < IKB ) && (kb_start[0]==1))
;;;1749   			{
;;;1750   			kb_full_ver=1;  
;;;1751   			}
;;;1752   		else if(bat[0]._Ub>200)			
;;;1753   			{
;;;1754   			kb_start[0]=0;
;;;1755   			avar_bat_hndl(0,0);
;;;1756   			}
;;;1757   
;;;1758   		if(( (ibat[1]+ibat_[1]) < IKB ) && (kb_start[1]==1))
;;;1759   			{
;;;1760   			kb_full_ver=1;     
;;;1761   			}
;;;1762   		else	if(bat[1]._Ub>200)		
;;;1763   			{
;;;1764   			kb_start[1]=0;
;;;1765   			avar_bat_hndl(1,0);
;;;1766   			}
;;;1767   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;1768   		if(( (ibat_ips+ibat_ips_) < IKB )  && (kb_start_ips==1))
;;;1769   			{
;;;1770   			if(KB_ALGORITM==2)
;;;1771   				{
;;;1772   				avar_bat_ips_hndl(1);
;;;1773   				kb_start_ips=0;
;;;1774   				}
;;;1775   			else
;;;1776   				{
;;;1777   				kb_full_ver=1;     
;;;1778   				}
;;;1779   			}
;;;1780   #endif
;;;1781   		}	
;;;1782   	}
;;;1783   
;;;1784   else if(kb_full_ver)
;;;1785   	{
;;;1786   	
;;;1787   	mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_STEP_DOWN,0,15);
;;;1788   
;;;1789   	if( abs(bat[0]._Ib) > IKB ) 
;;;1790   		{
;;;1791   		if(kb_start[0]==1)
;;;1792   			{
;;;1793   			kb_start[0]=0;
;;;1794   			avar_bat_hndl(0,0);
;;;1795   			}
;;;1796   		}
;;;1797   
;;;1798   	if( abs(bat[1]._Ib) > IKB ) 
;;;1799   		{
;;;1800   		if(kb_start[1]==1)
;;;1801   			{
;;;1802   			kb_start[1]=0;
;;;1803   			avar_bat_hndl(1,0);
;;;1804   			}
;;;1805   		}
;;;1806   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;1807   	if( abs(Ib_ips_termokompensat) > IKB ) 
;;;1808   		{
;;;1809   		if(kb_start_ips==1)
;;;1810   			{
;;;1811   			kb_start_ips=0;
;;;1812   			avar_bat_ips_hndl(0);
;;;1813   			}
;;;1814   		}
;;;1815   #endif
;;;1816   
;;;1817   	if ((kb_start[0]==0) && (kb_start[1]==0) && (kb_start_ips==0)) 
;;;1818   		{
;;;1819   		kb_full_ver=0;
;;;1820   		}
;;;1821   
;;;1822   	if(( (mess_find(MESS2KB_HNDL))	&& (mess_data[0]==PARAM_CNTRL_IS_DOWN) ) || (load_U<(USIGN*10)) )
;;;1823   		{
;;;1824   		kb_full_ver=0;
;;;1825   		if((kb_start[0]==1)&&((load_I>(2*IKB)/10))&&(!(bat[0]._av&0x01))) avar_bat_hndl(0,1);
;;;1826   		if((kb_start[1]==1)&&((load_I>(2*IKB)/10))&&(!(bat[1]._av&0x01))) avar_bat_hndl(1,1);
;;;1827   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;1828   		if((kb_start_ips==1)&&((load_I>(2*IKB)/10))&&(!(bat_ips._av&0x01))) avar_bat_ips_hndl(1);
;;;1829   #endif
;;;1830   		}
;;;1831   	}
;;;1832   
;;;1833   }
00198c  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.6544|
001990  f8aa704e          STRH     r7,[r10,#0x4e]        ;1690
001994  e7d0              B        |L1.6456|
                  |L1.6550|
001996  f8aa704e          STRH     r7,[r10,#0x4e]        ;1700
00199a  e7e2              B        |L1.6498|
                  |L1.6556|
00199c  2001              MOVS     r0,#1                 ;1712
00199e  f7fffffe          BL       avar_bat_ips_hndl
0019a2  f88a5012          STRB     r5,[r10,#0x12]        ;1713
                  |L1.6566|
0019a6  e7f1              B        |L1.6540|
                  |L1.6568|
0019a8  f9b1004e          LDRSH    r0,[r1,#0x4e]         ;1725  ; kb_cnt_2lev
0019ac  b3f0              CBZ      r0,|L1.6700|
0019ae  f1a00001          SUB      r0,r0,#1              ;1727
0019b2  b200              SXTH     r0,r0                 ;1727
0019b4  460f              MOV      r7,r1                 ;1727
0019b6  f8a1004e          STRH     r0,[r1,#0x4e]         ;1727
0019ba  2805              CMP      r0,#5                 ;1729
0019bc  dd06              BLE      |L1.6604|
0019be  230f              MOVS     r3,#0xf               ;1729
0019c0  22c8              MOVS     r2,#0xc8              ;1729
0019c2  2164              MOVS     r1,#0x64              ;1729
0019c4  20e1              MOVS     r0,#0xe1              ;1729
0019c6  f7fffffe          BL       mess_send
0019ca  e007              B        |L1.6620|
                  |L1.6604|
0019cc  2800              CMP      r0,#0                 ;1730
0019ce  dd05              BLE      |L1.6620|
0019d0  230f              MOVS     r3,#0xf               ;1730
0019d2  22c8              MOVS     r2,#0xc8              ;1730
0019d4  2169              MOVS     r1,#0x69              ;1730
0019d6  20e1              MOVS     r0,#0xe1              ;1730
0019d8  f7fffffe          BL       mess_send
                  |L1.6620|
0019dc  f8b7004e          LDRH     r0,[r7,#0x4e]         ;1733  ; kb_cnt_2lev
0019e0  2805              CMP      r0,#5                 ;1733
0019e2  d111              BNE      |L1.6664|
0019e4  f9b60008          LDRSH    r0,[r6,#8]            ;1735  ; bat
0019e8  f7fffffe          BL       abs
0019ec  f8a80000          STRH     r0,[r8,#0]            ;1735
0019f0  f9b60054          LDRSH    r0,[r6,#0x54]         ;1736  ; bat
0019f4  f7fffffe          BL       abs
0019f8  f8a80002          STRH     r0,[r8,#2]            ;1736
0019fc  f9ba0000          LDRSH    r0,[r10,#0]           ;1737  ; Ib_ips_termokompensat
001a00  f7fffffe          BL       abs
001a04  f8a70052          STRH     r0,[r7,#0x52]         ;1737
                  |L1.6664|
001a08  4873              LDR      r0,|L1.7128|
001a0a  3888              SUBS     r0,r0,#0x88           ;1740
001a0c  f8b0004e          LDRH     r0,[r0,#0x4e]         ;1740  ; kb_cnt_2lev
001a10  2800              CMP      r0,#0                 ;1740
                  |L1.6674|
001a12  d1bb              BNE      |L1.6540|
001a14  f9b60008          LDRSH    r0,[r6,#8]            ;1742  ; bat
001a18  f7fffffe          BL       abs
001a1c  4f6e              LDR      r7,|L1.7128|
001a1e  1d3f              ADDS     r7,r7,#4              ;1742
001a20  8038              STRH     r0,[r7,#0]            ;1742
001a22  f9b60054          LDRSH    r0,[r6,#0x54]         ;1743  ; bat
001a26  f7fffffe          BL       abs
001a2a  e000              B        |L1.6702|
                  |L1.6700|
001a2c  e055              B        |L1.6874|
                  |L1.6702|
001a2e  8078              STRH     r0,[r7,#2]            ;1743
001a30  f9ba0000          LDRSH    r0,[r10,#0]           ;1744  ; Ib_ips_termokompensat
001a34  f7fffffe          BL       abs
001a38  f1a70a8c          SUB      r10,r7,#0x8c          ;1744
001a3c  f8aa0054          STRH     r0,[r10,#0x54]        ;1744
001a40  f88a5011          STRB     r5,[r10,#0x11]        ;1746
001a44  f9b80000          LDRSH    r0,[r8,#0]            ;1748  ; ibat
001a48  f9b71000          LDRSH    r1,[r7,#0]            ;1748  ; ibat_
001a4c  4408              ADD      r0,r0,r1              ;1748
001a4e  f9b91000          LDRSH    r1,[r9,#0]            ;1748  ; IKB
001a52  4288              CMP      r0,r1                 ;1748
001a54  da02              BGE      |L1.6748|
001a56  7820              LDRB     r0,[r4,#0]            ;1748  ; kb_start
001a58  2801              CMP      r0,#1                 ;1748
001a5a  d032              BEQ      |L1.6850|
                  |L1.6748|
001a5c  f9b60002          LDRSH    r0,[r6,#2]            ;1752  ; bat
001a60  28c8              CMP      r0,#0xc8              ;1752
001a62  dd04              BLE      |L1.6766|
001a64  7025              STRB     r5,[r4,#0]            ;1754
001a66  2100              MOVS     r1,#0                 ;1755
001a68  4608              MOV      r0,r1                 ;1755
001a6a  f7fffffe          BL       avar_bat_hndl
                  |L1.6766|
001a6e  f9b80002          LDRSH    r0,[r8,#2]            ;1758  ; ibat
001a72  f9b71002          LDRSH    r1,[r7,#2]            ;1758  ; ibat_
001a76  4408              ADD      r0,r0,r1              ;1758
001a78  f9b91000          LDRSH    r1,[r9,#0]            ;1758  ; IKB
001a7c  4288              CMP      r0,r1                 ;1758
001a7e  da02              BGE      |L1.6790|
001a80  7860              LDRB     r0,[r4,#1]            ;1758  ; kb_start
001a82  2801              CMP      r0,#1                 ;1758
001a84  d020              BEQ      |L1.6856|
                  |L1.6790|
001a86  f9b6004e          LDRSH    r0,[r6,#0x4e]         ;1762  ; bat
001a8a  28c8              CMP      r0,#0xc8              ;1762
001a8c  dd04              BLE      |L1.6808|
001a8e  7065              STRB     r5,[r4,#1]            ;1764
001a90  2100              MOVS     r1,#0                 ;1765
001a92  2001              MOVS     r0,#1                 ;1765
001a94  f7fffffe          BL       avar_bat_hndl
                  |L1.6808|
001a98  f9ba0052          LDRSH    r0,[r10,#0x52]        ;1768  ; ibat_ips
001a9c  f9ba1054          LDRSH    r1,[r10,#0x54]        ;1768  ; ibat_ips_
001aa0  4408              ADD      r0,r0,r1              ;1768
001aa2  f9b91000          LDRSH    r1,[r9,#0]            ;1768  ; IKB
001aa6  4288              CMP      r0,r1                 ;1768
001aa8  f6bfaf7d          BGE      |L1.6566|
001aac  f89a0012          LDRB     r0,[r10,#0x12]        ;1768  ; kb_start_ips
001ab0  2801              CMP      r0,#1                 ;1768
001ab2  d1ae              BNE      |L1.6674|
001ab4  4849              LDR      r0,|L1.7132|
001ab6  8800              LDRH     r0,[r0,#0]            ;1770  ; KB_ALGORITM
001ab8  2802              CMP      r0,#2                 ;1770
001aba  d008              BEQ      |L1.6862|
001abc  f88ab011          STRB     r11,[r10,#0x11]       ;1777
                  |L1.6848|
001ac0  e764              B        |L1.6540|
                  |L1.6850|
001ac2  f88ab011          STRB     r11,[r10,#0x11]       ;1750
001ac6  e7d2              B        |L1.6766|
                  |L1.6856|
001ac8  f88ab011          STRB     r11,[r10,#0x11]       ;1760
001acc  e7e4              B        |L1.6808|
                  |L1.6862|
001ace  2001              MOVS     r0,#1                 ;1772
001ad0  f7fffffe          BL       avar_bat_ips_hndl
001ad4  f88a5012          STRB     r5,[r10,#0x12]        ;1773
001ad8  e758              B        |L1.6540|
                  |L1.6874|
001ada  7c48              LDRB     r0,[r1,#0x11]         ;1784  ; kb_full_ver
001adc  4688              MOV      r8,r1                 ;1784
001ade  2800              CMP      r0,#0                 ;1784
001ae0  d0ee              BEQ      |L1.6848|
001ae2  230f              MOVS     r3,#0xf               ;1787
001ae4  2200              MOVS     r2,#0                 ;1787
001ae6  216e              MOVS     r1,#0x6e              ;1787
001ae8  20e1              MOVS     r0,#0xe1              ;1787
001aea  f7fffffe          BL       mess_send
001aee  f9b60008          LDRSH    r0,[r6,#8]            ;1789  ; bat
001af2  f7fffffe          BL       abs
001af6  f9b91000          LDRSH    r1,[r9,#0]            ;1789  ; IKB
001afa  4288              CMP      r0,r1                 ;1789
001afc  dd07              BLE      |L1.6926|
001afe  7820              LDRB     r0,[r4,#0]            ;1791  ; kb_start
001b00  2801              CMP      r0,#1                 ;1791
001b02  d104              BNE      |L1.6926|
001b04  7025              STRB     r5,[r4,#0]            ;1793
001b06  2100              MOVS     r1,#0                 ;1794
001b08  4608              MOV      r0,r1                 ;1794
001b0a  f7fffffe          BL       avar_bat_hndl
                  |L1.6926|
001b0e  f9b60054          LDRSH    r0,[r6,#0x54]         ;1798  ; bat
001b12  f7fffffe          BL       abs
001b16  f9b91000          LDRSH    r1,[r9,#0]            ;1798  ; IKB
001b1a  4288              CMP      r0,r1                 ;1798
001b1c  dd06              BLE      |L1.6956|
001b1e  7860              LDRB     r0,[r4,#1]            ;1800  ; kb_start
001b20  2801              CMP      r0,#1                 ;1800
001b22  d103              BNE      |L1.6956|
001b24  7065              STRB     r5,[r4,#1]            ;1802
001b26  2100              MOVS     r1,#0                 ;1803
001b28  f7fffffe          BL       avar_bat_hndl
                  |L1.6956|
001b2c  f9ba0000          LDRSH    r0,[r10,#0]           ;1807  ; Ib_ips_termokompensat
001b30  f7fffffe          BL       abs
001b34  f9b91000          LDRSH    r1,[r9,#0]            ;1807  ; IKB
001b38  4288              CMP      r0,r1                 ;1807
001b3a  dd08              BLE      |L1.6990|
001b3c  f8980012          LDRB     r0,[r8,#0x12]         ;1809  ; kb_start_ips
001b40  2801              CMP      r0,#1                 ;1809
001b42  d104              BNE      |L1.6990|
001b44  f8885012          STRB     r5,[r8,#0x12]         ;1811
001b48  2000              MOVS     r0,#0                 ;1812
001b4a  f7fffffe          BL       avar_bat_ips_hndl
                  |L1.6990|
001b4e  7820              LDRB     r0,[r4,#0]            ;1817  ; kb_start
001b50  b930              CBNZ     r0,|L1.7008|
001b52  7860              LDRB     r0,[r4,#1]            ;1817  ; kb_start
001b54  b920              CBNZ     r0,|L1.7008|
001b56  f8980012          LDRB     r0,[r8,#0x12]         ;1817  ; kb_start_ips
001b5a  b908              CBNZ     r0,|L1.7008|
001b5c  f8885011          STRB     r5,[r8,#0x11]         ;1819
                  |L1.7008|
001b60  20e6              MOVS     r0,#0xe6              ;1822
001b62  f7fffffe          BL       mess_find
001b66  b118              CBZ      r0,|L1.7024|
001b68  481d              LDR      r0,|L1.7136|
001b6a  6800              LDR      r0,[r0,#0]            ;1822  ; mess_data
001b6c  28e7              CMP      r0,#0xe7              ;1822
001b6e  d00a              BEQ      |L1.7046|
                  |L1.7024|
001b70  481c              LDR      r0,|L1.7140|
001b72  491d              LDR      r1,|L1.7144|
001b74  f9b00000          LDRSH    r0,[r0,#0]            ;1822  ; USIGN
001b78  f9b11000          LDRSH    r1,[r1,#0]            ;1822  ; load_U
001b7c  eb000080          ADD      r0,r0,r0,LSL #2       ;1822
001b80  ebb10f40          CMP      r1,r0,LSL #1          ;1822
                  |L1.7044|
001b84  da9c              BGE      |L1.6848|
                  |L1.7046|
001b86  f8885011          STRB     r5,[r8,#0x11]         ;1824
001b8a  7820              LDRB     r0,[r4,#0]            ;1825  ; kb_start
001b8c  4d17              LDR      r5,|L1.7148|
001b8e  2801              CMP      r0,#1                 ;1825
001b90  d10f              BNE      |L1.7090|
001b92  f9b90000          LDRSH    r0,[r9,#0]            ;1825  ; IKB
001b96  0040              LSLS     r0,r0,#1              ;1825
001b98  fb90f1f7          SDIV     r1,r0,r7              ;1825
001b9c  f9b50000          LDRSH    r0,[r5,#0]            ;1825  ; load_I
001ba0  4281              CMP      r1,r0                 ;1825
001ba2  da06              BGE      |L1.7090|
001ba4  f896003d          LDRB     r0,[r6,#0x3d]         ;1825  ; bat
001ba8  07c0              LSLS     r0,r0,#31             ;1825
001baa  d102              BNE      |L1.7090|
001bac  2101              MOVS     r1,#1                 ;1825
001bae  f7fffffe          BL       avar_bat_hndl
                  |L1.7090|
001bb2  7860              LDRB     r0,[r4,#1]            ;1826  ; kb_start
001bb4  2801              CMP      r0,#1                 ;1826
001bb6  d127              BNE      |L1.7176|
001bb8  f9b90000          LDRSH    r0,[r9,#0]            ;1826  ; IKB
001bbc  0040              LSLS     r0,r0,#1              ;1826
001bbe  fb90f0f7          SDIV     r0,r0,r7              ;1826
001bc2  e015              B        |L1.7152|
                  |L1.7108|
                          DCD      BAT_IS_ON
                  |L1.7112|
                          DCD      ips_bat_av_vzvod
                  |L1.7116|
                          DCD      bat_ips
                  |L1.7120|
                          DCD      net_av
                  |L1.7124|
                          DCD      sp_ch_stat
                  |L1.7128|
                          DCD      ||area_number.25||+0x88
                  |L1.7132|
                          DCD      KB_ALGORITM
                  |L1.7136|
                          DCD      mess_data
                  |L1.7140|
                          DCD      USIGN
                  |L1.7144|
                          DCD      load_U
                  |L1.7148|
                          DCD      load_I
                  |L1.7152|
001bf0  f9b51000          LDRSH    r1,[r5,#0]            ;1826  ; load_I
001bf4  4288              CMP      r0,r1                 ;1826
001bf6  da07              BGE      |L1.7176|
001bf8  f8960089          LDRB     r0,[r6,#0x89]         ;1826  ; bat
001bfc  07c0              LSLS     r0,r0,#31             ;1826
001bfe  d103              BNE      |L1.7176|
001c00  2101              MOVS     r1,#1                 ;1826
001c02  4608              MOV      r0,r1                 ;1826
001c04  f7fffffe          BL       avar_bat_hndl
                  |L1.7176|
001c08  f8980012          LDRB     r0,[r8,#0x12]         ;1828  ; kb_start_ips
001c0c  2801              CMP      r0,#1                 ;1828
                  |L1.7182|
001c0e  f47faeca          BNE      |L1.6566|
001c12  f9b90000          LDRSH    r0,[r9,#0]            ;1828  ; IKB
001c16  f9b51000          LDRSH    r1,[r5,#0]            ;1828  ; load_I
001c1a  0040              LSLS     r0,r0,#1              ;1828
001c1c  fb90f0f7          SDIV     r0,r0,r7              ;1828
001c20  4288              CMP      r0,r1                 ;1828
001c22  daaf              BGE      |L1.7044|
001c24  48ff              LDR      r0,|L1.8228|
001c26  f890003d          LDRB     r0,[r0,#0x3d]         ;1828  ; bat_ips
001c2a  07c0              LSLS     r0,r0,#31             ;1828
001c2c  d1ef              BNE      |L1.7182|
001c2e  e8bd5ff0          POP      {r4-r12,lr}           ;1828
001c32  2001              MOVS     r0,#1                 ;1828
001c34  f7ffbffe          B.W      avar_bat_ips_hndl
;;;1834   
                          ENDP

                  samokalibr_hndl PROC
;;;1843   //-----------------------------------------------
;;;1844   void samokalibr_hndl(void)
001c38  4770              BX       lr
;;;1845   {
;;;1846   #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;1847   if(++samokalibr_cnt>=1800)samokalibr_cnt=0;
;;;1848   
;;;1849   if((samokalibr_cnt>=1785U)&&(vz2_stat==vz2sOFF))
;;;1850   	{
;;;1851   	mess_send(MESS2RELE_HNDL,PARAM_RELE_SAMOKALIBR,1,15);
;;;1852   	mess_send(MESS2IND_HNDL,PARAM_SAMOKALIBR,0,15);
;;;1853   	mess_send(MESS2MATEMAT,PARAM_SAMOKALIBR,0,15);
;;;1854   	} 
;;;1855   
;;;1856   if((samokalibr_cnt==1799U)&&(vz2_stat==vz2sOFF))
;;;1857   	{
;;;1858   	if((Kibat0[0]!=ad7705_buff_[0])&&(abs(bat[0]._Ib/10)<IZMAX)) lc640_write_int(ADR_KI0BAT[0],ad7705_buff_[0]);
;;;1859   	if((Kibat0[1]!=ad7705_buff_[1])&&(abs(bat[0]._Ib/10)<IZMAX)) lc640_write_int(ADR_KI0BAT[1],ad7705_buff_[1]);
;;;1860   	
;;;1861   	}
;;;1862   #endif	 	
;;;1863   }
;;;1864   
                          ENDP

                  ubat_old_drv PROC
;;;1867   //-----------------------------------------------
;;;1868   void ubat_old_drv(void)
001c3a  b510              PUSH     {r4,lr}
;;;1869   {        
;;;1870   bat_u_old_cnt++;
001c3c  4cfa              LDR      r4,|L1.8232|
001c3e  8820              LDRH     r0,[r4,#0]  ; bat_u_old_cnt
001c40  f1000001          ADD      r0,r0,#1
001c44  8020              STRH     r0,[r4,#0]
;;;1871   gran_ring(&bat_u_old_cnt,0,8);
001c46  f04f0208          MOV      r2,#8
001c4a  f04f0100          MOV      r1,#0
001c4e  4620              MOV      r0,r4
001c50  f7fffffe          BL       gran_ring
;;;1872   
;;;1873   bat[0]._u_old[bat_u_old_cnt]=bat[0]._Ub;
001c54  49f5              LDR      r1,|L1.8236|
001c56  f9b40000          LDRSH    r0,[r4,#0]  ; bat_u_old_cnt
001c5a  eb010040          ADD      r0,r1,r0,LSL #1
001c5e  884a              LDRH     r2,[r1,#2]  ; bat
001c60  8402              STRH     r2,[r0,#0x20]
;;;1874   bat[1]._u_old[bat_u_old_cnt]=bat[1]._Ub;
001c62  f8b1104e          LDRH     r1,[r1,#0x4e]  ; bat
001c66  f8a0106c          STRH     r1,[r0,#0x6c]
;;;1875   }
001c6a  bd10              POP      {r4,pc}
;;;1876   
                          ENDP

                  unet_drv PROC
;;;1877   //-----------------------------------------------
;;;1878   void unet_drv(void)
001c6c  b570              PUSH     {r4-r6,lr}
;;;1879   {
;;;1880   if(net_U<UMN)
001c6e  4df0              LDR      r5,|L1.8240|
001c70  48f0              LDR      r0,|L1.8244|
;;;1881   	{
;;;1882   	if((unet_drv_cnt<10)&&(main_1Hz_cnt>15))
001c72  4af1              LDR      r2,|L1.8248|
001c74  f9b51000          LDRSH    r1,[r5,#0]            ;1880  ; net_U
001c78  f9b03000          LDRSH    r3,[r0,#0]            ;1880  ; UMN
001c7c  f9920000          LDRSB    r0,[r2,#0]
001c80  4299              CMP      r1,r3                 ;1880
001c82  da1f              BGE      |L1.7364|
;;;1883   		{
;;;1884   		unet_drv_cnt++;
;;;1885   		if(unet_drv_cnt>=10)
;;;1886   			{
;;;1887   			net_Ustore=net_U;
001c84  4ced              LDR      r4,|L1.8252|
001c86  280a              CMP      r0,#0xa               ;1882
001c88  da0f              BGE      |L1.7338|
001c8a  4bed              LDR      r3,|L1.8256|
001c8c  f9b33000          LDRSH    r3,[r3,#0]            ;1882  ; main_1Hz_cnt
001c90  2b0f              CMP      r3,#0xf               ;1882
001c92  dd0a              BLE      |L1.7338|
001c94  f1000001          ADD      r0,r0,#1              ;1884
001c98  b240              SXTB     r0,r0                 ;1884
001c9a  7010              STRB     r0,[r2,#0]            ;1884
001c9c  280a              CMP      r0,#0xa               ;1885
001c9e  db09              BLT      |L1.7348|
001ca0  8021              STRH     r1,[r4,#0]
;;;1888   		 	avar_unet_hndl(1);
001ca2  2001              MOVS     r0,#1
001ca4  f7fffffe          BL       avar_unet_hndl
001ca8  e004              B        |L1.7348|
                  |L1.7338|
;;;1889   			
;;;1890   			}
;;;1891   		}
;;;1892   	else if(unet_drv_cnt>=10)unet_drv_cnt=10;
001caa  280a              CMP      r0,#0xa
001cac  db02              BLT      |L1.7348|
001cae  f04f000a          MOV      r0,#0xa
001cb2  7010              STRB     r0,[r2,#0]
                  |L1.7348|
;;;1893   
;;;1894   	if(net_U<net_Ustore) net_Ustore=net_U;	
001cb4  f9b50000          LDRSH    r0,[r5,#0]  ; net_U
001cb8  f9b41000          LDRSH    r1,[r4,#0]  ; net_Ustore
001cbc  4288              CMP      r0,r1
001cbe  da00              BGE      |L1.7362|
001cc0  8020              STRH     r0,[r4,#0]
                  |L1.7362|
;;;1895   	}
;;;1896   
;;;1897   else if(net_U>UMN)
;;;1898   	{                 
;;;1899   	if(unet_drv_cnt)
;;;1900   		{
;;;1901   		unet_drv_cnt--;
;;;1902   		if(unet_drv_cnt<=0)
;;;1903   			{
;;;1904   			avar_unet_hndl(0);
;;;1905   			}
;;;1906   		}
;;;1907   	else if(unet_drv_cnt<0)unet_drv_cnt=0;
;;;1908   	
;;;1909   	}
;;;1910   
;;;1911   }
001cc2  bd70              POP      {r4-r6,pc}
                  |L1.7364|
001cc4  ddfd              BLE      |L1.7362|
001cc6  2800              CMP      r0,#0                 ;1899
001cc8  d0fb              BEQ      |L1.7362|
001cca  f1a00001          SUB      r0,r0,#1              ;1901
001cce  b240              SXTB     r0,r0                 ;1901
001cd0  7010              STRB     r0,[r2,#0]            ;1901
001cd2  2800              CMP      r0,#0                 ;1902
001cd4  dcf5              BGT      |L1.7362|
001cd6  e8bd4070          POP      {r4-r6,lr}            ;1904
001cda  2000              MOVS     r0,#0                 ;1904
001cdc  f7ffbffe          B.W      avar_unet_hndl
;;;1912   
                          ENDP

                  matemat PROC
;;;1913   //-----------------------------------------------
;;;1914   void matemat(void)
001ce0  e92d5ffc          PUSH     {r2-r12,lr}
;;;1915   {
;;;1916   //signed short temp_SS;
;;;1917   signed long temp_SL/*,temp_SL_*/;
;;;1918   char /*temp,*/i;
;;;1919   //signed short temp_SS;
;;;1920   
;;;1921   #ifdef UKU_MGTS
;;;1922   //напряжение сети
;;;1923   temp_SL=(signed long)net_buff_;
;;;1924   temp_SL*=Kunet;
;;;1925   temp_SL/=110000L;
;;;1926   net_U=(signed short)temp_SL;
;;;1927   #endif
;;;1928   
;;;1929   #ifdef UKU_RSTKM
;;;1930   //напряжение сети
;;;1931   temp_SL=(signed long)net_buff_;
;;;1932   temp_SL*=Kunet;
;;;1933   temp_SL/=110000L;
;;;1934   net_U=(signed short)temp_SL;
;;;1935   #endif
;;;1936   
;;;1937   #ifdef UKU_3U
;;;1938   //напряжение сети
;;;1939   temp_SL=(signed long)net_buff_;
;;;1940   temp_SL*=Kunet;
;;;1941   temp_SL/=36000L;
;;;1942   net_U=(signed short)temp_SL;
;;;1943   #endif
;;;1944   
;;;1945   #ifdef UKU_6U
;;;1946   //напряжение сети
;;;1947   
;;;1948   if((AUSW_MAIN%10)||(AUSW_MAIN==2400)||(AUSW_MAIN==4800)||(AUSW_MAIN==6000))
;;;1949   	{
;;;1950   
;;;1951   	if(bps[11]._device==dNET_METR)
;;;1952   		{
;;;1953   		net_metr_buff_[0]=((signed short)bps[11]._buff[0])+(((signed short)bps[11]._buff[1])<<8);
;;;1954   		net_metr_buff_[1]=((signed short)bps[11]._buff[2])+(((signed short)bps[11]._buff[3])<<8);
;;;1955   		net_metr_buff_[2]=((signed short)bps[11]._buff[4])+(((signed short)bps[11]._buff[5])<<8);
;;;1956   
;;;1957   		temp_SL=(signed long)net_metr_buff_[0];
;;;1958   		temp_SL*=KunetA;
;;;1959   		temp_SL/=6000L;
;;;1960   		net_Ua=(signed short)temp_SL;
;;;1961   	
;;;1962   		temp_SL=(signed long)net_metr_buff_[1];
;;;1963   		temp_SL*=KunetB;
;;;1964   		temp_SL/=6000L;
;;;1965   		net_Ub=(signed short)temp_SL;
;;;1966   	
;;;1967   		temp_SL=(signed long)net_metr_buff_[2];
;;;1968   		temp_SL*=KunetC;
;;;1969   		temp_SL/=6000L;
;;;1970   		net_Uc=(signed short)temp_SL;
;;;1971   		}
;;;1972   	else
;;;1973   		{
;;;1974   		temp_SL=(signed long)net_buff_;
;;;1975   		temp_SL*=KunetA;
;;;1976   		temp_SL/=110000L;
;;;1977   		net_Ua=(signed short)temp_SL;
;;;1978   	
;;;1979   		temp_SL=(signed long)adc_buff_[3];
;;;1980   		temp_SL*=KunetB;
;;;1981   		temp_SL/=6000L;
;;;1982   		net_Ub=(signed short)temp_SL;
;;;1983   	
;;;1984   		temp_SL=(signed long)adc_buff_[10];
;;;1985   		temp_SL*=KunetC;
;;;1986   		temp_SL/=6000L;
;;;1987   		net_Uc=(signed short)temp_SL;
;;;1988   		}
;;;1989   
;;;1990   	net_U=net_Ua;
;;;1991   	if(net_Ub<net_U)net_U=net_Ub;
;;;1992   	if(net_Uc<net_U)net_U=net_Uc;
;;;1993   	}
;;;1994   else 
;;;1995   	{
;;;1996   	temp_SL=(signed long)net_buff_;
;;;1997   	temp_SL*=Kunet;
;;;1998   	temp_SL/=110000L;
;;;1999   	net_U=(signed short)temp_SL;
;;;2000   	}
;;;2001   
;;;2002   
;;;2003   
;;;2004   
;;;2005   #endif
;;;2006   
;;;2007   #ifdef UKU_GLONASS
;;;2008   //напряжение сети
;;;2009   temp_SL=(signed long)net_buff_;
;;;2010   temp_SL*=Kunet;
;;;2011   temp_SL/=110000L;
;;;2012   net_U=(signed short)temp_SL;
;;;2013   #endif
;;;2014   
;;;2015   #ifdef UKU_KONTUR
;;;2016   //напряжение сети
;;;2017   temp_SL=(signed long)net_buff_;
;;;2018   temp_SL*=Kunet;
;;;2019   temp_SL/=110000L;
;;;2020   net_U=(signed short)temp_SL;
;;;2021   #endif
;;;2022   
;;;2023   #ifdef IPS_SGEP_GAZPROM
;;;2024   //напряжение сети
;;;2025   temp_SL=(signed long)net_buff_;
;;;2026   temp_SL*=Kunet;
;;;2027   temp_SL/=110000L;
;;;2028   net_U=(signed short)temp_SL;
;;;2029   #endif
;;;2030   
;;;2031   #ifdef UKU_220_V2
;;;2032   //напряжение сети
;;;2033   
;;;2034   if(AUSW_MAIN==22033)
;;;2035   	{
;;;2036   	temp_SL=(signed long)net_buff_;
;;;2037   	temp_SL*=KunetA;
;;;2038   	temp_SL/=6000L;
;;;2039   	net_Ua=(signed short)temp_SL;
;;;2040   
;;;2041   	temp_SL=(signed long)adc_buff_[3];
;;;2042   	temp_SL*=KunetB;
;;;2043   	temp_SL/=6000L;
;;;2044   	net_Ub=(signed short)temp_SL;
;;;2045   
;;;2046   	temp_SL=(signed long)adc_buff_[10];
;;;2047   	temp_SL*=KunetC;
;;;2048   	temp_SL/=6000L;
;;;2049   	net_Uc=(signed short)temp_SL;
;;;2050   
;;;2051   	net_U=net_Ua;
;;;2052   	if(net_Ub<net_U)net_U=net_Ub;
;;;2053   	if(net_Uc<net_U)net_U=net_Uc;
;;;2054   	}
;;;2055   else
;;;2056   	{
;;;2057   	temp_SL=(signed long)net_buff_;
;;;2058   	temp_SL*=Kunet;
;;;2059   	temp_SL/=5000L;
;;;2060   	net_U=(signed short)temp_SL;
;;;2061   	}
;;;2062   #endif
;;;2063   
;;;2064   
;;;2065   #ifdef UKU_220
;;;2066   //напряжение сети
;;;2067   
;;;2068   if(AUSW_MAIN==22035)
;;;2069   	{
;;;2070   	temp_SL=(signed long)net_buff_;
;;;2071   	temp_SL*=KunetA;
;;;2072   	temp_SL/=6000L;
;;;2073   	net_Ua=(signed short)temp_SL;
;;;2074   
;;;2075   	temp_SL=(signed long)adc_buff_[3];
;;;2076   	temp_SL*=KunetB;
;;;2077   	temp_SL/=6000L;
;;;2078   	net_Ub=(signed short)temp_SL;
;;;2079   
;;;2080   	temp_SL=(signed long)adc_buff_[10];
;;;2081   	temp_SL*=KunetC;
;;;2082   	temp_SL/=6000L;
;;;2083   	net_Uc=(signed short)temp_SL;
;;;2084   
;;;2085   	net_U=net_Ua;
;;;2086   	if(net_Ub<net_U)net_U=net_Ub;
;;;2087   	if(net_Uc<net_U)net_U=net_Uc;
;;;2088   	}
;;;2089   else
;;;2090   	{
;;;2091   	temp_SL=(signed long)net_buff_;
;;;2092   	temp_SL*=Kunet;
;;;2093   	#ifdef _ACDC_
;;;2094   	temp_SL/=500L;
;;;2095   	#else
;;;2096   	temp_SL/=5000L;
;;;2097   	#endif
;;;2098   	net_U=(signed short)temp_SL;
;;;2099   	
;;;2100   	}
;;;2101   #endif
;;;2102   
;;;2103   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;2104   //напряжение сети
;;;2105   
;;;2106   
;;;2107   	if(bps[11]._device==dNET_METR)
001ce4  48d7              LDR      r0,|L1.8260|
;;;2108   		{
;;;2109   		net_metr_buff_[0]=((signed short)bps[11]._buff[0])+(((signed short)bps[11]._buff[1])<<8);
;;;2110   		net_metr_buff_[1]=((signed short)bps[11]._buff[2])+(((signed short)bps[11]._buff[3])<<8);
;;;2111   		net_metr_buff_[2]=((signed short)bps[11]._buff[4])+(((signed short)bps[11]._buff[5])<<8);
;;;2112   
;;;2113   		temp_SL=(signed long)net_metr_buff_[2];
;;;2114   		temp_SL*=KunetA;
001ce6  4bd8              LDR      r3,|L1.8264|
;;;2115   		temp_SL/=6000L;
;;;2116   		net_Ua=(signed short)temp_SL;
;;;2117   	
;;;2118   		temp_SL=(signed long)net_metr_buff_[1];
;;;2119   		temp_SL*=KunetB;
001ce8  4ad9              LDR      r2,|L1.8272|
001cea  f89003f4          LDRB     r0,[r0,#0x3f4]        ;2107  ; bps
;;;2120   		temp_SL/=6000L;
;;;2121   		net_Ub=(signed short)temp_SL;
;;;2122   	
;;;2123   		temp_SL=(signed long)net_metr_buff_[0];
;;;2124   		temp_SL*=KunetC;
001cee  49d9              LDR      r1,|L1.8276|
001cf0  9001              STR      r0,[sp,#4]            ;2114
001cf2  f8dfc358          LDR      r12,|L1.8268|
001cf6  f9b39000          LDRSH    r9,[r3,#0]            ;2114
001cfa  f9b2b000          LDRSH    r11,[r2,#0]           ;2119
001cfe  f9b1a000          LDRSH    r10,[r1,#0]
001d02  4dd5              LDR      r5,|L1.8280|
;;;2125   		temp_SL/=6000L;
;;;2126   		net_Uc=(signed short)temp_SL;
001d04  4cd5              LDR      r4,|L1.8284|
;;;2127   
;;;2128   		net_F3=((signed short)bps[11]._buff[6])+(((signed short)bps[11]._buff[7])<<8);
;;;2129   
;;;2130   		net_U=net_Ua;
;;;2131   		if(net_Ub<net_U)net_U=net_Ub;
;;;2132   		if(net_Uc<net_U)net_U=net_Uc;
;;;2133   		}
;;;2134   	  else if(AUSW_MAIN==22033)
;;;2135   	{
;;;2136   	temp_SL=(signed long)net_buff_;
001d06  4fd6              LDR      r7,|L1.8288|
001d08  f2456611          MOV      r6,#0x5611            ;2134
001d0c  2807              CMP      r0,#7                 ;2107
001d0e  d036              BEQ      |L1.7550|
001d10  4639              MOV      r1,r7
001d12  f8df833c          LDR      r8,|L1.8272|
001d16  8e4a              LDRH     r2,[r1,#0x32]
001d18  4619              MOV      r1,r3                 ;2114
;;;2137   	temp_SL*=KunetA;
;;;2138   	temp_SL/=4000L;
;;;2139   	net_Ua=(signed short)temp_SL;
;;;2140   
;;;2141   	temp_SL=(signed long)adc_buff_[3];
001d1a  4bd3              LDR      r3,|L1.8296|
001d1c  f9b11000          LDRSH    r1,[r1,#0]            ;2114
001d20  f9b88000          LDRSH    r8,[r8,#0]            ;2119
001d24  434a              MULS     r2,r1,r2              ;2137
001d26  f9b31006          LDRSH    r1,[r3,#6]
001d2a  f8df9328          LDR      r9,|L1.8276|
;;;2142   	temp_SL*=KunetB;
001d2e  fb01f108          MUL      r1,r1,r8
001d32  f2417870          MOV      r8,#0x1770            ;2115
;;;2143   	temp_SL/=6000L;
;;;2144   	net_Ub=(signed short)temp_SL;
;;;2145   
;;;2146   	temp_SL=(signed long)adc_buff_[10];
001d36  f9b33014          LDRSH    r3,[r3,#0x14]
001d3a  f9b99000          LDRSH    r9,[r9,#0]            ;2124
001d3e  fb91f1f8          SDIV     r1,r1,r8              ;2143
;;;2147   	temp_SL*=KunetC;
001d42  fb03f309          MUL      r3,r3,r9
;;;2148   	temp_SL/=6000L;
001d46  fb93f3f8          SDIV     r3,r3,r8
001d4a  48c6              LDR      r0,|L1.8292|
001d4c  b209              SXTH     r1,r1                 ;2144
;;;2149   	net_Uc=(signed short)temp_SL;
001d4e  b21b              SXTH     r3,r3
001d50  8800              LDRH     r0,[r0,#0]            ;2134  ; AUSW_MAIN
001d52  42b0              CMP      r0,r6                 ;2134
001d54  d154              BNE      |L1.7680|
001d56  f44f607a          MOV      r0,#0xfa0             ;2138
001d5a  fb92f0f0          SDIV     r0,r2,r0              ;2138
001d5e  b200              SXTH     r0,r0                 ;2139
001d60  f8ac0000          STRH     r0,[r12,#0]           ;2139
001d64  8029              STRH     r1,[r5,#0]            ;2144
001d66  8023              STRH     r3,[r4,#0]
;;;2150   
;;;2151   	net_U=net_Ua;
001d68  4ab1              LDR      r2,|L1.8240|
001d6a  8010              STRH     r0,[r2,#0]
;;;2152   	if(net_Ub<net_U)net_U=net_Ub;
001d6c  4281              CMP      r1,r0
001d6e  da00              BGE      |L1.7538|
001d70  8011              STRH     r1,[r2,#0]
                  |L1.7538|
;;;2153   	if(net_Uc<net_U)net_U=net_Uc;
001d72  f9b20000          LDRSH    r0,[r2,#0]  ; net_U
001d76  4283              CMP      r3,r0
001d78  da00              BGE      |L1.7548|
001d7a  8013              STRH     r3,[r2,#0]
                  |L1.7548|
001d7c  e07e              B        |L1.7804|
                  |L1.7550|
001d7e  48bb              LDR      r0,|L1.8300|
001d80  4bb7              LDR      r3,|L1.8288|
001d82  7801              LDRB     r1,[r0,#0]            ;2109  ; bps
001d84  7842              LDRB     r2,[r0,#1]            ;2109  ; bps
001d86  f10303d8          ADD      r3,r3,#0xd8           ;2109
001d8a  eb012102          ADD      r1,r1,r2,LSL #8       ;2109
001d8e  fa1ff881          UXTH     r8,r1                 ;2109
001d92  f8a38000          STRH     r8,[r3,#0]            ;2109
001d96  7881              LDRB     r1,[r0,#2]            ;2110  ; bps
001d98  78c2              LDRB     r2,[r0,#3]            ;2110  ; bps
001d9a  eb012102          ADD      r1,r1,r2,LSL #8       ;2110
001d9e  b289              UXTH     r1,r1                 ;2110
001da0  8059              STRH     r1,[r3,#2]            ;2110
001da2  7902              LDRB     r2,[r0,#4]            ;2111  ; bps
001da4  f890e005          LDRB     lr,[r0,#5]            ;2111  ; bps
001da8  eb02220e          ADD      r2,r2,lr,LSL #8       ;2111
001dac  b292              UXTH     r2,r2                 ;2111
001dae  809a              STRH     r2,[r3,#4]            ;2111
001db0  fb02f209          MUL      r2,r2,r9              ;2114
001db4  f2417370          MOV      r3,#0x1770            ;2115
001db8  fb92f2f3          SDIV     r2,r2,r3              ;2115
001dbc  fa0ff982          SXTH     r9,r2                 ;2116
001dc0  f8ac9000          STRH     r9,[r12,#0]           ;2116
001dc4  fb01f10b          MUL      r1,r1,r11             ;2119
001dc8  fb91f1f3          SDIV     r1,r1,r3              ;2120
001dcc  b209              SXTH     r1,r1                 ;2121
001dce  8029              STRH     r1,[r5,#0]            ;2121
001dd0  fb08f80a          MUL      r8,r8,r10             ;2124
001dd4  fb98f2f3          SDIV     r2,r8,r3              ;2125
001dd8  b212              SXTH     r2,r2                 ;2126
001dda  8022              STRH     r2,[r4,#0]            ;2126
001ddc  7983              LDRB     r3,[r0,#6]            ;2128  ; bps
001dde  79c0              LDRB     r0,[r0,#7]            ;2128  ; bps
001de0  eb032300          ADD      r3,r3,r0,LSL #8       ;2128
001de4  48a2              LDR      r0,|L1.8304|
001de6  8003              STRH     r3,[r0,#0]            ;2128
001de8  4891              LDR      r0,|L1.8240|
001dea  f8a09000          STRH     r9,[r0,#0]            ;2130
001dee  4549              CMP      r1,r9                 ;2131
001df0  da00              BGE      |L1.7668|
001df2  8001              STRH     r1,[r0,#0]            ;2131
                  |L1.7668|
001df4  f9b01000          LDRSH    r1,[r0,#0]            ;2132  ; net_U
001df8  428a              CMP      r2,r1                 ;2132
001dfa  da3f              BGE      |L1.7804|
001dfc  8002              STRH     r2,[r0,#0]            ;2132
001dfe  e03d              B        |L1.7804|
                  |L1.7680|
;;;2154   	}
;;;2155   else if((AUSW_MAIN==22063)||(AUSW_MAIN==22023)||(AUSW_MAIN==22043)||(AUSW_MAIN==22044)||(AUSW_MAIN==22018))
001e00  f5a048ac          SUB      r8,r0,#0x5600
001e04  f1b8082f          SUBS     r8,r8,#0x2f
001e08  d00b              BEQ      |L1.7714|
001e0a  f1180828          ADDS     r8,r8,#0x28
001e0e  d008              BEQ      |L1.7714|
001e10  f1b80814          SUBS     r8,r8,#0x14
001e14  d005              BEQ      |L1.7714|
001e16  f1b80801          SUBS     r8,r8,#1
001e1a  d002              BEQ      |L1.7714|
001e1c  f118081a          ADDS     r8,r8,#0x1a
001e20  d113              BNE      |L1.7754|
                  |L1.7714|
;;;2156   	{
;;;2157   	temp_SL=(signed long)net_buff_;
;;;2158   	temp_SL*=KunetA;
;;;2159   	temp_SL/=40000L;
001e22  f6494040          MOV      r0,#0x9c40
001e26  fb92f0f0          SDIV     r0,r2,r0
;;;2160   	net_Ua=(signed short)temp_SL;
001e2a  b200              SXTH     r0,r0
001e2c  f8ac0000          STRH     r0,[r12,#0]
;;;2161   
;;;2162   	temp_SL=(signed long)adc_buff_[3];
;;;2163   	temp_SL*=KunetB;
;;;2164   	temp_SL/=6000L;
;;;2165   	net_Ub=(signed short)temp_SL;
001e30  8029              STRH     r1,[r5,#0]
;;;2166   
;;;2167   	temp_SL=(signed long)adc_buff_[10];
;;;2168   	temp_SL*=KunetC;
;;;2169   	temp_SL/=6000L;
;;;2170   	net_Uc=(signed short)temp_SL;
001e32  8023              STRH     r3,[r4,#0]
;;;2171   
;;;2172   	net_U=net_Ua;
001e34  4a7e              LDR      r2,|L1.8240|
001e36  8010              STRH     r0,[r2,#0]
;;;2173   	if(net_Ub<net_U)net_U=net_Ub;
001e38  4281              CMP      r1,r0
001e3a  da00              BGE      |L1.7742|
001e3c  8011              STRH     r1,[r2,#0]
                  |L1.7742|
;;;2174   	if(net_Uc<net_U)net_U=net_Uc;
001e3e  f9b20000          LDRSH    r0,[r2,#0]  ; net_U
001e42  4283              CMP      r3,r0
001e44  da1a              BGE      |L1.7804|
001e46  8013              STRH     r3,[r2,#0]
001e48  e018              B        |L1.7804|
                  |L1.7754|
;;;2175   	}
;;;2176   else	if((AUSW_MAIN==22010)||(AUSW_MAIN==22011) )
;;;2177   	{
;;;2178   	temp_SL=(signed long)net_buff_;
;;;2179   	temp_SL*=Kunet;
001e4a  498a              LDR      r1,|L1.8308|
001e4c  f5a043aa          SUB      r3,r0,#0x5500         ;2176
001e50  f9b12000          LDRSH    r2,[r1,#0]
001e54  4982              LDR      r1,|L1.8288|
001e56  8e49              LDRH     r1,[r1,#0x32]         ;2136
001e58  4351              MULS     r1,r2,r1
001e5a  3bfa              SUBS     r3,r3,#0xfa           ;2176
001e5c  d001              BEQ      |L1.7778|
001e5e  1e5a              SUBS     r2,r3,#1              ;2176
001e60  d106              BNE      |L1.7792|
                  |L1.7778|
;;;2180   	temp_SL/=35000L;
001e62  f64800b8          MOV      r0,#0x88b8
001e66  fb91f0f0          SDIV     r0,r1,r0
;;;2181   	net_U=(signed short)temp_SL;
001e6a  4971              LDR      r1,|L1.8240|
001e6c  8008              STRH     r0,[r1,#0]
001e6e  e005              B        |L1.7804|
                  |L1.7792|
;;;2182   	
;;;2183   	}
;;;2184   else
;;;2185   	{
;;;2186   	temp_SL=(signed long)net_buff_;
;;;2187   	temp_SL*=Kunet;
;;;2188   	#ifdef _ACDC_
;;;2189   	temp_SL/=500L;
001e70  f44f70fa          MOV      r0,#0x1f4
001e74  fb91f0f0          SDIV     r0,r1,r0
;;;2190   	#else
;;;2191   	temp_SL/=5000L;
;;;2192   	#endif
;;;2193   	net_U=(signed short)temp_SL;
001e78  496d              LDR      r1,|L1.8240|
001e7a  8008              STRH     r0,[r1,#0]
                  |L1.7804|
;;;2194   	
;;;2195   	}
;;;2196   if(bps[11]._device!=dNET_METR) net_F3=net_F;
001e7c  9801              LDR      r0,[sp,#4]
001e7e  2807              CMP      r0,#7
001e80  d003              BEQ      |L1.7818|
001e82  487d              LDR      r0,|L1.8312|
001e84  8801              LDRH     r1,[r0,#0]  ; net_F
001e86  487a              LDR      r0,|L1.8304|
001e88  8001              STRH     r1,[r0,#0]
                  |L1.7818|
;;;2197   #endif
;;;2198   
;;;2199   #ifdef UKU_TELECORE2015
;;;2200   //напряжение сети
;;;2201   temp_SL=(signed long)net_buff_;
;;;2202   temp_SL*=Kunet;
;;;2203   temp_SL/=110000L;
;;;2204   net_U=(signed short)temp_SL;
;;;2205   #endif
;;;2206   
;;;2207   #ifdef UKU_TELECORE2017
;;;2208   //напряжение сети
;;;2209   temp_SL=(signed long)net_buff_;
;;;2210   temp_SL*=Kunet;
;;;2211   temp_SL/=110000L;
;;;2212   net_U=(signed short)temp_SL;
;;;2213   #endif
;;;2214   
;;;2215   //Напряжения батарей
;;;2216   temp_SL=(signed long)adc_buff_[0];
001e8a  f8df81dc          LDR      r8,|L1.8296|
001e8e  f9b81000          LDRSH    r1,[r8,#0]  ; adc_buff_
;;;2217   temp_SL*=Kubat[0];
001e92  4a7a              LDR      r2,|L1.8316|
001e94  f9b20000          LDRSH    r0,[r2,#0]  ; Kubat
001e98  4348              MULS     r0,r1,r0
;;;2218   temp_SL/=2000L;
001e9a  f44f65fa          MOV      r5,#0x7d0
001e9e  fb90f0f5          SDIV     r0,r0,r5
;;;2219   bat[0]._Ub=(signed short)temp_SL;
001ea2  4c62              LDR      r4,|L1.8236|
001ea4  8060              STRH     r0,[r4,#2]
;;;2220   
;;;2221   #ifdef UKU_220
;;;2222   //Напряжения батарей
;;;2223   temp_SL=(signed long)adc_buff_[0];
;;;2224   temp_SL*=Kubat[0];
;;;2225   temp_SL/=400L;
;;;2226   bat[0]._Ub=(signed short)temp_SL;
;;;2227   #endif
;;;2228   
;;;2229   #ifdef UKU_220_V2
;;;2230   //Напряжения батарей
;;;2231   temp_SL=(signed long)adc_buff_[0];
;;;2232   temp_SL*=Kubat[0];
;;;2233   temp_SL/=400L;
;;;2234   bat[0]._Ub=(signed short)temp_SL;
;;;2235   #endif
;;;2236   
;;;2237   temp_SL=(signed long)adc_buff_[4];
001ea6  f9b80008          LDRSH    r0,[r8,#8]  ; adc_buff_
;;;2238   temp_SL*=Kubatm[0];
001eaa  4975              LDR      r1,|L1.8320|
001eac  f9b1c000          LDRSH    r12,[r1,#0]  ; Kubatm
001eb0  fb0cfc00          MUL      r12,r12,r0
;;;2239   temp_SL/=700L;
001eb4  f44f732f          MOV      r3,#0x2bc
001eb8  fb9cf0f3          SDIV     r0,r12,r3
;;;2240   bat[0]._Ubm=(signed short)temp_SL;
001ebc  80a0              STRH     r0,[r4,#4]
;;;2241   
;;;2242   #ifdef UKU_KONTUR
;;;2243   temp_SL=(signed long)adc_buff_[4];
;;;2244   temp_SL*=Kubatm[0];
;;;2245   temp_SL/=2000L;
;;;2246   bat[0]._Ubm=(signed short)temp_SL;
;;;2247   #endif
;;;2248   
;;;2249   temp_SL=(signed long)adc_buff_[12];
001ebe  f9b8c018          LDRSH    r12,[r8,#0x18]  ; adc_buff_
;;;2250   temp_SL*=Kubat[1];
001ec2  f9b20002          LDRSH    r0,[r2,#2]  ; Kubat
001ec6  fb00f00c          MUL      r0,r0,r12
;;;2251   temp_SL/=2000L;
001eca  fb90f0f5          SDIV     r0,r0,r5
;;;2252   bat[1]._Ub=(signed short)temp_SL;
001ece  f8a4004e          STRH     r0,[r4,#0x4e]
;;;2253   
;;;2254   #ifdef UKU_220
;;;2255   temp_SL=(signed long)adc_buff_[12];
;;;2256   temp_SL*=Kubat[1];
;;;2257   temp_SL/=400L;
;;;2258   bat[1]._Ub=(signed short)temp_SL;
;;;2259   #endif
;;;2260   
;;;2261   #ifdef UKU_220_V2
;;;2262   temp_SL=(signed long)adc_buff_[12];
;;;2263   temp_SL*=Kubat[1];
;;;2264   temp_SL/=400L;
;;;2265   bat[1]._Ub=(signed short)temp_SL;
;;;2266   #endif
;;;2267   
;;;2268   temp_SL=(signed long)adc_buff_[1];
001ed2  f9b82002          LDRSH    r2,[r8,#2]  ; adc_buff_
;;;2269   temp_SL*=Kubatm[1];
001ed6  f9b10002          LDRSH    r0,[r1,#2]  ; Kubatm
001eda  fb00f002          MUL      r0,r0,r2
;;;2270   temp_SL/=700L;
001ede  fb90f0f3          SDIV     r0,r0,r3
;;;2271   bat[1]._Ubm=(signed short)temp_SL;
001ee2  f8a40050          STRH     r0,[r4,#0x50]
;;;2272   #ifdef UKU_KONTUR
;;;2273   temp_SL=(signed long)adc_buff_[1];
;;;2274   temp_SL*=Kubatm[1];
;;;2275   temp_SL/=2000L;
;;;2276   bat[1]._Ubm=(signed short)temp_SL;
;;;2277   #endif
;;;2278   
;;;2279   #ifdef UKU_TELECORE2015
;;;2280   temp_SL=(signed long)adc_buff_[2];
;;;2281   temp_SL*=Kubat[0];
;;;2282   temp_SL/=2000L;
;;;2283   bat[0]._Ub=(signed short)temp_SL;
;;;2284   #endif
;;;2285   
;;;2286   /*
;;;2287   //Токи батарей
;;;2288   if(!mess_find_unvol(MESS2MATEMAT))
;;;2289   	{
;;;2290   	temp_SL=(signed long)ad7705_buff_[0];
;;;2291   	temp_SL-=(signed long)Kibat0[0];
;;;2292   	temp_SL*=(signed long)Kibat1[0];
;;;2293   	if((AUSW_MAIN==24120)||(AUSW_MAIN==24210))temp_SL/=300L;
;;;2294   	else temp_SL/=1000L;
;;;2295   	bat[0]._Ib=(signed short)temp_SL;
;;;2296   
;;;2297   	temp_SL=(signed long)ad7705_buff_[1];
;;;2298   	temp_SL-=(signed long)Kibat0[1];
;;;2299   	temp_SL*=(signed long)Kibat1[1];
;;;2300   	if((AUSW_MAIN==24120)||(AUSW_MAIN==24210))temp_SL/=300L;
;;;2301   	else temp_SL/=1000L;
;;;2302   	bat[1]._Ib=(signed short)temp_SL;
;;;2303   	}
;;;2304   */
;;;2305   
;;;2306   
;;;2307   //Токи батарей
;;;2308   if(!mess_find_unvol(MESS2MATEMAT))
001ee6  f04f00dc          MOV      r0,#0xdc
001eea  f7fffffe          BL       mess_find_unvol
;;;2309   	{
;;;2310   	temp_SL=(signed long)ad7705_buff_[0];
;;;2311   	temp_SL-=(signed long)Kibat0[0];
;;;2312   	temp_SL*=(signed long)Kibat1[0];
;;;2313   	if((AUSW_MAIN==24120)||(AUSW_MAIN==24210))temp_SL/=300L;
;;;2314   	else if((AUSW_MAIN==22010)||(AUSW_MAIN==22035)||(AUSW_MAIN==22033))temp_SL/=2000L;
001eee  f2456a13          MOV      r10,#0x5613
001ef2  bbe8              CBNZ     r0,|L1.8048|
001ef4  f8df918c          LDR      r9,|L1.8324|
001ef8  f8b90000          LDRH     r0,[r9,#0]            ;2310  ; ad7705_buff_
001efc  f8dfb188          LDR      r11,|L1.8328|
001f00  f8bb1000          LDRH     r1,[r11,#0]           ;2311  ; Kibat0
001f04  eba00001          SUB      r0,r0,r1              ;2311
001f08  4a60              LDR      r2,|L1.8332|
001f0a  f9b21000          LDRSH    r1,[r2,#0]            ;2312  ; Kibat1
001f0e  fb01f100          MUL      r1,r1,r0              ;2312
001f12  4854              LDR      r0,|L1.8292|
001f14  f6456338          MOV      r3,#0x5e38            ;2313
001f18  f6456c92          MOV      r12,#0x5e92           ;2313
001f1c  8800              LDRH     r0,[r0,#0]            ;2313  ; AUSW_MAIN
001f1e  4298              CMP      r0,r3                 ;2313
001f20  d001              BEQ      |L1.7974|
001f22  4560              CMP      r0,r12                ;2313
001f24  d104              BNE      |L1.7984|
                  |L1.7974|
001f26  f44f7e96          MOV      lr,#0x12c             ;2313
001f2a  fb91f1fe          SDIV     r1,r1,lr              ;2313
001f2e  e00f              B        |L1.8016|
                  |L1.7984|
001f30  f5a04ea8          SUB      lr,r0,#0x5400
001f34  f5be7efd          SUBS     lr,lr,#0x1fa
001f38  d003              BEQ      |L1.8002|
001f3a  4550              CMP      r0,r10
001f3c  d001              BEQ      |L1.8002|
001f3e  42b0              CMP      r0,r6
001f40  d102              BNE      |L1.8008|
                  |L1.8002|
001f42  fb91f1f5          SDIV     r1,r1,r5
001f46  e003              B        |L1.8016|
                  |L1.8008|
;;;2315   	else temp_SL/=1000L;
001f48  f44f7e7a          MOV      lr,#0x3e8
001f4c  fb91f1fe          SDIV     r1,r1,lr
                  |L1.8016|
;;;2316   	#ifdef UKU_TELECORE2015
;;;2317   	temp_SL/=2L;
;;;2318   	//temp_SL=-temp_SL;
;;;2319   	#endif
;;;2320   	//#ifdef UKU_TELECORE2017
;;;2321   	//temp_SL/=-2L;
;;;2322   	//temp_SL=-temp_SL;
;;;2323   	//#endif
;;;2324   	bat[0]._Ib=(signed short)temp_SL;
001f50  8121              STRH     r1,[r4,#8]
;;;2325   
;;;2326   	temp_SL=(signed long)ad7705_buff_[1];
001f52  f8b91002          LDRH     r1,[r9,#2]  ; ad7705_buff_
;;;2327   	temp_SL-=(signed long)Kibat0[1];
001f56  f8bb9002          LDRH     r9,[r11,#2]  ; Kibat0
001f5a  eba10909          SUB      r9,r1,r9
;;;2328   	temp_SL*=(signed long)Kibat1[1];
001f5e  f9b21002          LDRSH    r1,[r2,#2]  ; Kibat1
001f62  fb01f109          MUL      r1,r1,r9
;;;2329   	if((AUSW_MAIN==24120)||(AUSW_MAIN==24210))temp_SL/=300L;
001f66  4298              CMP      r0,r3
001f68  d001              BEQ      |L1.8046|
001f6a  4560              CMP      r0,r12
001f6c  d106              BNE      |L1.8060|
                  |L1.8046|
001f6e  e000              B        |L1.8050|
                  |L1.8048|
001f70  e015              B        |L1.8094|
                  |L1.8050|
001f72  f44f7096          MOV      r0,#0x12c
001f76  fb91f0f0          SDIV     r0,r1,r0
001f7a  e00e              B        |L1.8090|
                  |L1.8060|
;;;2330   	else if((AUSW_MAIN==22010)||(AUSW_MAIN==22035)||(AUSW_MAIN==22033))temp_SL/=2000L;
001f7c  f5a042aa          SUB      r2,r0,#0x5500
001f80  3afa              SUBS     r2,r2,#0xfa
001f82  d003              BEQ      |L1.8076|
001f84  4550              CMP      r0,r10
001f86  d001              BEQ      |L1.8076|
001f88  42b0              CMP      r0,r6
001f8a  d102              BNE      |L1.8082|
                  |L1.8076|
001f8c  fb91f0f5          SDIV     r0,r1,r5
001f90  e003              B        |L1.8090|
                  |L1.8082|
;;;2331   	else temp_SL/=1000L;
001f92  f44f707a          MOV      r0,#0x3e8
001f96  fb91f0f0          SDIV     r0,r1,r0
                  |L1.8090|
;;;2332   	bat[1]._Ib=(signed short)temp_SL;
001f9a  f8a40054          STRH     r0,[r4,#0x54]
                  |L1.8094|
;;;2333   	}
;;;2334   
;;;2335   
;;;2336   
;;;2337   
;;;2338   
;;;2339   //Температуры батарей
;;;2340   
;;;2341   #ifdef UKU_KONTUR
;;;2342   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))bat[0]._nd=0;
;;;2343   else bat[0]._nd=1;
;;;2344   temp_SL=(signed long)adc_buff_[6];
;;;2345   temp_SL*=Ktbat[0];
;;;2346   temp_SL/=20000L;
;;;2347   temp_SL-=273L;
;;;2348   bat[0]._Tb=(signed short)temp_SL;
;;;2349   #else
;;;2350   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))bat[0]._nd=0;
001f9e  f9b8000c          LDRSH    r0,[r8,#0xc]  ; adc_buff_
001fa2  f64031b7          MOV      r1,#0xbb7
001fa6  4684              MOV      r12,r0
001fa8  f2a03021          SUB      r0,r0,#0x321
001fac  2300              MOVS     r3,#0
;;;2351   else bat[0]._nd=1;
001fae  f04f0901          MOV      r9,#1
001fb2  9000              STR      r0,[sp,#0]            ;2350
001fb4  4288              CMP      r0,r1                 ;2350
001fb6  d201              BCS      |L1.8124|
001fb8  7323              STRB     r3,[r4,#0xc]          ;2350
001fba  e001              B        |L1.8128|
                  |L1.8124|
001fbc  f884900c          STRB     r9,[r4,#0xc]
                  |L1.8128|
;;;2352   temp_SL=(signed long)adc_buff_[6];
;;;2353   temp_SL*=Ktbat[0];
001fc0  4a33              LDR      r2,|L1.8336|
001fc2  f9b20000          LDRSH    r0,[r2,#0]  ; Ktbat
001fc6  fb00f00c          MUL      r0,r0,r12
;;;2354   temp_SL/=20000L;
001fca  f6446e20          MOV      lr,#0x4e20
001fce  fb90f0fe          SDIV     r0,r0,lr
;;;2355   temp_SL-=273L;
001fd2  f2a01011          SUB      r0,r0,#0x111
;;;2356   bat[0]._Tb=(signed short)temp_SL;
001fd6  8160              STRH     r0,[r4,#0xa]
;;;2357   #endif
;;;2358   
;;;2359   #ifdef UKU_KONTUR
;;;2360   if((adc_buff_[7]>800)&&(adc_buff_[7]<3800))bat[1]._nd=0;
;;;2361   else bat[1]._nd=1;
;;;2362   temp_SL=(signed long)adc_buff_[7];
;;;2363   temp_SL*=Ktbat[1];
;;;2364   temp_SL/=20000L;
;;;2365   temp_SL-=273L;
;;;2366   bat[1]._Tb=(signed short)temp_SL;
;;;2367   #else
;;;2368   if((adc_buff_[7]>800)&&(adc_buff_[7]<3800))bat[1]._nd=0;
001fd8  f9b8000e          LDRSH    r0,[r8,#0xe]  ; adc_buff_
001fdc  f64031b7          MOV      r1,#0xbb7
001fe0  f2a03b21          SUB      r11,r0,#0x321
001fe4  458b              CMP      r11,r1
001fe6  d202              BCS      |L1.8174|
001fe8  f8843058          STRB     r3,[r4,#0x58]
001fec  e001              B        |L1.8178|
                  |L1.8174|
;;;2369   else bat[1]._nd=1;
001fee  f8849058          STRB     r9,[r4,#0x58]
                  |L1.8178|
;;;2370   temp_SL=(signed long)adc_buff_[7];
;;;2371   temp_SL*=Ktbat[1];
001ff2  f9b21002          LDRSH    r1,[r2,#2]  ; Ktbat
001ff6  4341              MULS     r1,r0,r1
;;;2372   temp_SL/=20000L;
001ff8  f6446020          MOV      r0,#0x4e20
001ffc  fb91f0f0          SDIV     r0,r1,r0
;;;2373   temp_SL-=273L;
002000  f2a01011          SUB      r0,r0,#0x111
;;;2374   bat[1]._Tb=(signed short)temp_SL;
002004  4909              LDR      r1,|L1.8236|
002006  f8a10056          STRH     r0,[r1,#0x56]
;;;2375   #endif
;;;2376   
;;;2377   #ifdef UKU_6U
;;;2378   
;;;2379   if(NUMMAKB==2)
;;;2380   	{
;;;2381   	if(makb[0]._cnt<5)
;;;2382   		{
;;;2383   		if(makb[0]._T_nd[0]==0)
;;;2384   			{
;;;2385   			bat[0]._Tb=makb[0]._T[0];
;;;2386   			bat[0]._nd=0;
;;;2387   			}
;;;2388   		}
;;;2389   
;;;2390   	if(makb[1]._cnt<5)
;;;2391   		{
;;;2392   		if(makb[1]._T_nd[0]==0)
;;;2393   			{
;;;2394   			bat[1]._Tb=makb[1]._T[0];
;;;2395   			bat[1]._nd=0;
;;;2396   			}
;;;2397   		}
;;;2398   
;;;2399   	}
;;;2400   else if(NUMMAKB==4)
;;;2401   	{
;;;2402   	signed short temp_t;
;;;2403   	temp_t=-20;
;;;2404   	if(makb[0]._cnt<5)
;;;2405   		{
;;;2406   		if(makb[0]._T_nd[0]==0)
;;;2407   			{
;;;2408   			temp_t=makb[0]._T[0];
;;;2409   			bat[0]._nd=0;
;;;2410   			}
;;;2411   		}
;;;2412   	if(makb[1]._cnt<5)
;;;2413   		{
;;;2414   		if(makb[1]._T_nd[0]==0)
;;;2415   			{
;;;2416   			if(temp_t<makb[1]._T[0])
;;;2417   				{
;;;2418   				bat[0]._nd=0;
;;;2419   				temp_t=makb[1]._T[0];
;;;2420   				}
;;;2421   			}
;;;2422   		}
;;;2423   	if(temp_t!=-20)bat[0]._Tb = temp_t;
;;;2424   
;;;2425    	temp_t=-20;
;;;2426   	if(makb[2]._cnt<5)
;;;2427   		{
;;;2428   		if(makb[2]._T_nd[0]==0)
;;;2429   			{
;;;2430   			temp_t=makb[2]._T[0];
;;;2431   			bat[1]._nd=0;
;;;2432   			}
;;;2433   		}
;;;2434   	if(makb[3]._cnt<5)
;;;2435   		{
;;;2436   		if(makb[3]._T_nd[0]==0)
;;;2437   			{
;;;2438   			if(temp_t<makb[3]._T[0])
;;;2439   				{
;;;2440   				bat[1]._nd=0;
;;;2441   				temp_t=makb[3]._T[0];
;;;2442   				}
;;;2443   			}
;;;2444   		}
;;;2445   	if(temp_t!=-20)bat[1]._Tb = temp_t;
;;;2446   	}
;;;2447   
;;;2448   #endif
;;;2449   
;;;2450   
;;;2451   //Напряжение нагрузки
;;;2452   temp_SL=(signed long)adc_buff_[2];
00200a  f9b81004          LDRSH    r1,[r8,#4]  ; adc_buff_
;;;2453   temp_SL*=Kuload;
00200e  4821              LDR      r0,|L1.8340|
002010  f9b00000          LDRSH    r0,[r0,#0]  ; Kuload
002014  fb01f000          MUL      r0,r1,r0
;;;2454   temp_SL/=2000L;
002018  f44f62fa          MOV      r2,#0x7d0
00201c  fb90f0f2          SDIV     r0,r0,r2
;;;2455   load_U=(signed short)temp_SL;
002020  e03a              B        |L1.8344|
002022  0000              DCW      0x0000
                  |L1.8228|
                          DCD      bat_ips
                  |L1.8232|
                          DCD      bat_u_old_cnt
                  |L1.8236|
                          DCD      bat
                  |L1.8240|
                          DCD      net_U
                  |L1.8244|
                          DCD      UMN
                  |L1.8248|
                          DCD      unet_drv_cnt
                  |L1.8252|
                          DCD      net_Ustore
                  |L1.8256|
                          DCD      main_1Hz_cnt
                  |L1.8260|
                          DCD      bps
                  |L1.8264|
                          DCD      KunetA
                  |L1.8268|
                          DCD      net_Ua
                  |L1.8272|
                          DCD      KunetB
                  |L1.8276|
                          DCD      KunetC
                  |L1.8280|
                          DCD      net_Ub
                  |L1.8284|
                          DCD      net_Uc
                  |L1.8288|
                          DCD      ||area_number.25||
                  |L1.8292|
                          DCD      AUSW_MAIN
                  |L1.8296|
                          DCD      ||.bss||+0x40c
                  |L1.8300|
                          DCD      bps+0x3fa
                  |L1.8304|
                          DCD      net_F3
                  |L1.8308|
                          DCD      Kunet
                  |L1.8312|
                          DCD      net_F
                  |L1.8316|
                          DCD      Kubat
                  |L1.8320|
                          DCD      Kubatm
                  |L1.8324|
                          DCD      ad7705_buff_
                  |L1.8328|
                          DCD      Kibat0
                  |L1.8332|
                          DCD      Kibat1
                  |L1.8336|
                          DCD      Ktbat
                  |L1.8340|
                          DCD      Kuload
                  |L1.8344|
002098  f8dfe404          LDR      lr,|L1.9376|
00209c  f8ae0000          STRH     r0,[lr,#0]
;;;2456   
;;;2457   #ifdef UKU_220 
;;;2458   //Напряжение нагрузки
;;;2459   temp_SL=(signed long)adc_buff_[2];
;;;2460   temp_SL*=Kuload;
;;;2461   temp_SL/=350L;
;;;2462   load_U=(signed short)temp_SL;
;;;2463   #endif
;;;2464   
;;;2465   #ifdef UKU_220_V2 
;;;2466   //Напряжение нагрузки
;;;2467   temp_SL=(signed long)adc_buff_[2];
;;;2468   temp_SL*=Kuload;
;;;2469   temp_SL/=350L;
;;;2470   load_U=(signed short)temp_SL;
;;;2471   #endif
;;;2472   
;;;2473   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;2474   //Напряжение шины
;;;2475   temp_SL=(signed long)adc_buff_[1];
0020a0  f9b82002          LDRSH    r2,[r8,#2]  ; adc_buff_
;;;2476   temp_SL*=Kuout;
0020a4  48ff              LDR      r0,|L1.9380|
0020a6  f9b00000          LDRSH    r0,[r0,#0]  ; Kuout
0020aa  fb02f200          MUL      r2,r2,r0
;;;2477   if(AUSW_MAIN==22010)temp_SL/=400L;
0020ae  48fe              LDR      r0,|L1.9384|
0020b0  f24554fa          MOV      r4,#0x55fa
0020b4  f44f75c8          MOV      r5,#0x190
0020b8  8800              LDRH     r0,[r0,#0]  ; AUSW_MAIN
0020ba  42a0              CMP      r0,r4
0020bc  d102              BNE      |L1.8388|
0020be  fb92f2f5          SDIV     r2,r2,r5
0020c2  e003              B        |L1.8396|
                  |L1.8388|
;;;2478   else temp_SL/=500L;
0020c4  f44f7bfa          MOV      r11,#0x1f4
0020c8  fb92f2fb          SDIV     r2,r2,r11
                  |L1.8396|
;;;2479   out_U=(signed short)temp_SL;
0020cc  fa0ffb82          SXTH     r11,r2
0020d0  4af6              LDR      r2,|L1.9388|
0020d2  f8a2b000          STRH     r11,[r2,#0]
;;;2480   load_U=out_U;
0020d6  f8aeb000          STRH     r11,[lr,#0]
;;;2481   
;;;2482   //Напряжение выпрямителей
;;;2483   temp_SL=(signed long)adc_buff_[2];
;;;2484   temp_SL*=Kubps;
0020da  4af5              LDR      r2,|L1.9392|
0020dc  f9b22000          LDRSH    r2,[r2,#0]  ; Kubps
0020e0  fb01f102          MUL      r1,r1,r2
;;;2485   if(AUSW_MAIN==22010)temp_SL/=400L;
0020e4  d102              BNE      |L1.8428|
0020e6  fb91f1f5          SDIV     r1,r1,r5
0020ea  e003              B        |L1.8436|
                  |L1.8428|
;;;2486   else temp_SL/=500L;
0020ec  f44f72fa          MOV      r2,#0x1f4
0020f0  fb91f1f2          SDIV     r1,r1,r2
                  |L1.8436|
;;;2487   bps_U=(signed short)temp_SL;
0020f4  4def              LDR      r5,|L1.9396|
0020f6  b209              SXTH     r1,r1
0020f8  8029              STRH     r1,[r5,#0]
;;;2488   
;;;2489   if(bps_U<100)
0020fa  2964              CMP      r1,#0x64
0020fc  da18              BGE      |L1.8496|
;;;2490   	{
;;;2491   	char i;
;;;2492   	for(i=0;i<NUMIST;i++)
0020fe  f04f0100          MOV      r1,#0
002102  4aed              LDR      r2,|L1.9400|
002104  f8dfe3b4          LDR      lr,|L1.9404|
002108  f9b28000          LDRSH    r8,[r2,#0]
00210c  e00e              B        |L1.8492|
                  |L1.8462|
;;;2493   		{
;;;2494   		if(bps[i]._Uin>bps_U)bps_U=bps[i]._Uin;
00210e  ebc102c1          RSB      r2,r1,r1,LSL #3
002112  eb021201          ADD      r2,r2,r1,LSL #4
002116  eb0e0282          ADD      r2,lr,r2,LSL #2
00211a  f9b54000          LDRSH    r4,[r5,#0]  ; bps_U
00211e  6a12              LDR      r2,[r2,#0x20]
002120  42a2              CMP      r2,r4
002122  dd00              BLE      |L1.8486|
002124  802a              STRH     r2,[r5,#0]
                  |L1.8486|
002126  f1010101          ADD      r1,r1,#1              ;2492
00212a  b2c9              UXTB     r1,r1                 ;2492
                  |L1.8492|
00212c  4541              CMP      r1,r8                 ;2492
00212e  dbee              BLT      |L1.8462|
                  |L1.8496|
;;;2495   		}
;;;2496   	}
;;;2497   
;;;2498   //Суммарный ток выпрямителей
;;;2499   temp_SL=0;
002130  f04f0500          MOV      r5,#0
;;;2500   for (i=0;i<NUMIST;i++)
002134  4629              MOV      r1,r5
002136  4ae0              LDR      r2,|L1.9400|
002138  4ce0              LDR      r4,|L1.9404|
00213a  f9b22000          LDRSH    r2,[r2,#0]            ;2492
00213e  e00b              B        |L1.8536|
                  |L1.8512|
;;;2501   	{
;;;2502   	temp_SL+=((signed long)bps[i]._Ii);
002140  ebc108c1          RSB      r8,r1,r1,LSL #3
002144  eb081801          ADD      r8,r8,r1,LSL #4
002148  eb040888          ADD      r8,r4,r8,LSL #2
00214c  f8d88024          LDR      r8,[r8,#0x24]
002150  4445              ADD      r5,r5,r8
002152  f1010101          ADD      r1,r1,#1              ;2500
002156  b2c9              UXTB     r1,r1                 ;2500
                  |L1.8536|
002158  4291              CMP      r1,r2                 ;2500
00215a  dbf1              BLT      |L1.8512|
;;;2503   	}
;;;2504   bps_I=(signed short)temp_SL;
00215c  49d8              LDR      r1,|L1.9408|
00215e  800d              STRH     r5,[r1,#0]
;;;2505   
;;;2506   
;;;2507   #endif
;;;2508   
;;;2509   
;;;2510   #ifdef UKU_KONTUR
;;;2511   //Внешний датчик температуры №1(температура внешнего воздуха)
;;;2512   if((adc_buff_[5]>800)&&(adc_buff_[5]<3800))ND_EXT[0]=0;
;;;2513   else ND_EXT[0]=1;
;;;2514   temp_SL=(signed long)adc_buff_[5];
;;;2515   temp_SL*=Ktext[0];
;;;2516   temp_SL/=20000L;
;;;2517   temp_SL-=273L;
;;;2518   t_ext[0]=(signed short)temp_SL;
;;;2519   #else 
;;;2520   //Внешний датчик температуры №1(температура внешнего воздуха)
;;;2521   if((adc_buff_[5]>800)&&(adc_buff_[5]<3800))ND_EXT[0]=0;
002160  49d8              LDR      r1,|L1.9412|
002162  f6403eb7          MOV      lr,#0xbb7
002166  f8df8360          LDR      r8,|L1.9416|
00216a  f9b1500a          LDRSH    r5,[r1,#0xa]  ; adc_buff_
00216e  f2a53121          SUB      r1,r5,#0x321
002172  4571              CMP      r1,lr
002174  d202              BCS      |L1.8572|
002176  f8883000          STRB     r3,[r8,#0]
00217a  e001              B        |L1.8576|
                  |L1.8572|
;;;2522   else ND_EXT[0]=1;
00217c  f8889000          STRB     r9,[r8,#0]
                  |L1.8576|
;;;2523   temp_SL=(signed long)adc_buff_[5];
;;;2524   temp_SL*=Ktext[0];
002180  49d2              LDR      r1,|L1.9420|
002182  f9b11000          LDRSH    r1,[r1,#0]  ; Ktext
002186  434d              MULS     r5,r1,r5
;;;2525   temp_SL/=20000L;
002188  f6446e20          MOV      lr,#0x4e20
00218c  fb95f5fe          SDIV     r5,r5,lr
;;;2526   temp_SL-=273L;
002190  f2a51511          SUB      r5,r5,#0x111
;;;2527   t_ext[0]=(signed short)temp_SL;
002194  f8dfe338          LDR      lr,|L1.9424|
002198  f8ae5000          STRH     r5,[lr,#0]
;;;2528   /*
;;;2529   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))ND_EXT[1]=0;
;;;2530   else ND_EXT[1]=1;
;;;2531   temp_SL=(signed long)adc_buff_[6];
;;;2532   temp_SL*=Ktext[1];
;;;2533   temp_SL/=20000L;
;;;2534   temp_SL-=273L;
;;;2535   t_ext[1]=(signed short)temp_SL;	*/
;;;2536   #endif
;;;2537   
;;;2538   #ifdef UKU_220
;;;2539   
;;;2540   //Внешний датчик температуры №2(температура отсека ЭПУ)
;;;2541   if((adc_buff_[3]>800)&&(adc_buff_[3]<3800))ND_EXT[1]=0;
;;;2542   else ND_EXT[1]=1;
;;;2543   temp_SL=(signed long)adc_buff_[3];
;;;2544   temp_SL*=Ktext[1];
;;;2545   temp_SL/=20000L;
;;;2546   temp_SL-=273L;
;;;2547   t_ext[1]=(signed short)temp_SL;
;;;2548   
;;;2549   //Внешний датчик температуры №3(температура отсека MSAN)
;;;2550   if((adc_buff_[10]>800)&&(adc_buff_[10]<3800))ND_EXT[2]=0;
;;;2551   else ND_EXT[2]=1;
;;;2552   temp_SL=(signed long)adc_buff_[10];
;;;2553   temp_SL*=Ktext[2];
;;;2554   temp_SL/=20000L;
;;;2555   temp_SL-=273L;
;;;2556   t_ext[2]=(signed short)temp_SL;
;;;2557   
;;;2558   #else
;;;2559   
;;;2560   
;;;2561   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;2562   
;;;2563   //Внешний датчик температуры 
;;;2564   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))ND_EXT[0]=0;
00219c  9d00              LDR      r5,[sp,#0]
00219e  f6403eb7          MOV      lr,#0xbb7
0021a2  4575              CMP      r5,lr
0021a4  d202              BCS      |L1.8620|
0021a6  f8883000          STRB     r3,[r8,#0]
0021aa  e001              B        |L1.8624|
                  |L1.8620|
;;;2565   else ND_EXT[0]=1;
0021ac  f8889000          STRB     r9,[r8,#0]
                  |L1.8624|
;;;2566   temp_SL=(signed long)adc_buff_[6];
;;;2567   temp_SL*=Ktext[0];
0021b0  fb01f10c          MUL      r1,r1,r12
;;;2568   temp_SL/=20000L;
0021b4  f6446520          MOV      r5,#0x4e20
0021b8  fb91f1f5          SDIV     r1,r1,r5
;;;2569   temp_SL-=273L;
0021bc  f2a11111          SUB      r1,r1,#0x111
;;;2570   t_ext[0]=(signed short)temp_SL;
0021c0  4dc3              LDR      r5,|L1.9424|
0021c2  8029              STRH     r1,[r5,#0]
;;;2571   
;;;2572   #else
;;;2573   
;;;2574   
;;;2575   
;;;2576   //Внешний датчик температуры №2(температура отсека ЭПУ)
;;;2577   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))ND_EXT[1]=0;
;;;2578   else ND_EXT[1]=1;
;;;2579   temp_SL=(signed long)adc_buff_[6];
;;;2580   temp_SL*=Ktext[1];
;;;2581   temp_SL/=20000L;
;;;2582   temp_SL-=273L;
;;;2583   t_ext[1]=(signed short)temp_SL;
;;;2584   
;;;2585   //Внешний датчик температуры №3(температура отсека MSAN)
;;;2586   if((adc_buff_[3]>800)&&(adc_buff_[3]<3800))ND_EXT[2]=0;
;;;2587   else ND_EXT[2]=1;
;;;2588   temp_SL=(signed long)adc_buff_[3];
;;;2589   temp_SL*=Ktext[2];
;;;2590   temp_SL/=20000L;
;;;2591   temp_SL-=273L;
;;;2592   t_ext[2]=(signed short)temp_SL;
;;;2593   
;;;2594   #endif
;;;2595   #endif
;;;2596   
;;;2597   #ifdef UKU_220_V2
;;;2598   
;;;2599   //Внешний датчик температуры №2(температура отсека ЭПУ)
;;;2600   if((adc_buff_[3]>800)&&(adc_buff_[3]<3800))ND_EXT[1]=0;
;;;2601   else ND_EXT[1]=1;
;;;2602   temp_SL=(signed long)adc_buff_[3];
;;;2603   temp_SL*=Ktext[1];
;;;2604   temp_SL/=20000L;
;;;2605   temp_SL-=273L;
;;;2606   t_ext[1]=(signed short)temp_SL;
;;;2607   
;;;2608   //Внешний датчик температуры №3(температура отсека MSAN)
;;;2609   if((adc_buff_[10]>800)&&(adc_buff_[10]<3800))ND_EXT[2]=0;
;;;2610   else ND_EXT[2]=1;
;;;2611   temp_SL=(signed long)adc_buff_[10];
;;;2612   temp_SL*=Ktext[2];
;;;2613   temp_SL/=20000L;
;;;2614   temp_SL-=273L;
;;;2615   t_ext[2]=(signed short)temp_SL;
;;;2616   
;;;2617   #else
;;;2618   
;;;2619   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;2620   //Ток батареи
;;;2621   if(bps[8]._device==dIBAT_METR)
0021c4  f89412e0          LDRB     r1,[r4,#0x2e0]  ; bps
;;;2622   	{
;;;2623   	ibat_metr_buff_[0]=((signed long)bps[8]._buff[0])+(((signed long)bps[8]._buff[1])<<8);
;;;2624   	ibat_metr_buff_[1]=((signed long)bps[8]._buff[2])+(((signed long)bps[8]._buff[3])<<8);
;;;2625   	bIBAT_SMKLBR=((signed short)bps[8]._buff[4])+(((signed short)bps[8]._buff[5])<<8);
;;;2626   	if(bIBAT_SMKLBR) bIBAT_SMKLBR_cnt=50;
;;;2627   	if(!bIBAT_SMKLBR)
;;;2628   		{
;;;2629   		signed long temp_SL;
;;;2630   		temp_SL=(signed long)ibat_metr_buff_[0];
;;;2631   		temp_SL-=(signed long)ibat_metr_buff_[1];
;;;2632   		temp_SL*=(signed long)Kibat1[0];
;;;2633   		if((AUSW_MAIN==22010)||(AUSW_MAIN==22011)||(AUSW_MAIN==22035)||(AUSW_MAIN==22033)||(AUSW_MAIN==22063)||(AUSW_MAIN==22023)||(AUSW_MAIN==22043)||(AUSW_MAIN==22044))temp_SL/=2000L;
;;;2634   	
;;;2635   		Ib_ips_termokompensat =(signed short)temp_SL;
0021c8  f8dfc308          LDR      r12,|L1.9428|
0021cc  2909              CMP      r1,#9                 ;2621
0021ce  d157              BNE      |L1.8832|
0021d0  f89412e6          LDRB     r1,[r4,#0x2e6]        ;2623  ; bps
0021d4  f89452e7          LDRB     r5,[r4,#0x2e7]        ;2623  ; bps
0021d8  f8dfe2fc          LDR      lr,|L1.9432|
0021dc  eb012105          ADD      r1,r1,r5,LSL #8       ;2623
0021e0  f8ce1000          STR      r1,[lr,#0]            ;2623  ; ibat_metr_buff_
0021e4  f89452e8          LDRB     r5,[r4,#0x2e8]        ;2624  ; bps
0021e8  f89492e9          LDRB     r9,[r4,#0x2e9]        ;2624  ; bps
0021ec  eb052509          ADD      r5,r5,r9,LSL #8       ;2624
0021f0  f8ce5004          STR      r5,[lr,#4]            ;2624  ; ibat_metr_buff_
0021f4  f89492ea          LDRB     r9,[r4,#0x2ea]        ;2625  ; bps
0021f8  f894e2eb          LDRB     lr,[r4,#0x2eb]        ;2625  ; bps
0021fc  eb09290e          ADD      r9,r9,lr,LSL #8       ;2625
002200  f8dfe2d8          LDR      lr,|L1.9436|
002204  fa0ff989          SXTH     r9,r9                 ;2625
002208  f8ae9000          STRH     r9,[lr,#0]            ;2625
00220c  f1b90f00          CMP      r9,#0                 ;2626
002210  d005              BEQ      |L1.8734|
002212  f8df92cc          LDR      r9,|L1.9440|
002216  f04f0e32          MOV      lr,#0x32              ;2626
00221a  f8a9e000          STRH     lr,[r9,#0]            ;2626
                  |L1.8734|
00221e  d12f              BNE      |L1.8832|
002220  eba10505          SUB      r5,r1,r5              ;2631
002224  49af              LDR      r1,|L1.9444|
002226  f9b11000          LDRSH    r1,[r1,#0]            ;2632  ; Kibat1
00222a  fb01f105          MUL      r1,r1,r5              ;2632
00222e  f5a045aa          SUB      r5,r0,#0x5500         ;2633
002232  3dfa              SUBS     r5,r5,#0xfa           ;2633
002234  d00d              BEQ      |L1.8786|
002236  1e6d              SUBS     r5,r5,#1              ;2633
002238  d00b              BEQ      |L1.8786|
00223a  4550              CMP      r0,r10                ;2633
00223c  d009              BEQ      |L1.8786|
00223e  42b0              CMP      r0,r6                 ;2633
002240  d007              BEQ      |L1.8786|
002242  3d34              SUBS     r5,r5,#0x34           ;2633
002244  d005              BEQ      |L1.8786|
002246  3528              ADDS     r5,r5,#0x28           ;2633
002248  d003              BEQ      |L1.8786|
00224a  3d14              SUBS     r5,r5,#0x14           ;2633
00224c  d001              BEQ      |L1.8786|
00224e  1e6d              SUBS     r5,r5,#1              ;2633
002250  d103              BNE      |L1.8794|
                  |L1.8786|
002252  f44f65fa          MOV      r5,#0x7d0             ;2633
002256  fb91f1f5          SDIV     r1,r1,r5              ;2633
                  |L1.8794|
00225a  b20d              SXTH     r5,r1
00225c  f8ac5000          STRH     r5,[r12,#0]
;;;2636   		if(bIBAT_SMKLBR_cnt)
002260  4e9f              LDR      r6,|L1.9440|
;;;2637   			{
;;;2638   			bIBAT_SMKLBR_cnt--;
;;;2639   			Ib_ips_termokompensat=Ib_ips_termokompensat_temp;
002262  f8df9284          LDR      r9,|L1.9448|
002266  f9b61000          LDRSH    r1,[r6,#0]            ;2636  ; bIBAT_SMKLBR_cnt
00226a  b139              CBZ      r1,|L1.8828|
00226c  f1a10101          SUB      r1,r1,#1              ;2638
002270  8031              STRH     r1,[r6,#0]            ;2638
002272  f8b91000          LDRH     r1,[r9,#0]  ; Ib_ips_termokompensat_temp
002276  f8ac1000          STRH     r1,[r12,#0]
00227a  e001              B        |L1.8832|
                  |L1.8828|
;;;2640   			}
;;;2641   		else 
;;;2642   			{
;;;2643   			Ib_ips_termokompensat_temp=Ib_ips_termokompensat;
00227c  f8a95000          STRH     r5,[r9,#0]
                  |L1.8832|
;;;2644   			}
;;;2645   		}
;;;2646   	}
;;;2647   
;;;2648   bat[0]._Ub=load_U;
002280  4d9a              LDR      r5,|L1.9452|
002282  f8a5b002          STRH     r11,[r5,#2]
;;;2649   if(AUSW_MAIN==22018) Ib_ips_termokompensat=bat[0]._Ib;
002286  f5a041ac          SUB      r1,r0,#0x5600
00228a  3902              SUBS     r1,#2
00228c  d103              BNE      |L1.8854|
00228e  8928              LDRH     r0,[r5,#8]  ; bat
002290  f8ac0000          STRH     r0,[r12,#0]
002294  e002              B        |L1.8860|
                  |L1.8854|
;;;2650   else bat[0]._Ib=Ib_ips_termokompensat;
002296  f8bc0000          LDRH     r0,[r12,#0]  ; Ib_ips_termokompensat
00229a  8128              STRH     r0,[r5,#8]
                  |L1.8860|
;;;2651   
;;;2652   #endif
;;;2653   #endif
;;;2654   
;;;2655   
;;;2656   #ifdef UKU_TELECORE2015
;;;2657   
;;;2658   //Внешний датчик температуры №1
;;;2659   if((adc_buff_[7]>800)&&(adc_buff_[7]<3800))ND_EXT[0]=0;
;;;2660   else ND_EXT[0]=1;
;;;2661   temp_SL=(signed long)adc_buff_[7];
;;;2662   temp_SL*=Ktext[0];
;;;2663   temp_SL/=20000L;
;;;2664   temp_SL-=273L;
;;;2665   t_ext[0]=(signed short)temp_SL;
;;;2666   
;;;2667   
;;;2668   //Внешний датчик температуры №2
;;;2669   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))ND_EXT[1]=0;
;;;2670   else ND_EXT[1]=1;
;;;2671   temp_SL=(signed long)adc_buff_[6];
;;;2672   temp_SL*=Ktext[1];
;;;2673   temp_SL/=20000L;
;;;2674   temp_SL-=273L;
;;;2675   t_ext[1]=(signed short)temp_SL;
;;;2676   
;;;2677   #endif
;;;2678   
;;;2679   #ifdef UKU_TELECORE2017
;;;2680   
;;;2681   //Внешний датчик температуры №1
;;;2682   if((adc_buff_[7]>800)&&(adc_buff_[7]<3800))ND_EXT[0]=0;
;;;2683   else ND_EXT[0]=1;
;;;2684   temp_SL=(signed long)adc_buff_[7];
;;;2685   temp_SL*=Ktext[0];
;;;2686   temp_SL/=20000L;
;;;2687   temp_SL-=273L;
;;;2688   t_ext[0]=(signed short)temp_SL;
;;;2689   
;;;2690   
;;;2691   //Внешний датчик температуры №2
;;;2692   if((adc_buff_[6]>800)&&(adc_buff_[6]<3800))ND_EXT[1]=0;
;;;2693   else ND_EXT[1]=1;
;;;2694   temp_SL=(signed long)adc_buff_[6];
;;;2695   temp_SL*=Ktext[1];
;;;2696   temp_SL/=20000L;
;;;2697   temp_SL-=273L;
;;;2698   t_ext[1]=(signed short)temp_SL;
;;;2699   
;;;2700   #endif
;;;2701   
;;;2702   //напряжение ввода
;;;2703   temp_SL=(signed long)adc_buff_ext_[0];
00229c  4e94              LDR      r6,|L1.9456|
00229e  8831              LDRH     r1,[r6,#0]  ; adc_buff_ext_
;;;2704   temp_SL*=Kunet_ext[0];
0022a0  f8df9250          LDR      r9,|L1.9460|
0022a4  f9b90000          LDRSH    r0,[r9,#0]  ; Kunet_ext
0022a8  4348              MULS     r0,r1,r0
;;;2705   temp_SL/=4000L;
0022aa  f44f6a7a          MOV      r10,#0xfa0
0022ae  fb90f0fa          SDIV     r0,r0,r10
;;;2706   Uvv[0]=(signed short)temp_SL;
0022b2  4991              LDR      r1,|L1.9464|
0022b4  b280              UXTH     r0,r0
0022b6  8008              STRH     r0,[r1,#0]
;;;2707   if(Uvv[0]<100) Uvv0=Uvv[0];
0022b8  f8dfe240          LDR      lr,|L1.9468|
0022bc  2864              CMP      r0,#0x64
0022be  d202              BCS      |L1.8902|
0022c0  f8ae0000          STRH     r0,[lr,#0]
0022c4  e003              B        |L1.8910|
                  |L1.8902|
;;;2708   else Uvv0=net_U;
0022c6  488e              LDR      r0,|L1.9472|
0022c8  8800              LDRH     r0,[r0,#0]  ; net_U
0022ca  f8ae0000          STRH     r0,[lr,#0]
                  |L1.8910|
;;;2709   
;;;2710   //напряжение пэс
;;;2711   temp_SL=(signed long)adc_buff_ext_[1];
0022ce  8876              LDRH     r6,[r6,#2]  ; adc_buff_ext_
;;;2712   temp_SL*=Kunet_ext[1];
0022d0  f9b90002          LDRSH    r0,[r9,#2]  ; Kunet_ext
0022d4  4370              MULS     r0,r6,r0
;;;2713   temp_SL/=4000L;
0022d6  fb90f0fa          SDIV     r0,r0,r10
;;;2714   Uvv[1]=(signed short)temp_SL;
0022da  8048              STRH     r0,[r1,#2]
;;;2715   
;;;2716   
;;;2717   //напряжение ввода трехфазное
;;;2718   temp_SL=(signed long)eb2_data_short[0];
0022dc  4989              LDR      r1,|L1.9476|
0022de  f9b10000          LDRSH    r0,[r1,#0]  ; eb2_data_short
;;;2719   temp_SL*=Kvv_eb2[0];
0022e2  4e89              LDR      r6,|L1.9480|
0022e4  f9b69000          LDRSH    r9,[r6,#0]  ; Kvv_eb2
0022e8  fb09f900          MUL      r9,r9,r0
;;;2720   temp_SL/=6000L;
0022ec  f2417070          MOV      r0,#0x1770
0022f0  fb99faf0          SDIV     r10,r9,r0
;;;2721   Uvv_eb2[0]=(signed short)temp_SL;
0022f4  f8df9214          LDR      r9,|L1.9484|
0022f8  f8a9a000          STRH     r10,[r9,#0]
;;;2722   
;;;2723   temp_SL=(signed long)eb2_data_short[1];
0022fc  f9b1e002          LDRSH    lr,[r1,#2]  ; eb2_data_short
;;;2724   temp_SL*=Kvv_eb2[1];
002300  f9b6a002          LDRSH    r10,[r6,#2]  ; Kvv_eb2
002304  fb0afa0e          MUL      r10,r10,lr
;;;2725   temp_SL/=6000L;
002308  fb9afaf0          SDIV     r10,r10,r0
;;;2726   Uvv_eb2[1]=(signed short)temp_SL;
00230c  f8a9a002          STRH     r10,[r9,#2]
;;;2727   
;;;2728   temp_SL=(signed long)eb2_data_short[2];
002310  f9b1a004          LDRSH    r10,[r1,#4]  ; eb2_data_short
;;;2729   temp_SL*=Kvv_eb2[2];
002314  f9b66004          LDRSH    r6,[r6,#4]  ; Kvv_eb2
002318  fb06f60a          MUL      r6,r6,r10
;;;2730   temp_SL/=6000L;
00231c  fb96f6f0          SDIV     r6,r6,r0
;;;2731   Uvv_eb2[2]=(signed short)temp_SL;
002320  f8a96004          STRH     r6,[r9,#4]
;;;2732   
;;;2733   //напряжение пэс трехфазное
;;;2734   temp_SL=(signed long)eb2_data_short[3];
002324  f9b1a006          LDRSH    r10,[r1,#6]  ; eb2_data_short
;;;2735   temp_SL*=Kpes_eb2[0];
002328  4e79              LDR      r6,|L1.9488|
00232a  f9b69000          LDRSH    r9,[r6,#0]  ; Kpes_eb2
00232e  fb09f90a          MUL      r9,r9,r10
;;;2736   temp_SL/=6000L;
002332  fb99faf0          SDIV     r10,r9,r0
;;;2737   Upes_eb2[0]=(signed short)temp_SL;
002336  f8df91dc          LDR      r9,|L1.9492|
00233a  f8a9a000          STRH     r10,[r9,#0]
;;;2738   
;;;2739   temp_SL=(signed long)eb2_data_short[4];
00233e  f9b1e008          LDRSH    lr,[r1,#8]  ; eb2_data_short
;;;2740   temp_SL*=Kpes_eb2[1];
002342  f9b6a002          LDRSH    r10,[r6,#2]  ; Kpes_eb2
002346  fb0afa0e          MUL      r10,r10,lr
;;;2741   temp_SL/=6000L;
00234a  fb9afaf0          SDIV     r10,r10,r0
;;;2742   Upes_eb2[1]=(signed short)temp_SL;
00234e  f8a9a002          STRH     r10,[r9,#2]
;;;2743   
;;;2744   temp_SL=(signed long)eb2_data_short[5];
002352  f9b1a00a          LDRSH    r10,[r1,#0xa]  ; eb2_data_short
;;;2745   temp_SL*=Kpes_eb2[2];
002356  f9b61004          LDRSH    r1,[r6,#4]  ; Kpes_eb2
00235a  fb01f10a          MUL      r1,r1,r10
;;;2746   temp_SL/=6000L;
00235e  fb91f0f0          SDIV     r0,r1,r0
;;;2747   Upes_eb2[2]=(signed short)temp_SL;
002362  f8a90004          STRH     r0,[r9,#4]
;;;2748   
;;;2749   //Вычисление температуры шкафа
;;;2750   
;;;2751   ibt._T[0]=t_ext[1]+273;
002366  485a              LDR      r0,|L1.9424|
002368  4e6b              LDR      r6,|L1.9496|
00236a  8841              LDRH     r1,[r0,#2]  ; t_ext
00236c  f2011111          ADD      r1,r1,#0x111
002370  fa0ff981          SXTH     r9,r1
002374  f8a69000          STRH     r9,[r6,#0]
;;;2752   ibt._T[1]=t_ext[2]+273;
002378  8880              LDRH     r0,[r0,#4]  ; t_ext
00237a  f2001011          ADD      r0,r0,#0x111
00237e  fa0ffa80          SXTH     r10,r0
002382  f8a6a002          STRH     r10,[r6,#2]
;;;2753   
;;;2754   ibt._nd[0]=ND_EXT[1];
002386  f8981001          LDRB     r1,[r8,#1]  ; ND_EXT
00238a  7231              STRB     r1,[r6,#8]
;;;2755   ibt._nd[1]=ND_EXT[2];
00238c  f8980002          LDRB     r0,[r8,#2]  ; ND_EXT
002390  7270              STRB     r0,[r6,#9]
;;;2756   
;;;2757   #ifndef UKU_TELECORE2015
;;;2758   if((ibt._nd[0]==0) &&  (ibt._nd[1]==0))
;;;2759   	{
;;;2760   	t_box=((ibt._T[0]+ibt._T[1])/2)-273;
002392  4e62              LDR      r6,|L1.9500|
002394  b901              CBNZ     r1,|L1.9112|
002396  b110              CBZ      r0,|L1.9118|
                  |L1.9112|
;;;2761   	}
;;;2762   else if((ibt._nd[0]==1) &&  (ibt._nd[1]==0))
002398  2901              CMP      r1,#1
00239a  d00a              BEQ      |L1.9138|
00239c  e00a              B        |L1.9140|
                  |L1.9118|
00239e  eb09000a          ADD      r0,r9,r10             ;2760
0023a2  eb0070d0          ADD      r0,r0,r0,LSR #31      ;2760
0023a6  f46f7188          MVN      r1,#0x110             ;2760
0023aa  eb010060          ADD      r0,r1,r0,ASR #1       ;2760
0023ae  8030              STRH     r0,[r6,#0]            ;2760
0023b0  e01e              B        |L1.9200|
                  |L1.9138|
0023b2  b108              CBZ      r0,|L1.9144|
                  |L1.9140|
;;;2763   	{
;;;2764   	t_box=ibt._T[1]-273;
;;;2765   	}
;;;2766   else if((ibt._nd[0]==0) &&  (ibt._nd[1]==1))
0023b4  b129              CBZ      r1,|L1.9154|
0023b6  e006              B        |L1.9158|
                  |L1.9144|
0023b8  f2aa1a11          SUB      r10,r10,#0x111        ;2764
0023bc  f8a6a000          STRH     r10,[r6,#0]           ;2764
0023c0  e016              B        |L1.9200|
                  |L1.9154|
0023c2  2801              CMP      r0,#1
0023c4  d002              BEQ      |L1.9164|
                  |L1.9158|
;;;2767   	{
;;;2768   	t_box=ibt._T[0]-273;
;;;2769   	}
;;;2770   else if((ibt._nd[0]==1) &&  (ibt._nd[1]==1))
0023c6  2901              CMP      r1,#1
0023c8  d005              BEQ      |L1.9174|
0023ca  e011              B        |L1.9200|
                  |L1.9164|
0023cc  f2a91911          SUB      r9,r9,#0x111          ;2768
0023d0  f8a69000          STRH     r9,[r6,#0]            ;2768
0023d4  e00c              B        |L1.9200|
                  |L1.9174|
0023d6  2801              CMP      r0,#1
0023d8  d10a              BNE      |L1.9200|
;;;2771   	{
;;;2772   	if(t_ext_can_nd<5)t_box= t_ext_can;
0023da  4851              LDR      r0,|L1.9504|
0023dc  7800              LDRB     r0,[r0,#0]  ; t_ext_can_nd
0023de  2805              CMP      r0,#5
0023e0  d203              BCS      |L1.9194|
0023e2  4850              LDR      r0,|L1.9508|
0023e4  8800              LDRH     r0,[r0,#0]  ; t_ext_can
0023e6  8030              STRH     r0,[r6,#0]
0023e8  e002              B        |L1.9200|
                  |L1.9194|
;;;2773   	else t_box=20;
0023ea  f04f0014          MOV      r0,#0x14
0023ee  8030              STRH     r0,[r6,#0]
                  |L1.9200|
;;;2774   	}
;;;2775   #endif
;;;2776   /*
;;;2777   //Вычисление температуры шкафа
;;;2778   
;;;2779   ibt._T[0]=bat[0]._Tb+273;
;;;2780   ibt._T[1]=bat[1]._Tb+273;
;;;2781   ibt._T[2]=t_ext[1]+273;
;;;2782   ibt._T[3]=t_ext[2]+273;
;;;2783   
;;;2784   ibt._nd[0]=bat[0]._nd;
;;;2785   ibt._nd[1]=bat[1]._nd;
;;;2786   ibt._nd[2]=ND_EXT[1];
;;;2787   ibt._nd[3]=ND_EXT[2];
;;;2788   
;;;2789   ibt._avg1=0;
;;;2790   ibt._avg_cnt=4;
;;;2791   
;;;2792   if(ibt._nd[0]==0)
;;;2793   	{
;;;2794   	ibt._avg1+=ibt._T[0];
;;;2795   	}
;;;2796   else 
;;;2797   	{
;;;2798   	ibt._avg_cnt--;
;;;2799   	}
;;;2800   
;;;2801   if(ibt._nd[1]==0)
;;;2802   	{
;;;2803   	ibt._avg1+=ibt._T[1];
;;;2804   	}
;;;2805   else 
;;;2806   	{
;;;2807   	ibt._avg_cnt--;
;;;2808   	}
;;;2809   
;;;2810   if(ibt._nd[2]==0)
;;;2811   	{
;;;2812   	ibt._avg1+=ibt._T[2];
;;;2813   	}
;;;2814   else 
;;;2815   	{
;;;2816   	ibt._avg_cnt--;
;;;2817   	}
;;;2818   
;;;2819   if(ibt._nd[3]==0)
;;;2820   	{
;;;2821   	ibt._avg1+=ibt._T[3];
;;;2822   	}
;;;2823   else 
;;;2824   	{
;;;2825   	ibt._avg_cnt--;
;;;2826   	}
;;;2827   
;;;2828   if(ibt._avg_cnt==0)
;;;2829   	{
;;;2830   	}
;;;2831   else
;;;2832   	{
;;;2833   	ibt._avg1/=ibt._avg_cnt;
;;;2834   	}
;;;2835   
;;;2836   
;;;2837   if(ibt._nd[0]!=0)
;;;2838   	{
;;;2839   	ibt._T_dispers[0]=0;
;;;2840   	}
;;;2841   else 
;;;2842   	{
;;;2843   	ibt._T_dispers[0]=abs(ibt._T[0]-ibt._avg1);
;;;2844   	}
;;;2845   
;;;2846   if(ibt._nd[1]!=0)
;;;2847   	{
;;;2848   	ibt._T_dispers[1]=0;
;;;2849   	}
;;;2850   else 
;;;2851   	{
;;;2852   	ibt._T_dispers[1]=abs(ibt._T[1]-ibt._avg1);
;;;2853   	}
;;;2854   
;;;2855   if(ibt._nd[2]!=0)
;;;2856   	{
;;;2857   	ibt._T_dispers[2]=0;
;;;2858   	}
;;;2859   else 
;;;2860   	{
;;;2861   	ibt._T_dispers[2]=abs(ibt._T[2]-ibt._avg1);
;;;2862   	}
;;;2863   
;;;2864   if(ibt._nd[3]!=0)
;;;2865   	{
;;;2866   	ibt._T_dispers[3]=0;
;;;2867   	}
;;;2868   else 
;;;2869   	{
;;;2870   	ibt._T_dispers[3]=abs(ibt._T[3]-ibt._avg1);
;;;2871   	}
;;;2872   
;;;2873   if(	ibt._nd[0]&&
;;;2874   	ibt._nd[1]&&
;;;2875   	ibt._nd[2]&&
;;;2876   	ibt._nd[3]
;;;2877   	)
;;;2878   	{
;;;2879   	t_box=(bps[0]._Ti);
;;;2880   	}
;;;2881   
;;;2882   else if(	ibt._nd[0]||
;;;2883   	ibt._nd[1]||
;;;2884   	ibt._nd[2]||
;;;2885   	ibt._nd[3]
;;;2886   	)
;;;2887   	{
;;;2888   	t_box=(ibt._avg1-273);
;;;2889   	}
;;;2890   else 
;;;2891   	{
;;;2892   	ibt._max_dispers_num=0;
;;;2893   	ibt._max_dispers=ibt._T_dispers[0];
;;;2894   
;;;2895   	if(ibt._T_dispers[1]>ibt._max_dispers)
;;;2896   		{
;;;2897   		ibt._max_dispers_num=1;
;;;2898   		ibt._max_dispers=ibt._T_dispers[1];
;;;2899   		}
;;;2900   	if(ibt._T_dispers[2]>ibt._max_dispers)
;;;2901   		{
;;;2902   		ibt._max_dispers_num=2;
;;;2903   		ibt._max_dispers=ibt._T_dispers[2];
;;;2904   		}
;;;2905   	if(ibt._T_dispers[3]>ibt._max_dispers)
;;;2906   		{
;;;2907   		ibt._max_dispers_num=3;
;;;2908   		ibt._max_dispers=ibt._T_dispers[3];
;;;2909   		}
;;;2910   
;;;2911   	ibt._avg2=0;
;;;2912   
;;;2913   	if(ibt._max_dispers_num!=0)
;;;2914   		{
;;;2915   		ibt._avg2+=ibt._T[0];
;;;2916   		}
;;;2917   	if(ibt._max_dispers_num!=1)
;;;2918   		{
;;;2919   		ibt._avg2+=ibt._T[1];
;;;2920   		}
;;;2921   	if(ibt._max_dispers_num!=2)
;;;2922   		{
;;;2923   		ibt._avg2+=ibt._T[2];
;;;2924   		}
;;;2925   	if(ibt._max_dispers_num!=3)
;;;2926   		{
;;;2927   		ibt._avg2+=ibt._T[3];
;;;2928   		}
;;;2929   
;;;2930   	t_box=(ibt._avg2/3)-273;
;;;2931   
;;;2932   	}*/
;;;2933   
;;;2934   
;;;2935   //*********************************************
;;;2936   
;;;2937   #ifndef TELECORE
;;;2938   if((BAT_IS_ON[0]==bisON)&&(bat[0]._Ub>200)) Ibmax=bat[0]._Ib;
0023f0  484d              LDR      r0,|L1.9512|
0023f2  7801              LDRB     r1,[r0,#0]  ; BAT_IS_ON
0023f4  2955              CMP      r1,#0x55
0023f6  d105              BNE      |L1.9220|
0023f8  f1bb0fc8          CMP      r11,#0xc8
0023fc  dd02              BLE      |L1.9220|
0023fe  8929              LDRH     r1,[r5,#8]  ; bat
002400  f8a71042          STRH     r1,[r7,#0x42]
                  |L1.9220|
;;;2939   if((BAT_IS_ON[1]==bisON)&&(bat[1]._Ub>200)&&(bat[1]._Ib>bat[0]._Ib)) Ibmax=bat[1]._Ib;
002404  7840              LDRB     r0,[r0,#1]  ; BAT_IS_ON
002406  2855              CMP      r0,#0x55
002408  d10b              BNE      |L1.9250|
00240a  f9b5004e          LDRSH    r0,[r5,#0x4e]  ; bat
00240e  28c8              CMP      r0,#0xc8
002410  dd07              BLE      |L1.9250|
002412  f9b50054          LDRSH    r0,[r5,#0x54]  ; bat
002416  f9b51008          LDRSH    r1,[r5,#8]  ; bat
00241a  4288              CMP      r0,r1
00241c  dd01              BLE      |L1.9250|
00241e  f8a70042          STRH     r0,[r7,#0x42]
                  |L1.9250|
;;;2940   #endif
;;;2941   
;;;2942   #ifdef TELECORE
;;;2943   Ibmax=0;
;;;2944   /*
;;;2945   if((NUMBAT_TELECORE>0)&&(lakb[0]._communicationFullErrorStat==0)&&(lakb[0]._ch_curr/10>Ibmax))Ibmax=lakb[0]._ch_curr/10;
;;;2946   if((NUMBAT_TELECORE>1)&&(lakb[1]._communicationFullErrorStat==0)&&(lakb[1]._ch_curr/10>Ibmax))Ibmax=lakb[1]._ch_curr/10;
;;;2947   if((NUMBAT_TELECORE>2)&&(lakb[2]._communicationFullErrorStat==0)&&(lakb[2]._ch_curr/10>Ibmax))Ibmax=lakb[2]._ch_curr/10;
;;;2948   */
;;;2949   if((NUMBAT_TELECORE>0)&&(bat[0]._Ib/10>Ibmax))Ibmax=bat[0]._Ib/10;
;;;2950   if((NUMBAT_TELECORE>1)&&(bat[1]._Ib/10>Ibmax))Ibmax=bat[1]._Ib/10;
;;;2951   //if((BAT_IS_ON[0]==bisON)&&(bat[0]._Ub>200)) Ibmax=bat[0]._Ib/1;
;;;2952   //if((BAT_IS_ON[1]==bisON)&&(bat[1]._Ub>200)&&(bat[1]._Ib>bat[0]._Ib)) Ibmax=bat[1]._Ib;
;;;2953   #endif
;;;2954   //Ibmax=bat[0]._Ib;
;;;2955   //if((AUSW_MAIN==22063)||(AUSW_MAIN==22023)||(AUSW_MAIN==22043))Ibmax=Ib_ips_termokompensat;
;;;2956   
;;;2957   #ifdef UKU_TELECORE2017
;;;2958   Ibmax=0;
;;;2959   if((NUMBAT_TELECORE>0)&&(bat[0]._Ib/10>Ibmax))Ibmax=bat[0]._Ib/10;
;;;2960   if((NUMBAT_TELECORE>1)&&(bat[1]._Ib/10>Ibmax))Ibmax=bat[1]._Ib/10;
;;;2961   #endif
;;;2962   
;;;2963   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;2964   Ibmax=Ib_ips_termokompensat;
002422  f8bc0000          LDRH     r0,[r12,#0]  ; Ib_ips_termokompensat
002426  f8a70042          STRH     r0,[r7,#0x42]
;;;2965   #endif
;;;2966   for(i=0;i<NUMIST;i++)
00242a  f04f0100          MOV      r1,#0
00242e  e02f              B        |L1.9360|
                  |L1.9264|
;;;2967   	{
;;;2968   	if(bps[i]._cnt<25)
002430  ebc100c1          RSB      r0,r1,r1,LSL #3
002434  eb001001          ADD      r0,r0,r1,LSL #4
002438  eb040080          ADD      r0,r4,r0,LSL #2
00243c  78c6              LDRB     r6,[r0,#3]
00243e  2e19              CMP      r6,#0x19
002440  d21c              BCS      |L1.9340|
;;;2969        	{
;;;2970        	bps[i]._Ii=bps[i]._buff[0]+(bps[i]._buff[1]*256);
002442  7986              LDRB     r6,[r0,#6]
002444  79c7              LDRB     r7,[r0,#7]
002446  eb062607          ADD      r6,r6,r7,LSL #8
00244a  6246              STR      r6,[r0,#0x24]
;;;2971        	bps[i]._Uin=bps[i]._buff[2]+(bps[i]._buff[3]*256);
00244c  7a06              LDRB     r6,[r0,#8]
00244e  7a47              LDRB     r7,[r0,#9]
002450  eb062607          ADD      r6,r6,r7,LSL #8
002454  6206              STR      r6,[r0,#0x20]
;;;2972        	bps[i]._Uii=bps[i]._buff[4]+(bps[i]._buff[5]*256);
002456  7a86              LDRB     r6,[r0,#0xa]
002458  7ac7              LDRB     r7,[r0,#0xb]
00245a  eb062607          ADD      r6,r6,r7,LSL #8
00245e  61c6              STR      r6,[r0,#0x1c]
;;;2973        	bps[i]._Ti=(signed)(bps[i]._buff[6]);
002460  7b06              LDRB     r6,[r0,#0xc]
002462  6286              STR      r6,[r0,#0x28]
;;;2974        	bps[i]._adr_ee=bps[i]._buff[7];
002464  7b46              LDRB     r6,[r0,#0xd]
002466  f8806052          STRB     r6,[r0,#0x52]
;;;2975        	bps[i]._flags_tm=bps[i]._buff[8];
00246a  7b86              LDRB     r6,[r0,#0xe]
00246c  f8806042          STRB     r6,[r0,#0x42]
;;;2976   	     bps[i]._rotor=bps[i]._buff[10]+(bps[i]._buff[11]*256);    
002470  7c06              LDRB     r6,[r0,#0x10]
002472  7c47              LDRB     r7,[r0,#0x11]
002474  eb062607          ADD      r6,r6,r7,LSL #8
002478  64c6              STR      r6,[r0,#0x4c]
00247a  e006              B        |L1.9354|
                  |L1.9340|
;;;2977        	} 
;;;2978   	else 
;;;2979        	{
;;;2980        	bps[i]._Uii=0; 
00247c  61c3              STR      r3,[r0,#0x1c]
;;;2981        	bps[i]._Ii=0;
00247e  6243              STR      r3,[r0,#0x24]
;;;2982        	bps[i]._Uin=0;
002480  6203              STR      r3,[r0,#0x20]
;;;2983        	bps[i]._Ti=0;
002482  6283              STR      r3,[r0,#0x28]
;;;2984        	bps[i]._flags_tm=0; 
002484  f8803042          STRB     r3,[r0,#0x42]
;;;2985   	     bps[i]._rotor=0;    
002488  64c3              STR      r3,[r0,#0x4c]
                  |L1.9354|
00248a  f1010101          ADD      r1,r1,#1              ;2966
00248e  b2c9              UXTB     r1,r1                 ;2966
                  |L1.9360|
002490  4291              CMP      r1,r2                 ;2966
002492  dbcd              BLT      |L1.9264|
;;;2986        	}
;;;2987        
;;;2988        }
;;;2989   
;;;2990   load_I=0;
002494  4e25              LDR      r6,|L1.9516|
;;;2991   #ifdef TELECORE
;;;2992   
;;;2993   /*for(i=0;i<NUMBAT_TELECORE;i++)
;;;2994   	{
;;;2995   	load_I-=lakb[i]._ch_curr/10;
;;;2996   	}*/
;;;2997   load_I=-(bat[0]._Ib/10)-(bat[1]._Ib/10);
;;;2998   #elif UKU_TELECORE2017
;;;2999   load_I=-(bat[0]._Ib/10)-(bat[1]._Ib/10);
;;;3000   #else
;;;3001   load_I=-(bat[0]._Ib/10)-(bat[1]._Ib/10);
002496  f9b51008          LDRSH    r1,[r5,#8]  ; bat
00249a  f04f000a          MOV      r0,#0xa
00249e  e047              B        |L1.9520|
                  |L1.9376|
                          DCD      load_U
                  |L1.9380|
                          DCD      Kuout
                  |L1.9384|
                          DCD      AUSW_MAIN
                  |L1.9388|
                          DCD      out_U
                  |L1.9392|
                          DCD      Kubps
                  |L1.9396|
                          DCD      bps_U
                  |L1.9400|
                          DCD      NUMIST
                  |L1.9404|
                          DCD      bps
                  |L1.9408|
                          DCD      bps_I
                  |L1.9412|
                          DCD      ||.bss||+0x40c
                  |L1.9416|
                          DCD      ND_EXT
                  |L1.9420|
                          DCD      Ktext
                  |L1.9424|
                          DCD      t_ext
                  |L1.9428|
                          DCD      Ib_ips_termokompensat
                  |L1.9432|
                          DCD      ibat_metr_buff_
                  |L1.9436|
                          DCD      bIBAT_SMKLBR
                  |L1.9440|
                          DCD      bIBAT_SMKLBR_cnt
                  |L1.9444|
                          DCD      Kibat1
                  |L1.9448|
                          DCD      Ib_ips_termokompensat_temp
                  |L1.9452|
                          DCD      bat
                  |L1.9456|
                          DCD      adc_buff_ext_
                  |L1.9460|
                          DCD      Kunet_ext
                  |L1.9464|
                          DCD      Uvv
                  |L1.9468|
                          DCD      Uvv0
                  |L1.9472|
                          DCD      net_U
                  |L1.9476|
                          DCD      eb2_data_short
                  |L1.9480|
                          DCD      Kvv_eb2
                  |L1.9484|
                          DCD      Uvv_eb2
                  |L1.9488|
                          DCD      Kpes_eb2
                  |L1.9492|
                          DCD      Upes_eb2
                  |L1.9496|
                          DCD      ibt
                  |L1.9500|
                          DCD      t_box
                  |L1.9504|
                          DCD      t_ext_can_nd
                  |L1.9508|
                          DCD      t_ext_can
                  |L1.9512|
                          DCD      BAT_IS_ON
                  |L1.9516|
                          DCD      load_I
                  |L1.9520|
002530  fb91f1f0          SDIV     r1,r1,r0
002534  f9b55054          LDRSH    r5,[r5,#0x54]  ; bat
002538  fb95f0f0          SDIV     r0,r5,r0
00253c  4408              ADD      r0,r0,r1
00253e  f1c00000          RSB      r0,r0,#0
002542  b207              SXTH     r7,r0
002544  8037              STRH     r7,[r6,#0]
;;;3002   #endif
;;;3003   Isumm=0;
002546  4dff              LDR      r5,|L1.10564|
002548  802b              STRH     r3,[r5,#0]
;;;3004   
;;;3005   for(i=0;i<NUMIST;i++)
00254a  f04f0000          MOV      r0,#0
00254e  e012              B        |L1.9590|
                  |L1.9552|
;;;3006        {
;;;3007        if(bps[i]._cnt<5)Isumm+=bps[i]._Ii;
002550  ebc001c0          RSB      r1,r0,r0,LSL #3
002554  eb011100          ADD      r1,r1,r0,LSL #4
002558  eb040181          ADD      r1,r4,r1,LSL #2
00255c  f891c003          LDRB     r12,[r1,#3]
002560  f1bc0f05          CMP      r12,#5
002564  d204              BCS      |L1.9584|
002566  6a49              LDR      r1,[r1,#0x24]
002568  f8b5c000          LDRH     r12,[r5,#0]  ; Isumm
00256c  4461              ADD      r1,r1,r12
00256e  8029              STRH     r1,[r5,#0]
                  |L1.9584|
002570  f1000001          ADD      r0,r0,#1              ;3005
002574  b2c0              UXTB     r0,r0                 ;3005
                  |L1.9590|
002576  4290              CMP      r0,r2                 ;3005
002578  dbea              BLT      |L1.9552|
;;;3008        }  
;;;3009        
;;;3010   load_I=load_I+Isumm;
00257a  8828              LDRH     r0,[r5,#0]  ; Isumm
00257c  4438              ADD      r0,r0,r7
00257e  b200              SXTH     r0,r0
002580  8030              STRH     r0,[r6,#0]
;;;3011   if(load_I<0)load_I=0;
002582  2800              CMP      r0,#0
002584  da00              BGE      |L1.9608|
002586  8033              STRH     r3,[r6,#0]
                  |L1.9608|
;;;3012   
;;;3013   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;3014   load_I=0;
002588  8033              STRH     r3,[r6,#0]
;;;3015   
;;;3016   Isumm=0;
00258a  802b              STRH     r3,[r5,#0]
;;;3017   
;;;3018   for(i=0;i<NUMIST;i++)
00258c  f04f0000          MOV      r0,#0
002590  e00f              B        |L1.9650|
                  |L1.9618|
;;;3019        {
;;;3020        if(bps[i]._cnt<5)Isumm+=bps[i]._Ii;
002592  ebc001c0          RSB      r1,r0,r0,LSL #3
002596  eb011100          ADD      r1,r1,r0,LSL #4
00259a  eb040181          ADD      r1,r4,r1,LSL #2
00259e  78cf              LDRB     r7,[r1,#3]
0025a0  2f05              CMP      r7,#5
0025a2  d203              BCS      |L1.9644|
0025a4  6a49              LDR      r1,[r1,#0x24]
0025a6  882f              LDRH     r7,[r5,#0]  ; Isumm
0025a8  4439              ADD      r1,r1,r7
0025aa  8029              STRH     r1,[r5,#0]
                  |L1.9644|
0025ac  f1000001          ADD      r0,r0,#1              ;3018
0025b0  b2c0              UXTB     r0,r0                 ;3018
                  |L1.9650|
0025b2  4290              CMP      r0,r2                 ;3018
0025b4  dbed              BLT      |L1.9618|
;;;3021        }  
;;;3022        
;;;3023   load_I=load_I+Isumm;
0025b6  8829              LDRH     r1,[r5,#0]  ; Isumm
0025b8  eb030001          ADD      r0,r3,r1
0025bc  b200              SXTH     r0,r0
0025be  8030              STRH     r0,[r6,#0]
;;;3024   if(load_I<0)load_I=0;
0025c0  2800              CMP      r0,#0
0025c2  da00              BGE      |L1.9670|
0025c4  8033              STRH     r3,[r6,#0]
                  |L1.9670|
;;;3025   
;;;3026   #endif
;;;3027   #ifdef IPS_SGEP_GAZPROM
;;;3028   load_I=Isumm;
;;;3029   #endif
;;;3030   
;;;3031   
;;;3032   #ifdef UKU_GLONASS
;;;3033   inv[0]._Uio=6;
;;;3034   if (NUMINV)
;;;3035   	{
;;;3036   	for(i=0;i<NUMINV;i++)
;;;3037   		{
;;;3038   		if(bps[i+first_inv_slot]._cnt<25)
;;;3039        		{
;;;3040        		inv[i]._Ii=bps[i+first_inv_slot]._buff[0]+(bps[i+first_inv_slot]._buff[1]*256);
;;;3041        		inv[i]._Uin=bps[i+first_inv_slot]._buff[2]+(bps[i+first_inv_slot]._buff[3]*256);
;;;3042        		inv[i]._Uio=bps[i+first_inv_slot]._buff[4]+(bps[i+first_inv_slot]._buff[5]*256);
;;;3043        		inv[i]._Ti=(signed)(bps[i+first_inv_slot]._buff[6]);
;;;3044        		inv[i]._flags_tm=bps[i+first_inv_slot]._buff[8];
;;;3045   	    	//	inv[i]._rotor=bps[i+first_inv_slot]._buff[10]+(bps[i+first_inv_slot]._buff[11]*256);
;;;3046   			inv[i]._cnt=0;    
;;;3047        		} 
;;;3048   		else 
;;;3049        		{
;;;3050        		inv[i]._Uio=0; 
;;;3051        		inv[i]._Ii=0;
;;;3052        		inv[i]._Uin=0;
;;;3053        		inv[i]._Ti=0;
;;;3054        		inv[i]._flags_tm=0; 
;;;3055   //	     	inv[i]._rotor0;
;;;3056   			inv[i]._cnt=25;    
;;;3057        		}
;;;3058        	}
;;;3059      	}
;;;3060   #endif
;;;3061   
;;;3062   #ifndef UKU_GLONASS
;;;3063   if (NUMINV)
0025c6  48e0              LDR      r0,|L1.10568|
0025c8  f9b05000          LDRSH    r5,[r0,#0]  ; NUMINV
0025cc  2d00              CMP      r5,#0
0025ce  d066              BEQ      |L1.9886|
;;;3064   	{
;;;3065   	for(i=0;i<NUMINV;i++)
0025d0  f04f0200          MOV      r2,#0
;;;3066   		{
;;;3067   		if(bps[i+20]._cnt<25)
;;;3068        		{
;;;3069        		inv[i]._Ii=bps[i+20]._buff[0]+(bps[i+20]._buff[1]*256);
0025d4  4edd              LDR      r6,|L1.10572|
0025d6  e060              B        |L1.9882|
                  |L1.9688|
0025d8  f1020014          ADD      r0,r2,#0x14           ;3067
0025dc  ebc001c0          RSB      r1,r0,r0,LSL #3       ;3067
0025e0  eb011000          ADD      r0,r1,r0,LSL #4       ;3067
0025e4  eb040080          ADD      r0,r4,r0,LSL #2       ;3067
0025e8  78c1              LDRB     r1,[r0,#3]            ;3067
0025ea  2919              CMP      r1,#0x19              ;3067
0025ec  d239              BCS      |L1.9826|
0025ee  7981              LDRB     r1,[r0,#6]
0025f0  79c7              LDRB     r7,[r0,#7]
0025f2  eb012707          ADD      r7,r1,r7,LSL #8
0025f6  eb020142          ADD      r1,r2,r2,LSL #1
0025fa  eb061141          ADD      r1,r6,r1,LSL #5
0025fe  61cf              STR      r7,[r1,#0x1c]
;;;3070        		inv[i]._Pio=bps[i+20]._buff[2]+(bps[i+20]._buff[3]*256);
002600  7a07              LDRB     r7,[r0,#8]
002602  f890c009          LDRB     r12,[r0,#9]
002606  eb07270c          ADD      r7,r7,r12,LSL #8
00260a  62cf              STR      r7,[r1,#0x2c]
;;;3071        		inv[i]._Uio=bps[i+20]._buff[4]+(bps[i+20]._buff[5]*256);
00260c  7a87              LDRB     r7,[r0,#0xa]
00260e  f890c00b          LDRB     r12,[r0,#0xb]
002612  eb07270c          ADD      r7,r7,r12,LSL #8
002616  618f              STR      r7,[r1,#0x18]
;;;3072        		inv[i]._Ti=(signed)(bps[i+20]._buff[6]);
002618  7b07              LDRB     r7,[r0,#0xc]
00261a  620f              STR      r7,[r1,#0x20]
;;;3073        		inv[i]._flags_tm=bps[i+20]._buff[7];
00261c  7b47              LDRB     r7,[r0,#0xd]
00261e  f8817046          STRB     r7,[r1,#0x46]
;;;3074        		inv[i]._Uin=bps[i+20]._buff[8]+(bps[i+20]._buff[9]*256);
002622  7b87              LDRB     r7,[r0,#0xe]
002624  f890c00f          LDRB     r12,[r0,#0xf]
002628  eb07270c          ADD      r7,r7,r12,LSL #8
00262c  628f              STR      r7,[r1,#0x28]
;;;3075        		inv[i]._Uil=bps[i+20]._buff[10]+(bps[i+20]._buff[11]*256);
00262e  7c07              LDRB     r7,[r0,#0x10]
002630  f890c011          LDRB     r12,[r0,#0x11]
002634  eb07270c          ADD      r7,r7,r12,LSL #8
002638  624f              STR      r7,[r1,#0x24]
;;;3076   			inv[i]._cnt=0;
00263a  708b              STRB     r3,[r1,#2]
;;;3077   			inv[i]._Uoutmin=bps[i+20]._buff[12]; 
00263c  7c87              LDRB     r7,[r0,#0x12]
00263e  f8817059          STRB     r7,[r1,#0x59]
;;;3078   			inv[i]._Uoutmax=bps[i+20]._buff[13]; 
002642  7cc7              LDRB     r7,[r0,#0x13]
002644  f881705a          STRB     r7,[r1,#0x5a]
;;;3079   			inv[i]._Pnom=bps[i+20]._buff[14]; 
002648  7d07              LDRB     r7,[r0,#0x14]
00264a  f8817058          STRB     r7,[r1,#0x58]
;;;3080   			inv[i]._net_contr_en=bps[i+20]._buff[15];
00264e  7d47              LDRB     r7,[r0,#0x15]
002650  f881705b          STRB     r7,[r1,#0x5b]
;;;3081   			inv[i]._pwm_en=bps[i+20]._buff[16];  
002654  7d87              LDRB     r7,[r0,#0x16]
002656  f881705c          STRB     r7,[r1,#0x5c]
;;;3082   			inv[i]._phase_mode=bps[i+20]._buff[17];  
00265a  7dc0              LDRB     r0,[r0,#0x17]
00265c  f881005d          STRB     r0,[r1,#0x5d]
002660  e018              B        |L1.9876|
                  |L1.9826|
;;;3083        		} 
;;;3084   		else 
;;;3085        		{
;;;3086         		inv[i]._Ii=0;
002662  eb020042          ADD      r0,r2,r2,LSL #1
002666  eb061040          ADD      r0,r6,r0,LSL #5
00266a  61c3              STR      r3,[r0,#0x1c]
;;;3087   			inv[i]._Pio=0;
00266c  62c3              STR      r3,[r0,#0x2c]
;;;3088   			inv[i]._Uio=0;
00266e  6183              STR      r3,[r0,#0x18]
;;;3089        		inv[i]._Ti=0;
002670  6203              STR      r3,[r0,#0x20]
;;;3090        		inv[i]._flags_tm=0; 
002672  f8803046          STRB     r3,[r0,#0x46]
;;;3091        		inv[i]._Uil=0;
002676  6243              STR      r3,[r0,#0x24]
;;;3092        		inv[i]._Uin=0;
002678  6283              STR      r3,[r0,#0x28]
;;;3093   			inv[i]._cnt=25; 
00267a  f04f0119          MOV      r1,#0x19
00267e  7081              STRB     r1,[r0,#2]
;;;3094   			inv[i]._Uoutmin=0; 
002680  f8803059          STRB     r3,[r0,#0x59]
;;;3095   			inv[i]._Uoutmax=0; 
002684  f880305a          STRB     r3,[r0,#0x5a]
;;;3096   			inv[i]._Pnom=0; 
002688  f8803058          STRB     r3,[r0,#0x58]
;;;3097   			inv[i]._net_contr_en=0;
00268c  f880305b          STRB     r3,[r0,#0x5b]
;;;3098   			inv[i]._pwm_en=0;   
002690  f880305c          STRB     r3,[r0,#0x5c]
                  |L1.9876|
002694  f1020201          ADD      r2,r2,#1              ;3065
002698  b2d2              UXTB     r2,r2                 ;3065
                  |L1.9882|
00269a  42aa              CMP      r2,r5                 ;3065
00269c  db9c              BLT      |L1.9688|
                  |L1.9886|
;;;3099   			   
;;;3100        		}
;;;3101        	}
;;;3102      	}
;;;3103   #endif
;;;3104   
;;;3105   #ifdef GLADKOV
;;;3106   inv[0]._Ii=bps[4]._buff[0]+(bps[4]._buff[1]*256);
;;;3107   inv[0]._Pio=bps[4]._buff[2]+(bps[4]._buff[3]*256);
;;;3108   inv[0]._Uio=bps[4]._buff[4]+(bps[4]._buff[5]*256);
;;;3109   inv[0]._Ti=(signed)(bps[4]._buff[6]);
;;;3110   inv[0]._flags_tm=bps[4]._buff[7];
;;;3111   inv[0]._Uin=bps[4]._buff[8]+(bps[4]._buff[9]*256);
;;;3112   inv[0]._Uil=bps[4]._buff[10]+(bps[4]._buff[11]*256);
;;;3113   inv[0]._cnt=0;    
;;;3114   
;;;3115   inv[1]._Ii=bps[21]._buff[0]+(bps[21]._buff[1]*256);
;;;3116   inv[1]._Pio=bps[21]._buff[2]+(bps[21]._buff[3]*256);
;;;3117   inv[1]._Uio=bps[21]._buff[4]+(bps[21]._buff[5]*256);
;;;3118   inv[1]._Ti=(signed)(bps[21]._buff[6]);
;;;3119   inv[1]._flags_tm=bps[21]._buff[7];
;;;3120   inv[1]._Uin=bps[21]._buff[8]+(bps[21]._buff[9]*256);
;;;3121   inv[1]._Uil=bps[21]._buff[10]+(bps[21]._buff[11]*256);
;;;3122   inv[1]._cnt=0;    
;;;3123   #endif
;;;3124   
;;;3125   /*
;;;3126   if((BAT_IS_ON[0]==bisON)&&(BAT_TYPE==1))
;;;3127   	{
;;;3128   	lakb[0]._battCommState=0;
;;;3129   	if(lakb[0]._cnt>10)lakb[0]._battCommState=2;
;;;3130   	else if(lakb[0]._bRS485ERR==1)lakb[0]._battCommState=1;
;;;3131   	
;;;3132   	if(lakb[0]._battCommState==0)
;;;3133   		{	
;;;3134   		bat[0]._Ub=(signed short)((lakb[0]._tot_bat_volt+5)/10);
;;;3135   		bat[0]._Ib=(signed short)lakb[0]._ch_curr;
;;;3136   		if(lakb[0]._dsch_curr) bat[0]._Ib=(signed short) (-lakb[0]._dsch_curr);
;;;3137   		bat[0]._Tb=(signed short)lakb[0]._max_cell_temp;
;;;3138   		}
;;;3139   	}
;;;3140   */
;;;3141   
;;;3142   #ifdef UKU_TELECORE2015
;;;3143   
;;;3144   	if(BAT_TYPE==2)
;;;3145   		{
;;;3146   		lakb[0]._ch_curr/*temp_SS*/=((ascii2halFhex(liBatteryInBuff[113]))<<12)+
;;;3147   					 		((ascii2halFhex(liBatteryInBuff[114]))<<8)+
;;;3148   							((ascii2halFhex(liBatteryInBuff[115]))<<4)+
;;;3149   							((ascii2halFhex(liBatteryInBuff[116])));
;;;3150   		
;;;3151   		/*if(temp_SS&0x8000)		lakb[0]._ch_curr=~temp_SS;
;;;3152   		else 				lakb[0]._ch_curr=temp_SS;*/
;;;3153   	
;;;3154   		lakb[0]._tot_bat_volt=	(unsigned short)(((ascii2halFhex(liBatteryInBuff[117]))<<12)+
;;;3155   							((ascii2halFhex(liBatteryInBuff[118]))<<8)+
;;;3156   							((ascii2halFhex(liBatteryInBuff[119]))<<4)+
;;;3157   							((ascii2halFhex(liBatteryInBuff[120]))))/100;
;;;3158   	
;;;3159   		lakb[0]._max_cell_temp= 	(((ascii2halFhex(liBatteryInBuff[93]))<<12)+
;;;3160   							((ascii2halFhex(liBatteryInBuff[94]))<<8)+
;;;3161   							((ascii2halFhex(liBatteryInBuff[95]))<<4)+
;;;3162   							((ascii2halFhex(liBatteryInBuff[96]))))/10-273;
;;;3163   	
;;;3164   		lakb[0]._s_o_c_abs=		(unsigned short)((ascii2halFhex(liBatteryInBuff[121]))<<12)+
;;;3165   							((ascii2halFhex(liBatteryInBuff[122]))<<8)+
;;;3166   							((ascii2halFhex(liBatteryInBuff[123]))<<4)+
;;;3167   							((ascii2halFhex(liBatteryInBuff[124])));
;;;3168   	
;;;3169   		lakb[0]._rat_cap=		(unsigned short)((ascii2halFhex(liBatteryInBuff[127]))<<12)+
;;;3170   							((ascii2halFhex(liBatteryInBuff[128]))<<8)+
;;;3171   							((ascii2halFhex(liBatteryInBuff[129]))<<4)+
;;;3172   							((ascii2halFhex(liBatteryInBuff[130])));
;;;3173   	
;;;3174   		lakb[0]._s_o_c=		lakb[0]._s_o_c_abs/(lakb[0]._rat_cap/100);
;;;3175   	
;;;3176   	
;;;3177   	/*	lakb[0]._rat_cap= (lakb_damp[i][13]*256)+ lakb_damp[i][14];
;;;3178   		lakb[0]._max_cell_volt= (lakb_damp[i][0]*256)+ lakb_damp[i][1];
;;;3179   		lakb[0]._min_cell_volt= (lakb_damp[i][2]*256)+ lakb_damp[i][3];
;;;3180   		lakb[0]._max_cell_temp= lakb_damp[i][4];
;;;3181   		lakb[0]._min_cell_temp= lakb_damp[i][5];
;;;3182   		lakb[0]._tot_bat_volt= (lakb_damp[i][6]*256)+ lakb_damp[i][7];
;;;3183   		lakb[0]._ch_curr= (lakb_damp[i][8]*256)+ lakb_damp[i][8];
;;;3184   		lakb[0]._dsch_curr= (lakb_damp[i][10]*256)+ lakb_damp[i][11];
;;;3185   		lakb[0]._s_o_c= lakb_damp[i][12];
;;;3186   		lakb[0]._r_b_t= lakb_damp[i][15];
;;;3187   		lakb[0]._c_c_l_v= (lakb_damp[i][16]*256)+ lakb_damp[i][17];
;;;3188   		lakb[0]._s_o_h= lakb_damp[i][18];
;;;3189   	
;;;3190   		if(lakb[i]._rat_cap==0)
;;;3191   			{
;;;3192   			if(lakb[i]._isOnCnt)
;;;3193   				{
;;;3194   				lakb[i]._isOnCnt--;
;;;3195   				if(lakb[i]._isOnCnt==0)
;;;3196   					{
;;;3197   					if(lakb[i]._battIsOn!=0) bLAKB_KONF_CH=1;
;;;3198   					}
;;;3199   				}
;;;3200   			}
;;;3201   		else 
;;;3202   			{
;;;3203   			if(lakb[i]._isOnCnt<50)
;;;3204   				{
;;;3205   				lakb[i]._isOnCnt++;
;;;3206   				if(lakb[i]._isOnCnt==50)
;;;3207   					{
;;;3208   					if(lakb[i]._battIsOn!=1) bLAKB_KONF_CH=1;
;;;3209   					}
;;;3210   				}
;;;3211   			}
;;;3212   		gran(&lakb[i]._isOnCnt,0,50);*/
;;;3213   		}
;;;3214   	else if(BAT_TYPE==3)
;;;3215   		{
;;;3216   		//short numOfPacks;
;;;3217   		//short numOfCells, numOfTemperCells, baseOfData;
;;;3218   		
;;;3219   		#ifndef UKU_TELECORE2016
;;;3220   		numOfCells=((ascii2halFhex(liBatteryInBuff[17]))<<4)+((ascii2halFhex(liBatteryInBuff[18])));
;;;3221   		numOfTemperCells=((ascii2halFhex(liBatteryInBuff[17+(numOfCells*4)+2]))<<4)+((ascii2halFhex(liBatteryInBuff[18+(numOfCells*4)+2])));
;;;3222   		numOfPacks=((ascii2halFhex(liBatteryInBuff[15]))<<4)+((ascii2halFhex(liBatteryInBuff[16])));
;;;3223   		if(numOfPacks)numOfPacks-=1;
;;;3224   		if((numOfPacks<0)||(numOfPacks>NUMBAT_TELECORE))numOfPacks=0;
;;;3225   		plazma_numOfCells=numOfCells;
;;;3226   		plazma_numOfTemperCells=numOfTemperCells;
;;;3227   		plazma_numOfPacks=numOfPacks;
;;;3228   
;;;3229   
;;;3230   		baseOfData=16+(numOfCells*4)+2+(numOfTemperCells*4)+2;
;;;3231   
;;;3232   		lakb[numOfPacks]._ch_curr=(signed short)(
;;;3233   							((ascii2halFhex(liBatteryInBuff[1+baseOfData]))<<12)+
;;;3234   							((ascii2halFhex(liBatteryInBuff[2+baseOfData]))<<8)+
;;;3235   							((ascii2halFhex(liBatteryInBuff[3+baseOfData]))<<4)+
;;;3236   							((ascii2halFhex(liBatteryInBuff[4+baseOfData])))
;;;3237   							);	  
;;;3238   
;;;3239   		lakb[numOfPacks]._tot_bat_volt=(signed short)(
;;;3240   							((ascii2halFhex(liBatteryInBuff[1+baseOfData+4]))<<12)+
;;;3241   							((ascii2halFhex(liBatteryInBuff[2+baseOfData+4]))<<8)+
;;;3242   							((ascii2halFhex(liBatteryInBuff[3+baseOfData+4]))<<4)+
;;;3243   							((ascii2halFhex(liBatteryInBuff[4+baseOfData+4])))
;;;3244   							)/10;
;;;3245   
;;;3246   		lakb[numOfPacks]._max_cell_temp=(signed short)(
;;;3247   							((ascii2halFhex(liBatteryInBuff[1+baseOfData-4]))<<12)+
;;;3248   							((ascii2halFhex(liBatteryInBuff[2+baseOfData-4]))<<8)+
;;;3249   							((ascii2halFhex(liBatteryInBuff[3+baseOfData-4]))<<4)+
;;;3250   							((ascii2halFhex(liBatteryInBuff[4+baseOfData-4])))
;;;3251   							)-2730;
;;;3252   
;;;3253   		lakb[numOfPacks]._s_o_c=(signed short)(
;;;3254   							((ascii2halFhex(liBatteryInBuff[1+baseOfData+8]))<<12)+
;;;3255   							((ascii2halFhex(liBatteryInBuff[2+baseOfData+8]))<<8)+
;;;3256   							((ascii2halFhex(liBatteryInBuff[3+baseOfData+8]))<<4)+
;;;3257   							((ascii2halFhex(liBatteryInBuff[4+baseOfData+8])))
;;;3258   							)/10;
;;;3259   
;;;3260   		lakb[numOfPacks]._s_o_h=(signed short)(
;;;3261   							((ascii2halFhex(liBatteryInBuff[1+baseOfData+14]))<<12)+
;;;3262   							((ascii2halFhex(liBatteryInBuff[2+baseOfData+14]))<<8)+
;;;3263   							((ascii2halFhex(liBatteryInBuff[3+baseOfData+14]))<<4)+
;;;3264   							((ascii2halFhex(liBatteryInBuff[4+baseOfData+14])))
;;;3265   							)/10;
;;;3266   		#endif
;;;3267   		
;;;3268   		#ifdef UKU_TELECORE2016
;;;3269   		{
;;;3270   		char i;
;;;3271   		
;;;3272   		for(i=0;i<NUMBAT_TELECORE;i++)
;;;3273   			{
;;;3274   			lakb[i]._s_o_c_percent= (signed short)(((unsigned long)lakb[i]._s_o_c*100UL)/(unsigned long)lakb[i]._s_o_h);
;;;3275   			}
;;;3276   		}
;;;3277   		#endif
;;;3278   		
;;;3279   										  
;;;3280   		}
;;;3281   	
;;;3282   if(sacredSunSilentCnt<3) 
;;;3283   	{
;;;3284       	bat[0]._Ub=lakb[0]._tot_bat_volt;
;;;3285       	bat[0]._Tb=lakb[0]._max_cell_temp;
;;;3286      	//bat[0]._Ib=lakb[0]._ch_curr/10;
;;;3287   	}
;;;3288   else 
;;;3289   	{
;;;3290       	//bat[0]._Ub=0;
;;;3291       	//bat[0]._Tb=0;
;;;3292      	//bat[0]._Ib=0;
;;;3293   	}
;;;3294   
;;;3295   if(BAT_TYPE==1)
;;;3296   	{
;;;3297   	char i;
;;;3298   	for(i=0;i<1;i++)
;;;3299   		{
;;;3300   		lakb[i]._rat_cap= (lakb_damp[i][13]*256)+ lakb_damp[i][14];
;;;3301   		lakb[i]._max_cell_volt= (lakb_damp[i][0]*256)+ lakb_damp[i][1];
;;;3302   		lakb[i]._min_cell_volt= (lakb_damp[i][2]*256)+ lakb_damp[i][3];
;;;3303   		lakb[i]._max_cell_temp= lakb_damp[i][4];
;;;3304   		lakb[i]._min_cell_temp= lakb_damp[i][5];
;;;3305   		lakb[i]._tot_bat_volt= (lakb_damp[i][6]*256)+ lakb_damp[i][7];
;;;3306   		lakb[i]._ch_curr= (lakb_damp[i][8]*256)+ lakb_damp[i][9];
;;;3307   		lakb[i]._dsch_curr= (lakb_damp[i][10]*256)+ lakb_damp[i][11];
;;;3308   		lakb[i]._s_o_c= lakb_damp[i][12];
;;;3309   		lakb[i]._r_b_t= lakb_damp[i][15];
;;;3310   		lakb[i]._c_c_l_v= (lakb_damp[i][16]*256)+ lakb_damp[i][17];
;;;3311   		lakb[i]._s_o_h= lakb_damp[i][18];
;;;3312   		lakb[i]._flags1= lakb_damp[i][34];
;;;3313   		lakb[i]._flags2= lakb_damp[i][35];
;;;3314   		lakb[i]._b_p_ser_num= lakb_damp[i][36];
;;;3315   
;;;3316   /*		if(lakb[i]._rat_cap==0)
;;;3317   			{
;;;3318   			if(lakb[i]._isOnCnt)
;;;3319   				{
;;;3320   				lakb[i]._isOnCnt--;
;;;3321   				if(lakb[i]._isOnCnt==0)
;;;3322   					{
;;;3323   					if(lakb[i]._battIsOn!=0) bLAKB_KONF_CH=1;
;;;3324   					}
;;;3325   				}
;;;3326   			}
;;;3327   		else 
;;;3328   			{
;;;3329   			if(lakb[i]._isOnCnt<50)
;;;3330   				{
;;;3331   				lakb[i]._isOnCnt++;
;;;3332   				if(lakb[i]._isOnCnt==50)
;;;3333   					{
;;;3334   					if(lakb[i]._battIsOn!=1) bLAKB_KONF_CH=1;
;;;3335   					}
;;;3336   				}
;;;3337   			} */
;;;3338   		gran(&lakb[i]._isOnCnt,0,50);
;;;3339   	 	}
;;;3340   
;;;3341   	if(lakb_damp[0][41]==100)
;;;3342   		{
;;;3343   		li_bat._485Error=1;
;;;3344   		}
;;;3345   	if(lakb_damp[0][41]==0)
;;;3346   		{
;;;3347   		//if(bRS485ERR)bLAKB_KONF_CH=1;
;;;3348   		li_bat._485Error=0;
;;;3349   		}
;;;3350   	li_bat._485ErrorCnt=lakb_damp[0][41];
;;;3351   
;;;3352   
;;;3353   	}
;;;3354   
;;;3355   
;;;3356   #endif
;;;3357   
;;;3358   		#ifdef UKU_TELECORE2017
;;;3359   		{
;;;3360   		char i;
;;;3361   		
;;;3362   		for(i=0;i<NUMBAT_TELECORE;i++)
;;;3363   			{
;;;3364   			lakb[i]._s_o_c_percent= (signed short)(((unsigned long)lakb[i]._s_o_c*100UL)/(unsigned long)lakb[i]._s_o_h);
;;;3365   			}
;;;3366   		}
;;;3367   		#endif
;;;3368   #ifdef UKU_TELECORE2015
;;;3369   //вычисление параметров работы батареи
;;;3370   //TODO дописать для всех батарей все параметры и при отцепке батарей
;;;3371   li_bat._batStat=bsOK;
;;;3372   if(BAT_TYPE==1) //COSLIGHT
;;;3373   	{
;;;3374   	if(li_bat._batStat==bsOK)
;;;3375   		{
;;;3376   		li_bat._Ub=lakb[0]._tot_bat_volt/10;
;;;3377   
;;;3378   		if(lakb[0]._ch_curr)li_bat._Ib=lakb[0]._ch_curr/10;
;;;3379   		else if(lakb[0]._dsch_curr) li_bat._Ib=bat[0]._Ib/10;//lakb[0]._dsch_curr/10;
;;;3380   	
;;;3381   		li_bat._ratCap=lakb[0]._rat_cap/100;
;;;3382   		li_bat._soc=lakb[0]._s_o_c;
;;;3383   		li_bat._soh=lakb[0]._s_o_h;
;;;3384   		li_bat._cclv=lakb[0]._c_c_l_v/10;
;;;3385   		li_bat._Tb=lakb[0]._max_cell_temp;
;;;3386   		li_bat._rbt=lakb[0]._r_b_t;
;;;3387   		}
;;;3388   	else 
;;;3389   		{
;;;3390   		li_bat._Ub=bat[0]._Ub;
;;;3391   		li_bat._Ib=bat[0]._Ib/10;
;;;3392   		li_bat._Tb=bat[0]._Tb;
;;;3393   		}
;;;3394   
;;;3395   	if((li_bat._485Error)||(li_bat._canError))
;;;3396   		{
;;;3397   		li_bat._batStat=bsOFF;
;;;3398   		}
;;;3399   	else li_bat._batStat=bsOK;
;;;3400   	}
;;;3401   else if(BAT_TYPE==2) //SACRED SUN
;;;3402   	{
;;;3403   	}
;;;3404   else if(BAT_TYPE==3) //ZTT
;;;3405   	{
;;;3406   	if(li_bat._batStat==bsOK)
;;;3407   		{
;;;3408   
;;;3409   		}
;;;3410   	}
;;;3411   #endif
;;;3412   
;;;3413   
;;;3414   /*
;;;3415   if((BAT_IS_ON[0]==bisON)&&(BAT_TYPE[0]==1)&&(BAT_LINK==0))
;;;3416   	{
;;;3417   
;;;3418   
;;;3419   	if(bat_drv_rx_buff[13]<=0x39)bbb[0]=bat_drv_rx_buff[13]-0x30;
;;;3420   	else bbb[0]=bat_drv_rx_buff[13]-55;
;;;3421   	if(bat_drv_rx_buff[14]<=0x39)bbb[1]=bat_drv_rx_buff[14]-0x30;
;;;3422   	else bbb[1]=bat_drv_rx_buff[14]-55;
;;;3423   	if(bat_drv_rx_buff[15]<=0x39)bbb[2]=bat_drv_rx_buff[15]-0x30;
;;;3424   	else bbb[2]=bat_drv_rx_buff[15]-55;
;;;3425   	if(bat_drv_rx_buff[16]<=0x39)bbb[3]=bat_drv_rx_buff[16]-0x30;
;;;3426   	else bbb[3]=bat_drv_rx_buff[16]-55;
;;;3427   
;;;3428   	tempSS=0;
;;;3429   	tempSS=((bbb[0]*4096)+(bbb[1]*256)+(bbb[2]*16)+bbb[3]);
;;;3430   
;;;3431   	bat[0]._max_cell_volt=(tempSS+5)/10;
;;;3432   
;;;3433   	if(bat_drv_rx_buff[17]<=0x39)bbb[0]=bat_drv_rx_buff[17]-0x30;
;;;3434   	else bbb[0]=bat_drv_rx_buff[17]-55;
;;;3435   	if(bat_drv_rx_buff[18]<=0x39)bbb[1]=bat_drv_rx_buff[18]-0x30;
;;;3436   	else bbb[1]=bat_drv_rx_buff[18]-55;
;;;3437   	if(bat_drv_rx_buff[19]<=0x39)bbb[2]=bat_drv_rx_buff[19]-0x30;
;;;3438   	else bbb[2]=bat_drv_rx_buff[19]-55;
;;;3439   	if(bat_drv_rx_buff[20]<=0x39)bbb[3]=bat_drv_rx_buff[20]-0x30;
;;;3440   	else bbb[3]=bat_drv_rx_buff[20]-55;
;;;3441   
;;;3442   	tempSS=0;
;;;3443   	tempSS=((bbb[0]*4096)+(bbb[1]*256)+(bbb[2]*16)+bbb[3]);
;;;3444   
;;;3445   	bat[0]._min_cell_volt=(tempSS+5)/10;
;;;3446   
;;;3447   
;;;3448   	}*/
;;;3449   
;;;3450   
;;;3451   
;;;3452   }
00269e  e8bd9ffc          POP      {r2-r12,pc}
;;;3453   
                          ENDP

                  mnemo_hndl PROC
;;;3454   //-----------------------------------------------
;;;3455   void mnemo_hndl(void)
0026a2  4aab              LDR      r2,|L1.10576|
;;;3456   {
;;;3457   if(((ind==iMn_220)||(ind==iMn))&&(sub_ind==0)&&(MNEMO_ON==mnON))
;;;3458   	{
;;;3459   	if(mnemo_cnt)mnemo_cnt--;
0026a4  49ab              LDR      r1,|L1.10580|
0026a6  7810              LDRB     r0,[r2,#0]            ;3457  ; a_ind
0026a8  2804              CMP      r0,#4                 ;3457
0026aa  d001              BEQ      |L1.9904|
0026ac  2801              CMP      r0,#1                 ;3457
0026ae  d105              BNE      |L1.9916|
                  |L1.9904|
0026b0  7850              LDRB     r0,[r2,#1]            ;3457  ; a_ind
0026b2  b918              CBNZ     r0,|L1.9916|
0026b4  48a8              LDR      r0,|L1.10584|
0026b6  7800              LDRB     r0,[r0,#0]            ;3457  ; MNEMO_ON
0026b8  2855              CMP      r0,#0x55              ;3457
0026ba  d003              BEQ      |L1.9924|
                  |L1.9916|
;;;3460   	}
;;;3461   else mnemo_cnt=MNEMO_TIME;
0026bc  48a7              LDR      r0,|L1.10588|
0026be  8800              LDRH     r0,[r0,#0]  ; MNEMO_TIME
0026c0  7008              STRB     r0,[r1,#0]
                  |L1.9922|
;;;3462   }
0026c2  4770              BX       lr
                  |L1.9924|
0026c4  7808              LDRB     r0,[r1,#0]            ;3459  ; mnemo_cnt
0026c6  2800              CMP      r0,#0                 ;3459
0026c8  d0fb              BEQ      |L1.9922|
0026ca  f1a00001          SUB      r0,r0,#1              ;3459
0026ce  7008              STRB     r0,[r1,#0]            ;3459
0026d0  4770              BX       lr
;;;3463   
                          ENDP

                  adc_init PROC
;;;3464   //-----------------------------------------------
;;;3465   void adc_init(void)
0026d2  48a3              LDR      r0,|L1.10592|
;;;3466   {
;;;3467   
;;;3468   SET_REG(LPC_PINCON->PINSEL1,1,(25-16)*2,2);
0026d4  6841              LDR      r1,[r0,#4]
0026d6  f4212140          BIC      r1,r1,#0xc0000
0026da  f4412180          ORR      r1,r1,#0x40000
0026de  6041              STR      r1,[r0,#4]
;;;3469   SET_REG(LPC_PINCON->PINSEL1,1,(24-16)*2,2);
0026e0  6841              LDR      r1,[r0,#4]
0026e2  f4213140          BIC      r1,r1,#0x30000
0026e6  f4413180          ORR      r1,r1,#0x10000
0026ea  6041              STR      r1,[r0,#4]
;;;3470   SET_REG(LPC_PINCON->PINSEL1,1,(23-16)*2,2);
0026ec  6841              LDR      r1,[r0,#4]
0026ee  f4214140          BIC      r1,r1,#0xc000
0026f2  f4414180          ORR      r1,r1,#0x4000
0026f6  6041              STR      r1,[r0,#4]
;;;3471   
;;;3472   
;;;3473   SET_REG(LPC_PINCON->PINMODE1,2,(25-16)*2,2);
0026f8  6c41              LDR      r1,[r0,#0x44]
0026fa  f4212140          BIC      r1,r1,#0xc0000
0026fe  f4412100          ORR      r1,r1,#0x80000
002702  6441              STR      r1,[r0,#0x44]
;;;3474   SET_REG(LPC_PINCON->PINMODE1,2,(24-16)*2,2);
002704  6c41              LDR      r1,[r0,#0x44]
002706  f4213140          BIC      r1,r1,#0x30000
00270a  f4413100          ORR      r1,r1,#0x20000
00270e  6441              STR      r1,[r0,#0x44]
;;;3475   SET_REG(LPC_PINCON->PINMODE1,2,(23-16)*2,2);
002710  6c41              LDR      r1,[r0,#0x44]
002712  f4214140          BIC      r1,r1,#0xc000
002716  f4414100          ORR      r1,r1,#0x8000
00271a  6441              STR      r1,[r0,#0x44]
;;;3476   
;;;3477   SET_REG(LPC_ADC->ADCR,0,24,3);
00271c  4891              LDR      r0,|L1.10596|
00271e  6801              LDR      r1,[r0,#0]
002720  f02161e0          BIC      r1,r1,#0x7000000
002724  6001              STR      r1,[r0,#0]
;;;3478   
;;;3479   SET_REG(LPC_ADC->ADCR,1,21,1);
002726  6801              LDR      r1,[r0,#0]
002728  f4411100          ORR      r1,r1,#0x200000
00272c  6001              STR      r1,[r0,#0]
;;;3480   SET_REG(LPC_ADC->ADCR,0,16,1);
00272e  6801              LDR      r1,[r0,#0]
002730  f4213180          BIC      r1,r1,#0x10000
002734  6001              STR      r1,[r0,#0]
;;;3481   SET_REG(LPC_ADC->ADCR,1,8,8);
002736  6801              LDR      r1,[r0,#0]
002738  f421417f          BIC      r1,r1,#0xff00
00273c  f4417180          ORR      r1,r1,#0x100
002740  6001              STR      r1,[r0,#0]
;;;3482   
;;;3483   //SET_REG(LPC_GPIO0->FIODIR,7,5,3);
;;;3484   //SET_REG(LPC_GPIO0->FIOPIN,4,5,3);
;;;3485   	
;;;3486   	/*if(adc_ch<=7)*///SET_REG(LPC_ADC->ADCR,1<<5,0,8);
;;;3487        /*else if(adc_ch==8) SET_REG(LPC_ADC->ADCR,1<<2,0,8);
;;;3488        else SET_REG(LPC_ADC->ADCR,1<<4,0,8);*/
;;;3489   
;;;3490   LPC_ADC->ADINTEN     =  (1<< 8);      /* global enable interrupt            */
002742  f44f7180          MOV      r1,#0x100
002746  60c1              STR      r1,[r0,#0xc]
002748  4887              LDR      r0,|L1.10600|
00274a  f44f0180          MOV      r1,#0x400000
00274e  6001              STR      r1,[r0,#0]
;;;3491   
;;;3492   NVIC_EnableIRQ(ADC_IRQn);             /* enable ADC Interrupt               */
;;;3493   
;;;3494   
;;;3495   }
002750  4770              BX       lr
;;;3496   
                          ENDP

                  adc_drv7 PROC
;;;3497   //-----------------------------------------------
;;;3498   void adc_drv7(void) //(Uсети - постоянка)
002752  e92d41f0          PUSH     {r4-r8,lr}
;;;3499   {
;;;3500   //int temp_S;
;;;3501   //char i;
;;;3502   //signed short temp_SS;
;;;3503   
;;;3504   adc_self_ch_disp[0]=abs_pal(adc_self_ch_buff[1]-adc_self_ch_buff[0]);//adc_self_ch_buff[0]&0x0f80;
002756  4c85              LDR      r4,|L1.10604|
002758  8860              LDRH     r0,[r4,#2]  ; adc_self_ch_buff
00275a  8821              LDRH     r1,[r4,#0]  ; adc_self_ch_buff
00275c  1a40              SUBS     r0,r0,r1
00275e  b200              SXTH     r0,r0
002760  f7fffffe          BL       abs_pal
002764  1da6              ADDS     r6,r4,#6
002766  8030              STRH     r0,[r6,#0]
;;;3505   adc_self_ch_disp[1]=abs_pal(adc_self_ch_buff[2]-adc_self_ch_buff[1]);//adc_self_ch_buff[1]&0x0f80;
002768  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
00276a  8861              LDRH     r1,[r4,#2]  ; adc_self_ch_buff
00276c  1a40              SUBS     r0,r0,r1
00276e  b200              SXTH     r0,r0
002770  f7fffffe          BL       abs_pal
002774  8070              STRH     r0,[r6,#2]
;;;3506   adc_self_ch_disp[2]=abs_pal(adc_self_ch_buff[2]-adc_self_ch_buff[0]);//adc_self_ch_buff[2]&0x0f80;
002776  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
002778  8821              LDRH     r1,[r4,#0]  ; adc_self_ch_buff
00277a  1a40              SUBS     r0,r0,r1
00277c  b200              SXTH     r0,r0
00277e  f7fffffe          BL       abs_pal
002782  80b0              STRH     r0,[r6,#4]
;;;3507   
;;;3508   //adc_self_ch_disp[0]=adc_self_ch_buff[0]&0x0ff0;
;;;3509   //adc_self_ch_disp[1]=adc_self_ch_buff[1]&0x0ff0;
;;;3510   //adc_self_ch_disp[2]=adc_self_ch_buff[2]&0x0ff0;
;;;3511   
;;;3512   
;;;3513   if(adc_self_ch_disp[2]<300)//==adc_self_ch_disp[2])
002784  f44f7196          MOV      r1,#0x12c
;;;3514   	{
;;;3515   	adc_result=adc_self_ch_buff[2];
002788  f1a405de          SUB      r5,r4,#0xde
00278c  4288              CMP      r0,r1                 ;3513
00278e  da02              BGE      |L1.10134|
002790  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
002792  86a8              STRH     r0,[r5,#0x34]
002794  e00c              B        |L1.10160|
                  |L1.10134|
;;;3516   	} 
;;;3517   else if(adc_self_ch_disp[1]<300)//==adc_self_ch_disp[2])
002796  f9b60002          LDRSH    r0,[r6,#2]  ; adc_self_ch_disp
00279a  4288              CMP      r0,r1
00279c  da02              BGE      |L1.10148|
;;;3518   	{
;;;3519   	adc_result=adc_self_ch_buff[1];
00279e  8860              LDRH     r0,[r4,#2]  ; adc_self_ch_buff
0027a0  86a8              STRH     r0,[r5,#0x34]
0027a2  e005              B        |L1.10160|
                  |L1.10148|
;;;3520   	}
;;;3521   else if(adc_self_ch_disp[0]<300)//==adc_self_ch_disp[1])
0027a4  f9b60000          LDRSH    r0,[r6,#0]  ; adc_self_ch_disp
0027a8  4288              CMP      r0,r1
0027aa  da01              BGE      |L1.10160|
;;;3522   	{
;;;3523   	adc_result=adc_self_ch_buff[0];
0027ac  8820              LDRH     r0,[r4,#0]  ; adc_self_ch_buff
0027ae  86a8              STRH     r0,[r5,#0x34]
                  |L1.10160|
;;;3524   	}
;;;3525       //adc_result=92;
;;;3526   
;;;3527   if(adc_ch_net)
0027b0  79ef              LDRB     r7,[r5,#7]  ; adc_ch_net
0027b2  2600              MOVS     r6,#0
0027b4  b32f              CBZ      r7,|L1.10242|
;;;3528   	{
;;;3529   
;;;3530   	main_power_buffer[0]+=(long)(adc_result);
0027b6  486e              LDR      r0,|L1.10608|
0027b8  f9b51034          LDRSH    r1,[r5,#0x34]  ; adc_result
0027bc  6802              LDR      r2,[r0,#0]  ; main_power_buffer
0027be  440a              ADD      r2,r2,r1
0027c0  6002              STR      r2,[r0,#0]  ; main_power_buffer
;;;3531   	main_power_buffer[1]+=(long)(adc_result);
0027c2  6842              LDR      r2,[r0,#4]  ; main_power_buffer
0027c4  440a              ADD      r2,r2,r1
0027c6  6042              STR      r2,[r0,#4]  ; main_power_buffer
;;;3532   	main_power_buffer[2]+=(long)(adc_result);
0027c8  6882              LDR      r2,[r0,#8]  ; main_power_buffer
0027ca  440a              ADD      r2,r2,r1
0027cc  6082              STR      r2,[r0,#8]  ; main_power_buffer
;;;3533   	main_power_buffer[3]+=(long)(adc_result);
0027ce  68c2              LDR      r2,[r0,#0xc]  ; main_power_buffer
0027d0  4411              ADD      r1,r1,r2
0027d2  60c1              STR      r1,[r0,#0xc]  ; main_power_buffer
;;;3534   
;;;3535   	adc_net_buff_cnt++;
0027d4  8fa9              LDRH     r1,[r5,#0x3c]  ; adc_net_buff_cnt
0027d6  f1010101          ADD      r1,r1,#1
0027da  b209              SXTH     r1,r1
0027dc  87a9              STRH     r1,[r5,#0x3c]
;;;3536   	if(adc_net_buff_cnt>=0x1000)
0027de  f5b15f80          CMP      r1,#0x1000
0027e2  db00              BLT      |L1.10214|
;;;3537   		{
;;;3538   		adc_net_buff_cnt=0;
0027e4  87ae              STRH     r6,[r5,#0x3c]
                  |L1.10214|
;;;3539   		}
;;;3540   	if((adc_net_buff_cnt&0x03ff)==0)
0027e6  f9b5103c          LDRSH    r1,[r5,#0x3c]  ; adc_net_buff_cnt
0027ea  058a              LSLS     r2,r1,#22
0027ec  d131              BNE      |L1.10322|
;;;3541   		{
;;;3542   		#ifdef UKU_220
;;;3543   		net_buff_=(short)((main_power_buffer[adc_net_buff_cnt>>10])>>11);
;;;3544   		#else
;;;3545   		#ifdef UKU_220_V2
;;;3546   		net_buff_=(short)((main_power_buffer[adc_net_buff_cnt>>10])>>11);
;;;3547   		#else
;;;3548   		net_buff_=(short)((main_power_buffer[adc_net_buff_cnt>>10])>>8);
0027ee  ea4f21a1          ASR      r1,r1,#10
0027f2  f8502021          LDR      r2,[r0,r1,LSL #2]
0027f6  ea4f2222          ASR      r2,r2,#8
0027fa  866a              STRH     r2,[r5,#0x32]
;;;3549   		#endif
;;;3550   		#endif
;;;3551   		main_power_buffer[adc_net_buff_cnt>>10]=0;
0027fc  f8406021          STR      r6,[r0,r1,LSL #2]
002800  e027              B        |L1.10322|
                  |L1.10242|
;;;3552   		}
;;;3553   
;;;3554   
;;;3555   	} 
;;;3556   else if(!adc_ch_net)
;;;3557   	{
;;;3558   	adc_buff[adc_ch][adc_ch_cnt]=(long)adc_result;
002802  485c              LDR      r0,|L1.10612|
002804  7a2c              LDRB     r4,[r5,#8]  ; adc_ch
002806  7a6a              LDRB     r2,[r5,#9]  ; adc_ch_cnt
002808  eb001384          ADD      r3,r0,r4,LSL #6
00280c  f9b51034          LDRSH    r1,[r5,#0x34]  ; adc_result
002810  f8431022          STR      r1,[r3,r2,LSL #2]
;;;3559   	
;;;3560   	if((adc_ch_cnt&0x03)==0)
002814  0790              LSLS     r0,r2,#30
002816  d10f              BNE      |L1.10296|
;;;3561   		{
;;;3562   		long temp_L;
;;;3563   		char i;
;;;3564   		temp_L=0;
002818  4601              MOV      r1,r0
                  |L1.10266|
;;;3565   		for(i=0;i<16;i++)
;;;3566   			{
;;;3567   			temp_L+=adc_buff[adc_ch][i];
00281a  f853c020          LDR      r12,[r3,r0,LSL #2]
00281e  4461              ADD      r1,r1,r12
002820  f1000001          ADD      r0,r0,#1              ;3565
002824  b2c0              UXTB     r0,r0                 ;3565
002826  2810              CMP      r0,#0x10              ;3565
002828  d3f7              BCC      |L1.10266|
;;;3568   			}
;;;3569   		adc_buff_[adc_ch]= (short)(temp_L>>4);
00282a  ea4f1021          ASR      r0,r1,#4
00282e  4950              LDR      r1,|L1.10608|
002830  f1a10120          SUB      r1,r1,#0x20
002834  f8210014          STRH     r0,[r1,r4,LSL #1]
                  |L1.10296|
;;;3570   
;;;3571   		//adc_buff_[3]=346;
;;;3572   		}
;;;3573   	if(++adc_ch>=16) 
002838  1c64              ADDS     r4,r4,#1
00283a  b2e0              UXTB     r0,r4
00283c  7228              STRB     r0,[r5,#8]
00283e  2810              CMP      r0,#0x10
002840  d307              BCC      |L1.10322|
;;;3574   		{
;;;3575   		adc_ch=0;
002842  722e              STRB     r6,[r5,#8]
;;;3576   		adc_ch_cnt++;
002844  f1020201          ADD      r2,r2,#1
002848  b2d0              UXTB     r0,r2
00284a  7268              STRB     r0,[r5,#9]
;;;3577   		if(adc_ch_cnt>=16)adc_ch_cnt=0;
00284c  2810              CMP      r0,#0x10
00284e  d300              BCC      |L1.10322|
002850  726e              STRB     r6,[r5,#9]
                  |L1.10322|
;;;3578   		}
;;;3579   	}
;;;3580   
;;;3581   //adc_buff[adc_ch][adc_cnt1]=(adc_self_ch_buff[2]+adc_self_ch_buff[1])/2;
;;;3582   
;;;3583   //if(adc_buff[adc_ch][adc_cnt1]<adc_buff_min[adc_ch])adc_buff_min[adc_ch]=adc_buff[adc_ch][adc_cnt1];
;;;3584   //if(adc_buff[adc_ch][adc_cnt1]>adc_buff_max[adc_ch])adc_buff_max[adc_ch]=adc_buff[adc_ch][adc_cnt1];
;;;3585   /*
;;;3586   	{
;;;3587   	if((adc_cnt1&0x03)==0)
;;;3588   		{
;;;3589   		temp_S=0;
;;;3590   		for(i=0;i<16;i++)
;;;3591   			{
;;;3592   			temp_S+=adc_buff[adc_ch][i];
;;;3593   			} 
;;;3594            	adc_buff_[adc_ch]=temp_S>>4;
;;;3595             }
;;;3596   	}*/
;;;3597   
;;;3598   
;;;3599   		  
;;;3600   
;;;3601   adc_self_ch_cnt=0;
002852  71ae              STRB     r6,[r5,#6]
;;;3602   
;;;3603   adc_ch_net++;
002854  f1070701          ADD      r7,r7,#1
;;;3604   adc_ch_net&=1;
002858  f0070001          AND      r0,r7,#1
00285c  71e8              STRB     r0,[r5,#7]
;;;3605   
;;;3606   //SET_REG(LPC_GPIO0->FIODIR,7,5,3);
;;;3607   //SET_REG(LPC_GPIO0->FIOPIN,adc_ch,5,3);
;;;3608   
;;;3609   if(adc_ch_net)
;;;3610   	{
;;;3611   	//LPC_GPIO2->FIODIR|=(1<<7);
;;;3612   	//LPC_GPIO2->FIOPIN|=(1<<7);
;;;3613   	SET_REG(LPC_ADC->ADCR,1<<2,0,8);
00285e  4a41              LDR      r2,|L1.10596|
002860  b130              CBZ      r0,|L1.10352|
002862  6810              LDR      r0,[r2,#0]
002864  f02000ff          BIC      r0,r0,#0xff
002868  f1000004          ADD      r0,r0,#4
00286c  6010              STR      r0,[r2,#0]
00286e  e03d              B        |L1.10476|
                  |L1.10352|
;;;3614   	}
;;;3615   else
;;;3616   	{
;;;3617   	//LPC_GPIO2->FIODIR|=(1<<7);
;;;3618   	//LPC_GPIO2->FIOPIN&=~(1<<7);
;;;3619   	if(!(adc_ch&(1<<3)))SET_REG(LPC_ADC->ADCR,1<<0,0,8);
002870  7a29              LDRB     r1,[r5,#8]  ; adc_ch
002872  0708              LSLS     r0,r1,#28
002874  d406              BMI      |L1.10372|
002876  6810              LDR      r0,[r2,#0]
002878  f02000ff          BIC      r0,r0,#0xff
00287c  f1000001          ADD      r0,r0,#1
002880  6010              STR      r0,[r2,#0]
002882  e005              B        |L1.10384|
                  |L1.10372|
;;;3620   	else 			SET_REG(LPC_ADC->ADCR,1<<1,0,8);
002884  6810              LDR      r0,[r2,#0]
002886  f02000ff          BIC      r0,r0,#0xff
00288a  f1000002          ADD      r0,r0,#2
00288e  6010              STR      r0,[r2,#0]
                  |L1.10384|
;;;3621   
;;;3622   
;;;3623   	SET_REG(LPC_GPIO0->FIODIR,1,28,1);
002890  4839              LDR      r0,|L1.10616|
002892  6803              LDR      r3,[r0,#0]
002894  f0435380          ORR      r3,r3,#0x10000000
002898  6003              STR      r3,[r0,#0]
;;;3624   	SET_REG(LPC_GPIO1->FIODIR,1,30,1);
00289a  6a03              LDR      r3,[r0,#0x20]
00289c  f0434380          ORR      r3,r3,#0x40000000
0028a0  6203              STR      r3,[r0,#0x20]
;;;3625   	SET_REG(LPC_GPIO3->FIODIR,1,26,1);
0028a2  6e03              LDR      r3,[r0,#0x60]
0028a4  f0436380          ORR      r3,r3,#0x4000000
0028a8  6603              STR      r3,[r0,#0x60]
;;;3626   
;;;3627   	if(!(adc_ch&(1<<0)))SET_REG(LPC_GPIO0->FIOPIN,0,28,1);
0028aa  07cb              LSLS     r3,r1,#31
0028ac  d00a              BEQ      |L1.10436|
;;;3628   	else 			SET_REG(LPC_GPIO0->FIOPIN,1,28,1);
0028ae  6943              LDR      r3,[r0,#0x14]
0028b0  f0435380          ORR      r3,r3,#0x10000000
0028b4  6143              STR      r3,[r0,#0x14]
                  |L1.10422|
;;;3629   
;;;3630   	if(!(adc_ch&(1<<1)))SET_REG(LPC_GPIO1->FIOPIN,0,30,1);
0028b6  078b              LSLS     r3,r1,#30
0028b8  d409              BMI      |L1.10446|
0028ba  6b43              LDR      r3,[r0,#0x34]
0028bc  f0234380          BIC      r3,r3,#0x40000000
0028c0  6343              STR      r3,[r0,#0x34]
0028c2  e008              B        |L1.10454|
                  |L1.10436|
0028c4  6943              LDR      r3,[r0,#0x14]         ;3627
0028c6  f0235380          BIC      r3,r3,#0x10000000     ;3627
0028ca  6143              STR      r3,[r0,#0x14]         ;3627
0028cc  e7f3              B        |L1.10422|
                  |L1.10446|
;;;3631   	else 			SET_REG(LPC_GPIO1->FIOPIN,1,30,1);
0028ce  6b43              LDR      r3,[r0,#0x34]
0028d0  f0434380          ORR      r3,r3,#0x40000000
0028d4  6343              STR      r3,[r0,#0x34]
                  |L1.10454|
;;;3632   
;;;3633   	if(!(adc_ch&(1<<2)))SET_REG(LPC_GPIO3->FIOPIN,0,26,1);
0028d6  0749              LSLS     r1,r1,#29
0028d8  d404              BMI      |L1.10468|
0028da  6f41              LDR      r1,[r0,#0x74]
0028dc  f0216180          BIC      r1,r1,#0x4000000
0028e0  6741              STR      r1,[r0,#0x74]
0028e2  e003              B        |L1.10476|
                  |L1.10468|
;;;3634   	else 			SET_REG(LPC_GPIO3->FIOPIN,1,26,1);
0028e4  6f41              LDR      r1,[r0,#0x74]
0028e6  f0416180          ORR      r1,r1,#0x4000000
0028ea  6741              STR      r1,[r0,#0x74]
                  |L1.10476|
;;;3635   	}
;;;3636   	
;;;3637   
;;;3638   
;;;3639   
;;;3640   LPC_ADC->ADCR |=  (1<<24);
0028ec  6810              LDR      r0,[r2,#0]
0028ee  f0407080          ORR      r0,r0,#0x1000000
0028f2  6010              STR      r0,[r2,#0]
;;;3641   
;;;3642   }
0028f4  e8bd81f0          POP      {r4-r8,pc}
;;;3643   
                          ENDP

                  avg_hndl PROC
;;;3900   //-----------------------------------------------
;;;3901   void avg_hndl(void)
0028f8  b5f0              PUSH     {r4-r7,lr}
;;;3902   { 
;;;3903   char i;
;;;3904   
;;;3905   //#define AVGCNTMAX	5
;;;3906   if(avg_main_cnt)
0028fa  4d1c              LDR      r5,|L1.10604|
0028fc  3dde              SUBS     r5,r5,#0xde
0028fe  f9b5002e          LDRSH    r0,[r5,#0x2e]  ; avg_main_cnt
002902  b118              CBZ      r0,|L1.10508|
;;;3907   	{
;;;3908   	avg_main_cnt--;
002904  f1a00001          SUB      r0,r0,#1
002908  85e8              STRH     r0,[r5,#0x2e]
;;;3909   	goto avg_hndl_end;
00290a  e0b5              B        |L1.10872|
                  |L1.10508|
;;;3910   	}                 
;;;3911   
;;;3912   avg_num=0;
00290c  f04f0600          MOV      r6,#0
002910  742e              STRB     r6,[r5,#0x10]
;;;3913   
;;;3914   for(i=0;i<NUMIST;i++)
002912  4630              MOV      r0,r6
002914  491a              LDR      r1,|L1.10624|
;;;3915   	{
;;;3916   	if((bps[i]._state==bsWRK)&&(bps[i]._cnt<20))avg_num++;
002916  4b19              LDR      r3,|L1.10620|
002918  f9b12000          LDRSH    r2,[r1,#0]            ;3914
00291c  e033              B        |L1.10630|
                  |L1.10526|
00291e  ebc001c0          RSB      r1,r0,r0,LSL #3
002922  eb011100          ADD      r1,r1,r0,LSL #4
002926  eb030181          ADD      r1,r3,r1,LSL #2
00292a  788c              LDRB     r4,[r1,#2]
00292c  2c01              CMP      r4,#1
00292e  d106              BNE      |L1.10558|
002930  78c9              LDRB     r1,[r1,#3]
002932  2914              CMP      r1,#0x14
002934  d203              BCS      |L1.10558|
002936  7c29              LDRB     r1,[r5,#0x10]  ; avg_num
002938  f1010101          ADD      r1,r1,#1
00293c  7429              STRB     r1,[r5,#0x10]
                  |L1.10558|
00293e  f1000001          ADD      r0,r0,#1              ;3914
002942  e01f              B        |L1.10628|
                  |L1.10564|
                          DCD      Isumm
                  |L1.10568|
                          DCD      NUMINV
                  |L1.10572|
                          DCD      inv
                  |L1.10576|
                          DCD      a_ind
                  |L1.10580|
                          DCD      mnemo_cnt
                  |L1.10584|
                          DCD      MNEMO_ON
                  |L1.10588|
                          DCD      MNEMO_TIME
                  |L1.10592|
                          DCD      0x4002c000
                  |L1.10596|
                          DCD      0x40034000
                  |L1.10600|
                          DCD      0xe000e100
                  |L1.10604|
                          DCD      ||area_number.25||+0xde
                  |L1.10608|
                          DCD      ||.bss||+0x42c
                  |L1.10612|
                          DCD      ||.bss||+0xc
                  |L1.10616|
                          DCD      0x2009c000
                  |L1.10620|
                          DCD      bps
                  |L1.10624|
                          DCD      NUMIST
                  |L1.10628|
002984  b2c0              UXTB     r0,r0                 ;3914
                  |L1.10630|
002986  4290              CMP      r0,r2                 ;3914
002988  dbc9              BLT      |L1.10526|
;;;3917   	}
;;;3918   
;;;3919   /*if((K[NUMI]>=1)&&(bps_state[0]==ssWRK))	avg_num++;
;;;3920   if((K[NUMI]>=2)&&(bps_state[1]==ssWRK))	avg_num++;
;;;3921   if((K[NUMI]>=3)&&(bps_state[2]==ssWRK))	avg_num++;*/
;;;3922   
;;;3923   	
;;;3924   if(avg_num<2)
00298a  7c2f              LDRB     r7,[r5,#0x10]  ; avg_num
00298c  2f02              CMP      r7,#2
00298e  d373              BCC      |L1.10872|
;;;3925   	{
;;;3926   	goto avg_hndl_end;
;;;3927   	}
;;;3928   	
;;;3929   else
;;;3930   	{
;;;3931   	i_avg_min=5000;
002990  f2413088          MOV      r0,#0x1388
002994  4cff              LDR      r4,|L1.11668|
002996  6160              STR      r0,[r4,#0x14]  ; i_avg_min
;;;3932   	i_avg_max=0;
002998  6126              STR      r6,[r4,#0x10]  ; i_avg_max
;;;3933   	i_avg_summ=0;
00299a  61a6              STR      r6,[r4,#0x18]  ; i_avg_summ
;;;3934   	for(i=0;i<NUMIST;i++)
00299c  f04f0100          MOV      r1,#0
0029a0  e01c              B        |L1.10716|
                  |L1.10658|
;;;3935   		{
;;;3936   		if(bps[i]._state==bsWRK)
0029a2  ebc100c1          RSB      r0,r1,r1,LSL #3
0029a6  eb001001          ADD      r0,r0,r1,LSL #4
0029aa  eb030080          ADD      r0,r3,r0,LSL #2
0029ae  f890c002          LDRB     r12,[r0,#2]
0029b2  f1bc0f01          CMP      r12,#1
0029b6  d10e              BNE      |L1.10710|
;;;3937   			{
;;;3938   			if(bps[i]._Ii>i_avg_max)i_avg_max=bps[i]._Ii;
0029b8  6a40              LDR      r0,[r0,#0x24]
0029ba  f8d4c010          LDR      r12,[r4,#0x10]  ; i_avg_max
0029be  4560              CMP      r0,r12
0029c0  dd00              BLE      |L1.10692|
0029c2  6120              STR      r0,[r4,#0x10]  ; i_avg_max
                  |L1.10692|
;;;3939   			if(bps[i]._Ii<i_avg_min)i_avg_min=bps[i]._Ii;
0029c4  f8d4c014          LDR      r12,[r4,#0x14]  ; i_avg_min
0029c8  4560              CMP      r0,r12
0029ca  da00              BGE      |L1.10702|
0029cc  6160              STR      r0,[r4,#0x14]  ; i_avg_min
                  |L1.10702|
;;;3940   			
;;;3941   			i_avg_summ+=bps[i]._Ii;
0029ce  f8d4c018          LDR      r12,[r4,#0x18]  ; i_avg_summ
0029d2  4460              ADD      r0,r0,r12
0029d4  61a0              STR      r0,[r4,#0x18]  ; i_avg_summ
                  |L1.10710|
0029d6  f1010101          ADD      r1,r1,#1              ;3934
0029da  b2c9              UXTB     r1,r1                 ;3934
                  |L1.10716|
0029dc  4291              CMP      r1,r2                 ;3934
0029de  dbe0              BLT      |L1.10658|
;;;3942   			}
;;;3943   		}
;;;3944   	i_avg=i_avg_summ/avg_num;	
0029e0  69a0              LDR      r0,[r4,#0x18]  ; i_avg_summ
0029e2  fb90f7f7          SDIV     r7,r0,r7
0029e6  61e7              STR      r7,[r4,#0x1c]  ; i_avg
;;;3945   	
;;;3946   	if(i_avg_min==0)i_avg_min=1;
0029e8  6960              LDR      r0,[r4,#0x14]  ; i_avg_min
0029ea  2101              MOVS     r1,#1                 ;3916
0029ec  b900              CBNZ     r0,|L1.10736|
0029ee  6161              STR      r1,[r4,#0x14]  ; i_avg_min
                  |L1.10736|
;;;3947   
;;;3948   	avg=i_avg_max;
0029f0  6920              LDR      r0,[r4,#0x10]  ; i_avg_max
;;;3949   	avg*=100;
0029f2  f04f0c64          MOV      r12,#0x64
0029f6  fb00f00c          MUL      r0,r0,r12
;;;3950   	avg/=i_avg_min;
0029fa  f8d4c014          LDR      r12,[r4,#0x14]  ; i_avg_min
0029fe  fb90f0fc          SDIV     r0,r0,r12
002a02  6220              STR      r0,[r4,#0x20]  ; avg
;;;3951   
;;;3952   	if(avg>160) bAVG=1;
002a04  28a0              CMP      r0,#0xa0
002a06  dd00              BLE      |L1.10762|
002a08  73e9              STRB     r1,[r5,#0xf]
                  |L1.10762|
;;;3953   	if(avg<120) bAVG=0;
002a0a  2878              CMP      r0,#0x78
002a0c  da00              BGE      |L1.10768|
002a0e  73ee              STRB     r6,[r5,#0xf]
                  |L1.10768|
;;;3954   
;;;3955   	if(bAVG==1)
002a10  7be8              LDRB     r0,[r5,#0xf]  ; bAVG
002a12  2801              CMP      r0,#1
002a14  d130              BNE      |L1.10872|
;;;3956   		{
;;;3957   		for(i=0;i<NUMIST;i++)
002a16  f04f0100          MOV      r1,#0
;;;3958   			{
;;;3959   			if(bps[i]._state==bsWRK)
;;;3960   				{
;;;3961   				if(bps[i]._Ii>i_avg)bps[i]._x_--;
;;;3962   				if(bps[i]._Ii<i_avg)bps[i]._x_++;
;;;3963   			
;;;3964   				if(bps[i]._x_<-50)bps[i]._x_=-50;
002a1a  f06f0431          MVN      r4,#0x31
002a1e  e029              B        |L1.10868|
                  |L1.10784|
002a20  ebc100c1          RSB      r0,r1,r1,LSL #3       ;3959
002a24  eb001001          ADD      r0,r0,r1,LSL #4       ;3959
002a28  eb030080          ADD      r0,r3,r0,LSL #2       ;3959
002a2c  7885              LDRB     r5,[r0,#2]            ;3959
002a2e  2d01              CMP      r5,#1                 ;3959
002a30  d11d              BNE      |L1.10862|
002a32  6a45              LDR      r5,[r0,#0x24]         ;3961
002a34  42bd              CMP      r5,r7                 ;3961
002a36  dd05              BLE      |L1.10820|
002a38  f8b05050          LDRH     r5,[r0,#0x50]         ;3961
002a3c  f1a50501          SUB      r5,r5,#1              ;3961
002a40  f8a05050          STRH     r5,[r0,#0x50]         ;3961
                  |L1.10820|
002a44  da05              BGE      |L1.10834|
002a46  f8b05050          LDRH     r5,[r0,#0x50]         ;3962
002a4a  f1050501          ADD      r5,r5,#1              ;3962
002a4e  f8a05050          STRH     r5,[r0,#0x50]         ;3962
                  |L1.10834|
002a52  f9b05050          LDRSH    r5,[r0,#0x50]
002a56  42a5              CMP      r5,r4
002a58  da01              BGE      |L1.10846|
002a5a  f8a04050          STRH     r4,[r0,#0x50]
                  |L1.10846|
;;;3965   				if(bps[i]._x_>50)bps[i]._x_=50;	
002a5e  f9b05050          LDRSH    r5,[r0,#0x50]
002a62  2d32              CMP      r5,#0x32
002a64  dd03              BLE      |L1.10862|
002a66  f04f0532          MOV      r5,#0x32
002a6a  f8a05050          STRH     r5,[r0,#0x50]
                  |L1.10862|
002a6e  f1010101          ADD      r1,r1,#1              ;3957
002a72  b2c9              UXTB     r1,r1                 ;3957
                  |L1.10868|
002a74  4291              CMP      r1,r2                 ;3957
002a76  dbd3              BLT      |L1.10784|
                  |L1.10872|
;;;3966   				}
;;;3967   			}		
;;;3968   		}			
;;;3969   	}   	 
;;;3970   
;;;3971   
;;;3972   avg_hndl_end:
;;;3973   __nop();  
002a78  bf00              NOP      
;;;3974   }
002a7a  bdf0              POP      {r4-r7,pc}
;;;3975   
                          ENDP

                  rele_hndl PROC
;;;3988   //*************-----------------------------------------------
;;;3989   void rele_hndl(void)
002a7c  e92d5ff0          PUSH     {r4-r12,lr}
;;;3990   {
;;;3991   //static char cnt_rel_sam;
;;;3992   //char temp;
;;;3993   
;;;3994   //temp=0;
;;;3995   
;;;3996   
;;;3997   SET_REG(LPC_PINCON->PINSEL0,0,4*2,6*2);
002a80  48c5              LDR      r0,|L1.11672|
002a82  6801              LDR      r1,[r0,#0]
002a84  4ac5              LDR      r2,|L1.11676|
002a86  ea010102          AND      r1,r1,r2
002a8a  6001              STR      r1,[r0,#0]
;;;3998   SET_REG(LPC_GPIO0->FIODIR,63,4,6);
002a8c  4cc4              LDR      r4,|L1.11680|
002a8e  6821              LDR      r1,[r4,#0]
002a90  f441717c          ORR      r1,r1,#0x3f0
002a94  6021              STR      r1,[r4,#0]
;;;3999   SET_REG(LPC_PINCON->PINSEL7,0,(25-16)*2,2);
002a96  69c1              LDR      r1,[r0,#0x1c]
002a98  f4212140          BIC      r1,r1,#0xc0000
002a9c  61c1              STR      r1,[r0,#0x1c]
;;;4000   SET_REG(LPC_GPIO3->FIODIR,1,25,1);
002a9e  6e21              LDR      r1,[r4,#0x60]
002aa0  f0417100          ORR      r1,r1,#0x2000000
002aa4  6621              STR      r1,[r4,#0x60]
;;;4001   SET_REG(LPC_PINCON->PINSEL1,0,(29-16)*2,2);
002aa6  6841              LDR      r1,[r0,#4]
002aa8  f0216140          BIC      r1,r1,#0xc000000
002aac  6041              STR      r1,[r0,#4]
;;;4002   SET_REG(LPC_GPIO0->FIODIR,1,29,1);
002aae  6820              LDR      r0,[r4,#0]
002ab0  f0405000          ORR      r0,r0,#0x20000000
002ab4  6020              STR      r0,[r4,#0]
;;;4003   
;;;4004   
;;;4005   
;;;4006   
;;;4007   
;;;4008   
;;;4009   if((((bat[0]._rel_stat)  || (tbatdisable_stat!=tbdsON))&&(tbatdisable_cmnd))	&& (main_1Hz_cnt>5))
002ab6  48bc              LDR      r0,|L1.11688|
002ab8  4dba              LDR      r5,|L1.11684|
002aba  49bd              LDR      r1,|L1.11696|
002abc  7802              LDRB     r2,[r0,#0]  ; tbatdisable_stat
002abe  48bb              LDR      r0,|L1.11692|
002ac0  f895303c          LDRB     r3,[r5,#0x3c]  ; bat
002ac4  f9b11000          LDRSH    r1,[r1,#0]
002ac8  7800              LDRB     r0,[r0,#0]
002aca  4313              ORRS     r3,r3,r2
002acc  d007              BEQ      |L1.10974|
002ace  b130              CBZ      r0,|L1.10974|
002ad0  2905              CMP      r1,#5
002ad2  dd04              BLE      |L1.10974|
;;;4010   	{
;;;4011   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_BAT1,1);
002ad4  69a3              LDR      r3,[r4,#0x18]
002ad6  f4437380          ORR      r3,r3,#0x100
002ada  61a3              STR      r3,[r4,#0x18]
002adc  e003              B        |L1.10982|
                  |L1.10974|
;;;4012   	}
;;;4013   else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_BAT1,1);	  	
002ade  69e3              LDR      r3,[r4,#0x1c]
002ae0  f4437380          ORR      r3,r3,#0x100
002ae4  61e3              STR      r3,[r4,#0x1c]
                  |L1.10982|
;;;4014   
;;;4015   if((((bat[1]._rel_stat) || (tbatdisable_stat!=tbdsON))&&(tbatdisable_cmnd))	&& (main_1Hz_cnt>5))
002ae6  f8953088          LDRB     r3,[r5,#0x88]  ; bat
002aea  4313              ORRS     r3,r3,r2
002aec  d007              BEQ      |L1.11006|
002aee  b130              CBZ      r0,|L1.11006|
002af0  2905              CMP      r1,#5
002af2  dd04              BLE      |L1.11006|
;;;4016   	{
;;;4017   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_BAT2,1);
002af4  69a0              LDR      r0,[r4,#0x18]
002af6  f0400040          ORR      r0,r0,#0x40
002afa  61a0              STR      r0,[r4,#0x18]
002afc  e003              B        |L1.11014|
                  |L1.11006|
;;;4018   	}
;;;4019   else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_BAT2,1);
002afe  69e0              LDR      r0,[r4,#0x1c]
002b00  f0400040          ORR      r0,r0,#0x40
002b04  61e0              STR      r0,[r4,#0x1c]
                  |L1.11014|
;;;4020   
;;;4021   
;;;4022   if(mess_find_unvol((MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_SAMOKALIBR)) 
002b06  20d2              MOVS     r0,#0xd2
002b08  f7fffffe          BL       mess_find_unvol
002b0c  4da9              LDR      r5,|L1.11700|
002b0e  b110              CBZ      r0,|L1.11030|
002b10  6828              LDR      r0,[r5,#0]  ; mess_data
002b12  2864              CMP      r0,#0x64
002b14  d048              BEQ      |L1.11176|
                  |L1.11030|
;;;4023   	{
;;;4024   	if(mess_data[1]==1)SET_REG(LPC_GPIO0->FIOSET,1,29,1);
;;;4025   	else if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,29,1);
;;;4026   	}
;;;4027   else SET_REG(LPC_GPIO0->FIOCLR,1,29,1);
002b16  69e0              LDR      r0,[r4,#0x1c]
002b18  f0405000          ORR      r0,r0,#0x20000000
002b1c  61e0              STR      r0,[r4,#0x1c]
                  |L1.11038|
;;;4028   
;;;4029   
;;;4030   #ifndef UKU2071x
;;;4031   //Реле аварии сети
;;;4032   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4033   	{
;;;4034   	if(mess_data[1]==0) 			SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4035   	else 						SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4036   	}
;;;4037   else	if(!(avar_ind_stat&0x00000001)) 	SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4038   else 							SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4039   #endif
;;;4040   #ifdef UKU2071x
;;;4041   //Реле аварии сети
;;;4042   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
002b1e  20d2              MOVS     r0,#0xd2
002b20  f7fffffe          BL       mess_find_unvol
;;;4043   	{
;;;4044   	if(mess_data[1]==0)				SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1); 
;;;4045   	else 						SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4046   	}
;;;4047   else	if(!(avar_ind_stat&0x00000001))	SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
002b24  4ea4              LDR      r6,|L1.11704|
002b26  b110              CBZ      r0,|L1.11054|
002b28  6828              LDR      r0,[r5,#0]            ;4042  ; mess_data
002b2a  2866              CMP      r0,#0x66              ;4042
002b2c  d04b              BEQ      |L1.11206|
                  |L1.11054|
002b2e  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002b30  07c0              LSLS     r0,r0,#31
002b32  d054              BEQ      |L1.11230|
;;;4048   else 					  		SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
002b34  6fa0              LDR      r0,[r4,#0x78]
002b36  f0407000          ORR      r0,r0,#0x2000000
002b3a  67a0              STR      r0,[r4,#0x78]
                  |L1.11068|
;;;4049   #endif
;;;4050   
;;;4051   #ifdef UKU_3U
;;;4052   //Реле аварий батарей
;;;4053   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT1))
;;;4054   	{
;;;4055   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4056   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4057        }
;;;4058   else 
;;;4059   	{
;;;4060   	if(!(avar_ind_stat&0x00000002)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4061        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4062   	} 
;;;4063   
;;;4064   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT2))
;;;4065   	{
;;;4066   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4067   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4068        }
;;;4069   else 
;;;4070   	{
;;;4071   	if(!(avar_ind_stat&0x00000004)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4072        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4073   	} 
;;;4074   
;;;4075   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4076   	{
;;;4077   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4078   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4079        }
;;;4080   else 
;;;4081   	{
;;;4082   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4083        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4084   	} 
;;;4085   
;;;4086   #endif
;;;4087   
;;;4088   
;;;4089   #ifdef UKU_GLONASS
;;;4090   //Реле аварий батарей
;;;4091   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT1))
;;;4092   	{
;;;4093   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4094   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4095        }
;;;4096   else 
;;;4097   	{
;;;4098   	if(!(avar_ind_stat&0x00000002)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4099        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4100   	} 
;;;4101   
;;;4102   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT2))
;;;4103   	{
;;;4104   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4105   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4106        }
;;;4107   else 
;;;4108   	{
;;;4109   	if(!(avar_ind_stat&0x00000004)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4110        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4111   	} 
;;;4112   
;;;4113   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4114   	{
;;;4115   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4116   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4117        }
;;;4118   else 
;;;4119   	{
;;;4120   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4121        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4122   	} 
;;;4123   
;;;4124   #endif
;;;4125   
;;;4126   #ifdef U 
;;;4127   
;;;4128   #endif
;;;4129   
;;;4130   #ifdef UKU_RSTKM
;;;4131   
;;;4132   //Реле общей аварии
;;;4133   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_COMM))
;;;4134   	{
;;;4135   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4136   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4137   	}
;;;4138   else 
;;;4139   	{
;;;4140        if(  (!(avar_ind_stat&0x00007fff))/* &&
;;;4141             ((!SK_REL_EN[0]) || (sk_av_stat[0]!=sasON))  &&
;;;4142             ((!SK_REL_EN[1]) || (sk_av_stat[1]!=sasON))  &&
;;;4143             ((!SK_REL_EN[2]) || (sk_av_stat[2]!=sasON))  &&
;;;4144             ((!SK_REL_EN[3]) || (sk_av_stat[3]!=sasON))*/  )SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4145        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4146   	}
;;;4147   	
;;;4148   
;;;4149   //Реле освещения
;;;4150   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LIGHT))
;;;4151   	{
;;;4152   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4153   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4154        }
;;;4155   else 
;;;4156   	{
;;;4157   	if(sk_av_stat[0]!=sasON) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4158        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4159   	}
;;;4160   
;;;4161   
;;;4162   //Реле выключения нагрузки
;;;4163   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LOAD_OFF))
;;;4164   	{
;;;4165   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4166   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4167        }
;;;4168   else if(tloaddisable_cmnd==0)
;;;4169   	{
;;;4170   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4171   	}
;;;4172   else if((tloaddisable_cmnd)&&(tloaddisable_cmnd<=11))
;;;4173   	{
;;;4174   	SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4175   	}
;;;4176   
;;;4177   else 
;;;4178   	{
;;;4179   	if(!(tloaddisable_stat==tldsON)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4180        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4181   	} 
;;;4182   
;;;4183   //Реле осевого вентилятора
;;;4184   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4185   	{
;;;4186   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4187   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4188   	}
;;;4189   else 
;;;4190   	{
;;;4191   	if(mixer_vent_stat==mvsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4192        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4193   	} 
;;;4194   
;;;4195   #endif
;;;4196   
;;;4197   #ifdef UKU_KONTUR
;;;4198   
;;;4199   //Реле общей аварии
;;;4200   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_COMM))
;;;4201   	{
;;;4202   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4203   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4204   	}
;;;4205   else 
;;;4206   	{
;;;4207        if(  (!(avar_ind_stat&0x00007fff)) &&
;;;4208             ((!SK_REL_EN[0]) || (sk_av_stat[0]!=sasON))  &&
;;;4209             ((!SK_REL_EN[1]) || (sk_av_stat[1]!=sasON))  &&
;;;4210             ((!SK_REL_EN[2]) || (sk_av_stat[2]!=sasON))  /*&&
;;;4211             ((!SK_REL_EN[3]) || (sk_av_stat[3]!=sasON))*/  )SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4212        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4213   	}
;;;4214   
;;;4215   	
;;;4216   //rel_warm_plazma=0;
;;;4217   //Реле освещения   
;;;4218   /*
;;;4219   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_WARM))
;;;4220   	{
;;;4221   	if(mess_data[1]==0)
;;;4222   		{
;;;4223   		SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4224   		rel_warm_plazma=1;
;;;4225   		}
;;;4226   	else if(mess_data[1]==1) 
;;;4227   		{
;;;4228   		SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4229   		rel_warm_plazma=2;
;;;4230   		}
;;;4231        }
;;;4232   else 
;;;4233   	{
;;;4234   	if(warm_stat_k==wsOFF) 
;;;4235   		{
;;;4236   		SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4237   		rel_warm_plazma=3;
;;;4238   		}
;;;4239        else 
;;;4240   		{
;;;4241   		SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4242   		rel_warm_plazma=4;
;;;4243   		}
;;;4244   	}
;;;4245   */
;;;4246   //Реле освещения
;;;4247   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LIGHT))
;;;4248   	{
;;;4249   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4250   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4251        }
;;;4252   else 
;;;4253   	{
;;;4254   	if(sk_av_stat[0]!=sasON) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4255        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4256   	}
;;;4257   
;;;4258   
;;;4259   
;;;4260   //Реле выключения нагрузки
;;;4261   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LOAD_OFF))
;;;4262   	{
;;;4263   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4264   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4265        }
;;;4266   else if(tloaddisable_cmnd==0)
;;;4267   	{
;;;4268   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4269   	}
;;;4270   else if((tloaddisable_cmnd)&&(tloaddisable_cmnd<=11))
;;;4271   	{
;;;4272   	SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4273   	}
;;;4274   
;;;4275   else 
;;;4276   	{
;;;4277   	if(!(tloaddisable_stat==tldsON)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4278        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4279   	} 
;;;4280   
;;;4281   //Реле осевого вентилятора или отопителя
;;;4282   if(RELE_LOG)
;;;4283   	{
;;;4284   	if((mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_VENT_WARM))
;;;4285   		{
;;;4286   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4287   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4288   		}
;;;4289   	else 
;;;4290   		{
;;;4291   		if(warm_stat_k==wsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4292   	     else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4293   		} 
;;;4294   
;;;4295   	}
;;;4296   else 
;;;4297   	{
;;;4298   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT_WARM))
;;;4299   		{
;;;4300   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4301   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4302   		}
;;;4303   	else 
;;;4304   		{
;;;4305   		if(vent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4306   	     else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4307   		} 
;;;4308   	}
;;;4309   #endif
;;;4310   
;;;4311   #ifdef UKU_6U
;;;4312   //Реле аварий батарей
;;;4313   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT1))
;;;4314   	{
;;;4315   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4316   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4317        }
;;;4318   else 
;;;4319   	{
;;;4320   	if(!(avar_ind_stat&0x00000002)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT1,1);
;;;4321        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT1,1);
;;;4322   	} 
;;;4323   
;;;4324   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT2))
;;;4325   	{
;;;4326   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4327   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4328       }
;;;4329   else if(NPN_OUT==npnoRELEAVBAT2)
;;;4330   	{
;;;4331   	if(npn_stat==npnsOFF)//&&(mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_NPN))
;;;4332   		{
;;;4333   		/*if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4334   		else if(mess_data[1]==1)*/ SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4335        	}
;;;4336   	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4337   	}
;;;4338   else 
;;;4339   	{
;;;4340   	if(!(avar_ind_stat&0x00000004)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT2,1);
;;;4341       else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT2,1);
;;;4342   	} 
;;;4343   
;;;4344   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4345   	{
;;;4346   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4347   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4348        }
;;;4349   else 
;;;4350   	{
;;;4351   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4352        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4353   	} 
;;;4354   
;;;4355   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4356   	{
;;;4357   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4358   	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4359   	}
;;;4360   else if((NPN_OUT==npnoRELEVENT))
;;;4361   	{
;;;4362   	if(npn_stat==npnsOFF)//&&(mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_NPN))
;;;4363   		{
;;;4364   		/*if(mess_data[1]==0)*/ SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4365   		//else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4366       	}
;;;4367   	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4368   	}
;;;4369   else 
;;;4370   	{
;;;4371   	if(!vent_stat) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4372   	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4373   	}
;;;4374   
;;;4375   #endif
;;;4376   
;;;4377   #ifdef UKU_220
;;;4378   //Реле аварий батарей
;;;4379   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
;;;4380   	{
;;;4381   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT,1);
;;;4382   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT,1);
;;;4383        }
;;;4384   else 
;;;4385   	{
;;;4386   	if(!(avar_ind_stat&0x00000002)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT,1);
;;;4387        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT,1);
;;;4388   	} 
;;;4389   
;;;4390   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4391   	{
;;;4392   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4393   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4394        }
;;;4395   else 
;;;4396   	{
;;;4397   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4398        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4399   	} 
;;;4400   
;;;4401   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4402   	{
;;;4403   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4404   	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4405   	}
;;;4406   else 
;;;4407   	{
;;;4408   	if((RELE_VENT_LOGIC==0)||(RELE_VENT_LOGIC==1))
;;;4409   		{
;;;4410   		if(vent_stat) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4411   		else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4412   		}
;;;4413   	else 
;;;4414   		{
;;;4415   		if((avar_ind_stat&0x00000004)) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4416        	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4417   		}
;;;4418   	}
;;;4419   
;;;4420   #endif
;;;4421   
;;;4422   #ifdef UKU_220_V2
;;;4423   //Реле аварий батарей
;;;4424   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
;;;4425   	{
;;;4426   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT,1);
;;;4427   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT,1);
;;;4428        }
;;;4429   else 
;;;4430   	{
;;;4431   	if(!(avar_ind_stat&0x00000002)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BAT,1);
;;;4432        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BAT,1);
;;;4433   	} 
;;;4434   
;;;4435   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4436   	{
;;;4437   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4438   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4439        }
;;;4440   else 
;;;4441   	{
;;;4442   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4443        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4444   	} 
;;;4445   
;;;4446   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4447   	{
;;;4448   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4449   	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4450   	}
;;;4451   else 
;;;4452   	{
;;;4453   	if((RELE_VENT_LOGIC==0)||(RELE_VENT_LOGIC==1))
;;;4454   		{
;;;4455   		if(vent_stat) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4456   		else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4457   		}
;;;4458   	else 
;;;4459   		{
;;;4460   		if((avar_ind_stat&0x00000004)) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4461        	else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4462   		}
;;;4463   	}
;;;4464   
;;;4465   #endif
;;;4466   
;;;4467   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;4468   
;;;4469   if((AUSW_MAIN==22010)||(AUSW_MAIN==22011))
002b3c  489f              LDR      r0,|L1.11708|
;;;4470   	{
;;;4471   	#ifndef UKU2071x
;;;4472   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4473   		{
;;;4474   		if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4475   		else SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4476   		}
;;;4477   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4478   	else SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4479   	#endif
;;;4480   
;;;4481   	#ifdef UKU2071x
;;;4482   		#ifndef APSENERGIA
;;;4483   		if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4484   			{
;;;4485   			if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4486   			else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4487   			}
;;;4488   		else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4489   		else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4490   		#endif
;;;4491   
;;;4492   		#ifdef APSENERGIA
;;;4493   		if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4494   			{
;;;4495   			if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4496   			else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4497   			}
;;;4498   		else if((mess_find_unvol(MESS2RELE_HNDL))&& (mess_data[0]==PARAM_RELE_BAT_IS_DISCHARGED))  SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4499   		else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4500   		#endif
;;;4501   
;;;4502   	#endif
;;;4503   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;4504   		{
;;;4505   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
;;;4506   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,7,1);
;;;4507   	     }
;;;4508   	else 
;;;4509   		{
;;;4510   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
;;;4511   	     else SET_REG(LPC_GPIO0->FIOSET,1,7,1);
;;;4512   		} 
;;;4513   
;;;4514   	//Реле аварий батарей
;;;4515   	#ifndef APSENERGIA
;;;4516   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
;;;4517   		{
;;;4518   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4519   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4520        	}
;;;4521   	else 
;;;4522   		{
;;;4523   		if(!(ips_bat_av_stat)) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
002b3e  f8df8280          LDR      r8,|L1.11712|
002b42  4fa0              LDR      r7,|L1.11716|
002b44  8800              LDRH     r0,[r0,#0]            ;4469  ; AUSW_MAIN
002b46  f5a041aa          SUB      r1,r0,#0x5500         ;4469
002b4a  39fa              SUBS     r1,r1,#0xfa           ;4469
002b4c  d001              BEQ      |L1.11090|
002b4e  1e49              SUBS     r1,r1,#1              ;4469
002b50  d16f              BNE      |L1.11314|
                  |L1.11090|
002b52  20d2              MOVS     r0,#0xd2              ;4483
002b54  f7fffffe          BL       mess_find_unvol
002b58  b110              CBZ      r0,|L1.11104|
002b5a  6828              LDR      r0,[r5,#0]            ;4483  ; mess_data
002b5c  2866              CMP      r0,#0x66              ;4483
002b5e  d043              BEQ      |L1.11240|
                  |L1.11104|
002b60  6830              LDR      r0,[r6,#0]            ;4488  ; avar_ind_stat
002b62  07c0              LSLS     r0,r0,#31             ;4488
002b64  d04d              BEQ      |L1.11266|
002b66  6fa0              LDR      r0,[r4,#0x78]         ;4489
002b68  f0407000          ORR      r0,r0,#0x2000000      ;4489
002b6c  67a0              STR      r0,[r4,#0x78]         ;4489
                  |L1.11118|
002b6e  20d2              MOVS     r0,#0xd2              ;4503
002b70  f7fffffe          BL       mess_find_unvol
002b74  b110              CBZ      r0,|L1.11132|
002b76  6828              LDR      r0,[r5,#0]            ;4503  ; mess_data
002b78  286a              CMP      r0,#0x6a              ;4503
002b7a  d047              BEQ      |L1.11276|
                  |L1.11132|
002b7c  6830              LDR      r0,[r6,#0]            ;4510  ; avar_ind_stat
002b7e  4238              TST      r0,r7                 ;4510
002b80  d052              BEQ      |L1.11304|
002b82  69a0              LDR      r0,[r4,#0x18]         ;4511
002b84  f0400080          ORR      r0,r0,#0x80           ;4511
002b88  61a0              STR      r0,[r4,#0x18]         ;4511
                  |L1.11146|
002b8a  20d2              MOVS     r0,#0xd2              ;4516
002b8c  f7fffffe          BL       mess_find_unvol
002b90  b110              CBZ      r0,|L1.11160|
002b92  6828              LDR      r0,[r5,#0]            ;4516  ; mess_data
002b94  2867              CMP      r0,#0x67              ;4516
002b96  d04d              BEQ      |L1.11316|
                  |L1.11160|
002b98  f8980000          LDRB     r0,[r8,#0]  ; ips_bat_av_stat
002b9c  b380              CBZ      r0,|L1.11264|
;;;4524        	else SET_REG(LPC_GPIO0->FIOSET,1,4,1);
002b9e  69a0              LDR      r0,[r4,#0x18]
002ba0  f0400010          ORR      r0,r0,#0x10
002ba4  61a0              STR      r0,[r4,#0x18]
002ba6  e1ed              B        |L1.12164|
                  |L1.11176|
002ba8  6868              LDR      r0,[r5,#4]            ;4024  ; mess_data
002baa  2801              CMP      r0,#1                 ;4024
002bac  d006              BEQ      |L1.11196|
002bae  2800              CMP      r0,#0                 ;4025
002bb0  d1b5              BNE      |L1.11038|
002bb2  69e0              LDR      r0,[r4,#0x1c]         ;4025
002bb4  f0405000          ORR      r0,r0,#0x20000000     ;4025
002bb8  61e0              STR      r0,[r4,#0x1c]         ;4025
002bba  e7b0              B        |L1.11038|
                  |L1.11196|
002bbc  69a0              LDR      r0,[r4,#0x18]         ;4024
002bbe  f0405000          ORR      r0,r0,#0x20000000     ;4024
002bc2  61a0              STR      r0,[r4,#0x18]         ;4024
002bc4  e7ab              B        |L1.11038|
                  |L1.11206|
002bc6  6868              LDR      r0,[r5,#4]            ;4044  ; mess_data
002bc8  b120              CBZ      r0,|L1.11220|
002bca  6fa0              LDR      r0,[r4,#0x78]         ;4045
002bcc  f0407000          ORR      r0,r0,#0x2000000      ;4045
002bd0  67a0              STR      r0,[r4,#0x78]         ;4045
002bd2  e7b3              B        |L1.11068|
                  |L1.11220|
002bd4  6fe0              LDR      r0,[r4,#0x7c]         ;4044
002bd6  f0407000          ORR      r0,r0,#0x2000000      ;4044
002bda  67e0              STR      r0,[r4,#0x7c]         ;4044
002bdc  e7ae              B        |L1.11068|
                  |L1.11230|
002bde  6fe0              LDR      r0,[r4,#0x7c]         ;4047
002be0  f0407000          ORR      r0,r0,#0x2000000      ;4047
002be4  67e0              STR      r0,[r4,#0x7c]         ;4047
002be6  e7a9              B        |L1.11068|
                  |L1.11240|
002be8  6868              LDR      r0,[r5,#4]            ;4485  ; mess_data
002bea  b120              CBZ      r0,|L1.11254|
002bec  6fa0              LDR      r0,[r4,#0x78]         ;4486
002bee  f0407000          ORR      r0,r0,#0x2000000      ;4486
002bf2  67a0              STR      r0,[r4,#0x78]         ;4486
002bf4  e7bb              B        |L1.11118|
                  |L1.11254|
002bf6  6fe0              LDR      r0,[r4,#0x7c]         ;4485
002bf8  f0407000          ORR      r0,r0,#0x2000000      ;4485
002bfc  67e0              STR      r0,[r4,#0x7c]         ;4485
002bfe  e7b6              B        |L1.11118|
                  |L1.11264|
002c00  e027              B        |L1.11346|
                  |L1.11266|
002c02  6fe0              LDR      r0,[r4,#0x7c]         ;4488
002c04  f0407000          ORR      r0,r0,#0x2000000      ;4488
002c08  67e0              STR      r0,[r4,#0x7c]         ;4488
002c0a  e7b0              B        |L1.11118|
                  |L1.11276|
002c0c  6868              LDR      r0,[r5,#4]            ;4505  ; mess_data
002c0e  b130              CBZ      r0,|L1.11294|
002c10  2801              CMP      r0,#1                 ;4506
002c12  d1ba              BNE      |L1.11146|
002c14  69a0              LDR      r0,[r4,#0x18]         ;4506
002c16  f0400080          ORR      r0,r0,#0x80           ;4506
002c1a  61a0              STR      r0,[r4,#0x18]         ;4506
002c1c  e7b5              B        |L1.11146|
                  |L1.11294|
002c1e  69e0              LDR      r0,[r4,#0x1c]         ;4505
002c20  f0400080          ORR      r0,r0,#0x80           ;4505
002c24  61e0              STR      r0,[r4,#0x1c]         ;4505
002c26  e7b0              B        |L1.11146|
                  |L1.11304|
002c28  69e0              LDR      r0,[r4,#0x1c]         ;4510
002c2a  f0400080          ORR      r0,r0,#0x80           ;4510
002c2e  61e0              STR      r0,[r4,#0x1c]         ;4510
002c30  e7ab              B        |L1.11146|
                  |L1.11314|
002c32  e013              B        |L1.11356|
                  |L1.11316|
002c34  6868              LDR      r0,[r5,#4]            ;4518  ; mess_data
002c36  b110              CBZ      r0,|L1.11326|
002c38  2801              CMP      r0,#1                 ;4519
002c3a  d005              BEQ      |L1.11336|
002c3c  e1a2              B        |L1.12164|
                  |L1.11326|
002c3e  69e0              LDR      r0,[r4,#0x1c]         ;4518
002c40  f0400010          ORR      r0,r0,#0x10           ;4518
002c44  61e0              STR      r0,[r4,#0x1c]         ;4518
002c46  e19d              B        |L1.12164|
                  |L1.11336|
002c48  69a0              LDR      r0,[r4,#0x18]         ;4519
002c4a  f0400010          ORR      r0,r0,#0x10           ;4519
002c4e  61a0              STR      r0,[r4,#0x18]         ;4519
002c50  e198              B        |L1.12164|
                  |L1.11346|
002c52  69e0              LDR      r0,[r4,#0x1c]         ;4523
002c54  f0400010          ORR      r0,r0,#0x10           ;4523
002c58  61e0              STR      r0,[r4,#0x1c]         ;4523
002c5a  e193              B        |L1.12164|
                  |L1.11356|
;;;4525   		}
;;;4526   	#endif
;;;4527   	#ifdef APSENERGIA
;;;4528   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
;;;4529   		{
;;;4530   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4531   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4532        	}
;;;4533   	else 
;;;4534   		{
;;;4535   		if(!apsEnergiaStat)SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4536   		else SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4537   		}
;;;4538   	#endif
;;;4539   	}
;;;4540   
;;;4541   else	if(AUSW_MAIN==22023)
002c5c  f5a041ac          SUB      r1,r0,#0x5600
002c60  3907              SUBS     r1,#7
002c62  d162              BNE      |L1.11562|
;;;4542   	{
;;;4543   
;;;4544   	//Реле аварий батарей
;;;4545   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
002c64  20d2              MOVS     r0,#0xd2
002c66  f7fffffe          BL       mess_find_unvol
002c6a  b110              CBZ      r0,|L1.11378|
002c6c  6828              LDR      r0,[r5,#0]  ; mess_data
002c6e  2867              CMP      r0,#0x67
002c70  d023              BEQ      |L1.11450|
                  |L1.11378|
;;;4546   		{
;;;4547   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4548   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4549        	}
;;;4550   	else 
;;;4551   		{
;;;4552   		if(!(ips_bat_av_stat)) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
002c72  f8980000          LDRB     r0,[r8,#0]  ; ips_bat_av_stat
002c76  b370              CBZ      r0,|L1.11478|
;;;4553        	else SET_REG(LPC_GPIO0->FIOSET,1,4,1);
002c78  69a0              LDR      r0,[r4,#0x18]
002c7a  f0400010          ORR      r0,r0,#0x10
002c7e  61a0              STR      r0,[r4,#0x18]
                  |L1.11392|
;;;4554   		} 
;;;4555   
;;;4556   
;;;4557   	//Реле аварии сети ТУТ КАКАЯ то ЛАЖА с аварией сети. Обращение к разным портам
;;;4558   	#ifndef UKU2071x
;;;4559   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4560   		{
;;;4561   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4562   		else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4563   		}
;;;4564   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4565   	else SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4566   	#endif
;;;4567   	#ifdef UKU2071x
;;;4568   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
002c80  20d2              MOVS     r0,#0xd2
002c82  f7fffffe          BL       mess_find_unvol
002c86  b110              CBZ      r0,|L1.11406|
002c88  6828              LDR      r0,[r5,#0]  ; mess_data
002c8a  2866              CMP      r0,#0x66
002c8c  d028              BEQ      |L1.11488|
                  |L1.11406|
;;;4569   		{
;;;4570   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4571   		else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4572   		}
;;;4573   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOSET,1,SHIFT_REL_AV_NET,1);
002c8e  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002c90  07c0              LSLS     r0,r0,#31
002c92  d031              BEQ      |L1.11512|
;;;4574   	else SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
002c94  6fa0              LDR      r0,[r4,#0x78]
002c96  f0407000          ORR      r0,r0,#0x2000000
002c9a  67a0              STR      r0,[r4,#0x78]
                  |L1.11420|
;;;4575   	#endif
;;;4576   
;;;4577   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
002c9c  20d2              MOVS     r0,#0xd2
002c9e  f7fffffe          BL       mess_find_unvol
002ca2  b110              CBZ      r0,|L1.11434|
002ca4  6828              LDR      r0,[r5,#0]  ; mess_data
002ca6  286a              CMP      r0,#0x6a
002ca8  d02b              BEQ      |L1.11522|
                  |L1.11434|
;;;4578   		{
;;;4579   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
;;;4580   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,7,1);
;;;4581   	     }
;;;4582   	else 
;;;4583   		{
;;;4584   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
002caa  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002cac  4238              TST      r0,r7
002cae  d037              BEQ      |L1.11552|
;;;4585   	     else SET_REG(LPC_GPIO0->FIOSET,1,7,1);
002cb0  69a0              LDR      r0,[r4,#0x18]
002cb2  f0400080          ORR      r0,r0,#0x80
002cb6  61a0              STR      r0,[r4,#0x18]
002cb8  e164              B        |L1.12164|
                  |L1.11450|
002cba  6868              LDR      r0,[r5,#4]            ;4547  ; mess_data
002cbc  b130              CBZ      r0,|L1.11468|
002cbe  2801              CMP      r0,#1                 ;4548
002cc0  d1de              BNE      |L1.11392|
002cc2  69a0              LDR      r0,[r4,#0x18]         ;4548
002cc4  f0400010          ORR      r0,r0,#0x10           ;4548
002cc8  61a0              STR      r0,[r4,#0x18]         ;4548
002cca  e7d9              B        |L1.11392|
                  |L1.11468|
002ccc  69e0              LDR      r0,[r4,#0x1c]         ;4547
002cce  f0400010          ORR      r0,r0,#0x10           ;4547
002cd2  61e0              STR      r0,[r4,#0x1c]         ;4547
002cd4  e7d4              B        |L1.11392|
                  |L1.11478|
002cd6  69e0              LDR      r0,[r4,#0x1c]         ;4552
002cd8  f0400010          ORR      r0,r0,#0x10           ;4552
002cdc  61e0              STR      r0,[r4,#0x1c]         ;4552
002cde  e7cf              B        |L1.11392|
                  |L1.11488|
002ce0  6868              LDR      r0,[r5,#4]            ;4570  ; mess_data
002ce2  b120              CBZ      r0,|L1.11502|
002ce4  69e0              LDR      r0,[r4,#0x1c]         ;4571
002ce6  f0407000          ORR      r0,r0,#0x2000000      ;4571
002cea  61e0              STR      r0,[r4,#0x1c]         ;4571
002cec  e7d6              B        |L1.11420|
                  |L1.11502|
002cee  69a0              LDR      r0,[r4,#0x18]         ;4570
002cf0  f0407000          ORR      r0,r0,#0x2000000      ;4570
002cf4  61a0              STR      r0,[r4,#0x18]         ;4570
002cf6  e7d1              B        |L1.11420|
                  |L1.11512|
002cf8  6ba0              LDR      r0,[r4,#0x38]         ;4573
002cfa  f0407000          ORR      r0,r0,#0x2000000      ;4573
002cfe  63a0              STR      r0,[r4,#0x38]         ;4573
002d00  e7cc              B        |L1.11420|
                  |L1.11522|
002d02  6868              LDR      r0,[r5,#4]            ;4579  ; mess_data
002d04  b110              CBZ      r0,|L1.11532|
002d06  2801              CMP      r0,#1                 ;4580
002d08  d005              BEQ      |L1.11542|
002d0a  e13b              B        |L1.12164|
                  |L1.11532|
002d0c  69e0              LDR      r0,[r4,#0x1c]         ;4579
002d0e  f0400080          ORR      r0,r0,#0x80           ;4579
002d12  61e0              STR      r0,[r4,#0x1c]         ;4579
002d14  e136              B        |L1.12164|
                  |L1.11542|
002d16  69a0              LDR      r0,[r4,#0x18]         ;4580
002d18  f0400080          ORR      r0,r0,#0x80           ;4580
002d1c  61a0              STR      r0,[r4,#0x18]         ;4580
002d1e  e131              B        |L1.12164|
                  |L1.11552|
002d20  69e0              LDR      r0,[r4,#0x1c]         ;4584
002d22  f0400080          ORR      r0,r0,#0x80           ;4584
002d26  61e0              STR      r0,[r4,#0x1c]         ;4584
002d28  e12c              B        |L1.12164|
                  |L1.11562|
;;;4586   		} 
;;;4587   	}
;;;4588   else	if((AUSW_MAIN==22043)||(AUSW_MAIN==22044))
002d2a  f5a041ac          SUB      r1,r0,#0x5600
002d2e  391b              SUBS     r1,r1,#0x1b
002d30  d001              BEQ      |L1.11574|
002d32  1e49              SUBS     r1,r1,#1
002d34  d173              BNE      |L1.11806|
                  |L1.11574|
;;;4589   	{
;;;4590   	//Реле аварий батарей
;;;4591   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
002d36  20d2              MOVS     r0,#0xd2
002d38  f7fffffe          BL       mess_find_unvol
002d3c  b110              CBZ      r0,|L1.11588|
002d3e  6828              LDR      r0,[r5,#0]  ; mess_data
002d40  2867              CMP      r0,#0x67
002d42  d04d              BEQ      |L1.11744|
                  |L1.11588|
;;;4592   		{
;;;4593   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4594   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4595        	}
;;;4596   	else 
;;;4597   		{
;;;4598   		if(!(ips_bat_av_stat)) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
002d44  f8980000          LDRB     r0,[r8,#0]  ; ips_bat_av_stat
002d48  b318              CBZ      r0,|L1.11666|
;;;4599        	else SET_REG(LPC_GPIO0->FIOSET,1,4,1);
002d4a  69a0              LDR      r0,[r4,#0x18]
002d4c  f0400010          ORR      r0,r0,#0x10
002d50  61a0              STR      r0,[r4,#0x18]
                  |L1.11602|
;;;4600   		} 
;;;4601   	//Реле аварии сети ТУТ КАКАЯ то ЛАЖА с аварией сети. Обращение к разным портам
;;;4602   	#ifndef UKU2071x 
;;;4603   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4604   		{
;;;4605   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4606   		else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4607   		}
;;;4608   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4609   	else SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4610   	#endif
;;;4611   	#ifdef UKU2071x 
;;;4612   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
002d52  20d2              MOVS     r0,#0xd2
002d54  f7fffffe          BL       mess_find_unvol
002d58  b110              CBZ      r0,|L1.11616|
002d5a  6828              LDR      r0,[r5,#0]  ; mess_data
002d5c  2866              CMP      r0,#0x66
002d5e  d052              BEQ      |L1.11782|
                  |L1.11616|
;;;4613   		{
;;;4614   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4615   		else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4616   		}
;;;4617   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOSET,1,SHIFT_REL_AV_NET,1);
002d60  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002d62  07c0              LSLS     r0,r0,#31
002d64  d05c              BEQ      |L1.11808|
;;;4618   	else SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
002d66  6fa0              LDR      r0,[r4,#0x78]
002d68  f0407000          ORR      r0,r0,#0x2000000
002d6c  67a0              STR      r0,[r4,#0x78]
                  |L1.11630|
;;;4619   	#endif
;;;4620   
;;;4621   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
002d6e  20d2              MOVS     r0,#0xd2
002d70  f7fffffe          BL       mess_find_unvol
002d74  b110              CBZ      r0,|L1.11644|
002d76  6828              LDR      r0,[r5,#0]  ; mess_data
002d78  286a              CMP      r0,#0x6a
002d7a  d056              BEQ      |L1.11818|
                  |L1.11644|
;;;4622   		{
;;;4623   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
;;;4624   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,7,1);
;;;4625   	     }
;;;4626   	else 
;;;4627   		{
;;;4628   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
002d7c  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002d7e  4238              TST      r0,r7
002d80  d061              BEQ      |L1.11846|
;;;4629   	     else SET_REG(LPC_GPIO0->FIOSET,1,7,1);
002d82  69a0              LDR      r0,[r4,#0x18]
002d84  f0400080          ORR      r0,r0,#0x80
002d88  61a0              STR      r0,[r4,#0x18]
                  |L1.11658|
;;;4630   		}
;;;4631   	//Реле аварии БПС
;;;4632   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
002d8a  20d2              MOVS     r0,#0xd2
002d8c  f7fffffe          BL       mess_find_unvol
002d90  e01a              B        |L1.11720|
                  |L1.11666|
002d92  e033              B        |L1.11772|
                  |L1.11668|
                          DCD      ||area_number.25||+0x80
                  |L1.11672|
                          DCD      0x4002c000
                  |L1.11676|
                          DCD      0xfff000ff
                  |L1.11680|
                          DCD      0x2009c000
                  |L1.11684|
                          DCD      bat
                  |L1.11688|
                          DCD      tbatdisable_stat
                  |L1.11692|
                          DCD      tbatdisable_cmnd
                  |L1.11696|
                          DCD      main_1Hz_cnt
                  |L1.11700|
                          DCD      mess_data
                  |L1.11704|
                          DCD      avar_ind_stat
                  |L1.11708|
                          DCD      AUSW_MAIN
                  |L1.11712|
                          DCD      ips_bat_av_stat
                  |L1.11716|
                          DCD      0x100007f8
                  |L1.11720|
002dc8  b110              CBZ      r0,|L1.11728|
002dca  6828              LDR      r0,[r5,#0]  ; mess_data
002dcc  286a              CMP      r0,#0x6a
002dce  d03f              BEQ      |L1.11856|
                  |L1.11728|
;;;4633   		{
;;;4634   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4635   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4636        	}
;;;4637   	else 
;;;4638   		{
;;;4639   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
002dd0  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002dd2  4238              TST      r0,r7
002dd4  d04b              BEQ      |L1.11886|
;;;4640        	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
002dd6  69a0              LDR      r0,[r4,#0x18]
002dd8  f0400020          ORR      r0,r0,#0x20
002ddc  61a0              STR      r0,[r4,#0x18]
002dde  e0d1              B        |L1.12164|
                  |L1.11744|
002de0  6868              LDR      r0,[r5,#4]            ;4593  ; mess_data
002de2  b130              CBZ      r0,|L1.11762|
002de4  2801              CMP      r0,#1                 ;4594
002de6  d1b4              BNE      |L1.11602|
002de8  69a0              LDR      r0,[r4,#0x18]         ;4594
002dea  f0400010          ORR      r0,r0,#0x10           ;4594
002dee  61a0              STR      r0,[r4,#0x18]         ;4594
002df0  e7af              B        |L1.11602|
                  |L1.11762|
002df2  69e0              LDR      r0,[r4,#0x1c]         ;4593
002df4  f0400010          ORR      r0,r0,#0x10           ;4593
002df8  61e0              STR      r0,[r4,#0x1c]         ;4593
002dfa  e7aa              B        |L1.11602|
                  |L1.11772|
002dfc  69e0              LDR      r0,[r4,#0x1c]         ;4598
002dfe  f0400010          ORR      r0,r0,#0x10           ;4598
002e02  61e0              STR      r0,[r4,#0x1c]         ;4598
002e04  e7a5              B        |L1.11602|
                  |L1.11782|
002e06  6868              LDR      r0,[r5,#4]            ;4614  ; mess_data
002e08  b120              CBZ      r0,|L1.11796|
002e0a  69e0              LDR      r0,[r4,#0x1c]         ;4615
002e0c  f0407000          ORR      r0,r0,#0x2000000      ;4615
002e10  61e0              STR      r0,[r4,#0x1c]         ;4615
002e12  e7ac              B        |L1.11630|
                  |L1.11796|
002e14  69a0              LDR      r0,[r4,#0x18]         ;4614
002e16  f0407000          ORR      r0,r0,#0x2000000      ;4614
002e1a  61a0              STR      r0,[r4,#0x18]         ;4614
002e1c  e7a7              B        |L1.11630|
                  |L1.11806|
002e1e  e02b              B        |L1.11896|
                  |L1.11808|
002e20  6ba0              LDR      r0,[r4,#0x38]         ;4617
002e22  f0407000          ORR      r0,r0,#0x2000000      ;4617
002e26  63a0              STR      r0,[r4,#0x38]         ;4617
002e28  e7a1              B        |L1.11630|
                  |L1.11818|
002e2a  6868              LDR      r0,[r5,#4]            ;4623  ; mess_data
002e2c  b130              CBZ      r0,|L1.11836|
002e2e  2801              CMP      r0,#1                 ;4624
002e30  d1ab              BNE      |L1.11658|
002e32  69a0              LDR      r0,[r4,#0x18]         ;4624
002e34  f0400080          ORR      r0,r0,#0x80           ;4624
002e38  61a0              STR      r0,[r4,#0x18]         ;4624
002e3a  e7a6              B        |L1.11658|
                  |L1.11836|
002e3c  69e0              LDR      r0,[r4,#0x1c]         ;4623
002e3e  f0400080          ORR      r0,r0,#0x80           ;4623
002e42  61e0              STR      r0,[r4,#0x1c]         ;4623
002e44  e7a1              B        |L1.11658|
                  |L1.11846|
002e46  69e0              LDR      r0,[r4,#0x1c]         ;4628
002e48  f0400080          ORR      r0,r0,#0x80           ;4628
002e4c  61e0              STR      r0,[r4,#0x1c]         ;4628
002e4e  e79c              B        |L1.11658|
                  |L1.11856|
002e50  6868              LDR      r0,[r5,#4]            ;4634  ; mess_data
002e52  b110              CBZ      r0,|L1.11866|
002e54  2801              CMP      r0,#1                 ;4635
002e56  d005              BEQ      |L1.11876|
002e58  e094              B        |L1.12164|
                  |L1.11866|
002e5a  69e0              LDR      r0,[r4,#0x1c]         ;4634
002e5c  f0400020          ORR      r0,r0,#0x20           ;4634
002e60  61e0              STR      r0,[r4,#0x1c]         ;4634
002e62  e08f              B        |L1.12164|
                  |L1.11876|
002e64  69a0              LDR      r0,[r4,#0x18]         ;4635
002e66  f0400020          ORR      r0,r0,#0x20           ;4635
002e6a  61a0              STR      r0,[r4,#0x18]         ;4635
002e6c  e08a              B        |L1.12164|
                  |L1.11886|
002e6e  69e0              LDR      r0,[r4,#0x1c]         ;4639
002e70  f0400020          ORR      r0,r0,#0x20           ;4639
002e74  61e0              STR      r0,[r4,#0x1c]         ;4639
002e76  e085              B        |L1.12164|
                  |L1.11896|
;;;4641   		} 
;;;4642   	}
;;;4643   else	if((AUSW_MAIN==22033)||(AUSW_MAIN==22018))
002e78  f5a041ac          SUB      r1,r0,#0x5600
002e7c  3911              SUBS     r1,r1,#0x11
002e7e  d001              BEQ      |L1.11908|
002e80  310f              ADDS     r1,r1,#0xf
002e82  d163              BNE      |L1.12108|
                  |L1.11908|
;;;4644   	{
;;;4645   	#ifndef UKU2071x 
;;;4646   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4647   		{
;;;4648   		if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4649   		else SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4650   		}
;;;4651   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4652   	else SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4653   	#endif
;;;4654   	#ifdef UKU2071x 
;;;4655   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
002e84  20d2              MOVS     r0,#0xd2
002e86  f7fffffe          BL       mess_find_unvol
002e8a  b110              CBZ      r0,|L1.11922|
002e8c  6828              LDR      r0,[r5,#0]  ; mess_data
002e8e  2866              CMP      r0,#0x66
002e90  d023              BEQ      |L1.11994|
                  |L1.11922|
;;;4656   		{
;;;4657   		if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;4658   		else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;4659   		}
;;;4660   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
002e92  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002e94  07c0              LSLS     r0,r0,#31
002e96  d02c              BEQ      |L1.12018|
;;;4661   	else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
002e98  6fa0              LDR      r0,[r4,#0x78]
002e9a  f0407000          ORR      r0,r0,#0x2000000
002e9e  67a0              STR      r0,[r4,#0x78]
                  |L1.11936|
;;;4662   	#endif
;;;4663   	
;;;4664   	
;;;4665   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
002ea0  20d2              MOVS     r0,#0xd2
002ea2  f7fffffe          BL       mess_find_unvol
002ea6  b110              CBZ      r0,|L1.11950|
002ea8  6828              LDR      r0,[r5,#0]  ; mess_data
002eaa  286a              CMP      r0,#0x6a
002eac  d026              BEQ      |L1.12028|
                  |L1.11950|
;;;4666   		{
;;;4667   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
;;;4668   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,7,1);
;;;4669   	     }
;;;4670   	else 
;;;4671   		{
;;;4672   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,7,1);
002eae  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002eb0  4238              TST      r0,r7
002eb2  d031              BEQ      |L1.12056|
;;;4673   	     else SET_REG(LPC_GPIO0->FIOSET,1,7,1);
002eb4  69a0              LDR      r0,[r4,#0x18]
002eb6  f0400080          ORR      r0,r0,#0x80
002eba  61a0              STR      r0,[r4,#0x18]
                  |L1.11964|
;;;4674   		} 
;;;4675   
;;;4676   	//Реле аварий батарей
;;;4677   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BAT))
002ebc  20d2              MOVS     r0,#0xd2
002ebe  f7fffffe          BL       mess_find_unvol
002ec2  b110              CBZ      r0,|L1.11978|
002ec4  6828              LDR      r0,[r5,#0]  ; mess_data
002ec6  2867              CMP      r0,#0x67
002ec8  d02b              BEQ      |L1.12066|
                  |L1.11978|
;;;4678   		{
;;;4679   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
;;;4680   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,4,1);
;;;4681        	}
;;;4682   	else 
;;;4683   		{
;;;4684   		if(!(ips_bat_av_stat)) SET_REG(LPC_GPIO0->FIOCLR,1,4,1);
002eca  f8980000          LDRB     r0,[r8,#0]  ; ips_bat_av_stat
002ece  b390              CBZ      r0,|L1.12086|
;;;4685        	else SET_REG(LPC_GPIO0->FIOSET,1,4,1);
002ed0  69a0              LDR      r0,[r4,#0x18]
002ed2  f0400010          ORR      r0,r0,#0x10
002ed6  61a0              STR      r0,[r4,#0x18]
002ed8  e054              B        |L1.12164|
                  |L1.11994|
002eda  6868              LDR      r0,[r5,#4]            ;4657  ; mess_data
002edc  b120              CBZ      r0,|L1.12008|
002ede  6fa0              LDR      r0,[r4,#0x78]         ;4658
002ee0  f0407000          ORR      r0,r0,#0x2000000      ;4658
002ee4  67a0              STR      r0,[r4,#0x78]         ;4658
002ee6  e7db              B        |L1.11936|
                  |L1.12008|
002ee8  6fe0              LDR      r0,[r4,#0x7c]         ;4657
002eea  f0407000          ORR      r0,r0,#0x2000000      ;4657
002eee  67e0              STR      r0,[r4,#0x7c]         ;4657
002ef0  e7d6              B        |L1.11936|
                  |L1.12018|
002ef2  6fe0              LDR      r0,[r4,#0x7c]         ;4660
002ef4  f0407000          ORR      r0,r0,#0x2000000      ;4660
002ef8  67e0              STR      r0,[r4,#0x7c]         ;4660
002efa  e7d1              B        |L1.11936|
                  |L1.12028|
002efc  6868              LDR      r0,[r5,#4]            ;4667  ; mess_data
002efe  b130              CBZ      r0,|L1.12046|
002f00  2801              CMP      r0,#1                 ;4668
002f02  d1db              BNE      |L1.11964|
002f04  69a0              LDR      r0,[r4,#0x18]         ;4668
002f06  f0400080          ORR      r0,r0,#0x80           ;4668
002f0a  61a0              STR      r0,[r4,#0x18]         ;4668
002f0c  e7d6              B        |L1.11964|
                  |L1.12046|
002f0e  69e0              LDR      r0,[r4,#0x1c]         ;4667
002f10  f0400080          ORR      r0,r0,#0x80           ;4667
002f14  61e0              STR      r0,[r4,#0x1c]         ;4667
002f16  e7d1              B        |L1.11964|
                  |L1.12056|
002f18  69e0              LDR      r0,[r4,#0x1c]         ;4672
002f1a  f0400080          ORR      r0,r0,#0x80           ;4672
002f1e  61e0              STR      r0,[r4,#0x1c]         ;4672
002f20  e7cc              B        |L1.11964|
                  |L1.12066|
002f22  6868              LDR      r0,[r5,#4]            ;4679  ; mess_data
002f24  b110              CBZ      r0,|L1.12076|
002f26  2801              CMP      r0,#1                 ;4680
002f28  d006              BEQ      |L1.12088|
002f2a  e02b              B        |L1.12164|
                  |L1.12076|
002f2c  69e0              LDR      r0,[r4,#0x1c]         ;4679
002f2e  f0400010          ORR      r0,r0,#0x10           ;4679
002f32  61e0              STR      r0,[r4,#0x1c]         ;4679
002f34  e026              B        |L1.12164|
                  |L1.12086|
002f36  e004              B        |L1.12098|
                  |L1.12088|
002f38  69a0              LDR      r0,[r4,#0x18]         ;4680
002f3a  f0400010          ORR      r0,r0,#0x10           ;4680
002f3e  61a0              STR      r0,[r4,#0x18]         ;4680
002f40  e020              B        |L1.12164|
                  |L1.12098|
002f42  69e0              LDR      r0,[r4,#0x1c]         ;4684
002f44  f0400010          ORR      r0,r0,#0x10           ;4684
002f48  61e0              STR      r0,[r4,#0x1c]         ;4684
002f4a  e01b              B        |L1.12164|
                  |L1.12108|
;;;4686   		} 
;;;4687   	} 	 
;;;4688   else	
;;;4689   	{
;;;4690   	//Реле аварии сети ТУТ КАКАЯ то ЛАЖА с аварией сети. Обращение к разным портам
;;;4691   	#ifndef UKU2071x 
;;;4692   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4693   		{
;;;4694   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4695   		else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4696   		}
;;;4697   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4698   	else SET_REG(LPC_GPIO3->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4699   	#endif
;;;4700   	#ifdef UKU2071x 
;;;4701   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
002f4c  20d2              MOVS     r0,#0xd2
002f4e  f7fffffe          BL       mess_find_unvol
002f52  b110              CBZ      r0,|L1.12122|
002f54  6828              LDR      r0,[r5,#0]  ; mess_data
002f56  2866              CMP      r0,#0x66
002f58  d026              BEQ      |L1.12200|
                  |L1.12122|
;;;4702   		{
;;;4703   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4704   		else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4705   		}
;;;4706   	else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO1->FIOSET,1,SHIFT_REL_AV_NET,1);
002f5a  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002f5c  07c0              LSLS     r0,r0,#31
002f5e  d02f              BEQ      |L1.12224|
;;;4707   	else SET_REG(LPC_GPIO3->FIOSET,1,SHIFT_REL_AV_NET,1);
002f60  6fa0              LDR      r0,[r4,#0x78]
002f62  f0407000          ORR      r0,r0,#0x2000000
002f66  67a0              STR      r0,[r4,#0x78]
                  |L1.12136|
;;;4708   	#endif
;;;4709   
;;;4710   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
002f68  20d2              MOVS     r0,#0xd2
002f6a  f7fffffe          BL       mess_find_unvol
002f6e  b110              CBZ      r0,|L1.12150|
002f70  6828              LDR      r0,[r5,#0]  ; mess_data
002f72  286a              CMP      r0,#0x6a
002f74  d029              BEQ      |L1.12234|
                  |L1.12150|
;;;4711   		{
;;;4712   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;4713   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;4714        	}
;;;4715   	else 
;;;4716   		{
;;;4717   		if(!(avar_ind_stat&0x100007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
002f76  6830              LDR      r0,[r6,#0]  ; avar_ind_stat
002f78  4238              TST      r0,r7
002f7a  d034              BEQ      |L1.12262|
;;;4718        	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
002f7c  69a0              LDR      r0,[r4,#0x18]
002f7e  f0400020          ORR      r0,r0,#0x20
002f82  61a0              STR      r0,[r4,#0x18]
                  |L1.12164|
;;;4719   		}
;;;4720   	}
;;;4721   //Дополнительное реле УКУ 
;;;4722   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_EXT))	 
002f84  20d2              MOVS     r0,#0xd2
002f86  f7fffffe          BL       mess_find_unvol
;;;4723   	{
;;;4724   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,9,1);
;;;4725   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,9,1);
;;;4726   	}
;;;4727   else if(DOP_RELE_FUNC==0)	//если допреле подключено к ускоренному заряду
;;;4728   	{
;;;4729   	if((!speedChIsOn)&&(spc_stat!=spcVZ)&&(hv_vz_stat==hvsOFF)&&(sp_ch_stat==scsOFF)&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF)&&(load_U/10<UVENTOFF))   SET_REG(LPC_GPIO0->FIOCLR,1,9,1);
002f8a  f8df83fc          LDR      r8,|L1.13192|
002f8e  4fff              LDR      r7,|L1.13196|
002f90  4eff              LDR      r6,|L1.13200|
002f92  b110              CBZ      r0,|L1.12186|
002f94  6828              LDR      r0,[r5,#0]            ;4722  ; mess_data
002f96  2871              CMP      r0,#0x71              ;4722
002f98  d02a              BEQ      |L1.12272|
                  |L1.12186|
002f9a  48fe              LDR      r0,|L1.13204|
002f9c  f9b00000          LDRSH    r0,[r0,#0]            ;4727  ; DOP_RELE_FUNC
002fa0  b380              CBZ      r0,|L1.12292|
;;;4730   	else if((speedChIsOn)||(spc_stat==spcVZ)||(hv_vz_stat!=hvsOFF)||(sp_ch_stat!=scsOFF)||(vz1_stat!=vz1sOFF)||(vz2_stat!=vz2sOFF)) SET_REG(LPC_GPIO0->FIOSET,1,9,1);
;;;4731   	}
;;;4732   else if(DOP_RELE_FUNC==1)  //если допреле подключено к индикации разряженной батареи
002fa2  2801              CMP      r0,#1
002fa4  d068              BEQ      |L1.12408|
002fa6  e072              B        |L1.12430|
                  |L1.12200|
002fa8  6868              LDR      r0,[r5,#4]            ;4703  ; mess_data
002faa  b120              CBZ      r0,|L1.12214|
002fac  69e0              LDR      r0,[r4,#0x1c]         ;4704
002fae  f0407000          ORR      r0,r0,#0x2000000      ;4704
002fb2  61e0              STR      r0,[r4,#0x1c]         ;4704
002fb4  e7d8              B        |L1.12136|
                  |L1.12214|
002fb6  69a0              LDR      r0,[r4,#0x18]         ;4703
002fb8  f0407000          ORR      r0,r0,#0x2000000      ;4703
002fbc  61a0              STR      r0,[r4,#0x18]         ;4703
002fbe  e7d3              B        |L1.12136|
                  |L1.12224|
002fc0  6ba0              LDR      r0,[r4,#0x38]         ;4706
002fc2  f0407000          ORR      r0,r0,#0x2000000      ;4706
002fc6  63a0              STR      r0,[r4,#0x38]         ;4706
002fc8  e7ce              B        |L1.12136|
                  |L1.12234|
002fca  6868              LDR      r0,[r5,#4]            ;4712  ; mess_data
002fcc  b130              CBZ      r0,|L1.12252|
002fce  2801              CMP      r0,#1                 ;4713
002fd0  d1d8              BNE      |L1.12164|
002fd2  69a0              LDR      r0,[r4,#0x18]         ;4713
002fd4  f0400020          ORR      r0,r0,#0x20           ;4713
002fd8  61a0              STR      r0,[r4,#0x18]         ;4713
002fda  e7d3              B        |L1.12164|
                  |L1.12252|
002fdc  69e0              LDR      r0,[r4,#0x1c]         ;4712
002fde  f0400020          ORR      r0,r0,#0x20           ;4712
002fe2  61e0              STR      r0,[r4,#0x1c]         ;4712
002fe4  e7ce              B        |L1.12164|
                  |L1.12262|
002fe6  69e0              LDR      r0,[r4,#0x1c]         ;4717
002fe8  f0400020          ORR      r0,r0,#0x20           ;4717
002fec  61e0              STR      r0,[r4,#0x1c]         ;4717
002fee  e7c9              B        |L1.12164|
                  |L1.12272|
002ff0  6868              LDR      r0,[r5,#4]            ;4724  ; mess_data
002ff2  b110              CBZ      r0,|L1.12282|
002ff4  2801              CMP      r0,#1                 ;4725
002ff6  d006              BEQ      |L1.12294|
002ff8  e049              B        |L1.12430|
                  |L1.12282|
002ffa  69e0              LDR      r0,[r4,#0x1c]         ;4724
002ffc  f4407000          ORR      r0,r0,#0x200          ;4724
003000  61e0              STR      r0,[r4,#0x1c]         ;4724
003002  e044              B        |L1.12430|
                  |L1.12292|
003004  e004              B        |L1.12304|
                  |L1.12294|
003006  69a0              LDR      r0,[r4,#0x18]         ;4725
003008  f4407000          ORR      r0,r0,#0x200          ;4725
00300c  61a0              STR      r0,[r4,#0x18]         ;4725
00300e  e03e              B        |L1.12430|
                  |L1.12304|
003010  48e1              LDR      r0,|L1.13208|
003012  49e2              LDR      r1,|L1.13212|
003014  f9b00000          LDRSH    r0,[r0,#0]            ;4729  ; speedChIsOn
003018  b9d8              CBNZ     r0,|L1.12370|
00301a  7e32              LDRB     r2,[r6,#0x18]         ;4729  ; spc_stat
00301c  2a02              CMP      r2,#2                 ;4729
00301e  d018              BEQ      |L1.12370|
003020  780a              LDRB     r2,[r1,#0]            ;4729  ; hv_vz_stat
003022  b9b2              CBNZ     r2,|L1.12370|
003024  783a              LDRB     r2,[r7,#0]            ;4729  ; sp_ch_stat
003026  b9a2              CBNZ     r2,|L1.12370|
003028  f8962024          LDRB     r2,[r6,#0x24]         ;4729  ; vz1_stat
00302c  b98a              CBNZ     r2,|L1.12370|
00302e  f8962027          LDRB     r2,[r6,#0x27]         ;4729  ; vz2_stat
003032  b972              CBNZ     r2,|L1.12370|
003034  f9b82000          LDRSH    r2,[r8,#0]            ;4729  ; load_U
003038  230a              MOVS     r3,#0xa               ;4729
00303a  fb92f2f3          SDIV     r2,r2,r3              ;4729
00303e  4bd8              LDR      r3,|L1.13216|
003040  f9b33000          LDRSH    r3,[r3,#0]            ;4729  ; UVENTOFF
003044  429a              CMP      r2,r3                 ;4729
003046  da04              BGE      |L1.12370|
003048  69e0              LDR      r0,[r4,#0x1c]         ;4729
00304a  f4407000          ORR      r0,r0,#0x200          ;4729
00304e  61e0              STR      r0,[r4,#0x1c]         ;4729
003050  e01d              B        |L1.12430|
                  |L1.12370|
003052  b960              CBNZ     r0,|L1.12398|
003054  7e30              LDRB     r0,[r6,#0x18]         ;4730  ; spc_stat
003056  2802              CMP      r0,#2                 ;4730
003058  d009              BEQ      |L1.12398|
00305a  7808              LDRB     r0,[r1,#0]            ;4730  ; hv_vz_stat
00305c  b938              CBNZ     r0,|L1.12398|
00305e  7838              LDRB     r0,[r7,#0]            ;4730  ; sp_ch_stat
003060  b928              CBNZ     r0,|L1.12398|
003062  f8960024          LDRB     r0,[r6,#0x24]         ;4730  ; vz1_stat
003066  b910              CBNZ     r0,|L1.12398|
003068  f8960027          LDRB     r0,[r6,#0x27]         ;4730  ; vz2_stat
00306c  b178              CBZ      r0,|L1.12430|
                  |L1.12398|
00306e  69a0              LDR      r0,[r4,#0x18]         ;4730
003070  f4407000          ORR      r0,r0,#0x200          ;4730
003074  61a0              STR      r0,[r4,#0x18]         ;4730
003076  e00a              B        |L1.12430|
                  |L1.12408|
;;;4733   	{
;;;4734   	if((mess_find_unvol(MESS2RELE_HNDL))&& (mess_data[0]==PARAM_RELE_BAT_IS_DISCHARGED)) SET_REG(LPC_GPIO0->FIOCLR,1,9,1);
003078  20d2              MOVS     r0,#0xd2
00307a  f7fffffe          BL       mess_find_unvol
00307e  b110              CBZ      r0,|L1.12422|
003080  6828              LDR      r0,[r5,#0]  ; mess_data
003082  2872              CMP      r0,#0x72
003084  d017              BEQ      |L1.12470|
                  |L1.12422|
;;;4735   	else SET_REG(LPC_GPIO0->FIOSET,1,9,1);
003086  69a0              LDR      r0,[r4,#0x18]
003088  f4407000          ORR      r0,r0,#0x200
00308c  61a0              STR      r0,[r4,#0x18]
                  |L1.12430|
;;;4736   	}
;;;4737   	
;;;4738   //Блок выносной реле
;;;4739   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_BDR1))
00308e  20d2              MOVS     r0,#0xd2
003090  f7fffffe          BL       mess_find_unvol
;;;4740   	{
;;;4741   	if(mess_data[1]==0) 		bdr_transmit_stat&=0xfe;
003094  f8df930c          LDR      r9,|L1.13220|
;;;4742   	else if(mess_data[1]==1) 	bdr_transmit_stat|=0x01;
;;;4743   	}
;;;4744   else 
;;;4745   	{
;;;4746   	if(bdr_avar_stat&0x01)  	bdr_transmit_stat|=0x01;
003098  4cc3              LDR      r4,|L1.13224|
00309a  b110              CBZ      r0,|L1.12450|
00309c  6828              LDR      r0,[r5,#0]            ;4739  ; mess_data
00309e  2875              CMP      r0,#0x75              ;4739
0030a0  d00e              BEQ      |L1.12480|
                  |L1.12450|
0030a2  7820              LDRB     r0,[r4,#0]  ; bdr_avar_stat
0030a4  07c0              LSLS     r0,r0,#31
0030a6  d01e              BEQ      |L1.12518|
0030a8  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
0030ac  f0400001          ORR      r0,r0,#1
0030b0  f8890000          STRB     r0,[r9,#0]
0030b4  e01d              B        |L1.12530|
                  |L1.12470|
0030b6  69e0              LDR      r0,[r4,#0x1c]         ;4734
0030b8  f4407000          ORR      r0,r0,#0x200          ;4734
0030bc  61e0              STR      r0,[r4,#0x1c]         ;4734
0030be  e7e6              B        |L1.12430|
                  |L1.12480|
0030c0  6868              LDR      r0,[r5,#4]            ;4741  ; mess_data
0030c2  b110              CBZ      r0,|L1.12490|
0030c4  2801              CMP      r0,#1                 ;4742
0030c6  d007              BEQ      |L1.12504|
0030c8  e013              B        |L1.12530|
                  |L1.12490|
0030ca  f8990000          LDRB     r0,[r9,#0]            ;4741  ; bdr_transmit_stat
0030ce  f00000fe          AND      r0,r0,#0xfe           ;4741
0030d2  f8890000          STRB     r0,[r9,#0]            ;4741
0030d6  e00c              B        |L1.12530|
                  |L1.12504|
0030d8  f8990000          LDRB     r0,[r9,#0]            ;4742  ; bdr_transmit_stat
0030dc  f0400001          ORR      r0,r0,#1              ;4742
0030e0  f8890000          STRB     r0,[r9,#0]            ;4742
0030e4  e005              B        |L1.12530|
                  |L1.12518|
;;;4747   	else 						bdr_transmit_stat&=0xfe;
0030e6  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
0030ea  f00000fe          AND      r0,r0,#0xfe
0030ee  f8890000          STRB     r0,[r9,#0]
                  |L1.12530|
;;;4748   	}	
;;;4749   
;;;4750   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_BDR2))
0030f2  20d2              MOVS     r0,#0xd2
0030f4  f7fffffe          BL       mess_find_unvol
0030f8  b110              CBZ      r0,|L1.12544|
0030fa  6828              LDR      r0,[r5,#0]  ; mess_data
0030fc  2876              CMP      r0,#0x76
0030fe  d009              BEQ      |L1.12564|
                  |L1.12544|
;;;4751   	{
;;;4752   	if(mess_data[1]==0) 		bdr_transmit_stat&=0xfd;
;;;4753   	else if(mess_data[1]==1) 	bdr_transmit_stat|=0x02;
;;;4754   	}
;;;4755   else 
;;;4756   	{
;;;4757   	if(bdr_avar_stat&0x01)  	bdr_transmit_stat|=0x02;
003100  7820              LDRB     r0,[r4,#0]  ; bdr_avar_stat
003102  07c0              LSLS     r0,r0,#31
003104  d019              BEQ      |L1.12602|
003106  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
00310a  f0400002          ORR      r0,r0,#2
00310e  f8890000          STRB     r0,[r9,#0]
003112  e018              B        |L1.12614|
                  |L1.12564|
003114  6868              LDR      r0,[r5,#4]            ;4752  ; mess_data
003116  b110              CBZ      r0,|L1.12574|
003118  2801              CMP      r0,#1                 ;4753
00311a  d007              BEQ      |L1.12588|
00311c  e013              B        |L1.12614|
                  |L1.12574|
00311e  f8990000          LDRB     r0,[r9,#0]            ;4752  ; bdr_transmit_stat
003122  f00000fd          AND      r0,r0,#0xfd           ;4752
003126  f8890000          STRB     r0,[r9,#0]            ;4752
00312a  e00c              B        |L1.12614|
                  |L1.12588|
00312c  f8990000          LDRB     r0,[r9,#0]            ;4753  ; bdr_transmit_stat
003130  f0400002          ORR      r0,r0,#2              ;4753
003134  f8890000          STRB     r0,[r9,#0]            ;4753
003138  e005              B        |L1.12614|
                  |L1.12602|
;;;4758   	else 						bdr_transmit_stat&=0xfd;
00313a  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
00313e  f00000fd          AND      r0,r0,#0xfd
003142  f8890000          STRB     r0,[r9,#0]
                  |L1.12614|
;;;4759   	}	
;;;4760   	
;;;4761   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_BDR3))
003146  20d2              MOVS     r0,#0xd2
003148  f7fffffe          BL       mess_find_unvol
00314c  b110              CBZ      r0,|L1.12628|
00314e  6828              LDR      r0,[r5,#0]  ; mess_data
003150  2877              CMP      r0,#0x77
003152  d009              BEQ      |L1.12648|
                  |L1.12628|
;;;4762   	{
;;;4763   	if(mess_data[1]==0) 		bdr_transmit_stat&=0xfb;
;;;4764   	else if(mess_data[1]==1) 	bdr_transmit_stat|=0x04;
;;;4765   	}
;;;4766   else 
;;;4767   	{
;;;4768   	if(bdr_avar_stat&0x01)  	bdr_transmit_stat|=0x04;
003154  7820              LDRB     r0,[r4,#0]  ; bdr_avar_stat
003156  07c0              LSLS     r0,r0,#31
003158  d019              BEQ      |L1.12686|
00315a  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
00315e  f0400004          ORR      r0,r0,#4
003162  f8890000          STRB     r0,[r9,#0]
003166  e018              B        |L1.12698|
                  |L1.12648|
003168  6868              LDR      r0,[r5,#4]            ;4763  ; mess_data
00316a  b110              CBZ      r0,|L1.12658|
00316c  2801              CMP      r0,#1                 ;4764
00316e  d007              BEQ      |L1.12672|
003170  e013              B        |L1.12698|
                  |L1.12658|
003172  f8990000          LDRB     r0,[r9,#0]            ;4763  ; bdr_transmit_stat
003176  f00000fb          AND      r0,r0,#0xfb           ;4763
00317a  f8890000          STRB     r0,[r9,#0]            ;4763
00317e  e00c              B        |L1.12698|
                  |L1.12672|
003180  f8990000          LDRB     r0,[r9,#0]            ;4764  ; bdr_transmit_stat
003184  f0400004          ORR      r0,r0,#4              ;4764
003188  f8890000          STRB     r0,[r9,#0]            ;4764
00318c  e005              B        |L1.12698|
                  |L1.12686|
;;;4769   	else 						bdr_transmit_stat&=0xfb;
00318e  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
003192  f00000fb          AND      r0,r0,#0xfb
003196  f8890000          STRB     r0,[r9,#0]
                  |L1.12698|
;;;4770   	}	
;;;4771   	
;;;4772   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_BDR4))
00319a  20d2              MOVS     r0,#0xd2
00319c  f7fffffe          BL       mess_find_unvol
0031a0  b110              CBZ      r0,|L1.12712|
0031a2  6828              LDR      r0,[r5,#0]  ; mess_data
0031a4  2878              CMP      r0,#0x78
0031a6  d009              BEQ      |L1.12732|
                  |L1.12712|
;;;4773   	{
;;;4774   	if(mess_data[1]==0) 		bdr_transmit_stat&=0xf7;
;;;4775   	else if(mess_data[1]==1) 	bdr_transmit_stat|=0x08;
;;;4776   	}
;;;4777   else 
;;;4778   	{
;;;4779   	if(bdr_avar_stat&0x01)  	bdr_transmit_stat|=0x08;
0031a8  7820              LDRB     r0,[r4,#0]  ; bdr_avar_stat
0031aa  07c0              LSLS     r0,r0,#31
0031ac  d019              BEQ      |L1.12770|
0031ae  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
0031b2  f0400008          ORR      r0,r0,#8
0031b6  f8890000          STRB     r0,[r9,#0]
0031ba  e018              B        |L1.12782|
                  |L1.12732|
0031bc  6868              LDR      r0,[r5,#4]            ;4774  ; mess_data
0031be  b110              CBZ      r0,|L1.12742|
0031c0  2801              CMP      r0,#1                 ;4775
0031c2  d007              BEQ      |L1.12756|
0031c4  e013              B        |L1.12782|
                  |L1.12742|
0031c6  f8990000          LDRB     r0,[r9,#0]            ;4774  ; bdr_transmit_stat
0031ca  f00000f7          AND      r0,r0,#0xf7           ;4774
0031ce  f8890000          STRB     r0,[r9,#0]            ;4774
0031d2  e00c              B        |L1.12782|
                  |L1.12756|
0031d4  f8990000          LDRB     r0,[r9,#0]            ;4775  ; bdr_transmit_stat
0031d8  f0400008          ORR      r0,r0,#8              ;4775
0031dc  f8890000          STRB     r0,[r9,#0]            ;4775
0031e0  e005              B        |L1.12782|
                  |L1.12770|
;;;4780   	else 						bdr_transmit_stat&=0xf7;
0031e2  f8990000          LDRB     r0,[r9,#0]  ; bdr_transmit_stat
0031e6  f00000f7          AND      r0,r0,#0xf7
0031ea  f8890000          STRB     r0,[r9,#0]
                  |L1.12782|
;;;4781   	}	
;;;4782   					 	
;;;4783   #endif
;;;4784   
;;;4785   #ifdef UKU_KONTUR
;;;4786   
;;;4787   //Реле общей аварии
;;;4788   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_COMM))
;;;4789   	{
;;;4790   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4791   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4792   	}
;;;4793   else 
;;;4794   	{
;;;4795        if(  (!(avar_ind_stat&0x00007fff)) &&
;;;4796             ((!SK_REL_EN[0]) || (sk_av_stat[0]!=sasON))  &&
;;;4797             ((!SK_REL_EN[1]) || (sk_av_stat[1]!=sasON))  &&
;;;4798             ((!SK_REL_EN[2]) || (sk_av_stat[2]!=sasON))  /*&&
;;;4799             ((!SK_REL_EN[3]) || (sk_av_stat[3]!=sasON))*/  )SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_COMM,1);
;;;4800        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_COMM,1);
;;;4801   	}
;;;4802   
;;;4803   	
;;;4804   //rel_warm_plazma=0;
;;;4805   //Реле освещения   
;;;4806   /*
;;;4807   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_WARM))
;;;4808   	{
;;;4809   	if(mess_data[1]==0)
;;;4810   		{
;;;4811   		SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4812   		rel_warm_plazma=1;
;;;4813   		}
;;;4814   	else if(mess_data[1]==1) 
;;;4815   		{
;;;4816   		SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4817   		rel_warm_plazma=2;
;;;4818   		}
;;;4819        }
;;;4820   else 
;;;4821   	{
;;;4822   	if(warm_stat_k==wsOFF) 
;;;4823   		{
;;;4824   		SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4825   		rel_warm_plazma=3;
;;;4826   		}
;;;4827        else 
;;;4828   		{
;;;4829   		SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4830   		rel_warm_plazma=4;
;;;4831   		}
;;;4832   	}
;;;4833   */
;;;4834   //Реле освещения
;;;4835   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LIGHT))
;;;4836   	{
;;;4837   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4838   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4839        }
;;;4840   else 
;;;4841   	{
;;;4842   	if(sk_av_stat[0]!=sasON) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4843        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4844   	}
;;;4845   
;;;4846   
;;;4847   
;;;4848   //Реле выключения нагрузки
;;;4849   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LOAD_OFF))
;;;4850   	{
;;;4851   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4852   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4853        }
;;;4854   else if(tloaddisable_cmnd==0)
;;;4855   	{
;;;4856   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4857   	}
;;;4858   else if((tloaddisable_cmnd)&&(tloaddisable_cmnd<=11))
;;;4859   	{
;;;4860   	SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4861   	}
;;;4862   
;;;4863   else 
;;;4864   	{
;;;4865   	if(!(tloaddisable_stat==tldsON)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;4866        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;4867   	} 
;;;4868   
;;;4869   //Реле осевого вентилятора или отопителя
;;;4870   if(RELE_LOG)
;;;4871   	{
;;;4872   	if((mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_VENT_WARM))
;;;4873   		{
;;;4874   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4875   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4876   		}
;;;4877   	else 
;;;4878   		{
;;;4879   		if(warm_stat_k==wsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4880   	     else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4881   		} 
;;;4882   
;;;4883   	}
;;;4884   else 
;;;4885   	{
;;;4886   	if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT_WARM))
;;;4887   		{
;;;4888   		if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4889   		else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4890   		}
;;;4891   	else 
;;;4892   		{
;;;4893   		if(vent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT_WARM,1);
;;;4894   	     else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT_WARM,1);
;;;4895   		} 
;;;4896   	}
;;;4897   #endif
;;;4898   
;;;4899   
;;;4900   #ifdef UKU_TELECORE2015
;;;4901   //Реле аварии сети
;;;4902   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4903   	{
;;;4904   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4905   	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4906   	}
;;;4907   else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4908   else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4909   
;;;4910   
;;;4911   //Реле освещения
;;;4912   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LIGHT))
;;;4913   	{
;;;4914   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4915   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4916        }
;;;4917   else 
;;;4918   	{
;;;4919   	if(sk_av_stat[0]!=sasON) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4920        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4921   	}
;;;4922   
;;;4923   //Реле отопителя
;;;4924   if((mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_WARM))
;;;4925   	{
;;;4926   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4927   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4928   	}
;;;4929   else 
;;;4930   	{
;;;4931   	if(warm_stat_k==wsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4932        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4933   	} 
;;;4934   //Реле вентилятора
;;;4935   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4936   	{
;;;4937   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4938   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4939   	}
;;;4940   else 
;;;4941   	{
;;;4942   	if(vent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4943        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4944   	} 
;;;4945   
;;;4946   //Реле внутреннего вентилятора
;;;4947   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VVENT))
;;;4948   	{
;;;4949   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VVENT,1);
;;;4950   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VVENT,1);
;;;4951   	}
;;;4952   else 
;;;4953   	{
;;;4954   	if(vvent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VVENT,1);
;;;4955        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VVENT,1);
;;;4956   	} 
;;;4957   
;;;4958   #endif
;;;4959   
;;;4960   #ifdef UKU_TELECORE2017
;;;4961   //Реле аварии сети
;;;4962   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;4963   	{
;;;4964   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4965   	else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4966   	}
;;;4967   else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_NET,1);
;;;4968   else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_NET,1);
;;;4969   
;;;4970   
;;;4971   //Реле освещения
;;;4972   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LIGHT))
;;;4973   	{
;;;4974   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4975   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4976        }
;;;4977   else 
;;;4978   	{
;;;4979   	if(sk_av_stat[0]!=sasON) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LIGHT,1);
;;;4980        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LIGHT,1);
;;;4981   	}
;;;4982   
;;;4983   //Реле отопителя
;;;4984   if((mess_find_unvol(MESS2RELE_HNDL))&&(mess_data[0]==PARAM_RELE_WARM))
;;;4985   	{
;;;4986   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4987   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4988   	}
;;;4989   else 
;;;4990   	{
;;;4991   	if(warm_stat_k==wsOFF) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_WARM,1);
;;;4992        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_WARM,1);
;;;4993   	} 
;;;4994   //Реле вентилятора
;;;4995   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VENT))
;;;4996   	{
;;;4997   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;4998   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;4999   	}
;;;5000   else 
;;;5001   	{
;;;5002   	if(vent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VENT,1);
;;;5003        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VENT,1);
;;;5004   	} 
;;;5005   
;;;5006   //Реле внутреннего вентилятора
;;;5007   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_VVENT))
;;;5008   	{
;;;5009   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VVENT,1);
;;;5010   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VVENT,1);
;;;5011   	}
;;;5012   else 
;;;5013   	{
;;;5014   	if(vvent_stat_k==vsOFF) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_VVENT,1);
;;;5015        else SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_VVENT,1);
;;;5016   	} 
;;;5017   
;;;5018   //Реле выключения нагрузки
;;;5019   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_LOAD_OFF))
;;;5020   	{
;;;5021   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;5022   	else if(mess_data[1]==1) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;5023        }
;;;5024   else if(tloaddisable_cmnd==0)
;;;5025   	{
;;;5026   	SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;5027   	}
;;;5028   else if((tloaddisable_cmnd)&&(tloaddisable_cmnd<=11))
;;;5029   	{
;;;5030   	SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;5031   	}
;;;5032   
;;;5033   else 
;;;5034   	{
;;;5035   	if(!(tloaddisable_stat==tldsON)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_LOAD_OFF,1);
;;;5036        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_LOAD_OFF,1);
;;;5037   	} 
;;;5038   
;;;5039   
;;;5040   #endif
;;;5041   
;;;5042   #ifdef IPS_SGEP_GAZPROM
;;;5043   rele_hndl_plazma[0]++;
;;;5044   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_BPS))
;;;5045   	{
;;;5046   	rele_hndl_plazma[1]++;
;;;5047   	if(mess_data[1]==0) SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;5048   	else/* if(mess_data[1]==1)*/ SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;5049        }
;;;5050   else 
;;;5051   	{
;;;5052   	if(!(avar_ind_stat&0x000007f8)) SET_REG(LPC_GPIO0->FIOCLR,1,SHIFT_REL_AV_BPS,1);
;;;5053        else SET_REG(LPC_GPIO0->FIOSET,1,SHIFT_REL_AV_BPS,1);
;;;5054   	} 
;;;5055   
;;;5056   if((mess_find_unvol(MESS2RELE_HNDL))&&	(mess_data[0]==PARAM_RELE_AV_NET))
;;;5057   	{
;;;5058   	rele_hndl_plazma[2]++;
;;;5059   	if(mess_data[1]==0) SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;5060   	else SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;5061   	}
;;;5062   else	if(!(avar_ind_stat&0x00000001)) SET_REG(LPC_GPIO3->FIOCLR,1,25,1);
;;;5063   else SET_REG(LPC_GPIO3->FIOSET,1,25,1);
;;;5064   #endif
;;;5065   
;;;5066   if(NUMBDR==1)
0031ee  486f              LDR      r0,|L1.13228|
0031f0  8800              LDRH     r0,[r0,#0]  ; NUMBDR
0031f2  2801              CMP      r0,#1
0031f4  d17e              BNE      |L1.13044|
;;;5067   	{
;;;5068   	char ii_;
;;;5069   	char bdr_avar_stat_temp=0;
0031f6  f04f0000          MOV      r0,#0
;;;5070   	for	(ii_=0;ii_<4;ii_++)
0031fa  4601              MOV      r1,r0
;;;5071   		{
;;;5072   		//АБ разряжена
;;;5073   		if((RELE_SET_MASK[ii_]&0x01)&&
;;;5074   			(load_U<(USIGN*10)))			bdr_avar_stat_temp|=(1<<ii_);
;;;5075   		//Ускоренный заряд
;;;5076   		if((RELE_SET_MASK[ii_]&0x02)&&
;;;5077   			(sp_ch_stat==scsWRK))			bdr_avar_stat_temp|=(1<<ii_);
;;;5078   		//Выравнивающий заряд
;;;5079   		if((RELE_SET_MASK[ii_]&0x04)&&
;;;5080   			(spc_stat==spcVZ))			bdr_avar_stat_temp|=(1<<ii_);
;;;5081   		//Общая авария ЗВУ
;;;5082   		if((RELE_SET_MASK[ii_]&0x08)&&
;;;5083   			(avar_stat))					bdr_avar_stat_temp|=(1<<ii_);
;;;5084   		//Uвых завышено
;;;5085   		if((RELE_SET_MASK[ii_]&0x10)&&
;;;5086   			(uout_av==1))					bdr_avar_stat_temp|=(1<<ii_);
0031fc  f8dfa1b0          LDR      r10,|L1.13232|
;;;5087   		//Uвых занижено
;;;5088   		if((RELE_SET_MASK[ii_]&0x20)&&
;;;5089   			(uout_av==2))					bdr_avar_stat_temp|=(1<<ii_);
;;;5090   		if((RELE_SET_MASK[ii_]&0x40)&&
;;;5091   			(
;;;5092   			((bps[0]._av&(1<<4))&&(NUMIST>=1))||
003200  f8df91b0          LDR      r9,|L1.13236|
003204  4d6c              LDR      r5,|L1.13240|
003206  f8dfb1b4          LDR      r11,|L1.13244|
00320a  f04f0301          MOV      r3,#1                 ;4024
                  |L1.12814|
00320e  f93b2011          LDRSH    r2,[r11,r1,LSL #1]    ;5073
003212  ea5f7cc2          LSLS     r12,r2,#31            ;5073
003216  d010              BEQ      |L1.12858|
003218  f8dfc1a4          LDR      r12,|L1.13248|
00321c  f9b8e000          LDRSH    lr,[r8,#0]            ;5074  ; load_U
003220  f9bcc000          LDRSH    r12,[r12,#0]          ;5074  ; USIGN
003224  eb0c0c8c          ADD      r12,r12,r12,LSL #2    ;5074
003228  ebbe0f4c          CMP      lr,r12,LSL #1         ;5074
00322c  da05              BGE      |L1.12858|
00322e  fa03fc01          LSL      r12,r3,r1             ;5074
003232  ea4c0c00          ORR      r12,r12,r0            ;5074
003236  f00c00ff          AND      r0,r12,#0xff          ;5074
                  |L1.12858|
00323a  ea5f7c82          LSLS     r12,r2,#30            ;5076
00323e  d50a              BPL      |L1.12886|
003240  f897c000          LDRB     r12,[r7,#0]           ;5077  ; sp_ch_stat
003244  f1bc0f02          CMP      r12,#2                ;5077
003248  d105              BNE      |L1.12886|
00324a  fa03fc01          LSL      r12,r3,r1             ;5077
00324e  ea4c0c00          ORR      r12,r12,r0            ;5077
003252  f00c00ff          AND      r0,r12,#0xff          ;5077
                  |L1.12886|
003256  ea5f7c42          LSLS     r12,r2,#29            ;5079
00325a  d50a              BPL      |L1.12914|
00325c  f896c018          LDRB     r12,[r6,#0x18]        ;5080  ; spc_stat
003260  f1bc0f02          CMP      r12,#2                ;5080
003264  d105              BNE      |L1.12914|
003266  fa03fc01          LSL      r12,r3,r1             ;5080
00326a  ea4c0c00          ORR      r12,r12,r0            ;5080
00326e  f00c00ff          AND      r0,r12,#0xff          ;5080
                  |L1.12914|
003272  ea5f7c02          LSLS     r12,r2,#28            ;5082
003276  d50c              BPL      |L1.12946|
003278  f8dfc148          LDR      r12,|L1.13252|
00327c  f8dcc000          LDR      r12,[r12,#0]          ;5083  ; avar_stat
003280  f1bc0f00          CMP      r12,#0                ;5083
003284  d005              BEQ      |L1.12946|
003286  fa03fc01          LSL      r12,r3,r1             ;5083
00328a  ea4c0c00          ORR      r12,r12,r0            ;5083
00328e  f00c00ff          AND      r0,r12,#0xff          ;5083
                  |L1.12946|
003292  ea5f6cc2          LSLS     r12,r2,#27            ;5085
003296  d50a              BPL      |L1.12974|
003298  f89ac000          LDRB     r12,[r10,#0]          ;5086  ; uout_av
00329c  f1bc0f01          CMP      r12,#1                ;5086
0032a0  d105              BNE      |L1.12974|
0032a2  fa03fc01          LSL      r12,r3,r1             ;5086
0032a6  ea4c0c00          ORR      r12,r12,r0            ;5086
0032aa  f00c00ff          AND      r0,r12,#0xff          ;5086
                  |L1.12974|
0032ae  ea5f6c82          LSLS     r12,r2,#26            ;5088
0032b2  d50a              BPL      |L1.13002|
0032b4  f89ac000          LDRB     r12,[r10,#0]          ;5089  ; uout_av
0032b8  f1bc0f02          CMP      r12,#2                ;5089
0032bc  d105              BNE      |L1.13002|
0032be  fa03fc01          LSL      r12,r3,r1             ;5089
0032c2  ea4c0c00          ORR      r12,r12,r0            ;5089
0032c6  f00c00ff          AND      r0,r12,#0xff          ;5089
                  |L1.13002|
0032ca  ea5f6c42          LSLS     r12,r2,#25            ;5090
0032ce  d525              BPL      |L1.13084|
0032d0  f899c001          LDRB     r12,[r9,#1]  ; bps
0032d4  ea5f6ccc          LSLS     r12,r12,#27
0032d8  d504              BPL      |L1.13028|
0032da  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
0032de  f1bc0f01          CMP      r12,#1
0032e2  da15              BGE      |L1.13072|
                  |L1.13028|
;;;5093   			((bps[1]._av&(1<<4))&&(NUMIST>=2))||
0032e4  f899c05d          LDRB     r12,[r9,#0x5d]  ; bps
0032e8  ea5f6ccc          LSLS     r12,r12,#27
0032ec  d506              BPL      |L1.13052|
0032ee  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
0032f2  e000              B        |L1.13046|
                  |L1.13044|
0032f4  e047              B        |L1.13190|
                  |L1.13046|
0032f6  f1bc0f02          CMP      r12,#2
0032fa  da09              BGE      |L1.13072|
                  |L1.13052|
;;;5094   			((bps[2]._av&(1<<4))&&(NUMIST>=3))
0032fc  f899c0b9          LDRB     r12,[r9,#0xb9]  ; bps
003300  ea5f6ccc          LSLS     r12,r12,#27
003304  d50a              BPL      |L1.13084|
003306  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
00330a  f1bc0f03          CMP      r12,#3
00330e  db05              BLT      |L1.13084|
                  |L1.13072|
;;;5095   			))bdr_avar_stat_temp|=(1<<ii_);
003310  fa03fc01          LSL      r12,r3,r1
003314  ea4c0c00          ORR      r12,r12,r0
003318  f00c00ff          AND      r0,r12,#0xff
                  |L1.13084|
;;;5096   		if((RELE_SET_MASK[ii_]&0x80)&&
00331c  ea5f6c02          LSLS     r12,r2,#24
003320  d523              BPL      |L1.13162|
;;;5097   			(
;;;5098   			((bps[0]._av&(0x0f))&&(NUMIST>=1))||
003322  f899c001          LDRB     r12,[r9,#1]  ; bps
003326  ea5f7c0c          LSLS     r12,r12,#28
00332a  d004              BEQ      |L1.13110|
00332c  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
003330  f1bc0f01          CMP      r12,#1
003334  da13              BGE      |L1.13150|
                  |L1.13110|
;;;5099   			((bps[1]._av&(0x0f))&&(NUMIST>=2))||
003336  f899c05d          LDRB     r12,[r9,#0x5d]  ; bps
00333a  ea5f7c0c          LSLS     r12,r12,#28
00333e  d004              BEQ      |L1.13130|
003340  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
003344  f1bc0f02          CMP      r12,#2
003348  da09              BGE      |L1.13150|
                  |L1.13130|
;;;5100   			((bps[2]._av&(0x0f))&&(NUMIST>=3))
00334a  f899c0b9          LDRB     r12,[r9,#0xb9]  ; bps
00334e  ea5f7c0c          LSLS     r12,r12,#28
003352  d00a              BEQ      |L1.13162|
003354  f9b5c000          LDRSH    r12,[r5,#0]  ; NUMIST
003358  f1bc0f03          CMP      r12,#3
00335c  db05              BLT      |L1.13162|
                  |L1.13150|
;;;5101   			))bdr_avar_stat_temp|=(1<<ii_);
00335e  fa03fc01          LSL      r12,r3,r1
003362  ea4c0c00          ORR      r12,r12,r0
003366  f00c00ff          AND      r0,r12,#0xff
                  |L1.13162|
;;;5102   
;;;5103   		if(!(RELE_SET_MASK[ii_]&(1<<15))) bdr_avar_stat_temp^=(1<<ii_); 
00336a  0412              LSLS     r2,r2,#16
00336c  d404              BMI      |L1.13176|
00336e  fa03f201          LSL      r2,r3,r1
003372  ea820200          EOR      r2,r2,r0
003376  b2d0              UXTB     r0,r2
                  |L1.13176|
003378  f1010101          ADD      r1,r1,#1              ;5070
00337c  b2c9              UXTB     r1,r1                 ;5070
00337e  2904              CMP      r1,#4                 ;5070
003380  f4ffaf45          BCC      |L1.12814|
;;;5104   		}
;;;5105   	bdr_avar_stat=bdr_avar_stat_temp;
003384  7020              STRB     r0,[r4,#0]
                  |L1.13190|
;;;5106   	}
;;;5107   }
003386  e01f              B        |L1.13256|
                  |L1.13192|
                          DCD      load_U
                  |L1.13196|
                          DCD      sp_ch_stat
                  |L1.13200|
                          DCD      ||area_number.25||
                  |L1.13204|
                          DCD      DOP_RELE_FUNC
                  |L1.13208|
                          DCD      speedChIsOn
                  |L1.13212|
                          DCD      hv_vz_stat
                  |L1.13216|
                          DCD      UVENTOFF
                  |L1.13220|
                          DCD      bdr_transmit_stat
                  |L1.13224|
                          DCD      bdr_avar_stat
                  |L1.13228|
                          DCD      NUMBDR
                  |L1.13232|
                          DCD      uout_av
                  |L1.13236|
                          DCD      bps
                  |L1.13240|
                          DCD      NUMIST
                  |L1.13244|
                          DCD      RELE_SET_MASK
                  |L1.13248|
                          DCD      USIGN
                  |L1.13252|
                          DCD      avar_stat
                  |L1.13256|
0033c8  e8bd9ff0          POP      {r4-r12,pc}
;;;5108   
                          ENDP

                  bps_hndl PROC
;;;5110   //-----------------------------------------------
;;;5111   void bps_hndl(void)
0033cc  e92d5ff0          PUSH     {r4-r12,lr}
;;;5112   {
;;;5113   char ptr__,i;
;;;5114   unsigned short tempUS;
;;;5115   
;;;5116   if(sh_cnt0<10)
0033d0  4efc              LDR      r6,|L1.14276|
;;;5117   	{
;;;5118   	sh_cnt0++;
;;;5119   	if(sh_cnt0>=10)
;;;5120   		{
;;;5121   		sh_cnt0=0;
0033d2  2700              MOVS     r7,#0
;;;5122   		b1Hz_sh=1;
0033d4  f04f0a01          MOV      r10,#1
0033d8  7db0              LDRB     r0,[r6,#0x16]         ;5116  ; sh_cnt0
0033da  280a              CMP      r0,#0xa               ;5116
0033dc  d208              BCS      |L1.13296|
0033de  f1000001          ADD      r0,r0,#1              ;5118
0033e2  b2c0              UXTB     r0,r0                 ;5118
0033e4  75b0              STRB     r0,[r6,#0x16]         ;5118
0033e6  280a              CMP      r0,#0xa               ;5119
0033e8  d302              BCC      |L1.13296|
0033ea  75b7              STRB     r7,[r6,#0x16]         ;5121
0033ec  f886a017          STRB     r10,[r6,#0x17]
                  |L1.13296|
;;;5123   		}
;;;5124   	}
;;;5125   
;;;5126   /*if(sh_cnt1<5)
;;;5127   	{
;;;5128   	sh_cnt1++;
;;;5129   	if(sh_cnt1==5)
;;;5130   		{
;;;5131   		sh_cnt1=0;
;;;5132   		b2Hz_sh=1;
;;;5133   		}
;;;5134   	} */
;;;5135   
;;;5136   
;;;5137   /*
;;;5138   if(mess_find(MESS_SRC_ON_OFF))
;;;5139   	{
;;;5140   	if(mess_data[0]==_MESS_SRC_MASK_BLOK_2SEC)
;;;5141   		{
;;;5142   		char i;
;;;5143   		for(i=0;i<NUMIST;i++)
;;;5144   			{
;;;5145   			if(mess_data[1]&(1<<i))src[i]._ist_blok_cnt=20;
;;;5146   			}
;;;5147   		
;;;5148   		}
;;;5149   	else if(mess_data[0]==_MESS_SRC_MASK_UNBLOK)
;;;5150   		{
;;;5151   		char i;
;;;5152   		for(i=0;i<NUMIST;i++)
;;;5153   			{
;;;5154   			if(mess_data[1]&(1<<i))src[i]._ist_blok_cnt=0;
;;;5155   			}
;;;5156   		
;;;5157   		}
;;;5158   	}
;;;5159   	
;;;5160   else if(mess_find(_MESS_SRC_MASK_ON))
;;;5161   	{				
;;;5162   	if(mess_data[0]==_MESS_SRC_MASK_ON)
;;;5163   		{
;;;5164   		char i;
;;;5165   		for(i=0;i<NUMIST;i++)
;;;5166   			{
;;;5167   			if(mess_data[1]&(1<<i))
;;;5168   				{
;;;5169   				src[i]._ist_blok_cnt=0;
;;;5170   				src[i]._flags_tu=2;
;;;5171   				}
;;;5172   			}
;;;5173   		
;;;5174   		}				
;;;5175   	}*/
;;;5176   
;;;5177   
;;;5178   
;;;5179   /*else*/ 
;;;5180   bps_on_mask=0;
0033f0  f8a67056          STRH     r7,[r6,#0x56]
;;;5181   bps_off_mask=0;
0033f4  f8a67058          STRH     r7,[r6,#0x58]
;;;5182   
;;;5183   if(mess_find_unvol(MESS2BPS_HNDL))
0033f8  20cd              MOVS     r0,#0xcd
0033fa  f7fffffe          BL       mess_find_unvol
;;;5184   	{
;;;5185   	if(mess_data[0]==PARAM_BPS_ALL_OFF_AFTER_2SEC)
;;;5186   		{
;;;5187   		bps_off_mask=0xffff;
;;;5188   		}
;;;5189   
;;;5190   	if(mess_data[0]==PARAM_BPS_MASK_OFF_AFTER_2SEC)
;;;5191   		{
;;;5192   		bps_off_mask=mess_data[1];
;;;5193   		}
;;;5194   
;;;5195   	if(mess_data[0]==PARAM_BPS_MASK_ON)
;;;5196   		{
;;;5197   		bps_on_mask=mess_data[1];
;;;5198   		}
;;;5199   
;;;5200   	if(mess_data[0]==PARAM_BPS_ALL_ON)
;;;5201   		{
;;;5202   		bps_on_mask=0xffff;
;;;5203   		}
;;;5204   
;;;5205   	if(mess_data[0]==PARAM_BPS_MASK_ON_OFF_AFTER_2SEC)
;;;5206   		{
;;;5207   		bps_on_mask=mess_data[1];
;;;5208   		bps_off_mask=~(mess_data[1]);
;;;5209   		}
;;;5210   
;;;5211   
;;;5212   	for(i=0;i<=NUMIST;i++)
;;;5213   		{
;;;5214   		if(bps_off_mask&(1<<i)) bps[i]._blok_cnt++;
0033fe  f8df83c8          LDR      r8,|L1.14280|
003402  f8dfb3c8          LDR      r11,|L1.14284|
003406  b3a0              CBZ      r0,|L1.13426|
003408  4af1              LDR      r2,|L1.14288|
00340a  f64f73ff          MOV      r3,#0xffff            ;5187
00340e  6810              LDR      r0,[r2,#0]            ;5185  ; mess_data
003410  28ce              CMP      r0,#0xce              ;5185
003412  d101              BNE      |L1.13336|
003414  f8a63058          STRH     r3,[r6,#0x58]         ;5187
                  |L1.13336|
003418  28cf              CMP      r0,#0xcf              ;5190
00341a  d102              BNE      |L1.13346|
00341c  6851              LDR      r1,[r2,#4]            ;5192  ; mess_data
00341e  f8a61058          STRH     r1,[r6,#0x58]         ;5192
                  |L1.13346|
003422  28d1              CMP      r0,#0xd1              ;5195
003424  d102              BNE      |L1.13356|
003426  6851              LDR      r1,[r2,#4]            ;5197  ; mess_data
003428  f8a61056          STRH     r1,[r6,#0x56]         ;5197
                  |L1.13356|
00342c  28d2              CMP      r0,#0xd2              ;5200
00342e  d101              BNE      |L1.13364|
003430  f8a63056          STRH     r3,[r6,#0x56]         ;5202
                  |L1.13364|
003434  28d0              CMP      r0,#0xd0              ;5205
003436  d106              BNE      |L1.13382|
003438  6850              LDR      r0,[r2,#4]            ;5207  ; mess_data
00343a  f8a60056          STRH     r0,[r6,#0x56]         ;5207
00343e  ea6f0000          MVN      r0,r0                 ;5208
003442  f8a60058          STRH     r0,[r6,#0x58]         ;5208
                  |L1.13382|
003446  f04f0400          MOV      r4,#0                 ;5212
00344a  e037              B        |L1.13500|
                  |L1.13388|
00344c  f8b60058          LDRH     r0,[r6,#0x58]  ; bps_off_mask
003450  fa0af904          LSL      r9,r10,r4
003454  ea190f00          TST      r9,r0
003458  d00c              BEQ      |L1.13428|
00345a  ebc400c4          RSB      r0,r4,r4,LSL #3
00345e  eb001004          ADD      r0,r0,r4,LSL #4
003462  eb080080          ADD      r0,r8,r0,LSL #2
003466  f8301f40          LDRH     r1,[r0,#0x40]!
00346a  f1010101          ADD      r1,r1,#1
00346e  8001              STRH     r1,[r0,#0]
003470  e008              B        |L1.13444|
                  |L1.13426|
003472  e028              B        |L1.13510|
                  |L1.13428|
;;;5215   		else bps[i]._blok_cnt=0;
003474  ebc400c4          RSB      r0,r4,r4,LSL #3
003478  eb001004          ADD      r0,r0,r4,LSL #4
00347c  eb080080          ADD      r0,r8,r0,LSL #2
003480  f8a07040          STRH     r7,[r0,#0x40]
                  |L1.13444|
;;;5216   		gran(&bps[i]._blok_cnt,0,50);
003484  ebc400c4          RSB      r0,r4,r4,LSL #3
003488  eb001004          ADD      r0,r0,r4,LSL #4
00348c  eb080580          ADD      r5,r8,r0,LSL #2
003490  f1050040          ADD      r0,r5,#0x40
003494  2232              MOVS     r2,#0x32
003496  2100              MOVS     r1,#0
003498  f7fffffe          BL       gran
;;;5217   		if(bps[i]._blok_cnt>20) bps[i]._flags_tu=1;
00349c  f9b50040          LDRSH    r0,[r5,#0x40]
0034a0  2814              CMP      r0,#0x14
0034a2  dd01              BLE      |L1.13480|
0034a4  f885a02c          STRB     r10,[r5,#0x2c]
                  |L1.13480|
;;;5218   		if(bps_on_mask&(1<<i)) bps[i]._flags_tu=0;
0034a8  f8b60056          LDRH     r0,[r6,#0x56]  ; bps_on_mask
0034ac  ea190f00          TST      r9,r0
0034b0  d001              BEQ      |L1.13494|
0034b2  f885702c          STRB     r7,[r5,#0x2c]
                  |L1.13494|
0034b6  f1040401          ADD      r4,r4,#1              ;5212
0034ba  b2e4              UXTB     r4,r4                 ;5212
                  |L1.13500|
0034bc  f9bb0000          LDRSH    r0,[r11,#0]           ;5212  ; NUMIST
0034c0  4284              CMP      r4,r0                 ;5212
0034c2  ddc3              BLE      |L1.13388|
0034c4  e08a              B        |L1.13788|
                  |L1.13510|
;;;5219   	     }
;;;5220   
;;;5221   	
;;;5222   /*
;;;5223   
;;;5224   	if(bps_all_off_cnt>20)
;;;5225   		{
;;;5226   		for(i=0;i<=NUMIST;i++)
;;;5227   			{
;;;5228   	     	bps[i]._flags_tu=1;
;;;5229   	     	}
;;;5230   		}
;;;5231   	else if(bps_mask_off_cnt>20)
;;;5232   		{
;;;5233   		for(i=0;i<=NUMIST;i++)
;;;5234   			{
;;;5235   			if(mess_data[1]&(1<<i)) bps[i]._flags_tu=1;
;;;5236   	     	}
;;;5237   		}	
;;;5238   		
;;;5239   	else if(bps_mask_on_off_cnt>20)
;;;5240   		{
;;;5241   		for(i=0;i<=NUMIST;i++)
;;;5242   			{
;;;5243   			if(mess_data[1]&(1<<i)) bps[i]._flags_tu=1;
;;;5244   			else bps[i]._flags_tu=0;
;;;5245   	     	}
;;;5246   		}
;;;5247   		
;;;5248   	if(mess_data[0]==PARAM_BPS_MASK_ON)
;;;5249   		{
;;;5250   		for(i=0;i<=NUMIST;i++)
;;;5251   			{
;;;5252   			if(mess_data[1]&(1<<i)) bps[i]._flags_tu=0;
;;;5253   	     	}
;;;5254   		}
;;;5255   */										
;;;5256   	}
;;;5257   
;;;5258   
;;;5259   else if(b1Hz_sh)
0034c6  7df0              LDRB     r0,[r6,#0x17]  ; b1Hz_sh
0034c8  b3f0              CBZ      r0,|L1.13640|
;;;5260   	{
;;;5261   	ptr__=0;
0034ca  f04f0400          MOV      r4,#0
;;;5262        for(i=0;i<=NUMIST;i++)
0034ce  4621              MOV      r1,r4
0034d0  f9bb0000          LDRSH    r0,[r11,#0]           ;5212
0034d4  e00a              B        |L1.13548|
                  |L1.13526|
;;;5263   		{
;;;5264   	     bps[i]._flags_tu=1;
0034d6  ebc102c1          RSB      r2,r1,r1,LSL #3
0034da  eb021201          ADD      r2,r2,r1,LSL #4
0034de  eb080282          ADD      r2,r8,r2,LSL #2
0034e2  f882a02c          STRB     r10,[r2,#0x2c]
0034e6  f1010101          ADD      r1,r1,#1              ;5262
0034ea  b2c9              UXTB     r1,r1                 ;5262
                  |L1.13548|
0034ec  4281              CMP      r1,r0                 ;5262
0034ee  ddf2              BLE      |L1.13526|
;;;5265   	     }	
;;;5266     	     
;;;5267     	for(i=0;(i<NUMIST)&&(ptr__<num_necc);i++)
0034f0  f04f0100          MOV      r1,#0
0034f4  e022              B        |L1.13628|
                  |L1.13558|
;;;5268     		{
;;;5269   		char ii,iii;
;;;5270   
;;;5271   		ii=(char)NUMIST;
0034f6  b2c2              UXTB     r2,r0
;;;5272   		//if(ii<0)ii=0;
;;;5273   		if(ii>32)ii=32;
0034f8  2a20              CMP      r2,#0x20
0034fa  d901              BLS      |L1.13568|
0034fc  f04f0220          MOV      r2,#0x20
                  |L1.13568|
;;;5274   		iii=numOfForvardBps;
003500  7f73              LDRB     r3,[r6,#0x1d]  ; numOfForvardBps
;;;5275   		//if(iii<0)iii=0;
;;;5276   		if(iii>=NUMIST)iii=0;
003502  4283              CMP      r3,r0
003504  db01              BLT      |L1.13578|
003506  f04f0300          MOV      r3,#0
                  |L1.13578|
;;;5277   		iii+=i;
00350a  440b              ADD      r3,r3,r1
00350c  b2db              UXTB     r3,r3
;;;5278   		iii=iii%ii;
00350e  fbb3f5f2          UDIV     r5,r3,r2
003512  fb023215          MLS      r2,r2,r5,r3
;;;5279   		
;;;5280     	     if((bps[iii]._state==bsRDY)||(bps[iii]._state==bsWRK))
003516  ebc203c2          RSB      r3,r2,r2,LSL #3
00351a  eb031202          ADD      r2,r3,r2,LSL #4
00351e  eb080282          ADD      r2,r8,r2,LSL #2
003522  7893              LDRB     r3,[r2,#2]
003524  2b02              CMP      r3,#2
003526  d001              BEQ      |L1.13612|
003528  2b01              CMP      r3,#1
00352a  d104              BNE      |L1.13622|
                  |L1.13612|
;;;5281     	         	{
;;;5282     	         	bps[iii]._flags_tu=0;
00352c  f882702c          STRB     r7,[r2,#0x2c]
;;;5283     	         	ptr__++;
003530  f1040401          ADD      r4,r4,#1
003534  b2e4              UXTB     r4,r4
                  |L1.13622|
003536  f1010101          ADD      r1,r1,#1              ;5267
00353a  b2c9              UXTB     r1,r1                 ;5267
                  |L1.13628|
00353c  4281              CMP      r1,r0                 ;5267
00353e  da06              BGE      |L1.13646|
003540  4aa4              LDR      r2,|L1.14292|
003542  f9b22000          LDRSH    r2,[r2,#0]            ;5267  ; num_necc
003546  e000              B        |L1.13642|
                  |L1.13640|
003548  e048              B        |L1.13788|
                  |L1.13642|
00354a  4294              CMP      r4,r2                 ;5267
00354c  dbd3              BLT      |L1.13558|
                  |L1.13646|
;;;5284     	         	}
;;;5285   			
;;;5286     	     }
;;;5287   	bps[numOfForvardBps_old]._flags_tu=0;
00354e  7fb1              LDRB     r1,[r6,#0x1e]  ; numOfForvardBps_old
003550  ebc102c1          RSB      r2,r1,r1,LSL #3
003554  eb021101          ADD      r1,r2,r1,LSL #4
003558  eb080181          ADD      r1,r8,r1,LSL #2
00355c  f881702c          STRB     r7,[r1,#0x2c]
;;;5288   
;;;5289   	if(main_1Hz_cnt<60)
003560  499d              LDR      r1,|L1.14296|
003562  f9b11000          LDRSH    r1,[r1,#0]  ; main_1Hz_cnt
003566  293c              CMP      r1,#0x3c
003568  da0f              BGE      |L1.13706|
;;;5290   		{
;;;5291        	for(i=0;i<=NUMIST;i++)
00356a  f04f0100          MOV      r1,#0
00356e  e00a              B        |L1.13702|
                  |L1.13680|
;;;5292   			{
;;;5293   	     	bps[i]._flags_tu=0;
003570  ebc102c1          RSB      r2,r1,r1,LSL #3
003574  eb021201          ADD      r2,r2,r1,LSL #4
003578  eb080282          ADD      r2,r8,r2,LSL #2
00357c  f882702c          STRB     r7,[r2,#0x2c]
003580  f1010101          ADD      r1,r1,#1              ;5291
003584  b2c9              UXTB     r1,r1                 ;5291
                  |L1.13702|
003586  4281              CMP      r1,r0                 ;5291
003588  ddf2              BLE      |L1.13680|
                  |L1.13706|
;;;5294   	     	}	
;;;5295   		}
;;;5296   	if(ipsBlckStat)
00358a  4994              LDR      r1,|L1.14300|
00358c  8809              LDRH     r1,[r1,#0]  ; ipsBlckStat
00358e  b179              CBZ      r1,|L1.13744|
;;;5297   		{
;;;5298        	for(i=0;i<=NUMIST;i++)
003590  f04f0100          MOV      r1,#0
003594  e00a              B        |L1.13740|
                  |L1.13718|
;;;5299   			{
;;;5300   	     	bps[i]._flags_tu=1;
003596  ebc102c1          RSB      r2,r1,r1,LSL #3
00359a  eb021201          ADD      r2,r2,r1,LSL #4
00359e  eb080282          ADD      r2,r8,r2,LSL #2
0035a2  f882a02c          STRB     r10,[r2,#0x2c]
0035a6  f1010101          ADD      r1,r1,#1              ;5298
0035aa  b2c9              UXTB     r1,r1                 ;5298
                  |L1.13740|
0035ac  4281              CMP      r1,r0                 ;5298
0035ae  ddf2              BLE      |L1.13718|
                  |L1.13744|
;;;5301   	     	}
;;;5302   		}
;;;5303   
;;;5304        for(i=0;i<=NUMIST;i++)
0035b0  f04f0100          MOV      r1,#0
;;;5305   		{
;;;5306   	    if(bps[i]._flags_tu==1) 	bps[i]._x_=-50;
0035b4  f06f0331          MVN      r3,#0x31
0035b8  e00e              B        |L1.13784|
                  |L1.13754|
0035ba  ebc102c1          RSB      r2,r1,r1,LSL #3
0035be  eb021201          ADD      r2,r2,r1,LSL #4
0035c2  eb080282          ADD      r2,r8,r2,LSL #2
0035c6  f892402c          LDRB     r4,[r2,#0x2c]
0035ca  2c01              CMP      r4,#1
0035cc  d101              BNE      |L1.13778|
0035ce  f8a23050          STRH     r3,[r2,#0x50]
                  |L1.13778|
0035d2  f1010101          ADD      r1,r1,#1              ;5304
0035d6  b2c9              UXTB     r1,r1                 ;5304
                  |L1.13784|
0035d8  4281              CMP      r1,r0                 ;5304
0035da  ddee              BLE      |L1.13754|
                  |L1.13788|
;;;5307   	   	}	
;;;5308   		 
;;;5309     	}
;;;5310   
;;;5311   
;;;5312   for(i=0;i<NUMIST;i++)
0035dc  f04f0000          MOV      r0,#0
;;;5313        {
;;;5314        if(bps[i]._ist_blok_host_cnt!=0)
;;;5315             {
;;;5316             bps[i]._flags_tu=99;
0035e0  f04f0463          MOV      r4,#0x63
0035e4  f9bb1000          LDRSH    r1,[r11,#0]           ;5212
0035e8  e00f              B        |L1.13834|
                  |L1.13802|
0035ea  ebc002c0          RSB      r2,r0,r0,LSL #3       ;5314
0035ee  eb021200          ADD      r2,r2,r0,LSL #4       ;5314
0035f2  eb080282          ADD      r2,r8,r2,LSL #2       ;5314
0035f6  6bd3              LDR      r3,[r2,#0x3c]         ;5314
0035f8  b123              CBZ      r3,|L1.13828|
0035fa  f882402c          STRB     r4,[r2,#0x2c]
;;;5317   	     bps[i]._ist_blok_host_cnt--;
0035fe  f1a30301          SUB      r3,r3,#1
003602  63d3              STR      r3,[r2,#0x3c]
                  |L1.13828|
003604  f1000001          ADD      r0,r0,#1              ;5312
003608  b2c0              UXTB     r0,r0                 ;5312
                  |L1.13834|
00360a  4288              CMP      r0,r1                 ;5312
00360c  dbed              BLT      |L1.13802|
;;;5318             }
;;;5319        }
;;;5320   
;;;5321   
;;;5322   
;;;5323   
;;;5324   b1Hz_sh=0;
00360e  75f7              STRB     r7,[r6,#0x17]
;;;5325   
;;;5326   
;;;5327   num_of_wrks_bps=0;
003610  74f7              STRB     r7,[r6,#0x13]
;;;5328   tempUS=0;
003612  f04f0200          MOV      r2,#0
;;;5329   for(i=0;i<NUMIST;i++)
003616  4610              MOV      r0,r2
003618  e013              B        |L1.13890|
                  |L1.13850|
;;;5330   	{
;;;5331   	if(bps[i]._state==bsWRK)
00361a  ebc003c0          RSB      r3,r0,r0,LSL #3
00361e  eb031300          ADD      r3,r3,r0,LSL #4
003622  eb080383          ADD      r3,r8,r3,LSL #2
003626  789c              LDRB     r4,[r3,#2]
003628  2c01              CMP      r4,#1
00362a  d107              BNE      |L1.13884|
;;;5332   		{
;;;5333   		num_of_wrks_bps++;
00362c  7cf4              LDRB     r4,[r6,#0x13]  ; num_of_wrks_bps
00362e  f1040401          ADD      r4,r4,#1
003632  74f4              STRB     r4,[r6,#0x13]
;;;5334   		if(bps[i]._Uii>tempUS)tempUS=bps[i]._Uii;
003634  69db              LDR      r3,[r3,#0x1c]
003636  4293              CMP      r3,r2
003638  dd00              BLE      |L1.13884|
00363a  b29a              UXTH     r2,r3
                  |L1.13884|
00363c  f1000001          ADD      r0,r0,#1              ;5329
003640  b2c0              UXTB     r0,r0                 ;5329
                  |L1.13890|
003642  4288              CMP      r0,r1                 ;5329
003644  dbe9              BLT      |L1.13850|
;;;5335   		}
;;;5336   	}
;;;5337   Ubpsmax=tempUS;
003646  f8a62046          STRH     r2,[r6,#0x46]
;;;5338   
;;;5339   bPARALLEL_ENOUG=0;
00364a  f8867021          STRB     r7,[r6,#0x21]
;;;5340   bPARALLEL_NOT_ENOUG=1;
00364e  f886a020          STRB     r10,[r6,#0x20]
;;;5341   
;;;5342   for(i=0;i<NUMIST;i++)
003652  f04f0000          MOV      r0,#0
;;;5343   	{
;;;5344   	if(bps[i]._Ti>=TSIGN)
003656  4a62              LDR      r2,|L1.14304|
003658  f9b23000          LDRSH    r3,[r2,#0]
;;;5345   		{
;;;5346   		bPARALLEL_ENOUG=1;
;;;5347   		}
;;;5348   	if(bps[i]._Ti>=(TSIGN-5))
00365c  f1a30405          SUB      r4,r3,#5
003660  e011              B        |L1.13958|
                  |L1.13922|
003662  ebc002c0          RSB      r2,r0,r0,LSL #3       ;5344
003666  eb021200          ADD      r2,r2,r0,LSL #4       ;5344
00366a  eb080282          ADD      r2,r8,r2,LSL #2       ;5344
00366e  6a92              LDR      r2,[r2,#0x28]         ;5344
003670  429a              CMP      r2,r3                 ;5344
003672  db01              BLT      |L1.13944|
003674  f886a021          STRB     r10,[r6,#0x21]        ;5346
                  |L1.13944|
003678  42a2              CMP      r2,r4
00367a  db01              BLT      |L1.13952|
;;;5349   		{
;;;5350   		bPARALLEL_NOT_ENOUG=0;
00367c  f8867020          STRB     r7,[r6,#0x20]
                  |L1.13952|
003680  f1000001          ADD      r0,r0,#1              ;5342
003684  b2c0              UXTB     r0,r0                 ;5342
                  |L1.13958|
003686  4288              CMP      r0,r1                 ;5342
003688  dbeb              BLT      |L1.13922|
;;;5351   		}
;;;5352   	}
;;;5353   
;;;5354   if(bPARALLEL_ENOUG==1)
00368a  f8960021          LDRB     r0,[r6,#0x21]  ; bPARALLEL_ENOUG
00368e  2801              CMP      r0,#1
003690  d00a              BEQ      |L1.13992|
;;;5355   	{
;;;5356   	bPARALLEL=1;
;;;5357   	}
;;;5358   else if(bPARALLEL && bPARALLEL_NOT_ENOUG)
003692  f8960022          LDRB     r0,[r6,#0x22]  ; bPARALLEL
003696  2800              CMP      r0,#0
003698  d005              BEQ      |L1.13990|
00369a  f8960020          LDRB     r0,[r6,#0x20]  ; bPARALLEL_NOT_ENOUG
00369e  2800              CMP      r0,#0
0036a0  d001              BEQ      |L1.13990|
;;;5359   	{
;;;5360   	bPARALLEL=0;
0036a2  f8867022          STRB     r7,[r6,#0x22]
                  |L1.13990|
;;;5361   	}
;;;5362   }
0036a6  e66e              B        |L1.13190|
                  |L1.13992|
0036a8  f886a022          STRB     r10,[r6,#0x22]        ;5356
0036ac  e66b              B        |L1.13190|
;;;5363   
                          ENDP

                  powerAntiAliasingHndl PROC
;;;5370   //-----------------------------------------------
;;;5371   void powerAntiAliasingHndl(void)
0036ae  b570              PUSH     {r4-r6,lr}
;;;5372   {
;;;5373   if((power_summary_tempo/10UL)==(power_summary_tempo_old/10UL))
0036b0  230a              MOVS     r3,#0xa
0036b2  4c4d              LDR      r4,|L1.14312|
0036b4  484b              LDR      r0,|L1.14308|
;;;5374   	{
;;;5375   	if(powerSummaryCnt<15)powerSummaryCnt++;
;;;5376   	if(powerSummaryCnt>=10)
;;;5377   		{
;;;5378   		power_summary=power_summary_tempo;
;;;5379   		}
;;;5380   	}
;;;5381   else powerSummaryCnt=0;
0036b6  2500              MOVS     r5,#0
0036b8  6822              LDR      r2,[r4,#0]            ;5373  ; power_summary_tempo_old
0036ba  6800              LDR      r0,[r0,#0]            ;5373  ; power_summary_tempo
0036bc  fbb2f6f3          UDIV     r6,r2,r3              ;5373
0036c0  fbb0f1f3          UDIV     r1,r0,r3              ;5373
0036c4  4a49              LDR      r2,|L1.14316|
0036c6  42b1              CMP      r1,r6                 ;5373
0036c8  d10b              BNE      |L1.14050|
0036ca  7811              LDRB     r1,[r2,#0]            ;5375  ; powerSummaryCnt
0036cc  290f              CMP      r1,#0xf               ;5375
0036ce  d202              BCS      |L1.14038|
0036d0  f1010101          ADD      r1,r1,#1              ;5375
0036d4  7011              STRB     r1,[r2,#0]            ;5375
                  |L1.14038|
0036d6  7811              LDRB     r1,[r2,#0]            ;5376  ; powerSummaryCnt
0036d8  290a              CMP      r1,#0xa               ;5376
0036da  d303              BCC      |L1.14052|
0036dc  4944              LDR      r1,|L1.14320|
0036de  6008              STR      r0,[r1,#0]            ;5378  ; power_summary
0036e0  e000              B        |L1.14052|
                  |L1.14050|
0036e2  7015              STRB     r5,[r2,#0]
                  |L1.14052|
;;;5382   power_summary_tempo_old=power_summary_tempo;
0036e4  6020              STR      r0,[r4,#0]  ; power_summary_tempo_old
;;;5383   
;;;5384   if((power_current_tempo/10UL)==(power_current_tempo_old/10UL))
0036e6  4843              LDR      r0,|L1.14324|
0036e8  4c43              LDR      r4,|L1.14328|
0036ea  f9b00000          LDRSH    r0,[r0,#0]  ; power_current_tempo
0036ee  f9b42000          LDRSH    r2,[r4,#0]  ; power_current_tempo_old
0036f2  fbb0f1f3          UDIV     r1,r0,r3
0036f6  fbb2f3f3          UDIV     r3,r2,r3
;;;5385   	{
;;;5386   	if(powerCurrentCnt<15)powerCurrentCnt++;
0036fa  4a40              LDR      r2,|L1.14332|
0036fc  4299              CMP      r1,r3                 ;5384
0036fe  d10b              BNE      |L1.14104|
003700  7811              LDRB     r1,[r2,#0]  ; powerCurrentCnt
003702  290f              CMP      r1,#0xf
003704  d202              BCS      |L1.14092|
003706  f1010101          ADD      r1,r1,#1
00370a  7011              STRB     r1,[r2,#0]
                  |L1.14092|
;;;5387   	if(powerCurrentCnt>=10)
00370c  7811              LDRB     r1,[r2,#0]  ; powerCurrentCnt
00370e  290a              CMP      r1,#0xa
003710  d303              BCC      |L1.14106|
;;;5388   		{
;;;5389   		power_current=power_current_tempo;
003712  493b              LDR      r1,|L1.14336|
003714  8008              STRH     r0,[r1,#0]
003716  e000              B        |L1.14106|
                  |L1.14104|
;;;5390   		}
;;;5391   	}
;;;5392   else powerCurrentCnt=0;
003718  7015              STRB     r5,[r2,#0]
                  |L1.14106|
;;;5393   power_current_tempo_old=power_current_tempo;
00371a  8020              STRH     r0,[r4,#0]
;;;5394   }
00371c  bd70              POP      {r4-r6,pc}
;;;5395   
                          ENDP

                  energometr_hndl PROC
;;;5505   //-----------------------------------------------
;;;5506   void energometr_hndl(void)
00371e  4770              BX       lr
;;;5507   {
;;;5508   //2F 3F 21 0D 0A 
;;;5509   //05 33 0A 2F 45 4B 54 35 43 45 31 30 32 4D 76 30 31 0D 0A 
;;;5510   //2F 3F 21 0D 0A 
;;;5511   //05 33 0A 2F 45 4B 54 35 43 45 31 30 32 4D 76 30 31 0D 0A 
;;;5512   //06 30 35 31 0D 0A 
;;;5513   //06 33 0A 01 50 30 02 28 31 31 38 36 35 32 39 32 32 29 03 2A 
;;;5514   
;;;5515   #ifdef CE102M_ENABLED
;;;5516   /*if
;;;5517   uart_out1 (5,0xaf,0x3f,0x21,0x8d,0x0a,0);*/
;;;5518   
;;;5519   if(read_power_cnt_main_cnt)
;;;5520   	{
;;;5521   	read_power_cnt_main_cnt--;
;;;5522   	if(read_power_cnt_main_cnt==0)
;;;5523   		{
;;;5524   		rx_read_power_cnt_phase=0;
;;;5525   		if(bENERGOMETR_UIP==0)bENERGOMETR_UIP=1;
;;;5526   		else if(bENERGOMETR_UIP==1)bENERGOMETR_UIP=2;
;;;5527   		else bENERGOMETR_UIP=0;
;;;5528   		//bENERGOMETR_UIP=2;
;;;5529   		}
;;;5530   	}
;;;5531   
;;;5532   if (rx_read_power_cnt_phase==0)
;;;5533   	{
;;;5534   	char command_with_crc[20];
;;;5535   	
;;;5536      	command_with_crc[0]=0xaf;  // /
;;;5537   	command_with_crc[1]=0x3f;  // ?
;;;5538   	command_with_crc[2]=0x21;  // !
;;;5539   	command_with_crc[3]=0x8d;  // CR
;;;5540   	command_with_crc[4]=0x0a;  // LF
;;;5541   
;;;5542   	uart_out__adr1(command_with_crc,5);
;;;5543   
;;;5544   	rx_wr_index1=0;
;;;5545   	rx_read_power_cnt_phase=1;
;;;5546   
;;;5547   	read_power_cnt_main_cnt=50;
;;;5548   	}
;;;5549   if ((rx_read_power_cnt_phase==2)&&(!ce102m_delayCnt))
;;;5550   	{
;;;5551   	char command_with_crc[20];
;;;5552   	
;;;5553   	command_with_crc[0]=0x06;  //  
;;;5554   	command_with_crc[1]=0x30;  // 0
;;;5555   	command_with_crc[2]=0x35;  // 5
;;;5556   	command_with_crc[3]=0xb1;  // 1
;;;5557   	command_with_crc[4]=0x8d;  // CR
;;;5558   	command_with_crc[5]=0x0a;  // LF
;;;5559   	
;;;5560   	uart_out__adr1(command_with_crc,6);
;;;5561   	
;;;5562   	rx_wr_index1=0;
;;;5563   	rx_read_power_cnt_phase=3;
;;;5564   
;;;5565   	read_power_cnt_main_cnt=50;
;;;5566   	}  
;;;5567   
;;;5568   if ((rx_read_power_cnt_phase==4)&&(!ce102m_delayCnt))
;;;5569   	{
;;;5570   	char command_with_crc[20];
;;;5571   	
;;;5572   	command_with_crc[0]=0x81;  //  
;;;5573   	command_with_crc[1]=0xd2;  // 0
;;;5574   	command_with_crc[2]=0xb1;  // 5
;;;5575   	command_with_crc[3]=0x82;  // 1
;;;5576   	command_with_crc[4]=0x56;  // CR
;;;5577   	command_with_crc[5]=0xcf;  // LF
;;;5578   	command_with_crc[6]=0xcc;  // 1
;;;5579   	command_with_crc[7]=0xd4;  // CR
;;;5580   	command_with_crc[8]=0x41;  // LF
;;;5581   	command_with_crc[9]=0x28;  // 1
;;;5582   	command_with_crc[10]=0xa9;  // CR
;;;5583   	command_with_crc[11]=0x03;  // LF
;;;5584   	command_with_crc[12]=0x5f;  // LF
;;;5585   		
;;;5586   	uart_out__adr1(command_with_crc,13);
;;;5587   	
;;;5588   	rx_wr_index1=0;
;;;5589   	rx_read_power_cnt_phase=5;
;;;5590   
;;;5591   	read_power_cnt_main_cnt=50;
;;;5592   	}  
;;;5593   
;;;5594   if ((rx_read_power_cnt_phase==8)&&(!ce102m_delayCnt))
;;;5595   	{
;;;5596   	char command_with_crc[20];
;;;5597   	
;;;5598   	command_with_crc[0]=0x81;  //  
;;;5599   	command_with_crc[1]=0xd2;  // 0
;;;5600   	command_with_crc[2]=0xb1;  // 5
;;;5601   	command_with_crc[3]=0x82;  // 1
;;;5602   	command_with_crc[4]=0xc3;  // CR
;;;5603   	command_with_crc[5]=0x55;  // LF
;;;5604   	command_with_crc[6]=0xd2;  // 1
;;;5605   	command_with_crc[7]=0xd2;  // CR
;;;5606   	command_with_crc[8]=0xc5;  // LF
;;;5607   	command_with_crc[9]=0x28;  // 1
;;;5608   	command_with_crc[10]=0xa9;  // CR
;;;5609   	command_with_crc[11]=0x03;  // LF
;;;5610   	command_with_crc[12]=0x5a;  // LF
;;;5611   		
;;;5612   	uart_out__adr1(command_with_crc,13);
;;;5613   	
;;;5614   	rx_wr_index1=0;
;;;5615   	rx_read_power_cnt_phase=9;
;;;5616   
;;;5617   	read_power_cnt_main_cnt=50;
;;;5618   	}  
;;;5619   
;;;5620   if ((rx_read_power_cnt_phase==20)&&(!ce102m_delayCnt))
;;;5621   	{
;;;5622   	char command_with_crc[20];
;;;5623   	
;;;5624   	command_with_crc[0]=0x81;  //  		01
;;;5625   	command_with_crc[1]=0xd2;  // R		52
;;;5626   	command_with_crc[2]=0xb1;  // 1		31
;;;5627   	command_with_crc[3]=0x82;  // 		02
;;;5628   	command_with_crc[4]=0x50;  // P		50
;;;5629   	command_with_crc[5]=0xcf;  // O	  	4f
;;;5630   	command_with_crc[6]=0xd7;  // W		57
;;;5631   	command_with_crc[7]=0xc5;  // E		45
;;;5632   	command_with_crc[8]=0x50;  // P		50
;;;5633   	command_with_crc[9]=0x28;  // (		28
;;;5634   	command_with_crc[10]=0xa9;  // )	29
;;;5635   	command_with_crc[11]=0x03;  // 		03
;;;5636   	command_with_crc[12]=0xe4;  // d	64
;;;5637   		
;;;5638   	uart_out__adr1(command_with_crc,13);
;;;5639   	
;;;5640   	rx_wr_index1=0;
;;;5641   	rx_read_power_cnt_phase=21;
;;;5642   
;;;5643   	read_power_cnt_main_cnt=50;
;;;5644   	}  
;;;5645   
;;;5646   
;;;5647   #endif
;;;5648   }
;;;5649   
                          ENDP

                  ips_current_average_hndl PROC
;;;5650   //-----------------------------------------------
;;;5651   void ips_current_average_hndl(void)
003720  e92d4ff0          PUSH     {r4-r11,lr}
;;;5652   {
003724  b089              SUB      sp,sp,#0x24
;;;5653   
;;;5654   if(++ica_timer_cnt>=10) 
003726  4e37              LDR      r6,|L1.14340|
;;;5655   	{
;;;5656   	ica_timer_cnt=0;
003728  2400              MOVS     r4,#0
00372a  7830              LDRB     r0,[r6,#0]            ;5654  ; ica_timer_cnt
00372c  1c40              ADDS     r0,r0,#1              ;5654
00372e  b2c0              UXTB     r0,r0                 ;5654
003730  7030              STRB     r0,[r6,#0]            ;5654
003732  280a              CMP      r0,#0xa               ;5654
003734  d300              BCC      |L1.14136|
003736  7034              STRB     r4,[r6,#0]
                  |L1.14136|
;;;5657   	}
;;;5658   
;;;5659   if((ica_timer_cnt==0) && (num_of_wrks_bps)&&((spc_stat==spcOFF)&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF)&&(sp_ch_stat==scsOFF)))
003738  7830              LDRB     r0,[r6,#0]  ; ica_timer_cnt
00373a  4f33              LDR      r7,|L1.14344|
;;;5660   	{
;;;5661   	
;;;5662   	ica_plazma[0]++;
;;;5663   
;;;5664   	ica_my_current=bps_I;
;;;5665   
;;;5666   	if((ica_my_current>ica_your_current)&&((ica_my_current-ica_your_current)>=5)&&((ICA_EN==1)||((ICA_EN==2)&&(ica_cntrl_hndl_cnt>5))))
00373c  f8dfb0cc          LDR      r11,|L1.14348|
003740  4d20              LDR      r5,|L1.14276|
003742  bbf0              CBNZ     r0,|L1.14274|
003744  7ce8              LDRB     r0,[r5,#0x13]         ;5659  ; num_of_wrks_bps
003746  b3e0              CBZ      r0,|L1.14274|
003748  7e28              LDRB     r0,[r5,#0x18]         ;5659  ; spc_stat
00374a  f8951024          LDRB     r1,[r5,#0x24]         ;5659  ; vz1_stat
00374e  4308              ORRS     r0,r0,r1              ;5659
003750  f8951027          LDRB     r1,[r5,#0x27]         ;5659  ; vz2_stat
003754  4308              ORRS     r0,r0,r1              ;5659
003756  7839              LDRB     r1,[r7,#0]            ;5659  ; sp_ch_stat
003758  4308              ORRS     r0,r0,r1              ;5659
00375a  d17e              BNE      |L1.14426|
00375c  f8df90b0          LDR      r9,|L1.14352|
003760  f8990000          LDRB     r0,[r9,#0]            ;5662  ; ica_plazma
003764  f1000001          ADD      r0,r0,#1              ;5662
003768  f8890000          STRB     r0,[r9,#0]            ;5662
00376c  4829              LDR      r0,|L1.14356|
00376e  f9b01000          LDRSH    r1,[r0,#0]            ;5664  ; bps_I
003772  4829              LDR      r0,|L1.14360|
003774  8001              STRH     r1,[r0,#0]            ;5664
003776  4829              LDR      r0,|L1.14364|
;;;5667   		{
;;;5668   		ica_plazma[1]++;
;;;5669   		ica_u_necc--;
003778  f8dfa0a4          LDR      r10,|L1.14368|
00377c  f9b02000          LDRSH    r2,[r0,#0]            ;5666  ; ica_your_current
003780  4648              MOV      r0,r9                 ;5662
003782  f9bac000          LDRSH    r12,[r10,#0]
003786  7843              LDRB     r3,[r0,#1]            ;5668
003788  4826              LDR      r0,|L1.14372|
00378a  4291              CMP      r1,r2                 ;5666
00378c  f9b08000          LDRSH    r8,[r0,#0]            ;5666
003790  4658              MOV      r0,r11                ;5666
003792  f9b00000          LDRSH    r0,[r0,#0]            ;5666
003796  dd47              BLE      |L1.14376|
003798  eba10e02          SUB      lr,r1,r2              ;5666
00379c  f1be0f05          CMP      lr,#5                 ;5666
0037a0  db42              BLT      |L1.14376|
0037a2  2801              CMP      r0,#1                 ;5666
0037a4  d004              BEQ      |L1.14256|
0037a6  2802              CMP      r0,#2                 ;5666
0037a8  d13e              BNE      |L1.14376|
0037aa  f1b80f05          CMP      r8,#5                 ;5666
0037ae  dd3b              BLE      |L1.14376|
                  |L1.14256|
0037b0  f1030301          ADD      r3,r3,#1              ;5668
0037b4  f8893001          STRB     r3,[r9,#1]            ;5668
0037b8  f1ac0c01          SUB      r12,r12,#1
0037bc  f8aac000          STRH     r12,[r10,#0]
0037c0  e046              B        |L1.14416|
                  |L1.14274|
0037c2  e04a              B        |L1.14426|
                  |L1.14276|
                          DCD      ||area_number.25||
                  |L1.14280|
                          DCD      bps
                  |L1.14284|
                          DCD      NUMIST
                  |L1.14288|
                          DCD      mess_data
                  |L1.14292|
                          DCD      num_necc
                  |L1.14296|
                          DCD      main_1Hz_cnt
                  |L1.14300|
                          DCD      ipsBlckStat
                  |L1.14304|
                          DCD      TSIGN
                  |L1.14308|
                          DCD      power_summary_tempo
                  |L1.14312|
                          DCD      power_summary_tempo_old
                  |L1.14316|
                          DCD      powerSummaryCnt
                  |L1.14320|
                          DCD      power_summary
                  |L1.14324|
                          DCD      power_current_tempo
                  |L1.14328|
                          DCD      power_current_tempo_old
                  |L1.14332|
                          DCD      powerCurrentCnt
                  |L1.14336|
                          DCD      power_current
                  |L1.14340|
                          DCD      ica_timer_cnt
                  |L1.14344|
                          DCD      sp_ch_stat
                  |L1.14348|
                          DCD      ICA_EN
                  |L1.14352|
                          DCD      ica_plazma
                  |L1.14356|
                          DCD      bps_I
                  |L1.14360|
                          DCD      ica_my_current
                  |L1.14364|
                          DCD      ica_your_current
                  |L1.14368|
                          DCD      ica_u_necc
                  |L1.14372|
                          DCD      ica_cntrl_hndl_cnt
                  |L1.14376|
;;;5670   		}
;;;5671   	else if((ica_my_current<ica_your_current)&&((ica_your_current-ica_my_current)>=5)&&((ICA_EN==1)||((ICA_EN==2)&&(ica_cntrl_hndl_cnt>5))))
003828  4291              CMP      r1,r2
00382a  da11              BGE      |L1.14416|
00382c  1a51              SUBS     r1,r2,r1
00382e  2905              CMP      r1,#5
003830  db0e              BLT      |L1.14416|
003832  2801              CMP      r0,#1
003834  d004              BEQ      |L1.14400|
003836  2802              CMP      r0,#2
003838  d10a              BNE      |L1.14416|
00383a  f1b80f05          CMP      r8,#5
00383e  dd07              BLE      |L1.14416|
                  |L1.14400|
;;;5672   		{
;;;5673   		ica_plazma[1]--;
003840  f1a30301          SUB      r3,r3,#1
003844  f8893001          STRB     r3,[r9,#1]
;;;5674   		ica_u_necc++;
003848  f10c0c01          ADD      r12,r12,#1
00384c  f8aac000          STRH     r12,[r10,#0]
                  |L1.14416|
;;;5675   		}
;;;5676   	gran(&ica_u_necc,-100,100);
003850  2264              MOVS     r2,#0x64
003852  4251              RSBS     r1,r2,#0
003854  48ff              LDR      r0,|L1.15444|
003856  f7fffffe          BL       gran
                  |L1.14426|
;;;5677   	}
;;;5678   
;;;5679   
;;;5680   if((ICA_EN==1)&&((spc_stat==spcOFF)&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF)&&(sp_ch_stat==scsOFF)) /*&& (num_of_wrks_bps)*/)
00385a  f8bb0000          LDRH     r0,[r11,#0]  ; ICA_EN
00385e  2801              CMP      r0,#1
003860  d167              BNE      |L1.14642|
003862  7e28              LDRB     r0,[r5,#0x18]  ; spc_stat
003864  f8951024          LDRB     r1,[r5,#0x24]  ; vz1_stat
003868  4308              ORRS     r0,r0,r1
00386a  f8951027          LDRB     r1,[r5,#0x27]  ; vz2_stat
00386e  4308              ORRS     r0,r0,r1
003870  7839              LDRB     r1,[r7,#0]  ; sp_ch_stat
003872  4308              ORRS     r0,r0,r1
003874  d15d              BNE      |L1.14642|
;;;5681   	{
;;;5682   	
;;;5683   	if(ica_timer_cnt==8)
003876  7830              LDRB     r0,[r6,#0]  ; ica_timer_cnt
;;;5684   		{
;;;5685   		char modbus_buff[20],i;
;;;5686   		short crc_temp;
;;;5687   	
;;;5688   		modbus_buff[0] = ICA_MODBUS_ADDRESS;
003878  4bf7              LDR      r3,|L1.15448|
;;;5689   		modbus_buff[1] = 4;
;;;5690   		modbus_buff[2] = 0;
;;;5691   		modbus_buff[3] = 2;
;;;5692   		modbus_buff[4] = 0;	
;;;5693   		modbus_buff[5] = 1;
;;;5694   	
;;;5695   		crc_temp= CRC16_2(modbus_buff,6);
;;;5696   	
;;;5697   		modbus_buff[6]= (char)crc_temp;
;;;5698   		modbus_buff[7]= (char)(crc_temp>>8);
;;;5699   	
;;;5700   		if(ICA_CH==0)
00387a  4ff8              LDR      r7,|L1.15452|
00387c  2808              CMP      r0,#8                 ;5683
00387e  d05b              BEQ      |L1.14648|
;;;5701   			{
;;;5702   			for (i=0;i<8;i++)
;;;5703   				{
;;;5704   				putchar_sc16is700(modbus_buff[i]);
;;;5705   				}
;;;5706   			}
;;;5707   		else if(ICA_CH==2)
;;;5708   			{
;;;5709   			uart_out1 (5,4,0,2,0,1,0);
;;;5710   			}
;;;5711   		}
;;;5712   	else
;;;5713   		{
;;;5714   		char modbus_buff[20],i;
;;;5715   		short crc_temp, tempSSSS;
;;;5716   
;;;5717   		tempSSSS=cntrl_stat_old;
003880  f9b5602c          LDRSH    r6,[r5,#0x2c]  ; cntrl_stat_old
;;;5718   		if(	(main_kb_cnt==(TBAT*60)-21) || (main_kb_cnt==(TBAT*60)-20) || (main_kb_cnt==(TBAT*60)-19)) tempSSSS=((short)TBAT)|0x4000;
003884  48f6              LDR      r0,|L1.15456|
003886  f06f0214          MVN      r2,#0x14
00388a  f9b00000          LDRSH    r0,[r0,#0]  ; TBAT
00388e  ebc01100          RSB      r1,r0,r0,LSL #4
003892  eb020c81          ADD      r12,r2,r1,LSL #2
003896  f9b5204a          LDRSH    r2,[r5,#0x4a]  ; main_kb_cnt
00389a  4594              CMP      r12,r2
00389c  d00b              BEQ      |L1.14518|
00389e  f06f0c13          MVN      r12,#0x13
0038a2  eb0c0c81          ADD      r12,r12,r1,LSL #2
0038a6  4594              CMP      r12,r2
0038a8  d005              BEQ      |L1.14518|
0038aa  f06f0c12          MVN      r12,#0x12
0038ae  eb0c0181          ADD      r1,r12,r1,LSL #2
0038b2  4291              CMP      r1,r2
0038b4  d101              BNE      |L1.14522|
                  |L1.14518|
0038b6  f4404680          ORR      r6,r0,#0x4000
                  |L1.14522|
;;;5719   
;;;5720   
;;;5721   		modbus_buff[0] = ICA_MODBUS_ADDRESS;
0038ba  8818              LDRH     r0,[r3,#0]  ; ICA_MODBUS_ADDRESS
0038bc  f88d0010          STRB     r0,[sp,#0x10]
;;;5722   		modbus_buff[1] = 6;
0038c0  f04f0006          MOV      r0,#6
0038c4  f88d0011          STRB     r0,[sp,#0x11]
;;;5723   		modbus_buff[2] = 0;
0038c8  f88d4012          STRB     r4,[sp,#0x12]
;;;5724   		modbus_buff[3] = 100;
0038cc  f04f0064          MOV      r0,#0x64
0038d0  f88d0013          STRB     r0,[sp,#0x13]
;;;5725   		modbus_buff[4] = (char)(tempSSSS/256);	
0038d4  ea4f70e6          ASR      r0,r6,#31
0038d8  eb066010          ADD      r0,r6,r0,LSR #24
0038dc  ea4f2120          ASR      r1,r0,#8
0038e0  f88d1014          STRB     r1,[sp,#0x14]
;;;5726   		modbus_buff[5] = (char)(tempSSSS%256);
0038e4  4630              MOV      r0,r6
0038e6  f88d0015          STRB     r0,[sp,#0x15]
;;;5727   	
;;;5728   		crc_temp= CRC16_2(modbus_buff,6);
0038ea  f04f0106          MOV      r1,#6
0038ee  a804              ADD      r0,sp,#0x10
0038f0  f7fffffe          BL       CRC16_2
;;;5729   	
;;;5730   		modbus_buff[6]= (char)crc_temp;
0038f4  f88d0016          STRB     r0,[sp,#0x16]
;;;5731   		modbus_buff[7]= (char)(crc_temp>>8);
0038f8  ea4f2020          ASR      r0,r0,#8
0038fc  f88d0017          STRB     r0,[sp,#0x17]
;;;5732   	
;;;5733   		crc_temp= CRC16_2(modbus_buff,6);
003900  f04f0106          MOV      r1,#6
003904  a804              ADD      r0,sp,#0x10
003906  f7fffffe          BL       CRC16_2
;;;5734   	
;;;5735   		plazma_ica1=tempSSSS;
00390a  f8a5607a          STRH     r6,[r5,#0x7a]
;;;5736   		if(ICA_CH==0)
00390e  f9b70000          LDRSH    r0,[r7,#0]  ; ICA_CH
003912  b3f0              CBZ      r0,|L1.14738|
;;;5737   			{
;;;5738   			for (i=0;i<8;i++)
;;;5739   				{
;;;5740   				putchar_sc16is700(modbus_buff[i]);
;;;5741   				}
;;;5742   			}
;;;5743   		else if(ICA_CH==2)
003914  2802              CMP      r0,#2
003916  d10c              BNE      |L1.14642|
;;;5744   			{
;;;5745   			uart_out1 (5,6,0,100,modbus_buff[4],modbus_buff[5],0);
003918  f89d0015          LDRB     r0,[sp,#0x15]
00391c  f89d1014          LDRB     r1,[sp,#0x14]
003920  e9cd0401          STRD     r0,r4,[sp,#4]
003924  9100              STR      r1,[sp,#0]
003926  2364              MOVS     r3,#0x64
003928  2200              MOVS     r2,#0
00392a  2106              MOVS     r1,#6
00392c  2005              MOVS     r0,#5
00392e  f7fffffe          BL       uart_out1
                  |L1.14642|
;;;5746   			}
;;;5747   		}
;;;5748   	}
;;;5749   }
003932  b009              ADD      sp,sp,#0x24
003934  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.14648|
003938  8818              LDRH     r0,[r3,#0]            ;5688  ; ICA_MODBUS_ADDRESS
00393a  f88d0010          STRB     r0,[sp,#0x10]         ;5688
00393e  f04f0004          MOV      r0,#4                 ;5689
003942  f88d0011          STRB     r0,[sp,#0x11]         ;5689
003946  f88d4012          STRB     r4,[sp,#0x12]         ;5690
00394a  f04f0002          MOV      r0,#2                 ;5691
00394e  f88d0013          STRB     r0,[sp,#0x13]         ;5691
003952  f88d4014          STRB     r4,[sp,#0x14]         ;5692
003956  f04f0501          MOV      r5,#1                 ;5693
00395a  f88d5015          STRB     r5,[sp,#0x15]         ;5693
00395e  f04f0106          MOV      r1,#6                 ;5695
003962  a804              ADD      r0,sp,#0x10           ;5695
003964  f7fffffe          BL       CRC16_2
003968  f88d0016          STRB     r0,[sp,#0x16]         ;5697
00396c  ea4f2020          ASR      r0,r0,#8              ;5698
003970  f88d0017          STRB     r0,[sp,#0x17]         ;5698
003974  f9b70000          LDRSH    r0,[r7,#0]            ;5700  ; ICA_CH
003978  b160              CBZ      r0,|L1.14740|
00397a  2802              CMP      r0,#2                 ;5707
00397c  d1d9              BNE      |L1.14642|
00397e  e9cd4500          STRD     r4,r5,[sp,#0]         ;5709
003982  2302              MOVS     r3,#2                 ;5709
003984  2200              MOVS     r2,#0                 ;5709
003986  2104              MOVS     r1,#4                 ;5709
003988  2005              MOVS     r0,#5                 ;5709
00398a  9402              STR      r4,[sp,#8]            ;5709
00398c  f7fffffe          BL       uart_out1
003990  e7cf              B        |L1.14642|
                  |L1.14738|
003992  e00b              B        |L1.14764|
                  |L1.14740|
003994  f04f0400          MOV      r4,#0                 ;5702
003998  ad04              ADD      r5,sp,#0x10           ;5685
                  |L1.14746|
00399a  5d28              LDRB     r0,[r5,r4]            ;5704
00399c  f7fffffe          BL       putchar_sc16is700
0039a0  f1040401          ADD      r4,r4,#1              ;5702
0039a4  b2e4              UXTB     r4,r4                 ;5702
0039a6  2c08              CMP      r4,#8                 ;5702
0039a8  d3f7              BCC      |L1.14746|
0039aa  e7c2              B        |L1.14642|
                  |L1.14764|
0039ac  f04f0400          MOV      r4,#0                 ;5738
0039b0  ad04              ADD      r5,sp,#0x10           ;5714
                  |L1.14770|
0039b2  5d28              LDRB     r0,[r5,r4]            ;5740
0039b4  f7fffffe          BL       putchar_sc16is700
0039b8  f1040401          ADD      r4,r4,#1              ;5738
0039bc  b2e4              UXTB     r4,r4                 ;5738
0039be  2c08              CMP      r4,#8                 ;5738
0039c0  d3f7              BCC      |L1.14770|
0039c2  e7b6              B        |L1.14642|
;;;5750   
                          ENDP

                  ipsBlckHndl PROC
;;;5833   //-----------------------------------------------
;;;5834   void ipsBlckHndl(char in)
0039c4  b510              PUSH     {r4,lr}
;;;5835   {
;;;5836   
;;;5837   ipsBlckStat=0;
0039c6  4ba7              LDR      r3,|L1.15460|
0039c8  f04f0000          MOV      r0,#0
0039cc  8018              STRH     r0,[r3,#0]
;;;5838   if(ipsBlckSrc==1)
0039ce  48a6              LDR      r0,|L1.15464|
0039d0  f04f0401          MOV      r4,#1
;;;5839   	{
;;;5840   	if(((ipsBlckLog==0)&&(adc_buff_[11]>2000)) || ((ipsBlckLog==1)&&(adc_buff_[11]<2000))) ipsBlckStat=1;
0039d4  f44f62fa          MOV      r2,#0x7d0
0039d8  f9b01000          LDRSH    r1,[r0,#0]            ;5838  ; ipsBlckSrc
0039dc  48a3              LDR      r0,|L1.15468|
0039de  2901              CMP      r1,#1                 ;5838
0039e0  f9b00000          LDRSH    r0,[r0,#0]
0039e4  d006              BEQ      |L1.14836|
;;;5841   	}
;;;5842   else if(ipsBlckSrc==2)
0039e6  2902              CMP      r1,#2
0039e8  d10f              BNE      |L1.14858|
0039ea  49a1              LDR      r1,|L1.15472|
;;;5843   	{
;;;5844   	if(((ipsBlckLog==0)&&(adc_buff_[13]>2000)) || ((ipsBlckLog==1)&&(adc_buff_[13]<2000))) ipsBlckStat=1;
0039ec  f9b1101a          LDRSH    r1,[r1,#0x1a]
0039f0  b160              CBZ      r0,|L1.14860|
0039f2  e00d              B        |L1.14864|
                  |L1.14836|
0039f4  499e              LDR      r1,|L1.15472|
0039f6  f9b11016          LDRSH    r1,[r1,#0x16]         ;5840
0039fa  b908              CBNZ     r0,|L1.14848|
0039fc  4291              CMP      r1,r2                 ;5840
0039fe  dc03              BGT      |L1.14856|
                  |L1.14848|
003a00  2801              CMP      r0,#1                 ;5840
003a02  d102              BNE      |L1.14858|
003a04  4291              CMP      r1,r2                 ;5840
003a06  da00              BGE      |L1.14858|
                  |L1.14856|
003a08  801c              STRH     r4,[r3,#0]            ;5840
                  |L1.14858|
;;;5845   	}
;;;5846   }
003a0a  bd10              POP      {r4,pc}
                  |L1.14860|
003a0c  4291              CMP      r1,r2                 ;5844
003a0e  dc03              BGT      |L1.14872|
                  |L1.14864|
003a10  2801              CMP      r0,#1                 ;5844
003a12  d1fa              BNE      |L1.14858|
003a14  4291              CMP      r1,r2                 ;5844
003a16  daf8              BGE      |L1.14858|
                  |L1.14872|
003a18  801c              STRH     r4,[r3,#0]            ;5844
003a1a  bd10              POP      {r4,pc}
;;;5847   
                          ENDP

                  bps_drv PROC
;;;5848   //-----------------------------------------------
;;;5849   void bps_drv(char in)
003a1c  e92d41f0          PUSH     {r4-r8,lr}
;;;5850   {
003a20  4606              MOV      r6,r0
;;;5851   char temp;
;;;5852   
;;;5853   if (bps[in]._device!=dSRC) return;
003a22  ebc600c6          RSB      r0,r6,r6,LSL #3
003a26  4993              LDR      r1,|L1.15476|
003a28  eb001006          ADD      r0,r0,r6,LSL #4
003a2c  f8112020          LDRB     r2,[r1,r0,LSL #2]
003a30  2a03              CMP      r2,#3
003a32  d177              BNE      |L1.15140|
;;;5854   temp=bps[in]._flags_tm;
003a34  eb010480          ADD      r4,r1,r0,LSL #2
003a38  f8945042          LDRB     r5,[r4,#0x42]
;;;5855   if(temp&(1<<AV_T))
003a3c  07a8              LSLS     r0,r5,#30
003a3e  d517              BPL      |L1.14960|
;;;5856   	{
;;;5857   	if(bps[in]._temp_av_cnt<1200) 
003a40  f9b41046          LDRSH    r1,[r4,#0x46]
003a44  f44f6096          MOV      r0,#0x4b0
003a48  4281              CMP      r1,r0
003a4a  da22              BGE      |L1.14994|
;;;5858   		{
;;;5859   		bps[in]._temp_av_cnt++;
003a4c  f1010101          ADD      r1,r1,#1
003a50  b209              SXTH     r1,r1
003a52  f8a41046          STRH     r1,[r4,#0x46]
;;;5860   		if(bps[in]._temp_av_cnt>=1200)
003a56  4281              CMP      r1,r0
003a58  db1b              BLT      |L1.14994|
;;;5861   			{
;;;5862   			bps[in]._temp_av_cnt=1200;
003a5a  f8a40046          STRH     r0,[r4,#0x46]
;;;5863   		   	if(!(bps[in]._av&(1<<0)))avar_bps_hndl(in,0,1);
003a5e  7860              LDRB     r0,[r4,#1]
003a60  07c0              LSLS     r0,r0,#31
003a62  d116              BNE      |L1.14994|
003a64  2201              MOVS     r2,#1
003a66  2100              MOVS     r1,#0
003a68  4630              MOV      r0,r6
003a6a  f7fffffe          BL       avar_bps_hndl
003a6e  e010              B        |L1.14994|
                  |L1.14960|
;;;5864   			}
;;;5865   		}
;;;5866   	}
;;;5867   
;;;5868   else if(!(temp&(1<<AV_T)))
;;;5869   	{
;;;5870   	if(bps[in]._temp_av_cnt) 
003a70  f9b41046          LDRSH    r1,[r4,#0x46]
003a74  b169              CBZ      r1,|L1.14994|
;;;5871   		{
;;;5872   		bps[in]._temp_av_cnt--;
003a76  f1a10101          SUB      r1,r1,#1
003a7a  b208              SXTH     r0,r1
003a7c  f8a40046          STRH     r0,[r4,#0x46]
;;;5873   		if(!bps[in]._temp_av_cnt)
003a80  b938              CBNZ     r0,|L1.14994|
;;;5874   			{
;;;5875   			if(bps[in]._av&(1<<0))avar_bps_hndl(in,0,0);
003a82  7860              LDRB     r0,[r4,#1]
003a84  07c0              LSLS     r0,r0,#31
003a86  d004              BEQ      |L1.14994|
003a88  2200              MOVS     r2,#0
003a8a  4611              MOV      r1,r2
003a8c  4630              MOV      r0,r6
003a8e  f7fffffe          BL       avar_bps_hndl
                  |L1.14994|
;;;5876   			}
;;;5877   		} 	
;;;5878   
;;;5879   	}
;;;5880   
;;;5881   if((temp&(1<<AVUMAX)))
003a92  0729              LSLS     r1,r5,#28
;;;5882   	{
;;;5883   	if(bps[in]._umax_av_cnt<10) 
;;;5884   		{
;;;5885   		bps[in]._umax_av_cnt++;
;;;5886   		if(bps[in]._umax_av_cnt>=10)
;;;5887   			{ 
;;;5888   			bps[in]._umax_av_cnt=10;
003a94  f04f070a          MOV      r7,#0xa
003a98  f04f0000          MOV      r0,#0                 ;5863
003a9c  d515              BPL      |L1.15050|
003a9e  f9b40048          LDRSH    r0,[r4,#0x48]         ;5883
003aa2  280a              CMP      r0,#0xa               ;5883
003aa4  da26              BGE      |L1.15092|
003aa6  f1000001          ADD      r0,r0,#1              ;5885
003aaa  b200              SXTH     r0,r0                 ;5885
003aac  f8a40048          STRH     r0,[r4,#0x48]         ;5885
003ab0  280a              CMP      r0,#0xa               ;5886
003ab2  db1f              BLT      |L1.15092|
003ab4  f8a47048          STRH     r7,[r4,#0x48]
;;;5889   			if(!(bps[in]._av&(1<<1)))avar_bps_hndl(in,1,1);
003ab8  7860              LDRB     r0,[r4,#1]
003aba  0780              LSLS     r0,r0,#30
003abc  d41a              BMI      |L1.15092|
003abe  2201              MOVS     r2,#1
003ac0  4611              MOV      r1,r2
003ac2  4630              MOV      r0,r6
003ac4  f7fffffe          BL       avar_bps_hndl
003ac8  e014              B        |L1.15092|
                  |L1.15050|
;;;5890   		  	/*if((K[APV]!=ON)||((apv_cnt[in,0]==0)&&(apv_cnt[in,1]==0)&&(apv_cnt[in,2]==0)&&(apv_flags[in]==afOFF)))avar_s_hndl(in,1,1);
;;;5891   			if((apv_cnt[in,0]==0)&&(apv_cnt[in,1]==0)&&(apv_cnt[in,2]==0)&&(apv_flags[in]==afON))
;;;5892   				{
;;;5893   				apv_cnt[in,0]=APV_INIT;
;;;5894   				apv_cnt[in,1]=APV_INIT;
;;;5895   				apv_cnt[in,2]=APV_INIT;
;;;5896   				apv_flags[in]=afOFF;
;;;5897   				}				*/
;;;5898   						
;;;5899   			}
;;;5900   		} 
;;;5901   	}		
;;;5902   else if(!(temp&(1<<AVUMAX)))
;;;5903   	{
;;;5904   	if(bps[in]._umax_av_cnt>0) 
003aca  f9b41048          LDRSH    r1,[r4,#0x48]
003ace  2900              CMP      r1,#0
003ad0  dd0d              BLE      |L1.15086|
;;;5905   		{
;;;5906   		bps[in]._umax_av_cnt--;
003ad2  f1a10101          SUB      r1,r1,#1
003ad6  b208              SXTH     r0,r1
003ad8  f8a40048          STRH     r0,[r4,#0x48]
;;;5907   		if(bps[in]._umax_av_cnt==0)
003adc  b950              CBNZ     r0,|L1.15092|
;;;5908   			{
;;;5909   			bps[in]._umax_av_cnt=0;
;;;5910   			avar_bps_hndl(in,1,0);
003ade  f04f0200          MOV      r2,#0
003ae2  f04f0101          MOV      r1,#1
003ae6  4630              MOV      r0,r6
003ae8  f7fffffe          BL       avar_bps_hndl
003aec  e002              B        |L1.15092|
                  |L1.15086|
;;;5911   	 //		apv_cnt[in,0]=0;
;;;5912   	//		apv_cnt[in,1]=0;
;;;5913   	 //		apv_cnt[in,2]=0;			
;;;5914   			}
;;;5915   		}
;;;5916   	else if(bps[in]._umax_av_cnt<0) bps[in]._umax_av_cnt=0;		 
003aee  da01              BGE      |L1.15092|
003af0  f8a40048          STRH     r0,[r4,#0x48]
                  |L1.15092|
;;;5917   	}
;;;5918   
;;;5919   if(temp&(1<<AVUMIN))
003af4  06e8              LSLS     r0,r5,#27
003af6  d516              BPL      |L1.15142|
;;;5920   	{
;;;5921   	if(bps[in]._umin_av_cnt<10) 
003af8  f9b4004a          LDRSH    r0,[r4,#0x4a]
003afc  280a              CMP      r0,#0xa
003afe  da20              BGE      |L1.15170|
;;;5922   		{
;;;5923   		bps[in]._umin_av_cnt++;
003b00  f1000001          ADD      r0,r0,#1
003b04  b200              SXTH     r0,r0
003b06  f8a4004a          STRH     r0,[r4,#0x4a]
;;;5924   		if(bps[in]._umin_av_cnt>=10)
003b0a  280a              CMP      r0,#0xa
003b0c  db19              BLT      |L1.15170|
;;;5925   			{ 
;;;5926   			bps[in]._umin_av_cnt=10;
003b0e  f8a4704a          STRH     r7,[r4,#0x4a]
;;;5927   			if(!(bps[in]._av&(1<<2)))avar_bps_hndl(in,2,1);
003b12  7860              LDRB     r0,[r4,#1]
003b14  0740              LSLS     r0,r0,#29
003b16  d414              BMI      |L1.15170|
003b18  2201              MOVS     r2,#1
003b1a  2102              MOVS     r1,#2
003b1c  4630              MOV      r0,r6
003b1e  f7fffffe          BL       avar_bps_hndl
003b22  e00e              B        |L1.15170|
                  |L1.15140|
003b24  e046              B        |L1.15284|
                  |L1.15142|
;;;5928   		  	/*	if((K[APV]!=ON)||((apv_cnt[in,0]==0)&&(apv_cnt[in,1]==0)&&(apv_cnt[in,2]==0)&&(apv_flags[in]==afOFF)))avar_s_hndl(in,2,1);
;;;5929   			if((apv_cnt[in,0]==0)&&(apv_cnt[in,1]==0)&&(apv_cnt[in,2]==0)&&(apv_flags[in]==afON))
;;;5930   				{
;;;5931   				apv_cnt[in,0]=APV_INIT;
;;;5932   				apv_cnt[in,1]=APV_INIT;
;;;5933   				apv_cnt[in,2]=APV_INIT;
;;;5934   				apv_flags[in]=afOFF;
;;;5935   				}*/				
;;;5936   			}
;;;5937   		} 
;;;5938   	}	
;;;5939   	
;;;5940   else if(!(temp&(1<<AVUMIN)))
;;;5941   	{
;;;5942   	if(bps[in]._umin_av_cnt) 
003b26  f9b4004a          LDRSH    r0,[r4,#0x4a]
003b2a  b150              CBZ      r0,|L1.15170|
;;;5943   		{
;;;5944   		bps[in]._umin_av_cnt--;
003b2c  f1a00001          SUB      r0,r0,#1
003b30  b201              SXTH     r1,r0
003b32  f8a4104a          STRH     r1,[r4,#0x4a]
;;;5945   		if(bps[in]._umin_av_cnt==0)
003b36  b921              CBNZ     r1,|L1.15170|
;;;5946   			{
;;;5947   			bps[in]._umin_av_cnt=0;
;;;5948   			avar_bps_hndl(in,2,0);
003b38  2200              MOVS     r2,#0
003b3a  2102              MOVS     r1,#2
003b3c  4630              MOV      r0,r6
003b3e  f7fffffe          BL       avar_bps_hndl
                  |L1.15170|
;;;5949   		//	apv_cnt[in,0]=0;
;;;5950   		//	apv_cnt[in,1]=0;
;;;5951   		//	apv_cnt[in,2]=0;
;;;5952   			}
;;;5953   		}
;;;5954   	else if(bps[in]._umin_av_cnt>10)bps[in]._umin_av_cnt--;	 
;;;5955   	}
;;;5956   
;;;5957   //bps[in]._state=bsOFF;
;;;5958   
;;;5959   if (bps[in]._av&0x0f)					bps[in]._state=bsAV;
003b42  7860              LDRB     r0,[r4,#1]
003b44  0700              LSLS     r0,r0,#28
003b46  d003              BEQ      |L1.15184|
003b48  f04f0004          MOV      r0,#4
003b4c  70a0              STRB     r0,[r4,#2]
003b4e  e017              B        |L1.15232|
                  |L1.15184|
;;;5960   else if ( (net_av) && (bps[in]._cnt>20)/*&& 
003b50  4849              LDR      r0,|L1.15480|
003b52  7800              LDRB     r0,[r0,#0]  ; net_av
003b54  b130              CBZ      r0,|L1.15204|
003b56  78e0              LDRB     r0,[r4,#3]
003b58  2814              CMP      r0,#0x14
003b5a  d903              BLS      |L1.15204|
;;;5961   		(bps[in]._Uii<200)*/)				bps[in]._state=bsOFF_AV_NET;
003b5c  f04f0005          MOV      r0,#5
003b60  70a0              STRB     r0,[r4,#2]
003b62  e00d              B        |L1.15232|
                  |L1.15204|
;;;5962   else if (bps[in]._flags_tm&BIN8(100000))	bps[in]._state=bsRDY;
003b64  f8940042          LDRB     r0,[r4,#0x42]
003b68  0680              LSLS     r0,r0,#26
003b6a  d503              BPL      |L1.15220|
003b6c  f04f0002          MOV      r0,#2
003b70  70a0              STRB     r0,[r4,#2]
003b72  e005              B        |L1.15232|
                  |L1.15220|
;;;5963   else if (bps[in]._cnt<20)				bps[in]._state=bsWRK;
003b74  78e0              LDRB     r0,[r4,#3]
003b76  2814              CMP      r0,#0x14
003b78  d202              BCS      |L1.15232|
003b7a  f04f0001          MOV      r0,#1
003b7e  70a0              STRB     r0,[r4,#2]
                  |L1.15232|
;;;5964   
;;;5965   
;;;5966   
;;;5967   //else if(bps[in]._flags_tm&BIN8(100000)) bps[in]._state=ssBL;
;;;5968   //else if((!(bps[in]._flags_tm&BIN8(100000)))&&(net_U>100))bps[in]._state=ssWRK;
;;;5969   //else bps[0]._state=ssNOT;
;;;5970   
;;;5971   //bps[in]._is_ready=0;
;;;5972   //bps[in]._is_wrk=0;
;;;5973   //if(bps[in]._av_net) bps[in]._flags_bp='N';// не подключен
;;;5974   //else if(bps[in]._av_u_max) bps[in]._flags_bp='P';// завышено напряжение(u_.av_.bAS1T)) bps_state[0]=ssAV;
;;;5975   //else if(bps[in]._av_u_min) bps[in]._flags_bp='M';// занижено напряжение
;;;5976   //else if(bps[in]._av_temper) bps[in]._flags_bp='T';// температура
;;;5977   //else if(bps[in]._flags_tm&BIN8(100000)) 
;;;5978   //	{
;;;5979   //	bps[in]._flags_bp='B';// заблокирован
;;;5980   //	bps[in]._is_ready=1;
;;;5981   //	}
;;;5982   //else if((!(bps[in]._flags_tm&BIN8(100000)))&&(net_U>100))
;;;5983   //     {
;;;5984   //     bps[in]._flags_bp='W';// работает
;;;5985   //     bps[in]._is_ready=1;
;;;5986   //     bps[in]._is_wrk=1;
;;;5987        
;;;5988   //     }
;;;5989   //else bps[in]._is_ready=1;     
;;;5990   
;;;5991   
;;;5992   
;;;5993   
;;;5994   
;;;5995   /*
;;;5996   bps[in]._flags_tu&=BIN8(11111110);
;;;5997   if(bps[in]._ist_blok_cnt)
;;;5998   	{
;;;5999   	bps[in]._ist_blok_cnt--;
;;;6000   	bps[in]._flags_tu|=BIN8(1);
;;;6001   	}
;;;6002   
;;;6003   	   */ 
;;;6004   
;;;6005   //Пересброс БПСа при потере связи
;;;6006   if(bps[in]._cnt>=10) bps[in]._flags_tu|=BIN8(10000000);
003b80  78e0              LDRB     r0,[r4,#3]
003b82  280a              CMP      r0,#0xa
003b84  d306              BCC      |L1.15252|
003b86  f894002c          LDRB     r0,[r4,#0x2c]
003b8a  f0400080          ORR      r0,r0,#0x80
003b8e  f884002c          STRB     r0,[r4,#0x2c]
003b92  e005              B        |L1.15264|
                  |L1.15252|
;;;6007   else bps[in]._flags_tu&=BIN8(1111111);
003b94  f894002c          LDRB     r0,[r4,#0x2c]
003b98  f000007f          AND      r0,r0,#0x7f
003b9c  f884002c          STRB     r0,[r4,#0x2c]
                  |L1.15264|
;;;6008   	
;;;6009   bps[in]._vol_u=cntrl_stat+bps[in]._x_;	
003ba0  4936              LDR      r1,|L1.15484|
003ba2  f9b40050          LDRSH    r0,[r4,#0x50]
003ba6  f9b1102a          LDRSH    r1,[r1,#0x2a]  ; cntrl_stat
003baa  4408              ADD      r0,r0,r1
003bac  6320              STR      r0,[r4,#0x30]
;;;6010   bps[in]._vol_i=1000; 
003bae  f44f707a          MOV      r0,#0x3e8
003bb2  6360              STR      r0,[r4,#0x34]
                  |L1.15284|
;;;6011   }
003bb4  e8bd81f0          POP      {r4-r8,pc}
;;;6012   
                          ENDP

                  avt_hndl PROC
;;;6013   //-----------------------------------------------
;;;6014   void avt_hndl(void)
003bb8  b570              PUSH     {r4-r6,lr}
;;;6015   {
;;;6016   char i;
;;;6017   for(i=0;i<12;i++)
003bba  f04f0000          MOV      r0,#0
;;;6018   	{
;;;6019   	if(eb2_data_short[6]&(1<<i))
003bbe  4930              LDR      r1,|L1.15488|
;;;6020   		{
;;;6021   		avt_stat[i]=avtON;
003bc0  4d30              LDR      r5,|L1.15492|
003bc2  f04f0401          MOV      r4,#1                 ;6019
003bc6  f9b1200c          LDRSH    r2,[r1,#0xc]          ;6019
003bca  4603              MOV      r3,r0                 ;6017
                  |L1.15308|
003bcc  fa04f100          LSL      r1,r4,r0              ;6019
003bd0  420a              TST      r2,r1                 ;6019
003bd2  d001              BEQ      |L1.15320|
003bd4  542c              STRB     r4,[r5,r0]
003bd6  e000              B        |L1.15322|
                  |L1.15320|
;;;6022   		}
;;;6023   	else avt_stat[i]=avtOFF;
003bd8  542b              STRB     r3,[r5,r0]
                  |L1.15322|
003bda  f1000001          ADD      r0,r0,#1              ;6017
003bde  b2c0              UXTB     r0,r0                 ;6017
003be0  280c              CMP      r0,#0xc               ;6017
003be2  d3f3              BCC      |L1.15308|
;;;6024   	}
;;;6025   
;;;6026   if((avt_stat_old[0]!=avt_stat[0])&&(NUMAVT>=1))
003be4  4e28              LDR      r6,|L1.15496|
003be6  7828              LDRB     r0,[r5,#0]  ; avt_stat
003be8  4c28              LDR      r4,|L1.15500|
003bea  7831              LDRB     r1,[r6,#0]  ; avt_stat_old
003bec  4281              CMP      r1,r0
003bee  d00b              BEQ      |L1.15368|
003bf0  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003bf4  2901              CMP      r1,#1
003bf6  db07              BLT      |L1.15368|
;;;6027   	{
;;;6028   	if(avt_stat[0]==avtON) 	snmp_trap_send("Avtomat #1 is ON ",11,1,1);
003bf8  2801              CMP      r0,#1
003bfa  d02a              BEQ      |L1.15442|
;;;6029   	else 				snmp_trap_send("Avtomat #1 is OFF",11,1,0);
003bfc  2300              MOVS     r3,#0
003bfe  2201              MOVS     r2,#1
003c00  210b              MOVS     r1,#0xb
003c02  a023              ADR      r0,|L1.15504|
003c04  f7fffffe          BL       snmp_trap_send
                  |L1.15368|
;;;6030   	}
;;;6031   if((avt_stat_old[1]!=avt_stat[1])&&(NUMAVT>=2))
003c08  7871              LDRB     r1,[r6,#1]  ; avt_stat_old
003c0a  7868              LDRB     r0,[r5,#1]  ; avt_stat
003c0c  4281              CMP      r1,r0
003c0e  d00b              BEQ      |L1.15400|
003c10  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003c14  2902              CMP      r1,#2
003c16  db07              BLT      |L1.15400|
;;;6032   	{
;;;6033   	if(avt_stat[1]==avtON) 	snmp_trap_send("Avtomat #2 is ON ",11,2,1);
003c18  2801              CMP      r0,#1
003c1a  d07e              BEQ      |L1.15642|
;;;6034   	else 				snmp_trap_send("Avtomat #2 is OFF",11,2,0);
003c1c  2300              MOVS     r3,#0
003c1e  2202              MOVS     r2,#2
003c20  210b              MOVS     r1,#0xb
003c22  a020              ADR      r0,|L1.15524|
003c24  f7fffffe          BL       snmp_trap_send
                  |L1.15400|
;;;6035   	}
;;;6036   if((avt_stat_old[2]!=avt_stat[2])&&(NUMAVT>=3))
003c28  78b1              LDRB     r1,[r6,#2]  ; avt_stat_old
003c2a  78a8              LDRB     r0,[r5,#2]  ; avt_stat
003c2c  4281              CMP      r1,r0
003c2e  d00b              BEQ      |L1.15432|
003c30  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003c34  2903              CMP      r1,#3
003c36  db07              BLT      |L1.15432|
;;;6037   	{
;;;6038   	if(avt_stat[2]==avtON) 	snmp_trap_send("Avtomat #3 is ON ",11,3,1);
003c38  2801              CMP      r0,#1
003c3a  d06f              BEQ      |L1.15644|
;;;6039   	else 				snmp_trap_send("Avtomat #3 is OFF",11,3,0);
003c3c  2300              MOVS     r3,#0
003c3e  2203              MOVS     r2,#3
003c40  210b              MOVS     r1,#0xb
003c42  a01d              ADR      r0,|L1.15544|
003c44  f7fffffe          BL       snmp_trap_send
                  |L1.15432|
;;;6040   	}
;;;6041   if((avt_stat_old[3]!=avt_stat[3])&&(NUMAVT>=4))
003c48  78f1              LDRB     r1,[r6,#3]  ; avt_stat_old
003c4a  78e8              LDRB     r0,[r5,#3]  ; avt_stat
003c4c  4281              CMP      r1,r0
003c4e  d049              BEQ      |L1.15588|
003c50  e03c              B        |L1.15564|
                  |L1.15442|
003c52  e0a4              B        |L1.15774|
                  |L1.15444|
                          DCD      ica_u_necc
                  |L1.15448|
                          DCD      ICA_MODBUS_ADDRESS
                  |L1.15452|
                          DCD      ICA_CH
                  |L1.15456|
                          DCD      TBAT
                  |L1.15460|
                          DCD      ipsBlckStat
                  |L1.15464|
                          DCD      ipsBlckSrc
                  |L1.15468|
                          DCD      ipsBlckLog
                  |L1.15472|
                          DCD      ||.bss||+0x40c
                  |L1.15476|
                          DCD      bps
                  |L1.15480|
                          DCD      net_av
                  |L1.15484|
                          DCD      ||area_number.25||
                  |L1.15488|
                          DCD      eb2_data_short
                  |L1.15492|
                          DCD      avt_stat
                  |L1.15496|
                          DCD      avt_stat_old
                  |L1.15500|
                          DCD      NUMAVT
                  |L1.15504|
003c90  4176746f          DCB      "Avtomat #1 is OFF",0
003c94  6d617420
003c98  23312069
003c9c  73204f46
003ca0  4600    
003ca2  00                DCB      0
003ca3  00                DCB      0
                  |L1.15524|
003ca4  4176746f          DCB      "Avtomat #2 is OFF",0
003ca8  6d617420
003cac  23322069
003cb0  73204f46
003cb4  4600    
003cb6  00                DCB      0
003cb7  00                DCB      0
                  |L1.15544|
003cb8  4176746f          DCB      "Avtomat #3 is OFF",0
003cbc  6d617420
003cc0  23332069
003cc4  73204f46
003cc8  4600    
003cca  00                DCB      0
003ccb  00                DCB      0
                  |L1.15564|
003ccc  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003cd0  2904              CMP      r1,#4
003cd2  db07              BLT      |L1.15588|
;;;6042   	{
;;;6043   	if(avt_stat[3]==avtON) 	snmp_trap_send("Avtomat #4 is ON ",11,4,1);
003cd4  2801              CMP      r0,#1
003cd6  d078              BEQ      |L1.15818|
;;;6044   	else 				snmp_trap_send("Avtomat #4 is OFF",11,4,0);
003cd8  2300              MOVS     r3,#0
003cda  2204              MOVS     r2,#4
003cdc  210b              MOVS     r1,#0xb
003cde  a0ff              ADR      r0,|L1.16604|
003ce0  f7fffffe          BL       snmp_trap_send
                  |L1.15588|
;;;6045   	}
;;;6046   if((avt_stat_old[4]!=avt_stat[4])&&(NUMAVT>=5))
003ce4  7931              LDRB     r1,[r6,#4]  ; avt_stat_old
003ce6  7928              LDRB     r0,[r5,#4]  ; avt_stat
003ce8  4281              CMP      r1,r0
003cea  d00b              BEQ      |L1.15620|
003cec  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003cf0  2905              CMP      r1,#5
003cf2  db07              BLT      |L1.15620|
;;;6047   	{
;;;6048   	if(avt_stat[4]==avtON) 	snmp_trap_send("Avtomat #5 is ON ",11,5,1);
003cf4  2801              CMP      r0,#1
003cf6  d070              BEQ      |L1.15834|
;;;6049   	else 				snmp_trap_send("Avtomat #5 is OFF",11,5,0);
003cf8  2300              MOVS     r3,#0
003cfa  2205              MOVS     r2,#5
003cfc  210b              MOVS     r1,#0xb
003cfe  a0fc              ADR      r0,|L1.16624|
003d00  f7fffffe          BL       snmp_trap_send
                  |L1.15620|
;;;6050   	}
;;;6051   if((avt_stat_old[5]!=avt_stat[5])&&(NUMAVT>=6))
003d04  7971              LDRB     r1,[r6,#5]  ; avt_stat_old
003d06  7968              LDRB     r0,[r5,#5]  ; avt_stat
003d08  4281              CMP      r1,r0
003d0a  d00e              BEQ      |L1.15658|
003d0c  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003d10  2906              CMP      r1,#6
003d12  db0a              BLT      |L1.15658|
;;;6052   	{
;;;6053   	if(avt_stat[5]==avtON) 	snmp_trap_send("Avtomat #6 is ON ",11,6,1);
003d14  2801              CMP      r0,#1
003d16  d067              BEQ      |L1.15848|
;;;6054   	else 				snmp_trap_send("Avtomat #6 is OFF",11,6,0);
003d18  e001              B        |L1.15646|
                  |L1.15642|
003d1a  e047              B        |L1.15788|
                  |L1.15644|
003d1c  e04e              B        |L1.15804|
                  |L1.15646|
003d1e  2300              MOVS     r3,#0
003d20  2206              MOVS     r2,#6
003d22  210b              MOVS     r1,#0xb
003d24  a0f7              ADR      r0,|L1.16644|
003d26  f7fffffe          BL       snmp_trap_send
                  |L1.15658|
;;;6055   	}
;;;6056   if((avt_stat_old[6]!=avt_stat[6])&&(NUMAVT>=7))
003d2a  79b1              LDRB     r1,[r6,#6]  ; avt_stat_old
003d2c  79a8              LDRB     r0,[r5,#6]  ; avt_stat
003d2e  4281              CMP      r1,r0
003d30  d00b              BEQ      |L1.15690|
003d32  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003d36  2907              CMP      r1,#7
003d38  db07              BLT      |L1.15690|
;;;6057   	{
;;;6058   	if(avt_stat[6]==avtON) 	snmp_trap_send("Avtomat #7 is ON ",11,7,1);
003d3a  2801              CMP      r0,#1
003d3c  d05b              BEQ      |L1.15862|
;;;6059   	else 				snmp_trap_send("Avtomat #7 is OFF",11,7,0);
003d3e  2300              MOVS     r3,#0
003d40  2207              MOVS     r2,#7
003d42  210b              MOVS     r1,#0xb
003d44  a0f4              ADR      r0,|L1.16664|
003d46  f7fffffe          BL       snmp_trap_send
                  |L1.15690|
;;;6060   	}
;;;6061   if((avt_stat_old[7]!=avt_stat[7])&&(NUMAVT>=8))
003d4a  79f1              LDRB     r1,[r6,#7]  ; avt_stat_old
003d4c  79e8              LDRB     r0,[r5,#7]  ; avt_stat
003d4e  4281              CMP      r1,r0
003d50  d00b              BEQ      |L1.15722|
003d52  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003d56  2908              CMP      r1,#8
003d58  db07              BLT      |L1.15722|
;;;6062   	{
;;;6063   	if(avt_stat[7]==avtON) 	snmp_trap_send("Avtomat #8 is ON ",11,8,1);
003d5a  2801              CMP      r0,#1
003d5c  d052              BEQ      |L1.15876|
;;;6064   	else 				snmp_trap_send("Avtomat #8 is OFF",11,8,0);
003d5e  2300              MOVS     r3,#0
003d60  2208              MOVS     r2,#8
003d62  210b              MOVS     r1,#0xb
003d64  a0f1              ADR      r0,|L1.16684|
003d66  f7fffffe          BL       snmp_trap_send
                  |L1.15722|
;;;6065   	}
;;;6066   if((avt_stat_old[8]!=avt_stat[8])&&(NUMAVT>=9))
003d6a  7a31              LDRB     r1,[r6,#8]  ; avt_stat_old
003d6c  7a28              LDRB     r0,[r5,#8]  ; avt_stat
003d6e  4281              CMP      r1,r0
003d70  d00b              BEQ      |L1.15754|
003d72  f9b41000          LDRSH    r1,[r4,#0]  ; NUMAVT
003d76  2909              CMP      r1,#9
003d78  db07              BLT      |L1.15754|
;;;6067   	{
;;;6068   	if(avt_stat[8]==avtON) 	snmp_trap_send("Avtomat #9 is ON ",11,9,1);
003d7a  2801              CMP      r0,#1
003d7c  d049              BEQ      |L1.15890|
;;;6069   	else 				snmp_trap_send("Avtomat #9 is OFF",11,9,0);
003d7e  2300              MOVS     r3,#0
003d80  2209              MOVS     r2,#9
003d82  210b              MOVS     r1,#0xb
003d84  a0ee              ADR      r0,|L1.16704|
003d86  f7fffffe          BL       snmp_trap_send
                  |L1.15754|
;;;6070   	}
;;;6071   
;;;6072   for(i=0;i<12;i++)
003d8a  f04f0000          MOV      r0,#0
                  |L1.15758|
;;;6073   	{
;;;6074   	avt_stat_old[i]=avt_stat[i];
003d8e  5c29              LDRB     r1,[r5,r0]
003d90  5431              STRB     r1,[r6,r0]
003d92  f1000001          ADD      r0,r0,#1              ;6072
003d96  b2c0              UXTB     r0,r0                 ;6072
003d98  280c              CMP      r0,#0xc               ;6072
003d9a  d3f8              BCC      |L1.15758|
;;;6075   	}
;;;6076   }
003d9c  bd70              POP      {r4-r6,pc}
                  |L1.15774|
003d9e  2301              MOVS     r3,#1                 ;6028
003da0  461a              MOV      r2,r3                 ;6028
003da2  210b              MOVS     r1,#0xb               ;6028
003da4  a0eb              ADR      r0,|L1.16724|
003da6  f7fffffe          BL       snmp_trap_send
003daa  e72d              B        |L1.15368|
                  |L1.15788|
003dac  2301              MOVS     r3,#1                 ;6033
003dae  2202              MOVS     r2,#2                 ;6033
003db0  210b              MOVS     r1,#0xb               ;6033
003db2  a0ed              ADR      r0,|L1.16744|
003db4  f7fffffe          BL       snmp_trap_send
003db8  e736              B        |L1.15400|
003dba  e006              B        |L1.15818|
                  |L1.15804|
003dbc  2301              MOVS     r3,#1                 ;6038
003dbe  2203              MOVS     r2,#3                 ;6038
003dc0  210b              MOVS     r1,#0xb               ;6038
003dc2  a0ee              ADR      r0,|L1.16764|
003dc4  f7fffffe          BL       snmp_trap_send
003dc8  e73e              B        |L1.15432|
                  |L1.15818|
003dca  2301              MOVS     r3,#1                 ;6043
003dcc  2204              MOVS     r2,#4                 ;6043
003dce  210b              MOVS     r1,#0xb               ;6043
003dd0  a0ef              ADR      r0,|L1.16784|
003dd2  f7fffffe          BL       snmp_trap_send
003dd6  e785              B        |L1.15588|
003dd8  e7ff              B        |L1.15834|
                  |L1.15834|
003dda  2301              MOVS     r3,#1                 ;6048
003ddc  2205              MOVS     r2,#5                 ;6048
003dde  210b              MOVS     r1,#0xb               ;6048
003de0  a0f0              ADR      r0,|L1.16804|
003de2  f7fffffe          BL       snmp_trap_send
003de6  e78d              B        |L1.15620|
                  |L1.15848|
003de8  2301              MOVS     r3,#1                 ;6053
003dea  2206              MOVS     r2,#6                 ;6053
003dec  210b              MOVS     r1,#0xb               ;6053
003dee  a0f2              ADR      r0,|L1.16824|
003df0  f7fffffe          BL       snmp_trap_send
003df4  e799              B        |L1.15658|
                  |L1.15862|
003df6  2301              MOVS     r3,#1                 ;6058
003df8  2207              MOVS     r2,#7                 ;6058
003dfa  210b              MOVS     r1,#0xb               ;6058
003dfc  a0f3              ADR      r0,|L1.16844|
003dfe  f7fffffe          BL       snmp_trap_send
003e02  e7a2              B        |L1.15690|
                  |L1.15876|
003e04  2301              MOVS     r3,#1                 ;6063
003e06  2208              MOVS     r2,#8                 ;6063
003e08  210b              MOVS     r1,#0xb               ;6063
003e0a  a0f5              ADR      r0,|L1.16864|
003e0c  f7fffffe          BL       snmp_trap_send
003e10  e7ab              B        |L1.15722|
                  |L1.15890|
003e12  2301              MOVS     r3,#1                 ;6068
003e14  2209              MOVS     r2,#9                 ;6068
003e16  210b              MOVS     r1,#0xb               ;6068
003e18  a0f6              ADR      r0,|L1.16884|
003e1a  f7fffffe          BL       snmp_trap_send
003e1e  e7b4              B        |L1.15754|
;;;6077   
                          ENDP

                  bat_hndl PROC
;;;6078   //-----------------------------------------------
;;;6079   void bat_hndl(void)
003e20  b570              PUSH     {r4-r6,lr}
;;;6080   {
;;;6081   /*if(mess_find(_MESS_BAT_MASK_ON))
;;;6082   	{
;;;6083   	if(mess_data[0]==_MESS_BAT_MASK_ON)
;;;6084   		{
;;;6085   		char i;
;;;6086   		for(i=0;i<2;i++)
;;;6087   			{
;;;6088   			if(mess_data[1]&(1<<i))
;;;6089   				{
;;;6090   				bat[i]._cnt_to_block=0;
;;;6091        			bat[i]._rel_stat=0;
;;;6092        			}
;;;6093   			}
;;;6094   		}
;;;6095   	}
;;;6096   if(mess_find(_MESS_BAT_MASK_OFF))
;;;6097   	{		
;;;6098   	if(mess_data[0]==_MESS_BAT_MASK_OFF)
;;;6099   		{
;;;6100   		char i;
;;;6101   		for(i=0;i<2;i++)
;;;6102   			{
;;;6103   			if((mess_data[1]&(1<<i)) && (bat[i]._cnt_to_block==0) && (bat[i]._rel_stat==0))
;;;6104   				{
;;;6105   				bat[i]._cnt_to_block=20;
;;;6106   				bat[i]._rel_stat=1;
;;;6107        			}
;;;6108   			}
;;;6109   		
;;;6110   		}		
;;;6111   	}*/
;;;6112   
;;;6113   if(mess_find_unvol(MESS2BAT_HNDL))
003e22  20c8              MOVS     r0,#0xc8
003e24  f7fffffe          BL       mess_find_unvol
;;;6114   	{ 
;;;6115   	char i;
;;;6116   	
;;;6117   	if(mess_data[0]==PARAM_BAT_ALL_OFF_AFTER_2SEC)
;;;6118   		{
;;;6119   		for(i=0;i<MAX_NUM_OF_BAT;i++)
;;;6120   			{
;;;6121   			if(bat[i]._cnt_to_block<50)bat[i]._cnt_to_block++;
003e28  49f7              LDR      r1,|L1.16904|
003e2a  2200              MOVS     r2,#0                 ;6119
003e2c  b3a8              CBZ      r0,|L1.16026|
003e2e  4bf7              LDR      r3,|L1.16908|
;;;6122   			}
;;;6123   		}
;;;6124   
;;;6125   	else if(mess_data[0]==PARAM_BAT_MASK_OFF_AFTER_2SEC)
;;;6126   		{
;;;6127   		for(i=0;i<MAX_NUM_OF_BAT;i++)
;;;6128   			{
;;;6129   			if(mess_data[1]&(1<<i))
003e30  2401              MOVS     r4,#1
003e32  6818              LDR      r0,[r3,#0]            ;6117  ; mess_data
003e34  28c9              CMP      r0,#0xc9              ;6117
003e36  d01c              BEQ      |L1.15986|
003e38  28ca              CMP      r0,#0xca              ;6125
003e3a  d02f              BEQ      |L1.16028|
;;;6130   				{
;;;6131   				if(bat[i]._cnt_to_block<50) bat[i]._cnt_to_block++;
;;;6132   				}
;;;6133   			else bat[i]._cnt_to_block=0;
;;;6134   			}
;;;6135   		}
;;;6136   	else 
;;;6137   	 	{
;;;6138   		for(i=0;i<MAX_NUM_OF_BAT;i++)
003e3c  4610              MOV      r0,r2
                  |L1.15934|
;;;6139   			{
;;;6140   			bat[i]._cnt_to_block=0;
003e3e  eb000340          ADD      r3,r0,r0,LSL #1
003e42  eb031300          ADD      r3,r3,r0,LSL #4
003e46  f8012023          STRB     r2,[r1,r3,LSL #2]
003e4a  f1000001          ADD      r0,r0,#1              ;6138
003e4e  b2c0              UXTB     r0,r0                 ;6138
003e50  2802              CMP      r0,#2                 ;6138
003e52  d3f4              BCC      |L1.15934|
                  |L1.15956|
;;;6141   			}
;;;6142   
;;;6143   		}
;;;6144   	for(i=0;i<MAX_NUM_OF_BAT;i++)
003e54  f04f0000          MOV      r0,#0
                  |L1.15960|
;;;6145   		{
;;;6146   		if(bat[i]._cnt_to_block>20)bat[i]._rel_stat=1;
003e58  eb000340          ADD      r3,r0,r0,LSL #1
003e5c  eb031300          ADD      r3,r3,r0,LSL #4
003e60  f8115023          LDRB     r5,[r1,r3,LSL #2]
003e64  2d14              CMP      r5,#0x14
003e66  d939              BLS      |L1.16092|
003e68  eb010383          ADD      r3,r1,r3,LSL #2
003e6c  f883403c          STRB     r4,[r3,#0x3c]
003e70  e038              B        |L1.16100|
                  |L1.15986|
003e72  f04f0000          MOV      r0,#0                 ;6119
                  |L1.15990|
003e76  eb000340          ADD      r3,r0,r0,LSL #1       ;6121
003e7a  eb031500          ADD      r5,r3,r0,LSL #4       ;6121
003e7e  f8113025          LDRB     r3,[r1,r5,LSL #2]     ;6121
003e82  2b32              CMP      r3,#0x32              ;6121
003e84  d203              BCS      |L1.16014|
003e86  f1030301          ADD      r3,r3,#1              ;6121
003e8a  f8013025          STRB     r3,[r1,r5,LSL #2]     ;6121
                  |L1.16014|
003e8e  f1000001          ADD      r0,r0,#1              ;6119
003e92  b2c0              UXTB     r0,r0                 ;6119
003e94  2802              CMP      r0,#2                 ;6119
003e96  d3ee              BCC      |L1.15990|
003e98  e7dc              B        |L1.15956|
                  |L1.16026|
003e9a  e029              B        |L1.16112|
                  |L1.16028|
003e9c  f04f0000          MOV      r0,#0                 ;6127
003ea0  685e              LDR      r6,[r3,#4]            ;6129
                  |L1.16034|
003ea2  fa04f300          LSL      r3,r4,r0              ;6129
003ea6  421e              TST      r6,r3                 ;6129
003ea8  d00c              BEQ      |L1.16068|
003eaa  eb000340          ADD      r3,r0,r0,LSL #1       ;6131
003eae  eb031500          ADD      r5,r3,r0,LSL #4       ;6131
003eb2  f8113025          LDRB     r3,[r1,r5,LSL #2]     ;6131
003eb6  2b32              CMP      r3,#0x32              ;6131
003eb8  d20a              BCS      |L1.16080|
003eba  f1030301          ADD      r3,r3,#1              ;6131
003ebe  f8013025          STRB     r3,[r1,r5,LSL #2]     ;6131
003ec2  e005              B        |L1.16080|
                  |L1.16068|
003ec4  eb000340          ADD      r3,r0,r0,LSL #1       ;6133
003ec8  eb031300          ADD      r3,r3,r0,LSL #4       ;6133
003ecc  f8012023          STRB     r2,[r1,r3,LSL #2]     ;6133
                  |L1.16080|
003ed0  f1000001          ADD      r0,r0,#1              ;6127
003ed4  b2c0              UXTB     r0,r0                 ;6127
003ed6  2802              CMP      r0,#2                 ;6127
003ed8  d3e3              BCC      |L1.16034|
003eda  e7bb              B        |L1.15956|
                  |L1.16092|
;;;6147   		else bat[i]._rel_stat=0;
003edc  eb010383          ADD      r3,r1,r3,LSL #2
003ee0  f883203c          STRB     r2,[r3,#0x3c]
                  |L1.16100|
003ee4  f1000001          ADD      r0,r0,#1              ;6144
003ee8  b2c0              UXTB     r0,r0                 ;6144
003eea  2802              CMP      r0,#2                 ;6144
003eec  d3b4              BCC      |L1.15960|
;;;6148   		}
;;;6149   
;;;6150   	}
;;;6151   
;;;6152   else 
;;;6153   	{
;;;6154   	char i;
;;;6155   	for(i=0;i<MAX_NUM_OF_BAT;i++)
;;;6156   		{
;;;6157   		bat[i]._cnt_to_block=0;
;;;6158   		bat[i]._rel_stat=0;
;;;6159   		}
;;;6160   
;;;6161   	}
;;;6162   
;;;6163   /*if(mess_find_unvol(MESS2BAT_HNDL1))
;;;6164   	{
;;;6165   	if(PARAM_BAT_ON)
;;;6166   		{
;;;6167   		char i;
;;;6168   		for(i=0;i<MAX_NUM_OF_BAT;i++)
;;;6169   			{
;;;6170   			if(mess_data[1]&(1<<i))
;;;6171   				{
;;;6172   				bat[i]._cnt_to_block=0;
;;;6173   				bat[i]._rel_stat=0;
;;;6174   				}
;;;6175   			}
;;;6176   		}
;;;6177   	} */
;;;6178   }
003eee  bd70              POP      {r4-r6,pc}
                  |L1.16112|
003ef0  f04f0000          MOV      r0,#0                 ;6155
                  |L1.16116|
003ef4  eb000340          ADD      r3,r0,r0,LSL #1       ;6157
003ef8  eb031300          ADD      r3,r3,r0,LSL #4       ;6157
003efc  f8012023          STRB     r2,[r1,r3,LSL #2]     ;6157
003f00  eb010383          ADD      r3,r1,r3,LSL #2       ;6158
003f04  f883203c          STRB     r2,[r3,#0x3c]         ;6158
003f08  f1000001          ADD      r0,r0,#1              ;6155
003f0c  b2c0              UXTB     r0,r0                 ;6155
003f0e  2802              CMP      r0,#2                 ;6155
003f10  d3f0              BCC      |L1.16116|
003f12  bd70              POP      {r4-r6,pc}
;;;6179   
                          ENDP

                  bat_drv PROC
;;;6817   //-----------------------------------------------
;;;6818   void bat_drv(char in)
003f14  e92d4ffe          PUSH     {r1-r11,lr}
;;;6819   {
003f18  4605              MOV      r5,r0
;;;6820   unsigned short /*tempUS,*/tempUS_;
;;;6821   unsigned long tempUL,tempUL_;
;;;6822   unsigned short b_zar;
;;;6823   //static unsigned short time_cnt[2];
;;;6824   
;;;6825   
;;;6826   
;;;6827   if(cntrl_stat_blok_cnt_plus[in])cntrl_stat_blok_cnt_plus[in]--;
003f1a  49bd              LDR      r1,|L1.16912|
003f1c  f9310015          LDRSH    r0,[r1,r5,LSL #1]
003f20  b118              CBZ      r0,|L1.16170|
003f22  f1a00001          SUB      r0,r0,#1
003f26  f8210015          STRH     r0,[r1,r5,LSL #1]
                  |L1.16170|
;;;6828   if(cntrl_stat_blok_cnt_minus[in])cntrl_stat_blok_cnt_minus[in]--;
003f2a  4ab9              LDR      r2,|L1.16912|
003f2c  1d12              ADDS     r2,r2,#4
003f2e  f9320015          LDRSH    r0,[r2,r5,LSL #1]
003f32  b118              CBZ      r0,|L1.16188|
003f34  f1a00001          SUB      r0,r0,#1
003f38  f8220015          STRH     r0,[r2,r5,LSL #1]
                  |L1.16188|
;;;6829   
;;;6830   
;;;6831   if(bat[in]._Ib>IZMAX) cntrl_stat_blok_cnt_plus[in]=100;
003f3c  eb050045          ADD      r0,r5,r5,LSL #1
003f40  4bb1              LDR      r3,|L1.16904|
003f42  eb001005          ADD      r0,r0,r5,LSL #4
003f46  eb030480          ADD      r4,r3,r0,LSL #2
003f4a  4bb2              LDR      r3,|L1.16916|
003f4c  9002              STR      r0,[sp,#8]
003f4e  f9b40008          LDRSH    r0,[r4,#8]
003f52  f9b33000          LDRSH    r3,[r3,#0]  ; IZMAX
003f56  f04f0b64          MOV      r11,#0x64
003f5a  4298              CMP      r0,r3
003f5c  dd01              BLE      |L1.16226|
003f5e  f821b015          STRH     r11,[r1,r5,LSL #1]
                  |L1.16226|
;;;6832   if(bat[in]._Ib<0)     cntrl_stat_blok_cnt_minus[in]=100;
003f62  2800              CMP      r0,#0
003f64  da01              BGE      |L1.16234|
003f66  f822b015          STRH     r11,[r2,r5,LSL #1]
                  |L1.16234|
;;;6833   
;;;6834   if(cntrl_stat_blok_cnt_plus[in] && cntrl_stat_blok_cnt_minus[in])
;;;6835        {
;;;6836        if(!cntrl_stat_blok_cnt_)
003f6a  48a9              LDR      r0,|L1.16912|
003f6c  f8313015          LDRH     r3,[r1,r5,LSL #1]     ;6834
003f70  38a4              SUBS     r0,r0,#0xa4
003f72  2700              MOVS     r7,#0
003f74  b14b              CBZ      r3,|L1.16266|
003f76  f8323015          LDRH     r3,[r2,r5,LSL #1]     ;6834
003f7a  b133              CBZ      r3,|L1.16266|
003f7c  f8b0306e          LDRH     r3,[r0,#0x6e]  ; cntrl_stat_blok_cnt_
003f80  b1a3              CBZ      r3,|L1.16300|
;;;6837             {
;;;6838             cntrl_stat_blok_cnt_=600; 
;;;6839             cntrl_stat_blok_cnt_plus[in]=0;
;;;6840             cntrl_stat_blok_cnt_minus[in]=0;
;;;6841             }
;;;6842        else cntrl_stat_blok_cnt=3000;
003f82  f64031b8          MOV      r1,#0xbb8
003f86  f8a0106c          STRH     r1,[r0,#0x6c]
                  |L1.16266|
;;;6843        }
;;;6844   cntrl_stat_blok_cnt=0;
003f8a  f8a0706c          STRH     r7,[r0,#0x6c]
;;;6845   
;;;6846   if(++(bat[in]._time_cnt)>=10)
003f8e  f894003e          LDRB     r0,[r4,#0x3e]
003f92  1c40              ADDS     r0,r0,#1
003f94  b2c0              UXTB     r0,r0
003f96  f884003e          STRB     r0,[r4,#0x3e]
003f9a  280a              CMP      r0,#0xa
003f9c  d301              BCC      |L1.16290|
;;;6847   	{
;;;6848   	bat[in]._time_cnt=0;
003f9e  f884703e          STRB     r7,[r4,#0x3e]
                  |L1.16290|
;;;6849   	//bat[in]._zar_cnt++;
;;;6850   	}
;;;6851   
;;;6852   if(main_10Hz_cnt==50)
003fa2  4e9d              LDR      r6,|L1.16920|
003fa4  8830              LDRH     r0,[r6,#0]  ; main_10Hz_cnt
003fa6  2832              CMP      r0,#0x32
003fa8  d009              BEQ      |L1.16318|
003faa  e017              B        |L1.16348|
                  |L1.16300|
003fac  f44f7316          MOV      r3,#0x258             ;6838
003fb0  f8a0306e          STRH     r3,[r0,#0x6e]         ;6838
003fb4  f8217015          STRH     r7,[r1,r5,LSL #1]     ;6839
003fb8  f8227015          STRH     r7,[r2,r5,LSL #1]     ;6840
003fbc  e7e5              B        |L1.16266|
                  |L1.16318|
;;;6853   	{
;;;6854   	if(!bat[in]._rel_stat)
003fbe  f894003c          LDRB     r0,[r4,#0x3c]
003fc2  b958              CBNZ     r0,|L1.16348|
;;;6855   		{
;;;6856   		
;;;6857   		if(bat[in]._Ub<80) 
003fc4  f9b40002          LDRSH    r0,[r4,#2]
003fc8  2850              CMP      r0,#0x50
003fca  da07              BGE      |L1.16348|
;;;6858   			{
;;;6859   			
;;;6860   			if(!(bat[in]._av&1))
003fcc  f894003d          LDRB     r0,[r4,#0x3d]
003fd0  07c0              LSLS     r0,r0,#31
003fd2  d103              BNE      |L1.16348|
;;;6861   				{
;;;6862   				avar_bat_hndl(in,1);
003fd4  2101              MOVS     r1,#1
003fd6  4628              MOV      r0,r5
003fd8  f7fffffe          BL       avar_bat_hndl
                  |L1.16348|
;;;6863   				//if(in==0)plazma_bat++;
;;;6864   				}
;;;6865   			}				
;;;6866   
;;;6867   		}
;;;6868   	}
;;;6869   
;;;6870   if(main_10Hz_cnt>200)
003fdc  f9b60000          LDRSH    r0,[r6,#0]  ; main_10Hz_cnt
;;;6871   	{
;;;6872   	if(abs(bat[in]._Ib)>IKB) 
003fe0  4e8e              LDR      r6,|L1.16924|
003fe2  28c8              CMP      r0,#0xc8              ;6870
003fe4  dd0f              BLE      |L1.16390|
003fe6  f9b40008          LDRSH    r0,[r4,#8]
003fea  f7fffffe          BL       abs
003fee  f9b61000          LDRSH    r1,[r6,#0]  ; IKB
003ff2  4288              CMP      r0,r1
003ff4  dd07              BLE      |L1.16390|
;;;6873   		{
;;;6874   		if((bat[in]._av&1))avar_bat_hndl(in,0);
003ff6  f894003d          LDRB     r0,[r4,#0x3d]
003ffa  07c0              LSLS     r0,r0,#31
003ffc  d003              BEQ      |L1.16390|
003ffe  2100              MOVS     r1,#0
004000  4628              MOV      r0,r5
004002  f7fffffe          BL       avar_bat_hndl
                  |L1.16390|
;;;6875   		}
;;;6876   	}
;;;6877   
;;;6878   #ifdef APSENERGIA
;;;6879   //if(bat[in]._Ib>(-IKB))
;;;6880   
;;;6881   
;;;6882   #endif
;;;6883   
;;;6884   if(bat[in]._Ib>(-IKB))
004006  4885              LDR      r0,|L1.16924|
004008  f9b41008          LDRSH    r1,[r4,#8]
00400c  f9b00000          LDRSH    r0,[r0,#0]  ; IKB
004010  4240              RSBS     r0,r0,#0
004012  4281              CMP      r1,r0
004014  dd14              BLE      |L1.16448|
;;;6885   	{
;;;6886   	if(bat[in]._cnt_wrk<10)
004016  7b60              LDRB     r0,[r4,#0xd]
004018  280a              CMP      r0,#0xa
00401a  d20d              BCS      |L1.16440|
;;;6887   		{
;;;6888   		bat[in]._cnt_wrk++;
00401c  f1000001          ADD      r0,r0,#1
004020  b2c0              UXTB     r0,r0
004022  7360              STRB     r0,[r4,#0xd]
;;;6889   		if((bat[in]._cnt_wrk>=10)&&(bat[in]._wrk)) 
004024  280a              CMP      r0,#0xa
004026  d306              BCC      |L1.16438|
004028  7ba0              LDRB     r0,[r4,#0xe]
00402a  2800              CMP      r0,#0
00402c  d003              BEQ      |L1.16438|
;;;6890   			{
;;;6891   			bat[in]._wrk=0;
00402e  73a7              STRB     r7,[r4,#0xe]
;;;6892   			//beep_init(0x7L,'O');
;;;6893   			//wrk_mem_hndl(0);
;;;6894   			wrk_mem_hndl(in);
004030  4628              MOV      r0,r5
004032  f7fffffe          BL       wrk_mem_hndl
                  |L1.16438|
004036  e110              B        |L1.16986|
                  |L1.16440|
;;;6895   			//plazma++;
;;;6896   			}
;;;6897   		}
;;;6898   	else bat[in]._cnt_wrk=10;	
004038  f04f000a          MOV      r0,#0xa
00403c  7360              STRB     r0,[r4,#0xd]
00403e  e10c              B        |L1.16986|
                  |L1.16448|
;;;6899   	}	
;;;6900   
;;;6901   else if(bat[in]._Ib<(-IKB))
004040  da40              BGE      |L1.16580|
;;;6902   	{
;;;6903   	if(bat[in]._cnt_wrk)
004042  7b60              LDRB     r0,[r4,#0xd]
004044  b3f0              CBZ      r0,|L1.16580|
;;;6904   		{
;;;6905   		bat[in]._cnt_wrk--;
004046  f1a00001          SUB      r0,r0,#1
00404a  b2c0              UXTB     r0,r0
00404c  7360              STRB     r0,[r4,#0xd]
;;;6906   		if((bat[in]._cnt_wrk==0)&&(bat[in]._wrk==0)) 
00404e  bbc8              CBNZ     r0,|L1.16580|
004050  7ba0              LDRB     r0,[r4,#0xe]
004052  bbb8              CBNZ     r0,|L1.16580|
;;;6907   			{
;;;6908   			bat[in]._wrk=1;
004054  f04f0001          MOV      r0,#1
004058  73a0              STRB     r0,[r4,#0xe]
;;;6909   
;;;6910   				{
;;;6911   				char temp;
;;;6912   				signed short temp_temp;
;;;6913   				temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)];
00405a  4871              LDR      r0,|L1.16928|
00405c  8800              LDRH     r0,[r0,#0]  ; bat_u_old_cnt
00405e  f1000001          ADD      r0,r0,#1
004062  f0000007          AND      r0,r0,#7
004066  eb040040          ADD      r0,r4,r0,LSL #1
00406a  8c00              LDRH     r0,[r0,#0x20]
00406c  9000              STR      r0,[sp,#0]
;;;6914   			 
;;;6915   				temp=LPC_RTC->YEAR;
00406e  4e6d              LDR      r6,|L1.16932|
004070  8bb0              LDRH     r0,[r6,#0x1c]
004072  9001              STR      r0,[sp,#4]
;;;6916   				gran_char((signed char*)&temp,1,99);
004074  f04f0263          MOV      r2,#0x63
004078  f04f0101          MOV      r1,#1
00407c  a801              ADD      r0,sp,#4
00407e  f7fffffe          BL       gran_char
;;;6917   				*((char*)(&(bat[in]._wrk_date[0])))=temp;
004082  f104041c          ADD      r4,r4,#0x1c
004086  f89d0004          LDRB     r0,[sp,#4]
00408a  7620              STRB     r0,[r4,#0x18]
;;;6918   			
;;;6919   				temp=LPC_RTC->MONTH;
00408c  7e30              LDRB     r0,[r6,#0x18]
00408e  9001              STR      r0,[sp,#4]
;;;6920   				gran_char((signed char*)&temp,1,12);
004090  f04f020c          MOV      r2,#0xc
004094  f04f0101          MOV      r1,#1
004098  a801              ADD      r0,sp,#4
00409a  f7fffffe          BL       gran_char
;;;6921   				*(((char*)(&(bat[in]._wrk_date[0])))+1)=temp;
00409e  f89d0004          LDRB     r0,[sp,#4]
0040a2  7660              STRB     r0,[r4,#0x19]
;;;6922   			
;;;6923   				temp=LPC_RTC->DOM;
0040a4  7b30              LDRB     r0,[r6,#0xc]
0040a6  9001              STR      r0,[sp,#4]
;;;6924   				gran_char((signed char*)&temp,1,31);
0040a8  221f              MOVS     r2,#0x1f
0040aa  2101              MOVS     r1,#1
0040ac  a801              ADD      r0,sp,#4
0040ae  f7fffffe          BL       gran_char
;;;6925   				*(((char*)(&(bat[in]._wrk_date[0])))+2)=temp;			
0040b2  f89d0004          LDRB     r0,[sp,#4]
0040b6  76a0              STRB     r0,[r4,#0x1a]
;;;6926   				
;;;6927   				*(((char*)(&(bat[in]._wrk_date[0])))+3)=*((char*)&temp_temp);
0040b8  f89d0000          LDRB     r0,[sp,#0]
0040bc  76e0              STRB     r0,[r4,#0x1b]
;;;6928   
;;;6929   				temp=LPC_RTC->HOUR;
0040be  7a30              LDRB     r0,[r6,#8]
0040c0  9001              STR      r0,[sp,#4]
;;;6930   				gran_char((signed char*)&temp,0,23);
0040c2  e000              B        |L1.16582|
                  |L1.16580|
0040c4  e0c9              B        |L1.16986|
                  |L1.16582|
0040c6  2217              MOVS     r2,#0x17
0040c8  2100              MOVS     r1,#0
0040ca  a801              ADD      r0,sp,#4
0040cc  f7fffffe          BL       gran_char
;;;6931   				*((char*)(&(bat[in]._wrk_date[1])))=temp;
0040d0  f89d0004          LDRB     r0,[sp,#4]
0040d4  7720              STRB     r0,[r4,#0x1c]
;;;6932                  	
;;;6933   				temp=LPC_RTC->MIN;
0040d6  7930              LDRB     r0,[r6,#4]
0040d8  9001              STR      r0,[sp,#4]
;;;6934   				gran_char((signed char*)&temp,0,59);
0040da  e0a5              B        |L1.16936|
                  |L1.16604|
0040dc  4176746f          DCB      "Avtomat #4 is OFF",0
0040e0  6d617420
0040e4  23342069
0040e8  73204f46
0040ec  4600    
0040ee  00                DCB      0
0040ef  00                DCB      0
                  |L1.16624|
0040f0  4176746f          DCB      "Avtomat #5 is OFF",0
0040f4  6d617420
0040f8  23352069
0040fc  73204f46
004100  4600    
004102  00                DCB      0
004103  00                DCB      0
                  |L1.16644|
004104  4176746f          DCB      "Avtomat #6 is OFF",0
004108  6d617420
00410c  23362069
004110  73204f46
004114  4600    
004116  00                DCB      0
004117  00                DCB      0
                  |L1.16664|
004118  4176746f          DCB      "Avtomat #7 is OFF",0
00411c  6d617420
004120  23372069
004124  73204f46
004128  4600    
00412a  00                DCB      0
00412b  00                DCB      0
                  |L1.16684|
00412c  4176746f          DCB      "Avtomat #8 is OFF",0
004130  6d617420
004134  23382069
004138  73204f46
00413c  4600    
00413e  00                DCB      0
00413f  00                DCB      0
                  |L1.16704|
004140  4176746f          DCB      "Avtomat #9 is OFF",0
004144  6d617420
004148  23392069
00414c  73204f46
004150  4600    
004152  00                DCB      0
004153  00                DCB      0
                  |L1.16724|
004154  4176746f          DCB      "Avtomat #1 is ON ",0
004158  6d617420
00415c  23312069
004160  73204f4e
004164  2000    
004166  00                DCB      0
004167  00                DCB      0
                  |L1.16744|
004168  4176746f          DCB      "Avtomat #2 is ON ",0
00416c  6d617420
004170  23322069
004174  73204f4e
004178  2000    
00417a  00                DCB      0
00417b  00                DCB      0
                  |L1.16764|
00417c  4176746f          DCB      "Avtomat #3 is ON ",0
004180  6d617420
004184  23332069
004188  73204f4e
00418c  2000    
00418e  00                DCB      0
00418f  00                DCB      0
                  |L1.16784|
004190  4176746f          DCB      "Avtomat #4 is ON ",0
004194  6d617420
004198  23342069
00419c  73204f4e
0041a0  2000    
0041a2  00                DCB      0
0041a3  00                DCB      0
                  |L1.16804|
0041a4  4176746f          DCB      "Avtomat #5 is ON ",0
0041a8  6d617420
0041ac  23352069
0041b0  73204f4e
0041b4  2000    
0041b6  00                DCB      0
0041b7  00                DCB      0
                  |L1.16824|
0041b8  4176746f          DCB      "Avtomat #6 is ON ",0
0041bc  6d617420
0041c0  23362069
0041c4  73204f4e
0041c8  2000    
0041ca  00                DCB      0
0041cb  00                DCB      0
                  |L1.16844|
0041cc  4176746f          DCB      "Avtomat #7 is ON ",0
0041d0  6d617420
0041d4  23372069
0041d8  73204f4e
0041dc  2000    
0041de  00                DCB      0
0041df  00                DCB      0
                  |L1.16864|
0041e0  4176746f          DCB      "Avtomat #8 is ON ",0
0041e4  6d617420
0041e8  23382069
0041ec  73204f4e
0041f0  2000    
0041f2  00                DCB      0
0041f3  00                DCB      0
                  |L1.16884|
0041f4  4176746f          DCB      "Avtomat #9 is ON ",0
0041f8  6d617420
0041fc  23392069
004200  73204f4e
004204  2000    
004206  00                DCB      0
004207  00                DCB      0
                  |L1.16904|
                          DCD      bat
                  |L1.16908|
                          DCD      mess_data
                  |L1.16912|
                          DCD      ||area_number.25||+0xa4
                  |L1.16916|
                          DCD      IZMAX
                  |L1.16920|
                          DCD      main_10Hz_cnt
                  |L1.16924|
                          DCD      IKB
                  |L1.16928|
                          DCD      bat_u_old_cnt
                  |L1.16932|
                          DCD      0x40024020
                  |L1.16936|
004228  223b              MOVS     r2,#0x3b
00422a  2100              MOVS     r1,#0
00422c  a801              ADD      r0,sp,#4
00422e  f7fffffe          BL       gran_char
;;;6935   				*(((char*)(&(bat[in]._wrk_date[1])))+1)=temp;
004232  f89d0004          LDRB     r0,[sp,#4]
004236  7760              STRB     r0,[r4,#0x1d]
;;;6936   	          
;;;6937   				temp=LPC_RTC->SEC;
004238  7830              LDRB     r0,[r6,#0]
00423a  9001              STR      r0,[sp,#4]
;;;6938   				gran_char((signed char*)&temp,0,59);
00423c  223b              MOVS     r2,#0x3b
00423e  2100              MOVS     r1,#0
004240  a801              ADD      r0,sp,#4
004242  f7fffffe          BL       gran_char
;;;6939   				*(((char*)(&(bat[in]._wrk_date[1])))+2)=temp;
004246  f89d0004          LDRB     r0,[sp,#4]
00424a  77a0              STRB     r0,[r4,#0x1e]
;;;6940   			
;;;6941   				*(((char*)(&(bat[in]._wrk_date[1])))+3)=*(((char*)&temp_temp)+1);
00424c  f89d0001          LDRB     r0,[sp,#1]
004250  77e0              STRB     r0,[r4,#0x1f]
;;;6942   				bat[in]._Iintegr=0;		//Счетчик десятков милиамперсекунд
004252  8027              STRH     r7,[r4,#0]
;;;6943   				bat[in]._Iintegr_=0;	//Счетчик сотен милиамперчасов
004254  8067              STRH     r7,[r4,#2]
004256  f1a4041c          SUB      r4,r4,#0x1c
                  |L1.16986|
;;;6944   				}
;;;6945   	
;;;6946   			}
;;;6947   
;;;6948   		}
;;;6949   	else bat[in]._cnt_wrk=0;	 
;;;6950   	
;;;6951   	}					
;;;6952   
;;;6953   /*
;;;6954   if(Ibat>=(-IKB))
;;;6955   	{
;;;6956   	if(cnt_wrk<10)
;;;6957   		{
;;;6958   		cnt_wrk++;
;;;6959   		if((cnt_wrk>=10)&&(wrk!=wrkOFF)) 
;;;6960   			{
;;;6961   			wrk=wrkOFF;
;;;6962   			//beep_init(0x7L,'O');
;;;6963   			wrk_mem_hndl(ibat_integr);
;;;6964   			}
;;;6965   		}
;;;6966   	else cnt_wrk=10;	
;;;6967   	}	
;;;6968   
;;;6969   else if((Ibat<(-IKB))&&(spc_stat!=spc_KE))
;;;6970   	{
;;;6971   	if(cnt_wrk)
;;;6972   		{
;;;6973   		cnt_wrk--;
;;;6974   		if((cnt_wrk==0)&&(wrk!=wrkON)) 
;;;6975   			{
;;;6976   			char temp;
;;;6977   			signed short temp_temp;
;;;6978   			temp_temp=ubat_old[((ubat_old_cnt+1)&0x07)];
;;;6979   			 
;;;6980   			wrk=wrkON;
;;;6981   			
;;;6982   			temp=_year;
;;;6983   			gran_char(&temp,1,99);
;;;6984   			*((char*)(&(wrk_date[0])))=temp;
;;;6985   			
;;;6986   			temp=_month;
;;;6987   			gran_char(&temp,1,12);
;;;6988   			*(((char*)(&(wrk_date[0])))+1)=temp;
;;;6989   			
;;;6990   			temp=_date;
;;;6991   			gran_char(&temp,1,31);
;;;6992   			*(((char*)(&(wrk_date[0])))+2)=temp;			
;;;6993   				
;;;6994   			*(((char*)(&(wrk_date[0])))+3)=*((char*)&temp_temp);
;;;6995   
;;;6996   			temp=_hour;
;;;6997   			gran_char(&temp,0,23);
;;;6998   			*((char*)(&(wrk_date[1])))=temp;
;;;6999                  
;;;7000   			temp=_min;
;;;7001   			gran_char(&temp,0,59);
;;;7002   			*(((char*)(&(wrk_date[1])))+1)=temp;
;;;7003   	          
;;;7004   			temp=_sec;
;;;7005   			gran_char(&temp,0,59);
;;;7006   			*(((char*)(&(wrk_date[1])))+2)=temp;
;;;7007   			
;;;7008   			*(((char*)(&(wrk_date[1])))+3)=*(((char*)&temp_temp)+1);
;;;7009   
;;;7010   			
;;;7011   			//beep_init(0xFL,'O'); 
;;;7012   			ibat_integr=0;
;;;7013   			ibat_integr_=0;
;;;7014   			}
;;;7015   		}
;;;7016   	else cnt_wrk=0;	 
;;;7017   	
;;;7018   	}
;;;7019   if(wrk==wrkON)
;;;7020   	{
;;;7021   	ibat_integr_+=-Ibat;
;;;7022   	if(ibat_integr_>=SEC_IN_HOUR*10L)
;;;7023   		{
;;;7024   		ibat_integr_-=SEC_IN_HOUR*10L;
;;;7025   		ibat_integr++;
;;;7026   		}
;;;7027   	}
;;;7028   
;;;7029   */
;;;7030   
;;;7031   
;;;7032   /*if(bat[in]._cnt_to_block)
;;;7033   	{
;;;7034   	bat[in]._cnt_to_block--;
;;;7035   	if(!(bat[in]._cnt_to_block))
;;;7036   		{
;;;7037   		//bat[in]._rel_stat=1;
;;;7038   		}
;;;7039   	}
;;;7040   */
;;;7041   
;;;7042   
;;;7043   
;;;7044   
;;;7045   //unsigned int tempUI,tempUI_;
;;;7046   //unsigned int b_zar; 
;;;7047   //char i;
;;;7048   //Ibat[0]=5000;                     
;;;7049   
;;;7050   
;;;7051                               
;;;7052   if(bat[in]._time_cnt==0)
;;;7053   	{
;;;7054   	bat[in]._zar_cnt+=(signed long)bat[in]._Ib;
;;;7055   	
;;;7056   	if(bat[in]._zar_cnt>=AH_CONSTANT)
00425a  f64848a0          MOV      r8,#0x8ca0
00425e  f894003e          LDRB     r0,[r4,#0x3e]         ;7052
004262  2800              CMP      r0,#0                 ;7052
004264  d17e              BNE      |L1.17252|
004266  f9b41008          LDRSH    r1,[r4,#8]            ;7054
00426a  6960              LDR      r0,[r4,#0x14]         ;7054
00426c  4408              ADD      r0,r0,r1              ;7054
00426e  6160              STR      r0,[r4,#0x14]         ;7054
;;;7057   		{
;;;7058   		if(BAT_C_REAL[in]==0x5555) tempUS_=BAT_C_NOM[in];
;;;7059   		else tempUS_=BAT_C_REAL[in];
;;;7060   		
;;;7061   		b_zar=lc640_read_int(ADR_EE_BAT_ZAR_CNT[in]);
004270  f8df940c          LDR      r9,|L1.18048|
004274  f8dfa40c          LDR      r10,|L1.18052|
004278  4540              CMP      r0,r8                 ;7056
00427a  db2a              BLT      |L1.17106|
00427c  f93a1015          LDRSH    r1,[r10,r5,LSL #1]    ;7058
004280  f5a140aa          SUB      r0,r1,#0x5500         ;7058
004284  3855              SUBS     r0,r0,#0x55           ;7058
004286  d103              BNE      |L1.17040|
004288  48ff              LDR      r0,|L1.18056|
00428a  f8306015          LDRH     r6,[r0,r5,LSL #1]     ;7058
00428e  e001              B        |L1.17044|
                  |L1.17040|
004290  f83a6015          LDRH     r6,[r10,r5,LSL #1]    ;7059
                  |L1.17044|
004294  f8390015          LDRH     r0,[r9,r5,LSL #1]
004298  f7fffffe          BL       lc640_read_int
00429c  b280              UXTH     r0,r0
;;;7062   
;;;7063   		if(b_zar<(tempUS_/**10*/))
00429e  42b0              CMP      r0,r6
0042a0  d20e              BCS      |L1.17088|
;;;7064   			{
;;;7065   			bat[in]._zar_cnt-=AH_CONSTANT;
0042a2  6961              LDR      r1,[r4,#0x14]
0042a4  f5a14100          SUB      r1,r1,#0x8000
0042a8  f5a1614a          SUB      r1,r1,#0xca0
0042ac  6161              STR      r1,[r4,#0x14]
;;;7066   
;;;7067   			lc640_write_int(ADR_EE_BAT_ZAR_CNT[in],b_zar+1);
0042ae  f9392015          LDRSH    r2,[r9,r5,LSL #1]
0042b2  f1000001          ADD      r0,r0,#1
0042b6  b201              SXTH     r1,r0
0042b8  4610              MOV      r0,r2
0042ba  f7fffffe          BL       lc640_write_int
0042be  e033              B        |L1.17192|
                  |L1.17088|
;;;7068   			}
;;;7069   		else if(b_zar>(tempUS_/**10*/))  
0042c0  d932              BLS      |L1.17192|
;;;7070   			{
;;;7071   			lc640_write_int(ADR_EE_BAT_ZAR_CNT[in],tempUS_);
0042c2  f9390015          LDRSH    r0,[r9,r5,LSL #1]
0042c6  b231              SXTH     r1,r6
0042c8  f7fffffe          BL       lc640_write_int
;;;7072   			bat[in]._zar_cnt=AH_CONSTANT;
0042cc  f8c48014          STR      r8,[r4,#0x14]
0042d0  e02a              B        |L1.17192|
                  |L1.17106|
;;;7073   
;;;7074   			}
;;;7075   
;;;7076   		}
;;;7077   
;;;7078   	else if(bat[in]._zar_cnt<=-AH_CONSTANT)
0042d2  49ee              LDR      r1,|L1.18060|
0042d4  4288              CMP      r0,r1
0042d6  dc27              BGT      |L1.17192|
;;;7079   		{
;;;7080   		if(BAT_C_REAL[in]==0x5555) tempUS_=BAT_C_NOM[in];
0042d8  f93a1015          LDRSH    r1,[r10,r5,LSL #1]
0042dc  f5a140aa          SUB      r0,r1,#0x5500
0042e0  3855              SUBS     r0,r0,#0x55
0042e2  d103              BNE      |L1.17132|
0042e4  48e8              LDR      r0,|L1.18056|
0042e6  f8306015          LDRH     r6,[r0,r5,LSL #1]
0042ea  e001              B        |L1.17136|
                  |L1.17132|
;;;7081   		else tempUS_=BAT_C_REAL[in];
0042ec  f83a6015          LDRH     r6,[r10,r5,LSL #1]
                  |L1.17136|
;;;7082   		
;;;7083   		b_zar=lc640_read_int(ADR_EE_BAT_ZAR_CNT[in]);
0042f0  f8390015          LDRH     r0,[r9,r5,LSL #1]
0042f4  f7fffffe          BL       lc640_read_int
0042f8  b280              UXTH     r0,r0
;;;7084   
;;;7085   		if(b_zar>tempUS_)
0042fa  42b0              CMP      r0,r6
0042fc  d905              BLS      |L1.17162|
;;;7086   			{
;;;7087   			lc640_write_int(ADR_EE_BAT_ZAR_CNT[in],tempUS_);
0042fe  f9390015          LDRSH    r0,[r9,r5,LSL #1]
004302  b231              SXTH     r1,r6
004304  f7fffffe          BL       lc640_write_int
;;;7088   			b_zar=tempUS_;
004308  4630              MOV      r0,r6
                  |L1.17162|
;;;7089   			}
;;;7090   		if(b_zar)
00430a  b158              CBZ      r0,|L1.17188|
;;;7091   			{
;;;7092   			bat[in]._zar_cnt+=AH_CONSTANT;
00430c  6961              LDR      r1,[r4,#0x14]
00430e  4441              ADD      r1,r1,r8
004310  6161              STR      r1,[r4,#0x14]
;;;7093   
;;;7094   			lc640_write_int(ADR_EE_BAT_ZAR_CNT[in],b_zar-1);
004312  f9392015          LDRSH    r2,[r9,r5,LSL #1]
004316  f1a00001          SUB      r0,r0,#1
00431a  b201              SXTH     r1,r0
00431c  4610              MOV      r0,r2
00431e  f7fffffe          BL       lc640_write_int
004322  e001              B        |L1.17192|
                  |L1.17188|
;;;7095   			}
;;;7096   		else 
;;;7097   			{
;;;7098   			bat[in]._zar_cnt=-AH_CONSTANT;
004324  48d9              LDR      r0,|L1.18060|
004326  6160              STR      r0,[r4,#0x14]
                  |L1.17192|
;;;7099   			}
;;;7100   
;;;7101   		}
;;;7102   
;;;7103   			
;;;7104   	tempUL=(unsigned long)lc640_read_int(ADR_EE_BAT_ZAR_CNT[in]);
004328  f8390015          LDRH     r0,[r9,r5,LSL #1]
00432c  f7fffffe          BL       lc640_read_int
004330  4601              MOV      r1,r0
;;;7105   	
;;;7106   	if(BAT_C_REAL[in]==0x5555) tempUL_=(unsigned long)BAT_C_NOM[in];
004332  f93a0015          LDRSH    r0,[r10,r5,LSL #1]
004336  f5a042aa          SUB      r2,r0,#0x5500
00433a  3a55              SUBS     r2,r2,#0x55
00433c  d102              BNE      |L1.17220|
00433e  48d2              LDR      r0,|L1.18056|
004340  f9300015          LDRSH    r0,[r0,r5,LSL #1]
                  |L1.17220|
;;;7107   	else tempUL_=(unsigned long)BAT_C_REAL[in];
;;;7108   		           	
;;;7109   	tempUL*=1000L;
004344  f44f727a          MOV      r2,#0x3e8
004348  fb01f102          MUL      r1,r1,r2
;;;7110   
;;;7111   
;;;7112   	if(tempUL_==0) tempUL=0;
00434c  b168              CBZ      r0,|L1.17258|
;;;7113   	else tempUL/=tempUL_;
00434e  fbb1f0f0          UDIV     r0,r1,r0
                  |L1.17234|
;;;7114   
;;;7115   	tempUL/=10L;
004352  f04f010a          MOV      r1,#0xa
004356  fbb0f0f1          UDIV     r0,r0,r1
;;;7116   
;;;7117   	bat[in]._zar=(unsigned short)tempUL;
00435a  8220              STRH     r0,[r4,#0x10]
;;;7118   
;;;7119   	if(BAT_TYPE==1)
00435c  48cc              LDR      r0,|L1.18064|
00435e  8800              LDRH     r0,[r0,#0]  ; BAT_TYPE
004360  2801              CMP      r0,#1
004362  e000              B        |L1.17254|
                  |L1.17252|
004364  e010              B        |L1.17288|
                  |L1.17254|
004366  d003              BEQ      |L1.17264|
004368  e008              B        |L1.17276|
                  |L1.17258|
00436a  f04f0000          MOV      r0,#0                 ;7112
00436e  e7f0              B        |L1.17234|
                  |L1.17264|
;;;7120   		{
;;;7121   		bat[in]._zar=lakb[in]._s_o_c;
004370  49c8              LDR      r1,|L1.18068|
004372  9802              LDR      r0,[sp,#8]
004374  eb010080          ADD      r0,r1,r0,LSL #2
004378  8a40              LDRH     r0,[r0,#0x12]
00437a  8220              STRH     r0,[r4,#0x10]
                  |L1.17276|
;;;7122   		}
;;;7123   	
;;;7124   	gran((signed short*)&bat[in]._zar,0,100);
00437c  f1040010          ADD      r0,r4,#0x10
004380  2264              MOVS     r2,#0x64
004382  2100              MOVS     r1,#0
004384  f7fffffe          BL       gran
                  |L1.17288|
;;;7125        }
;;;7126   
;;;7127   
;;;7128   //Подсчет тока разряда батареи      
;;;7129   if(bat[in]._wrk==1)
004388  7ba0              LDRB     r0,[r4,#0xe]
00438a  2801              CMP      r0,#1
00438c  d113              BNE      |L1.17334|
;;;7130   	{
;;;7131   	if(bat[in]._Iintegr<36000)
00438e  8ba0              LDRH     r0,[r4,#0x1c]
004390  4540              CMP      r0,r8
004392  d20f              BCS      |L1.17332|
;;;7132   		{          
;;;7133   		bat[in]._Iintegr+=abs(bat[in]._Ib);
004394  f9b40008          LDRSH    r0,[r4,#8]
004398  f7fffffe          BL       abs
00439c  8ba1              LDRH     r1,[r4,#0x1c]
00439e  4408              ADD      r0,r0,r1
0043a0  b280              UXTH     r0,r0
0043a2  83a0              STRH     r0,[r4,#0x1c]
;;;7134   		if(bat[in]._Iintegr>=36000)
0043a4  4540              CMP      r0,r8
0043a6  d306              BCC      |L1.17334|
;;;7135   			{
;;;7136   			bat[in]._Iintegr=0;		//Счетчик десятков милиамперсекунд
0043a8  83a7              STRH     r7,[r4,#0x1c]
;;;7137   			bat[in]._Iintegr_++;	//Счетчик сотен милиамперчасов
0043aa  8be0              LDRH     r0,[r4,#0x1e]
0043ac  f1000001          ADD      r0,r0,#1
0043b0  83e0              STRH     r0,[r4,#0x1e]
0043b2  e000              B        |L1.17334|
                  |L1.17332|
;;;7138   			}
;;;7139   		}
;;;7140   	else 
;;;7141   		{
;;;7142   		bat[in]._Iintegr=0;
0043b4  83a7              STRH     r7,[r4,#0x1c]
                  |L1.17334|
;;;7143   		}	
;;;7144   	} 
;;;7145   	    
;;;7146   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;7147   if((t_ext[0]>TBATSIGN)&&(!ND_EXT[0]))	
0043b6  f8df92e0          LDR      r9,|L1.18072|
0043ba  49b8              LDR      r1,|L1.18076|
0043bc  f8dfa2e0          LDR      r10,|L1.18080|
0043c0  f9b90000          LDRSH    r0,[r9,#0]  ; t_ext
0043c4  f9b11000          LDRSH    r1,[r1,#0]  ; TBATSIGN
0043c8  4288              CMP      r0,r1
0043ca  dd02              BLE      |L1.17362|
0043cc  f89a0000          LDRB     r0,[r10,#0]  ; ND_EXT
0043d0  b3e8              CBZ      r0,|L1.17486|
                  |L1.17362|
;;;7148   	{
;;;7149   	bat[in]._sign_temper_cnt++;
;;;7150   	}
;;;7151   else 
;;;7152   	{
;;;7153   	bat[in]._sign_temper_cnt--;
0043d2  f8b40040          LDRH     r0,[r4,#0x40]
0043d6  f1a00001          SUB      r0,r0,#1
0043da  f8a40040          STRH     r0,[r4,#0x40]
                  |L1.17374|
;;;7154   	}
;;;7155   #else
;;;7156   if((bat[in]._Tb>TBATSIGN)&&(!bat[in]._nd))	
;;;7157   	{
;;;7158   	bat[in]._sign_temper_cnt++;
;;;7159   	}
;;;7160   else 
;;;7161   	{
;;;7162   	bat[in]._sign_temper_cnt--;
;;;7163   	}
;;;7164   #endif
;;;7165   gran(&bat[in]._sign_temper_cnt,0,600);
0043de  f1040040          ADD      r0,r4,#0x40
0043e2  f44f7216          MOV      r2,#0x258
0043e6  2100              MOVS     r1,#0
0043e8  f7fffffe          BL       gran
;;;7166   if(bat[in]._sign_temper_cnt>=590)	bat[in]._temper_stat|=(1<<0);
0043ec  f9b40040          LDRSH    r0,[r4,#0x40]
0043f0  f240264e          MOV      r6,#0x24e
0043f4  42b0              CMP      r0,r6
0043f6  db05              BLT      |L1.17412|
0043f8  f894103f          LDRB     r1,[r4,#0x3f]
0043fc  f0410101          ORR      r1,r1,#1
004400  f884103f          STRB     r1,[r4,#0x3f]
                  |L1.17412|
;;;7167   if(bat[in]._sign_temper_cnt<=10)	bat[in]._temper_stat&=~(1<<0);
004404  280a              CMP      r0,#0xa
004406  dc05              BGT      |L1.17428|
004408  f894003f          LDRB     r0,[r4,#0x3f]
00440c  f0200001          BIC      r0,r0,#1
004410  f884003f          STRB     r0,[r4,#0x3f]
                  |L1.17428|
;;;7168   
;;;7169   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;7170   if((t_ext[0]>TBATMAX)&&(!ND_EXT[0]))	
004414  49a3              LDR      r1,|L1.18084|
004416  f9b90000          LDRSH    r0,[r9,#0]  ; t_ext
00441a  f9b11000          LDRSH    r1,[r1,#0]  ; TBATMAX
00441e  4288              CMP      r0,r1
004420  dd02              BLE      |L1.17448|
004422  f89a0000          LDRB     r0,[r10,#0]  ; ND_EXT
004426  b3b0              CBZ      r0,|L1.17558|
                  |L1.17448|
;;;7171   	{
;;;7172   	bat[in]._max_temper_cnt++;
;;;7173   	}
;;;7174   else 
;;;7175   	{
;;;7176   	bat[in]._max_temper_cnt--;
004428  f8b40042          LDRH     r0,[r4,#0x42]
00442c  f1a00001          SUB      r0,r0,#1
004430  f8a40042          STRH     r0,[r4,#0x42]
                  |L1.17460|
;;;7177   	}
;;;7178   #else
;;;7179   if((bat[in]._Tb>TBATMAX)&&(!bat[in]._nd))	
;;;7180   	{
;;;7181   	bat[in]._max_temper_cnt++;
;;;7182   	}
;;;7183   else 
;;;7184   	{
;;;7185   	bat[in]._max_temper_cnt--;
;;;7186   	}
;;;7187   #endif
;;;7188   
;;;7189   gran(&bat[in]._max_temper_cnt,0,600);
004434  f44f7916          MOV      r9,#0x258
004438  f1040042          ADD      r0,r4,#0x42
00443c  464a              MOV      r2,r9
00443e  2100              MOVS     r1,#0
004440  f7fffffe          BL       gran
;;;7190   if(bat[in]._max_temper_cnt>=590)	bat[in]._temper_stat|=(1<<1);
004444  f9b40042          LDRSH    r0,[r4,#0x42]
004448  42b0              CMP      r0,r6
00444a  db07              BLT      |L1.17500|
00444c  e000              B        |L1.17488|
                  |L1.17486|
00444e  e023              B        |L1.17560|
                  |L1.17488|
004450  f894103f          LDRB     r1,[r4,#0x3f]
004454  f0410102          ORR      r1,r1,#2
004458  f884103f          STRB     r1,[r4,#0x3f]
                  |L1.17500|
;;;7191   if(bat[in]._max_temper_cnt<=10)	bat[in]._temper_stat&=~(1<<1);
00445c  280a              CMP      r0,#0xa
00445e  dc05              BGT      |L1.17516|
004460  f894003f          LDRB     r0,[r4,#0x3f]
004464  f0200002          BIC      r0,r0,#2
004468  f884003f          STRB     r0,[r4,#0x3f]
                  |L1.17516|
;;;7192   
;;;7193   
;;;7194   
;;;7195   //Подсчет наработки батареи
;;;7196   if(bat[in]._resurs_cnt<36000)
00446c  6c60              LDR      r0,[r4,#0x44]
00446e  4540              CMP      r0,r8
004470  da20              BGE      |L1.17588|
;;;7197   	{               
;;;7198   	bat[in]._resurs_cnt++;
004472  f1000001          ADD      r0,r0,#1
004476  6460              STR      r0,[r4,#0x44]
;;;7199   	if(bat[in]._resurs_cnt>=36000)
004478  4540              CMP      r0,r8
00447a  db1c              BLT      |L1.17590|
;;;7200   		{
;;;7201   		bat[in]._resurs_cnt=0;
00447c  6467              STR      r7,[r4,#0x44]
;;;7202   		lc640_write_int(ADR_EE_BAT_RESURS[in],lc640_read_int(ADR_EE_BAT_RESURS[in])+1);
00447e  4e8a              LDR      r6,|L1.18088|
004480  f8360015          LDRH     r0,[r6,r5,LSL #1]
004484  f7fffffe          BL       lc640_read_int
004488  1c40              ADDS     r0,r0,#1
00448a  b201              SXTH     r1,r0
00448c  f9360015          LDRSH    r0,[r6,r5,LSL #1]
004490  f7fffffe          BL       lc640_write_int
004494  e00f              B        |L1.17590|
                  |L1.17558|
004496  e006              B        |L1.17574|
                  |L1.17560|
004498  f8b40040          LDRH     r0,[r4,#0x40]         ;7149
00449c  f1000001          ADD      r0,r0,#1              ;7149
0044a0  f8a40040          STRH     r0,[r4,#0x40]         ;7149
0044a4  e79b              B        |L1.17374|
                  |L1.17574|
0044a6  f8b40042          LDRH     r0,[r4,#0x42]         ;7172
0044aa  f1000001          ADD      r0,r0,#1              ;7172
0044ae  f8a40042          STRH     r0,[r4,#0x42]         ;7172
0044b2  e7bf              B        |L1.17460|
                  |L1.17588|
;;;7203   		}
;;;7204   	}
;;;7205   else bat[in]._resurs_cnt=0;
0044b4  6467              STR      r7,[r4,#0x44]
                  |L1.17590|
;;;7206   
;;;7207   
;;;7208   #ifndef UKU_220_V2
;;;7209   #ifndef UKU_GLONASS
;;;7210   #ifndef UKU_6U
;;;7211   //#ifndef UKU_220
;;;7212   if(UBM_AV)
0044b6  4e7d              LDR      r6,|L1.18092|
0044b8  8830              LDRH     r0,[r6,#0]  ; UBM_AV
0044ba  2800              CMP      r0,#0
0044bc  d05e              BEQ      |L1.17788|
;;;7213        {
;;;7214        signed short temp_SS;
;;;7215   #ifdef UKU_220
;;;7216   temp_SS=bat[in]._Ub/2;
;;;7217   #else
;;;7218        if(U0B<600)
0044be  487c              LDR      r0,|L1.18096|
0044c0  f9b00000          LDRSH    r0,[r0,#0]  ; U0B
0044c4  4548              CMP      r0,r9
0044c6  da08              BGE      |L1.17626|
;;;7219             {
;;;7220             temp_SS=bat[in]._Ub/4;
0044c8  f9b40002          LDRSH    r0,[r4,#2]
0044cc  ea4f71e0          ASR      r1,r0,#31
0044d0  eb007091          ADD      r0,r0,r1,LSR #30
0044d4  ea4f00a0          ASR      r0,r0,#2
0044d8  e006              B        |L1.17640|
                  |L1.17626|
;;;7221             }
;;;7222        else temp_SS=bat[in]._Ub/5;
0044da  f9b40002          LDRSH    r0,[r4,#2]
0044de  f04f0105          MOV      r1,#5
0044e2  fb90f0f1          SDIV     r0,r0,r1
0044e6  b200              SXTH     r0,r0
                  |L1.17640|
;;;7223   	
;;;7224   	temp_SS+=temp_SS;     
0044e8  ea4f0040          LSL      r0,r0,#1
;;;7225   #endif
;;;7226        temp_SS-=(bat[in]._Ubm);
0044ec  88a1              LDRH     r1,[r4,#4]
0044ee  eba00001          SUB      r0,r0,r1
0044f2  b200              SXTH     r0,r0
;;;7227   
;;;7228        temp_SS=abs(temp_SS);
0044f4  f7fffffe          BL       abs
;;;7229   
;;;7230        temp_SS*=10;
0044f8  eb000080          ADD      r0,r0,r0,LSL #2
0044fc  ea4f0040          LSL      r0,r0,#1
004500  b200              SXTH     r0,r0
;;;7231   
;;;7232        temp_SS/=12;
004502  f04f010c          MOV      r1,#0xc
004506  fb90f0f1          SDIV     r0,r0,r1
00450a  b200              SXTH     r0,r0
;;;7233   
;;;7234        bat[in]._dUbm=temp_SS;
00450c  80e0              STRH     r0,[r4,#6]
;;;7235   
;;;7236   
;;;7237        if(	(bat[in]._dUbm>UBM_AV) &&
00450e  f9b61000          LDRSH    r1,[r6,#0]  ; UBM_AV
004512  4288              CMP      r0,r1
004514  dd34              BLE      |L1.17792|
;;;7238   		(abs(bat[in]._Ib)<(5*IKB)) &&
004516  f9b40008          LDRSH    r0,[r4,#8]
00451a  f7fffffe          BL       abs
00451e  4601              MOV      r1,r0
004520  4864              LDR      r0,|L1.18100|
004522  f9b00000          LDRSH    r0,[r0,#0]  ; IKB
004526  eb000080          ADD      r0,r0,r0,LSL #2
00452a  4281              CMP      r1,r0
00452c  da28              BGE      |L1.17792|
;;;7239   		(bat[in]._Ub>((short)(((long)USIGN*115)/100))) &&
00452e  4862              LDR      r0,|L1.18104|
004530  2173              MOVS     r1,#0x73
004532  f9b00000          LDRSH    r0,[r0,#0]  ; USIGN
004536  4348              MULS     r0,r1,r0
004538  fb90f0fb          SDIV     r0,r0,r11
00453c  f9b41002          LDRSH    r1,[r4,#2]
004540  b200              SXTH     r0,r0
004542  4288              CMP      r0,r1
004544  da1c              BGE      |L1.17792|
;;;7240   		(!(bat[in]._av & 2))  )
004546  f894003d          LDRB     r0,[r4,#0x3d]
00454a  0780              LSLS     r0,r0,#30
00454c  d418              BMI      |L1.17792|
;;;7241   		{
;;;7242   		bat[in]._cnt_as++;
00454e  f8b40048          LDRH     r0,[r4,#0x48]
004552  f1000001          ADD      r0,r0,#1
004556  b200              SXTH     r0,r0
004558  f8a40048          STRH     r0,[r4,#0x48]
;;;7243   		if(bat[in]._cnt_as==3000)
00455c  f5a06130          SUB      r1,r0,#0xb00
004560  39b8              SUBS     r1,r1,#0xb8
004562  d103              BNE      |L1.17772|
;;;7244   			{
;;;7245   			avar_bat_as_hndl(in,1);
004564  2101              MOVS     r1,#1
004566  4628              MOV      r0,r5
004568  f7fffffe          BL       avar_bat_as_hndl
                  |L1.17772|
;;;7246   			}
;;;7247   		if(bat[in]._cnt_as>=3005) bat[in]._cnt_as=3005;
00456c  f9b41048          LDRSH    r1,[r4,#0x48]
004570  f64030bd          MOV      r0,#0xbbd
004574  4281              CMP      r1,r0
004576  db01              BLT      |L1.17788|
004578  f8a40048          STRH     r0,[r4,#0x48]
                  |L1.17788|
;;;7248   		}
;;;7249   	else 
;;;7250   		{
;;;7251   		bat[in]._cnt_as=0;
;;;7252   		}
;;;7253        
;;;7254        }
;;;7255   #endif 
;;;7256   #endif 
;;;7257   #endif
;;;7258   
;;;7259   }
00457c  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.17792|
004580  f8a47048          STRH     r7,[r4,#0x48]         ;7251
004584  e7fa              B        |L1.17788|
;;;7260   
                          ENDP

                  bat_hndl_zvu PROC
;;;7262   //-----------------------------------------------
;;;7263   void bat_hndl_zvu(void)
004586  e92d4ff0          PUSH     {r4-r11,lr}
;;;7264   {
00458a  b087              SUB      sp,sp,#0x1c
;;;7265   char i;
;;;7266   short bat_hndl_i_temp;
;;;7267   const long bat_hndl_t_razr_const[7]={600L,1800L,3600L,10800L,18000L,36000L,72000L};
00458c  f04f021c          MOV      r2,#0x1c
004590  494a              LDR      r1,|L1.18108|
004592  4668              MOV      r0,sp
004594  f7fffffe          BL       __aeabi_memcpy4
;;;7268   
;;;7269   //Ib_ips_termokompensat=-17000;
;;;7270    
;;;7271   if(bat_hndl_zvu_init==0)
004598  4d49              LDR      r5,|L1.18112|
;;;7272   	{
;;;7273   	//Инициализация при включении системы
;;;7274   	bat_hndl_zvu_Q=(long)lc640_read_int(EE_BAT1_ZAR_CNT);
;;;7275   	if((bat_hndl_zvu_Q>100L)||(bat_hndl_zvu_Q<0L)) bat_hndl_zvu_Q=100L;
;;;7276   	bat_hndl_zvu_Q*=10000L;
;;;7277   
;;;7278   	bat_hndl_zvu_init=1;
;;;7279   	}
;;;7280   else 
;;;7281   	{
;;;7282   	if(Ib_ips_termokompensat<-IKB)
;;;7283   		{	
;;;7284   		bat_hndl_i=-Ib_ips_termokompensat;
;;;7285   		I_from_t_table[0]=BAT_C_POINT_1_6*6; //Ток при котором батарея разрядится за 1/6 часа (0.1А)
;;;7286   		I_from_t_table[1]=BAT_C_POINT_1_2*2; //Ток при котором батарея разрядится за 1/2 часа (0.1А)
;;;7287   		I_from_t_table[2]=BAT_C_POINT_1; //Ток при котором батарея разрядится за 1 час (0.1А)
;;;7288   		I_from_t_table[3]=BAT_C_POINT_3/3; //Ток при котором батарея разрядится за 3 часа (0.1А)
;;;7289   		I_from_t_table[4]=BAT_C_POINT_5/5; //Ток при котором батарея разрядится за 5 часов (0.1А)
;;;7290   		I_from_t_table[5]=BAT_C_POINT_10/10; //Ток при котором батарея разрядится за 10 часов (0.1А)
;;;7291   		I_from_t_table[6]=BAT_C_POINT_20/20; //Ток при котором батарея разрядится за 20 часов (0.1А)
;;;7292   		
;;;7293   		bat_hndl_i_temp=bat_hndl_i/10;
;;;7294   		for(i=0;i<7;i++)
;;;7295   			{
;;;7296   			if(bat_hndl_i_temp>=I_from_t_table[i])
;;;7297   				{
;;;7298   				break;
;;;7299   				}
;;;7300   			}
;;;7301   		 if(i==0) bat_hndl_t_razr=bat_hndl_t_razr_const[0];
;;;7302   		 else if((i>=1)&&(i<7))
;;;7303   		 	{
;;;7304   			short i1,i2;
;;;7305   			i1=I_from_t_table[i-1]-bat_hndl_i_temp;
;;;7306   			i2=I_from_t_table[i-1]-I_from_t_table[i];
;;;7307   			bat_hndl_t_razr=bat_hndl_t_razr_const[i]-bat_hndl_t_razr_const[i-1];
;;;7308   			bat_hndl_t_razr*=(long)i1;
;;;7309   			bat_hndl_t_razr/=(long)i2;
;;;7310   			bat_hndl_t_razr+=bat_hndl_t_razr_const[i-1];
;;;7311   			}
;;;7312   		else if(i>=7)
;;;7313   			{
;;;7314   			bat_hndl_t_razr=bat_hndl_t_razr_const[6];
;;;7315   			}
;;;7316   		bat_hndl_proc_razr=1000000L/bat_hndl_t_razr;
00459a  4e4a              LDR      r6,|L1.18116|
00459c  f8df8128          LDR      r8,|L1.18120|
0045a0  7868              LDRB     r0,[r5,#1]            ;7271  ; bat_hndl_zvu_init
0045a2  f8df9110          LDR      r9,|L1.18100|
0045a6  270a              MOVS     r7,#0xa               ;7290
0045a8  f1050480          ADD      r4,r5,#0x80           ;7274
0045ac  2800              CMP      r0,#0                 ;7271
0045ae  d063              BEQ      |L1.18040|
0045b0  4946              LDR      r1,|L1.18124|
0045b2  f9b92000          LDRSH    r2,[r9,#0]            ;7282  ; IKB
0045b6  f9b80000          LDRSH    r0,[r8,#0]            ;7282  ; Ib_ips_termokompensat
0045ba  f9b13000          LDRSH    r3,[r1,#0]            ;7291
0045be  4621              MOV      r1,r4                 ;7274
0045c0  f1c20c00          RSB      r12,r2,#0             ;7282
0045c4  6c89              LDR      r1,[r1,#0x48]         ;7274
0045c6  4560              CMP      r0,r12                ;7282
0045c8  da57              BGE      |L1.18042|
0045ca  f1c00000          RSB      r0,r0,#0              ;7284
0045ce  b200              SXTH     r0,r0                 ;7284
0045d0  f8a5007c          STRH     r0,[r5,#0x7c]         ;7284
0045d4  4a3e              LDR      r2,|L1.18128|
0045d6  8812              LDRH     r2,[r2,#0]            ;7285  ; BAT_C_POINT_1_6
0045d8  eb020242          ADD      r2,r2,r2,LSL #1       ;7285
0045dc  ea4f0c42          LSL      r12,r2,#1             ;7285
0045e0  4a3c              LDR      r2,|L1.18132|
0045e2  f8a2c000          STRH     r12,[r2,#0]           ;7285
0045e6  f8dfc0f0          LDR      r12,|L1.18136|
0045ea  f8bcc000          LDRH     r12,[r12,#0]          ;7286  ; BAT_C_POINT_1_2
0045ee  ea4f0c4c          LSL      r12,r12,#1            ;7286
0045f2  f8a2c002          STRH     r12,[r2,#2]           ;7286
0045f6  f8dfc0e4          LDR      r12,|L1.18140|
0045fa  f8bcc000          LDRH     r12,[r12,#0]          ;7287  ; BAT_C_POINT_1
0045fe  f8a2c004          STRH     r12,[r2,#4]           ;7287
004602  f8dfc0dc          LDR      r12,|L1.18144|
004606  f04f0a03          MOV      r10,#3                ;7288
00460a  f9bcc000          LDRSH    r12,[r12,#0]          ;7288  ; BAT_C_POINT_3
00460e  fb9cfcfa          SDIV     r12,r12,r10           ;7288
004612  f8a2c006          STRH     r12,[r2,#6]           ;7288
004616  f8dfc0cc          LDR      r12,|L1.18148|
00461a  f04f0a05          MOV      r10,#5                ;7289
00461e  f9bcc000          LDRSH    r12,[r12,#0]          ;7289  ; BAT_C_POINT_5
004622  fb9cfcfa          SDIV     r12,r12,r10           ;7289
004626  f8a2c008          STRH     r12,[r2,#8]           ;7289
00462a  f8dfc0bc          LDR      r12,|L1.18152|
00462e  f9bcc000          LDRSH    r12,[r12,#0]          ;7290  ; BAT_C_POINT_10
004632  fb9cfcf7          SDIV     r12,r12,r7            ;7290
004636  f8a2c00a          STRH     r12,[r2,#0xa]         ;7290
00463a  f04f0c14          MOV      r12,#0x14             ;7291
00463e  fb93f3fc          SDIV     r3,r3,r12             ;7291
004642  8193              STRH     r3,[r2,#0xc]          ;7291
004644  fb90f0f7          SDIV     r0,r0,r7              ;7293
004648  b203              SXTH     r3,r0                 ;7293
00464a  f04f0000          MOV      r0,#0                 ;7294
                  |L1.17998|
00464e  f932c010          LDRSH    r12,[r2,r0,LSL #1]    ;7296
004652  459c              CMP      r12,r3                ;7296
004654  dd04              BLE      |L1.18016|
004656  f1000001          ADD      r0,r0,#1              ;7294
00465a  b2c0              UXTB     r0,r0                 ;7294
00465c  2807              CMP      r0,#7                 ;7294
00465e  d3f6              BCC      |L1.17998|
                  |L1.18016|
004660  b160              CBZ      r0,|L1.18044|
004662  f1a00c01          SUB      r12,r0,#1             ;7302
004666  f1bc0f06          CMP      r12,#6                ;7302
00466a  d268              BCS      |L1.18238|
00466c  f832a01c          LDRH     r10,[r2,r12,LSL #1]   ;7305
004670  ebaa0303          SUB      r3,r10,r3             ;7305
004674  b21b              SXTH     r3,r3                 ;7305
004676  e039              B        |L1.18156|
                  |L1.18040|
004678  e04a              B        |L1.18192|
                  |L1.18042|
00467a  e07f              B        |L1.18300|
                  |L1.18044|
00467c  e05c              B        |L1.18232|
00467e  0000              DCW      0x0000
                  |L1.18048|
                          DCD      ADR_EE_BAT_ZAR_CNT
                  |L1.18052|
                          DCD      BAT_C_REAL
                  |L1.18056|
                          DCD      BAT_C_NOM
                  |L1.18060|
                          DCD      0xffff7360
                  |L1.18064|
                          DCD      BAT_TYPE
                  |L1.18068|
                          DCD      lakb
                  |L1.18072|
                          DCD      t_ext
                  |L1.18076|
                          DCD      TBATSIGN
                  |L1.18080|
                          DCD      ND_EXT
                  |L1.18084|
                          DCD      TBATMAX
                  |L1.18088|
                          DCD      ADR_EE_BAT_RESURS
                  |L1.18092|
                          DCD      UBM_AV
                  |L1.18096|
                          DCD      U0B
                  |L1.18100|
                          DCD      IKB
                  |L1.18104|
                          DCD      USIGN
                  |L1.18108|
                          DCD      ||area_number.19||+0x20
                  |L1.18112|
                          DCD      ||area_number.25||
                  |L1.18116|
                          DCD      0x000f4240
                  |L1.18120|
                          DCD      Ib_ips_termokompensat
                  |L1.18124|
                          DCD      BAT_C_POINT_20
                  |L1.18128|
                          DCD      BAT_C_POINT_1_6
                  |L1.18132|
                          DCD      ||.bss||+0x44c
                  |L1.18136|
                          DCD      BAT_C_POINT_1_2
                  |L1.18140|
                          DCD      BAT_C_POINT_1
                  |L1.18144|
                          DCD      BAT_C_POINT_3
                  |L1.18148|
                          DCD      BAT_C_POINT_5
                  |L1.18152|
                          DCD      BAT_C_POINT_10
                  |L1.18156|
0046ec  f8322010          LDRH     r2,[r2,r0,LSL #1]     ;7306
0046f0  ebaa0202          SUB      r2,r10,r2             ;7306
0046f4  b212              SXTH     r2,r2                 ;7306
0046f6  f85da020          LDR      r10,[sp,r0,LSL #2]    ;7307
0046fa  f85d002c          LDR      r0,[sp,r12,LSL #2]    ;7307
0046fe  ebaa0c00          SUB      r12,r10,r0            ;7307
004702  fb0cfc03          MUL      r12,r12,r3            ;7308
004706  fb9cf2f2          SDIV     r2,r12,r2             ;7309
00470a  4410              ADD      r0,r0,r2              ;7310
00470c  6420              STR      r0,[r4,#0x40]         ;7310  ; bat_hndl_t_razr
00470e  e01a              B        |L1.18246|
                  |L1.18192|
004710  f44f70ef          MOV      r0,#0x1de             ;7274
004714  f7fffffe          BL       lc640_read_int
004718  64a0              STR      r0,[r4,#0x48]         ;7274  ; bat_hndl_zvu_Q
00471a  2865              CMP      r0,#0x65              ;7275
00471c  d302              BCC      |L1.18212|
00471e  f04f0064          MOV      r0,#0x64              ;7275
004722  64a0              STR      r0,[r4,#0x48]         ;7275  ; bat_hndl_zvu_Q
                  |L1.18212|
004724  6ca0              LDR      r0,[r4,#0x48]         ;7276  ; bat_hndl_zvu_Q
004726  f2427110          MOV      r1,#0x2710            ;7276
00472a  fb00f001          MUL      r0,r0,r1              ;7276
00472e  64a0              STR      r0,[r4,#0x48]         ;7276  ; bat_hndl_zvu_Q
004730  f04f0001          MOV      r0,#1                 ;7278
004734  7068              STRB     r0,[r5,#1]            ;7278
004736  e04d              B        |L1.18388|
                  |L1.18232|
004738  9800              LDR      r0,[sp,#0]            ;7301
00473a  6420              STR      r0,[r4,#0x40]         ;7301  ; bat_hndl_t_razr
00473c  e003              B        |L1.18246|
                  |L1.18238|
00473e  2807              CMP      r0,#7                 ;7312
004740  d301              BCC      |L1.18246|
004742  9806              LDR      r0,[sp,#0x18]         ;7314
004744  6420              STR      r0,[r4,#0x40]         ;7314  ; bat_hndl_t_razr
                  |L1.18246|
004746  6c20              LDR      r0,[r4,#0x40]  ; bat_hndl_t_razr
004748  fb96f0f0          SDIV     r0,r6,r0
00474c  64e0              STR      r0,[r4,#0x4c]  ; bat_hndl_proc_razr
;;;7317   
;;;7318   		if(bat_hndl_zvu_Q)bat_hndl_zvu_Q-=bat_hndl_proc_razr;
00474e  b111              CBZ      r1,|L1.18262|
004750  eba10000          SUB      r0,r1,r0
004754  64a0              STR      r0,[r4,#0x48]  ; bat_hndl_zvu_Q
                  |L1.18262|
;;;7319   		else bat_hndl_zvu_Q=0L;
;;;7320   
;;;7321   		bat_hndl_t_razr_hour=(short)(bat_hndl_remain_time/3600L);
004756  6d21              LDR      r1,[r4,#0x50]  ; bat_hndl_remain_time
004758  f44f6061          MOV      r0,#0xe10
00475c  fb91f0f0          SDIV     r0,r1,r0
004760  f8a5007e          STRH     r0,[r5,#0x7e]
;;;7322   		bat_hndl_t_razr_min=(short)(bat_hndl_remain_time/60L);
004764  f04f003c          MOV      r0,#0x3c
004768  fb91f1f0          SDIV     r1,r1,r0
00476c  b209              SXTH     r1,r1
00476e  8021              STRH     r1,[r4,#0]
;;;7323   		bat_hndl_t_razr_mininhour=bat_hndl_t_razr_min%60L;
004770  fb91f2f0          SDIV     r2,r1,r0
004774  fb001012          MLS      r0,r0,r2,r1
004778  8060              STRH     r0,[r4,#2]
00477a  e013              B        |L1.18340|
                  |L1.18300|
;;;7324   
;;;7325   		}
;;;7326   	else if(Ib_ips_termokompensat>IKB)
00477c  4290              CMP      r0,r2
00477e  dd11              BLE      |L1.18340|
;;;7327   		{
;;;7328   		bat_hndl_i=Ib_ips_termokompensat;
004780  f8a5007c          STRH     r0,[r5,#0x7c]
;;;7329   		bat_hndl_t_razr=BAT_C_POINT_20*36000L/bat_hndl_i;
004784  f64842a0          MOV      r2,#0x8ca0
004788  fb03f302          MUL      r3,r3,r2
00478c  fb93f0f0          SDIV     r0,r3,r0
004790  6420              STR      r0,[r4,#0x40]  ; bat_hndl_t_razr
;;;7330   		bat_hndl_proc_razr=1000000L/bat_hndl_t_razr;
004792  fb96f0f0          SDIV     r0,r6,r0
004796  64e0              STR      r0,[r4,#0x4c]  ; bat_hndl_proc_razr
;;;7331   		if(bat_hndl_zvu_Q<1000000L)bat_hndl_zvu_Q+=bat_hndl_proc_razr;
004798  42b1              CMP      r1,r6
00479a  da02              BGE      |L1.18338|
00479c  4408              ADD      r0,r0,r1
00479e  64a0              STR      r0,[r4,#0x48]  ; bat_hndl_zvu_Q
0047a0  e000              B        |L1.18340|
                  |L1.18338|
;;;7332   		else bat_hndl_zvu_Q=1000000L; 
0047a2  64a6              STR      r6,[r4,#0x48]  ; bat_hndl_zvu_Q
                  |L1.18340|
;;;7333   		}
;;;7334   	if((bat_hndl_zvu_Q/10000L)!=lc640_read_int(EE_BAT1_ZAR_CNT)) lc640_write_int(EE_BAT1_ZAR_CNT,bat_hndl_zvu_Q/10000L);
0047a4  6ca0              LDR      r0,[r4,#0x48]  ; bat_hndl_zvu_Q
0047a6  f2427b10          MOV      r11,#0x2710
0047aa  fb90fafb          SDIV     r10,r0,r11
0047ae  f44f70ef          MOV      r0,#0x1de
0047b2  f7fffffe          BL       lc640_read_int
0047b6  4582              CMP      r10,r0
0047b8  d007              BEQ      |L1.18378|
0047ba  6ca0              LDR      r0,[r4,#0x48]  ; bat_hndl_zvu_Q
0047bc  fb90f0fb          SDIV     r0,r0,r11
0047c0  b201              SXTH     r1,r0
0047c2  f44f70ef          MOV      r0,#0x1de
0047c6  f7fffffe          BL       lc640_write_int
                  |L1.18378|
;;;7335   	bat_hndl_remain_time=bat_hndl_zvu_Q/bat_hndl_proc_razr;
0047ca  e9d40112          LDRD     r0,r1,[r4,#0x48]
0047ce  fb90f0f1          SDIV     r0,r0,r1
0047d2  6520              STR      r0,[r4,#0x50]  ; bat_hndl_remain_time
                  |L1.18388|
;;;7336   	}
;;;7337   
;;;7338   
;;;7339   
;;;7340   if((Ib_ips_termokompensat/10<(2*IKB))&&(Ib_ips_termokompensat/10>(-2*IKB))&&(!(bat[0]._av&0x01))&& (out_U<=u_necc_up) && (out_U>u_necc_dn) && (main_kb_cnt>=10) && (main_kb_cnt<=200) /*(main_kb_cnt==((TBAT*60)-10))*//*&& ((TVENTMAX!=0))*/ )
0047d4  f9b80000          LDRSH    r0,[r8,#0]  ; Ib_ips_termokompensat
0047d8  f9b91000          LDRSH    r1,[r9,#0]  ; IKB
0047dc  fb90f0f7          SDIV     r0,r0,r7
0047e0  ebb00f41          CMP      r0,r1,LSL #1
0047e4  da2f              BGE      |L1.18502|
0047e6  4249              RSBS     r1,r1,#0
0047e8  ebb00f41          CMP      r0,r1,LSL #1
0047ec  dd2b              BLE      |L1.18502|
0047ee  48ff              LDR      r0,|L1.19436|
0047f0  f890003d          LDRB     r0,[r0,#0x3d]  ; bat
0047f4  07c0              LSLS     r0,r0,#31
0047f6  d126              BNE      |L1.18502|
0047f8  48fd              LDR      r0,|L1.19440|
0047fa  49fe              LDR      r1,|L1.19444|
0047fc  f9b00000          LDRSH    r0,[r0,#0]  ; out_U
004800  f9b11000          LDRSH    r1,[r1,#0]  ; u_necc_up
004804  4288              CMP      r0,r1
004806  dc1e              BGT      |L1.18502|
004808  49fb              LDR      r1,|L1.19448|
00480a  f9b11000          LDRSH    r1,[r1,#0]  ; u_necc_dn
00480e  4288              CMP      r0,r1
004810  dd19              BLE      |L1.18502|
004812  f9b5004a          LDRSH    r0,[r5,#0x4a]  ; main_kb_cnt
004816  280a              CMP      r0,#0xa
004818  db15              BLT      |L1.18502|
00481a  28c8              CMP      r0,#0xc8
00481c  dc13              BGT      |L1.18502|
;;;7341   	{
;;;7342   	if(bat_hndl_zvu_Q_cnt<60)
00481e  f8950029          LDRB     r0,[r5,#0x29]  ; bat_hndl_zvu_Q_cnt
004822  283c              CMP      r0,#0x3c
004824  d20c              BCS      |L1.18496|
;;;7343   		{
;;;7344   		bat_hndl_zvu_Q_cnt++;
004826  f1000001          ADD      r0,r0,#1
00482a  b2c0              UXTB     r0,r0
00482c  f8850029          STRB     r0,[r5,#0x29]
;;;7345   		if(bat_hndl_zvu_Q_cnt>=60)
004830  283c              CMP      r0,#0x3c
004832  d305              BCC      |L1.18496|
;;;7346   			{
;;;7347   			lc640_write_int(EE_BAT1_ZAR_CNT,100);
004834  2164              MOVS     r1,#0x64
004836  f44f70ef          MOV      r0,#0x1de
00483a  f7fffffe          BL       lc640_write_int
;;;7348   			bat_hndl_zvu_Q=1000000L;
00483e  64a6              STR      r6,[r4,#0x48]  ; bat_hndl_zvu_Q
                  |L1.18496|
;;;7349   
;;;7350   
;;;7351   			}
;;;7352   		}
;;;7353   	}
;;;7354   else 
;;;7355   	{
;;;7356   	bat_hndl_zvu_Q_cnt=0;
;;;7357   	}
;;;7358   
;;;7359   
;;;7360   
;;;7361   };
004840  b007              ADD      sp,sp,#0x1c
004842  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.18502|
004846  f04f0000          MOV      r0,#0                 ;7356
00484a  f8850029          STRB     r0,[r5,#0x29]         ;7356
00484e  e7f7              B        |L1.18496|
;;;7362   #endif
                          ENDP

                  u_avt_set_hndl PROC
;;;7366   //Установка напряжения автономной работы в полуавтоматическом режиме
;;;7367   void u_avt_set_hndl(void)
004850  e92d5fff          PUSH     {r0-r12,lr}
;;;7368   {
;;;7369   if(uavt_set_stat==uassSTEP1)
004854  4de9              LDR      r5,|L1.19452|
;;;7370   	{
;;;7371   	char i,find_succes;
;;;7372   
;;;7373   	//u_max_temp=U_AVT+10;//(short)((((long)U_AVT)*101U)/100U);
;;;7374   	//u_min_temp=U_AVT-10;//(short)((((long)U_AVT)*99U)/100U);
;;;7375   	if(uavt_set_stat_old!=uavt_set_stat)
;;;7376   		{
;;;7377   		uavt_set_error_cnt=60;
004856  4eea              LDR      r6,|L1.19456|
004858  f8df83a8          LDR      r8,|L1.19460|
00485c  7828              LDRB     r0,[r5,#0]            ;7369  ; uavt_set_stat
;;;7378   		}
;;;7379   	//mess_send(MESS2UNECC_HNDL,PARAM_UNECC_SET,U_AVT,10);
;;;7380   	mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_FAST_REG,0,10);
;;;7381   	find_succes=0;
;;;7382   /*	for(i=0;i<NUMIST;i++)
;;;7383   		{
;;;7384   		if((bps[i]._Uii<u_max_temp)&&(bps[i]._Uii>u_min_temp))continue;
;;;7385   		else
;;;7386   			{
;;;7387   			find_succes=0;
;;;7388   			break;
;;;7389   			}
;;;7390   		}*/
;;;7391   	if((bps_U>=U_AVT-1)&&(bps_U<=U_AVT+1))find_succes=1;
00485e  f8dfa3a8          LDR      r10,|L1.19464|
004862  2400              MOVS     r4,#0                 ;7380
;;;7392   
;;;7393   	if(find_succes==1)
;;;7394   		{
;;;7395   		uavt_set_stat=uassSTEP2;
004864  f04f0902          MOV      r9,#2
;;;7396   		}
;;;7397   	if(uavt_set_error_cnt)
;;;7398   		{
;;;7399   		uavt_set_error_cnt--;
;;;7400   		if(!uavt_set_error_cnt)
;;;7401   			{
;;;7402   			uavt_set_stat=uassOFF;
;;;7403   			uavt_set_result_stat=uasrsERR;
;;;7404   			avt_error_bps=100;
004868  f04f0b64          MOV      r11,#0x64
00486c  2801              CMP      r0,#1                 ;7369
00486e  d12e              BNE      |L1.18638|
004870  f8980000          LDRB     r0,[r8,#0]            ;7375  ; uavt_set_stat_old
004874  2801              CMP      r0,#1                 ;7375
004876  d002              BEQ      |L1.18558|
004878  f04f003c          MOV      r0,#0x3c              ;7377
00487c  7030              STRB     r0,[r6,#0]            ;7377
                  |L1.18558|
00487e  230a              MOVS     r3,#0xa               ;7380
004880  2200              MOVS     r2,#0                 ;7380
004882  21e6              MOVS     r1,#0xe6              ;7380
004884  20e1              MOVS     r0,#0xe1              ;7380
004886  f7fffffe          BL       mess_send
00488a  f04f0000          MOV      r0,#0                 ;7381
00488e  49df              LDR      r1,|L1.19468|
004890  f9b12000          LDRSH    r2,[r1,#0]            ;7391  ; bps_U
004894  f9ba1000          LDRSH    r1,[r10,#0]           ;7391  ; U_AVT
004898  f1a10301          SUB      r3,r1,#1              ;7391
00489c  429a              CMP      r2,r3                 ;7391
00489e  db04              BLT      |L1.18602|
0048a0  1c49              ADDS     r1,r1,#1              ;7391
0048a2  428a              CMP      r2,r1                 ;7391
0048a4  dc01              BGT      |L1.18602|
0048a6  f04f0001          MOV      r0,#1                 ;7391
                  |L1.18602|
0048aa  2801              CMP      r0,#1                 ;7393
0048ac  d101              BNE      |L1.18610|
0048ae  f8859000          STRB     r9,[r5,#0]            ;7395
                  |L1.18610|
0048b2  7830              LDRB     r0,[r6,#0]            ;7397  ; uavt_set_error_cnt
0048b4  b158              CBZ      r0,|L1.18638|
0048b6  f1a00001          SUB      r0,r0,#1              ;7399
0048ba  b2c0              UXTB     r0,r0                 ;7399
0048bc  7030              STRB     r0,[r6,#0]            ;7399
0048be  b930              CBNZ     r0,|L1.18638|
0048c0  702c              STRB     r4,[r5,#0]            ;7402
0048c2  48d3              LDR      r0,|L1.19472|
0048c4  f8809000          STRB     r9,[r0,#0]            ;7403
0048c8  48d2              LDR      r0,|L1.19476|
0048ca  f880b000          STRB     r11,[r0,#0]
                  |L1.18638|
;;;7405   			}
;;;7406   		}
;;;7407   	}
;;;7408   if(uavt_set_stat==uassSTEP2)
0048ce  782a              LDRB     r2,[r5,#0]  ; uavt_set_stat
;;;7409   	{
;;;7410   	char i,find_succes;
;;;7411   
;;;7412   	u_max_temp=(short)((((long)U_AVT)*101U)/100U);
0048d0  49d1              LDR      r1,|L1.19480|
;;;7413   	u_min_temp=(short)((((long)U_AVT)*99U)/100U);
0048d2  48d2              LDR      r0,|L1.19484|
;;;7414   
;;;7415   	if(uavt_set_stat_old!=uavt_set_stat)
;;;7416   		{
;;;7417   		uavt_set_error_cnt=60;
;;;7418   		}
;;;7419   
;;;7420   	mess_send(MESS2UNECC_HNDL,PARAM_UNECC_SET,U_AVT,10);
;;;7421   	mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_FAST_REG,0,10);
;;;7422   	find_succes=1;
;;;7423   
;;;7424   	for(i=0;i<NUMIST;i++)
;;;7425   		{
;;;7426   		if((bps[i]._Uii<u_max_temp)&&(bps[i]._Uii>u_min_temp))continue;
;;;7427   		else
;;;7428   			{
;;;7429   			find_succes=0;
;;;7430   			avt_error_bps=i+1;
;;;7431   			break;
;;;7432   			}
;;;7433   		}
;;;7434   
;;;7435   	if(find_succes==1)
;;;7436   		{
;;;7437   		uavt_set_stat=uassSTEP3;
;;;7438   		uavt_bps_pntr=0;
0048d4  4fd2              LDR      r7,|L1.19488|
0048d6  2a02              CMP      r2,#2                 ;7408
0048d8  d002              BEQ      |L1.18656|
;;;7439   		avt_plazma=0;
;;;7440   		}
;;;7441   
;;;7442   	if(uavt_set_error_cnt)
;;;7443   		{
;;;7444   		uavt_set_error_cnt--;
;;;7445   		if(!uavt_set_error_cnt)
;;;7446   			{
;;;7447   			uavt_set_stat=uassOFF;
;;;7448   			uavt_set_result_stat=uasrsERR;
;;;7449   			}
;;;7450   		}
;;;7451   	}
;;;7452   else if(uavt_set_stat==uassSTEP3)
0048da  2a03              CMP      r2,#3
0048dc  d05e              BEQ      |L1.18844|
0048de  e0ca              B        |L1.19062|
                  |L1.18656|
0048e0  f9ba2000          LDRSH    r2,[r10,#0]           ;7412  ; U_AVT
0048e4  f04f0365          MOV      r3,#0x65              ;7412
0048e8  fb02f303          MUL      r3,r2,r3              ;7412
0048ec  fbb3f3fb          UDIV     r3,r3,r11             ;7412
0048f0  468a              MOV      r10,r1                ;7412
0048f2  800b              STRH     r3,[r1,#0]            ;7412
0048f4  eb021142          ADD      r1,r2,r2,LSL #5       ;7413
0048f8  eb010141          ADD      r1,r1,r1,LSL #1       ;7413
0048fc  fbb1f1fb          UDIV     r1,r1,r11             ;7413
004900  4683              MOV      r11,r0                ;7413
004902  8001              STRH     r1,[r0,#0]            ;7413
004904  f8980000          LDRB     r0,[r8,#0]            ;7415  ; uavt_set_stat_old
004908  2802              CMP      r0,#2                 ;7415
00490a  d002              BEQ      |L1.18706|
00490c  f04f003c          MOV      r0,#0x3c              ;7417
004910  7030              STRB     r0,[r6,#0]            ;7417
                  |L1.18706|
004912  230a              MOVS     r3,#0xa               ;7420
004914  21bf              MOVS     r1,#0xbf              ;7420
004916  20be              MOVS     r0,#0xbe              ;7420
004918  f7fffffe          BL       mess_send
00491c  230a              MOVS     r3,#0xa               ;7421
00491e  2200              MOVS     r2,#0                 ;7421
004920  21e6              MOVS     r1,#0xe6              ;7421
004922  20e1              MOVS     r0,#0xe1              ;7421
004924  f7fffffe          BL       mess_send
004928  f04f0201          MOV      r2,#1                 ;7422
00492c  f04f0000          MOV      r0,#0                 ;7424
004930  49bd              LDR      r1,|L1.19496|
004932  f9ba3000          LDRSH    r3,[r10,#0]           ;7424
004936  f8dfe2ec          LDR      lr,|L1.19492|
00493a  f9bbc000          LDRSH    r12,[r11,#0]          ;7426
00493e  f9b1a000          LDRSH    r10,[r1,#0]           ;7424
004942  e00d              B        |L1.18784|
                  |L1.18756|
004944  ebc001c0          RSB      r1,r0,r0,LSL #3       ;7426
004948  eb011100          ADD      r1,r1,r0,LSL #4       ;7426
00494c  eb0e0181          ADD      r1,lr,r1,LSL #2       ;7426
004950  69c9              LDR      r1,[r1,#0x1c]         ;7426
004952  4299              CMP      r1,r3                 ;7426
004954  da09              BGE      |L1.18794|
004956  4561              CMP      r1,r12                ;7426
004958  dd07              BLE      |L1.18794|
00495a  f1000001          ADD      r0,r0,#1              ;7424
00495e  b2c0              UXTB     r0,r0                 ;7424
                  |L1.18784|
004960  4550              CMP      r0,r10                ;7424
004962  dbef              BLT      |L1.18756|
                  |L1.18788|
004964  2a01              CMP      r2,#1                 ;7435
004966  d007              BEQ      |L1.18808|
004968  e00c              B        |L1.18820|
                  |L1.18794|
00496a  f04f0200          MOV      r2,#0                 ;7429
00496e  49a9              LDR      r1,|L1.19476|
004970  f1000001          ADD      r0,r0,#1              ;7430
004974  7008              STRB     r0,[r1,#0]            ;7430
004976  e7f5              B        |L1.18788|
                  |L1.18808|
004978  f04f0003          MOV      r0,#3                 ;7437
00497c  7028              STRB     r0,[r5,#0]            ;7437
00497e  703c              STRB     r4,[r7,#0]            ;7438
004980  48aa              LDR      r0,|L1.19500|
004982  7004              STRB     r4,[r0,#0]            ;7439
                  |L1.18820|
004984  7830              LDRB     r0,[r6,#0]            ;7442  ; uavt_set_error_cnt
004986  b3d0              CBZ      r0,|L1.18942|
004988  f1a00001          SUB      r0,r0,#1              ;7444
00498c  b2c0              UXTB     r0,r0                 ;7444
00498e  7030              STRB     r0,[r6,#0]            ;7444
004990  bba8              CBNZ     r0,|L1.18942|
004992  702c              STRB     r4,[r5,#0]            ;7447
004994  489e              LDR      r0,|L1.19472|
004996  f8809000          STRB     r9,[r0,#0]            ;7448
00499a  e06c              B        |L1.19062|
                  |L1.18844|
;;;7453   	{
;;;7454   	char i,find_succes;
;;;7455   
;;;7456   	u_max_temp=(short)((((long)U_AVT)*101U)/100U);
00499c  f9ba2000          LDRSH    r2,[r10,#0]  ; U_AVT
0049a0  f04f0365          MOV      r3,#0x65
0049a4  fb02f303          MUL      r3,r2,r3
0049a8  fbb3f3fb          UDIV     r3,r3,r11
0049ac  468a              MOV      r10,r1
0049ae  800b              STRH     r3,[r1,#0]
;;;7457   	u_min_temp=(short)((((long)U_AVT)*99U)/100U);
0049b0  eb021142          ADD      r1,r2,r2,LSL #5
0049b4  eb010141          ADD      r1,r1,r1,LSL #1
0049b8  fbb1f1fb          UDIV     r1,r1,r11
0049bc  4683              MOV      r11,r0
0049be  8001              STRH     r1,[r0,#0]
;;;7458   	
;;;7459   	if(uavt_set_stat_old!=uavt_set_stat)
0049c0  f8980000          LDRB     r0,[r8,#0]  ; uavt_set_stat_old
0049c4  2803              CMP      r0,#3
0049c6  d000              BEQ      |L1.18890|
;;;7460   		{
;;;7461   		uavt_bps_pntr=0;
0049c8  703c              STRB     r4,[r7,#0]
                  |L1.18890|
;;;7462   		}
;;;7463   
;;;7464   	mess_send(MESS2UNECC_HNDL,PARAM_UNECC_SET,U_AVT,10);
0049ca  230a              MOVS     r3,#0xa
0049cc  21bf              MOVS     r1,#0xbf
0049ce  20be              MOVS     r0,#0xbe
0049d0  f7fffffe          BL       mess_send
;;;7465   	mess_send(MESS2CNTRL_HNDL,PARAM_CNTRL_STAT_FAST_REG,0,10);
0049d4  230a              MOVS     r3,#0xa
0049d6  2200              MOVS     r2,#0
0049d8  21e6              MOVS     r1,#0xe6
0049da  20e1              MOVS     r0,#0xe1
0049dc  f7fffffe          BL       mess_send
;;;7466   
;;;7467   	find_succes=1;
0049e0  f04f0601          MOV      r6,#1
;;;7468   	for(i=0;i<NUMIST;i++)
0049e4  f04f0000          MOV      r0,#0
0049e8  f8df923c          LDR      r9,|L1.19496|
0049ec  f9ba2000          LDRSH    r2,[r10,#0]
0049f0  f8dfc230          LDR      r12,|L1.19492|
0049f4  f9bb3000          LDRSH    r3,[r11,#0]           ;7426
0049f8  f9b9a000          LDRSH    r10,[r9,#0]           ;7424
0049fc  e00e              B        |L1.18972|
                  |L1.18942|
0049fe  e03a              B        |L1.19062|
                  |L1.18944|
;;;7469   		{
;;;7470   		if((bps[i]._Uii<u_max_temp)&&(bps[i]._Uii>u_min_temp))continue;
004a00  ebc001c0          RSB      r1,r0,r0,LSL #3
004a04  eb011100          ADD      r1,r1,r0,LSL #4
004a08  eb0c0181          ADD      r1,r12,r1,LSL #2
004a0c  69c9              LDR      r1,[r1,#0x1c]
004a0e  4291              CMP      r1,r2
004a10  da0f              BGE      |L1.18994|
004a12  4299              CMP      r1,r3
004a14  dd0d              BLE      |L1.18994|
004a16  f1000001          ADD      r0,r0,#1              ;7468
004a1a  b2c0              UXTB     r0,r0                 ;7468
                  |L1.18972|
004a1c  4550              CMP      r0,r10                ;7468
004a1e  dbef              BLT      |L1.18944|
                  |L1.18976|
;;;7471   		else
;;;7472   			{
;;;7473   			find_succes=0;
;;;7474   			break;
;;;7475   			}
;;;7476   		}
;;;7477   
;;;7478   	if(mess_find( (MESS2IND_HNDL)) && (mess_data[0]==PARAM_U_AVT_GOOD) )
004a20  20d7              MOVS     r0,#0xd7
004a22  f7fffffe          BL       mess_find
004a26  b1a0              CBZ      r0,|L1.19026|
004a28  4881              LDR      r0,|L1.19504|
004a2a  6800              LDR      r0,[r0,#0]  ; mess_data
004a2c  28d9              CMP      r0,#0xd9
004a2e  d003              BEQ      |L1.19000|
004a30  e00f              B        |L1.19026|
                  |L1.18994|
004a32  f04f0600          MOV      r6,#0                 ;7473
004a36  e7f3              B        |L1.18976|
                  |L1.19000|
;;;7479   		{
;;;7480   		if(++uavt_bps_pntr>=NUMIST)
004a38  7838              LDRB     r0,[r7,#0]  ; uavt_bps_pntr
004a3a  1c40              ADDS     r0,r0,#1
004a3c  b2c0              UXTB     r0,r0
004a3e  7038              STRB     r0,[r7,#0]
004a40  f9b91000          LDRSH    r1,[r9,#0]  ; NUMIST
004a44  4288              CMP      r0,r1
004a46  db04              BLT      |L1.19026|
;;;7481   			{
;;;7482   			uavt_set_stat=uassOFF;
004a48  702c              STRB     r4,[r5,#0]
;;;7483   			uavt_set_result_stat=uasrsSUCCESS;
004a4a  4971              LDR      r1,|L1.19472|
004a4c  f04f0003          MOV      r0,#3
004a50  7008              STRB     r0,[r1,#0]
                  |L1.19026|
;;;7484   			}
;;;7485   		//uavt_bps_pntr++;
;;;7486   		//if()
;;;7487   		}
;;;7488   	if(find_succes==1)
004a52  2e01              CMP      r6,#1
004a54  d10f              BNE      |L1.19062|
;;;7489   		{
;;;7490   		mcp2515_transmit(uavt_bps_pntr,uavt_bps_pntr,CMND,0xee,0xee,0,0,0);
004a56  20ee              MOVS     r0,#0xee
004a58  e9cd0400          STRD     r0,r4,[sp,#0]
004a5c  9402              STR      r4,[sp,#8]
004a5e  9403              STR      r4,[sp,#0xc]
004a60  7839              LDRB     r1,[r7,#0]  ; uavt_bps_pntr
004a62  4603              MOV      r3,r0
004a64  2216              MOVS     r2,#0x16
004a66  4608              MOV      r0,r1
004a68  f7fffffe          BL       mcp2515_transmit
;;;7491   		avt_plazma++;
004a6c  486f              LDR      r0,|L1.19500|
004a6e  7801              LDRB     r1,[r0,#0]  ; avt_plazma
004a70  f1010101          ADD      r1,r1,#1
004a74  7001              STRB     r1,[r0,#0]
                  |L1.19062|
;;;7492   		}
;;;7493   	}
;;;7494   
;;;7495   
;;;7496   
;;;7497   uavt_set_stat_old=uavt_set_stat;
004a76  7828              LDRB     r0,[r5,#0]  ; uavt_set_stat
004a78  f8880000          STRB     r0,[r8,#0]
;;;7498   
;;;7499   }
004a7c  e8bd9fff          POP      {r0-r12,pc}
;;;7500   
                          ENDP

                  u_necc_hndl PROC
;;;7575   //-----------------------------------------------
;;;7576   void u_necc_hndl(void)
004a80  b5f8              PUSH     {r3-r7,lr}
;;;7577   {
;;;7578   signed long temp_L;
;;;7579   signed long temp_SL;
;;;7580   //signed short temp_SS;
;;;7581   
;;;7582   //char i;
;;;7583   
;;;7584   //temp_SS=0;
;;;7585   signed short t[2];
;;;7586   
;;;7587   
;;;7588   
;;;7589   
;;;7590   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;7591   
;;;7592   if(!TERMOKOMPENS)
004a82  486c              LDR      r0,|L1.19508|
;;;7593   	{
;;;7594   	//u_necc=U0B;
;;;7595   	u_necc=UB20;
;;;7596   	}
;;;7597   else
;;;7598   	{
;;;7599   	if(ND_EXT[0])t[0]=20;
;;;7600   	else t[0]=t_ext[0];
;;;7601   
;;;7602   	mat_temper=t[0];
;;;7603   			
;;;7604   	if(mat_temper<0)temp_SL=UB0; 
;;;7605   	else 
;;;7606   		{
;;;7607   		if(mat_temper>40)mat_temper=40; 
;;;7608   		temp_SL=(UB20-UB0)*10;
;;;7609   		temp_SL*=mat_temper;
;;;7610   		temp_SL/=200;
;;;7611   		temp_SL+=UB0;
;;;7612   		}
;;;7613   	if((spc_stat==spcVZ)&&(sk_stat[0]==1))
004a84  4d6e              LDR      r5,|L1.19520|
004a86  4c6f              LDR      r4,|L1.19524|
004a88  8801              LDRH     r1,[r0,#0]            ;7592  ; TERMOKOMPENS
004a8a  486b              LDR      r0,|L1.19512|
004a8c  f9b03000          LDRSH    r3,[r0,#0]            ;7595
;;;7614   		{
;;;7615   		temp_SL=UVZ;
004a90  486a              LDR      r0,|L1.19516|
004a92  f9b02000          LDRSH    r2,[r0,#0]
004a96  b139              CBZ      r1,|L1.19112|
004a98  486b              LDR      r0,|L1.19528|
004a9a  7800              LDRB     r0,[r0,#0]            ;7599  ; ND_EXT
004a9c  b130              CBZ      r0,|L1.19116|
004a9e  f04f0014          MOV      r0,#0x14              ;7599
004aa2  f8ad0000          STRH     r0,[sp,#0]            ;7599
004aa6  e005              B        |L1.19124|
                  |L1.19112|
004aa8  8023              STRH     r3,[r4,#0]            ;7595
004aaa  e028              B        |L1.19198|
                  |L1.19116|
004aac  4867              LDR      r0,|L1.19532|
004aae  8800              LDRH     r0,[r0,#0]            ;7600  ; t_ext
004ab0  f8ad0000          STRH     r0,[sp,#0]            ;7600
                  |L1.19124|
004ab4  4e66              LDR      r6,|L1.19536|
004ab6  f9bd1000          LDRSH    r1,[sp,#0]            ;7602
004aba  6031              STR      r1,[r6,#0]            ;7602  ; mat_temper
004abc  4865              LDR      r0,|L1.19540|
004abe  2900              CMP      r1,#0                 ;7604
004ac0  f9b00000          LDRSH    r0,[r0,#0]            ;7604
004ac4  db12              BLT      |L1.19180|
004ac6  2928              CMP      r1,#0x28              ;7607
004ac8  dd02              BLE      |L1.19152|
004aca  f04f0128          MOV      r1,#0x28              ;7607
004ace  6031              STR      r1,[r6,#0]            ;7607  ; mat_temper
                  |L1.19152|
004ad0  eba30100          SUB      r1,r3,r0              ;7608
004ad4  eb010181          ADD      r1,r1,r1,LSL #2       ;7608
004ad8  ea4f0141          LSL      r1,r1,#1              ;7608
004adc  6833              LDR      r3,[r6,#0]            ;7609  ; mat_temper
004ade  fb01f103          MUL      r1,r1,r3              ;7609
004ae2  f04f03c8          MOV      r3,#0xc8              ;7610
004ae6  fb91f1f3          SDIV     r1,r1,r3              ;7610
004aea  4408              ADD      r0,r0,r1              ;7611
                  |L1.19180|
004aec  7e29              LDRB     r1,[r5,#0x18]         ;7613  ; spc_stat
004aee  2902              CMP      r1,#2                 ;7613
004af0  d104              BNE      |L1.19196|
004af2  4959              LDR      r1,|L1.19544|
004af4  7809              LDRB     r1,[r1,#0]            ;7613  ; sk_stat
004af6  2901              CMP      r1,#1                 ;7613
004af8  d100              BNE      |L1.19196|
004afa  4610              MOV      r0,r2
                  |L1.19196|
;;;7616   		}
;;;7617   	u_necc=(unsigned int)temp_SL;
004afc  8020              STRH     r0,[r4,#0]
                  |L1.19198|
;;;7618   	///u_necc=3456;
;;;7619   	}  
;;;7620   
;;;7621   //u_necc=2355;
;;;7622   
;;;7623   if((speedChIsOn)||(sp_ch_stat==scsWRK))
004afe  4857              LDR      r0,|L1.19548|
004b00  8800              LDRH     r0,[r0,#0]  ; speedChIsOn
004b02  b918              CBNZ     r0,|L1.19212|
004b04  4856              LDR      r0,|L1.19552|
004b06  7800              LDRB     r0,[r0,#0]  ; sp_ch_stat
004b08  2802              CMP      r0,#2
004b0a  d102              BNE      |L1.19218|
                  |L1.19212|
;;;7624   	{
;;;7625   	u_necc=speedChrgVolt;
004b0c  4855              LDR      r0,|L1.19556|
004b0e  8800              LDRH     r0,[r0,#0]  ; speedChrgVolt
004b10  8020              STRH     r0,[r4,#0]
                  |L1.19218|
;;;7626   	}
;;;7627   if(hv_vz_stat==hvsWRK)
004b12  4855              LDR      r0,|L1.19560|
004b14  7800              LDRB     r0,[r0,#0]  ; hv_vz_stat
004b16  2805              CMP      r0,#5
004b18  d100              BNE      |L1.19228|
;;;7628   	{
;;;7629   	u_necc=UVZ;
004b1a  8022              STRH     r2,[r4,#0]
                  |L1.19228|
;;;7630   	}
;;;7631   if(vz1_stat==vz1sWRK)
004b1c  f8950024          LDRB     r0,[r5,#0x24]  ; vz1_stat
004b20  280a              CMP      r0,#0xa
004b22  d102              BNE      |L1.19242|
;;;7632   	{
;;;7633   	u_necc=UZ_U;
004b24  4851              LDR      r0,|L1.19564|
004b26  8800              LDRH     r0,[r0,#0]  ; UZ_U
004b28  8020              STRH     r0,[r4,#0]
                  |L1.19242|
;;;7634   	}
;;;7635   if(vz2_stat==vz2sWRK1)
004b2a  f8950027          LDRB     r0,[r5,#0x27]  ; vz2_stat
004b2e  280a              CMP      r0,#0xa
004b30  d102              BNE      |L1.19256|
;;;7636   	{
;;;7637   	u_necc=FZ_U1;
004b32  494f              LDR      r1,|L1.19568|
004b34  8809              LDRH     r1,[r1,#0]  ; FZ_U1
004b36  8021              STRH     r1,[r4,#0]
                  |L1.19256|
;;;7638   	}
;;;7639   if(vz2_stat==vz2sWRK2)
004b38  280b              CMP      r0,#0xb
004b3a  d102              BNE      |L1.19266|
;;;7640   	{
;;;7641   	u_necc=FZ_U2;
004b3c  484d              LDR      r0,|L1.19572|
004b3e  8800              LDRH     r0,[r0,#0]  ; FZ_U2
004b40  8020              STRH     r0,[r4,#0]
                  |L1.19266|
;;;7642   	}
;;;7643   
;;;7644   if((uavt_set_stat==uassSTEP1)||(uavt_set_stat==uassSTEP2))
004b42  482e              LDR      r0,|L1.19452|
004b44  7800              LDRB     r0,[r0,#0]  ; uavt_set_stat
004b46  2801              CMP      r0,#1
004b48  d001              BEQ      |L1.19278|
004b4a  2802              CMP      r0,#2
004b4c  d102              BNE      |L1.19284|
                  |L1.19278|
;;;7645   	{
;;;7646   	u_necc=U_AVT;
004b4e  482e              LDR      r0,|L1.19464|
004b50  8800              LDRH     r0,[r0,#0]  ; U_AVT
004b52  8020              STRH     r0,[r4,#0]
                  |L1.19284|
;;;7647   	}
;;;7648   
;;;7649   if(mess_find_unvol(MESS2UNECC_HNDL))
004b54  20be              MOVS     r0,#0xbe
004b56  f7fffffe          BL       mess_find_unvol
004b5a  b128              CBZ      r0,|L1.19304|
;;;7650   	{		
;;;7651   	if(mess_data[0]==PARAM_UNECC_SET)
004b5c  4834              LDR      r0,|L1.19504|
004b5e  6801              LDR      r1,[r0,#0]  ; mess_data
004b60  29bf              CMP      r1,#0xbf
004b62  d101              BNE      |L1.19304|
;;;7652   		{
;;;7653   		u_necc=mess_data[1];
004b64  6840              LDR      r0,[r0,#4]  ; mess_data
004b66  8020              STRH     r0,[r4,#0]
                  |L1.19304|
;;;7654   		}		
;;;7655   	} 
;;;7656   
;;;7657   //if(ICA_EN)u_necc+=ica_u_necc;
;;;7658   #endif
;;;7659   
;;;7660   
;;;7661   #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;7662   
;;;7663   #ifndef UKU_TELECORE2015
;;;7664   #ifndef UKU_TELECORE2017
;;;7665   if(unh_cnt0<10)
;;;7666   	{
;;;7667   	unh_cnt0++;
;;;7668   	if(unh_cnt0>=10)
;;;7669   		{
;;;7670   		unh_cnt0=0;
;;;7671   		b1Hz_unh=1;
;;;7672   		}
;;;7673   	}
;;;7674   
;;;7675   if(unh_cnt1<5)
;;;7676   	{
;;;7677   	unh_cnt1++;
;;;7678   	if(unh_cnt1==5)
;;;7679   		{
;;;7680   		unh_cnt1=0;
;;;7681   //		b2Hz_unh=1;
;;;7682   		}
;;;7683   	} 
;;;7684   
;;;7685   
;;;7686   
;;;7687   if(mess_find_unvol(MESS2UNECC_HNDL))
;;;7688   	{		
;;;7689   	if(mess_data[0]==PARAM_UNECC_SET)
;;;7690   		{
;;;7691   		u_necc=mess_data[1];
;;;7692   		}		
;;;7693   	}
;;;7694   
;;;7695   
;;;7696   else if(b1Hz_unh)
;;;7697   	{
;;;7698   	
;;;7699   	if((BAT_IS_ON[0]!=bisON) && (BAT_IS_ON[1]!=bisON))
;;;7700   		{
;;;7701   		
;;;7702   		u_necc=U0B;
;;;7703   		#ifdef IPS_SGEP_GAZPROM
;;;7704   		u_necc=UB0;
;;;7705   		#endif
;;;7706   		}
;;;7707   	else 
;;;7708   		{
;;;7709   		if(BAT_TYPE==0) //если батарея обычная
;;;7710   			{
;;;7711   			for(i=0;i<2;i++)
;;;7712   				{
;;;7713   				if(BAT_IS_ON[i]==bisON)
;;;7714   					{
;;;7715   					if(bat[i]._nd)t[i]=20;
;;;7716   					else t[i]=bat[i]._Tb;
;;;7717   					}
;;;7718   				else
;;;7719   					{
;;;7720   					t[i]=-20;
;;;7721   					}
;;;7722   				}
;;;7723   			if(t[0]>t[1])mat_temper=t[0];
;;;7724   			else mat_temper=t[1];
;;;7725   			
;;;7726   		
;;;7727   			if(mat_temper<0)temp_SL=UB0; 
;;;7728   			else 
;;;7729   				{
;;;7730   				if(mat_temper>40)mat_temper=40; 
;;;7731   				temp_SL=(UB20-UB0)*10;
;;;7732   				temp_SL*=mat_temper;
;;;7733   				temp_SL/=200;
;;;7734   				temp_SL+=UB0;
;;;7735   				}
;;;7736   			if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7737   				{
;;;7738   				temp_SL=UVZ;
;;;7739   				}
;;;7740   			u_necc=(unsigned int)temp_SL;
;;;7741   			}
;;;7742   		else if(BAT_TYPE==1) //если батарея китайская
;;;7743   			{
;;;7744   			u_necc=U0B;
;;;7745   					
;;;7746   			u_necc=bat[0]._Ub+10;
;;;7747   
;;;7748   			
;;;7749   			if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7750   				{
;;;7751   				u_necc=UVZ;
;;;7752   				}
;;;7753   			if(u_necc>=UB0) u_necc=UB0;
;;;7754   			if(u_necc>=UB20) u_necc=UB20;
;;;7755   			}
;;;7756   		}  
;;;7757   	}
;;;7758   #endif
;;;7759   #endif
;;;7760   
;;;7761   #ifdef UKU_TELECORE2015
;;;7762   
;;;7763   if(unh_cnt0<10)
;;;7764   	{
;;;7765   	unh_cnt0++;
;;;7766   	if(unh_cnt0>=10)
;;;7767   		{
;;;7768   		unh_cnt0=0;
;;;7769   		b1Hz_unh=1;
;;;7770   		}
;;;7771   	}
;;;7772   
;;;7773   if(unh_cnt1<5)
;;;7774   	{
;;;7775   	unh_cnt1++;
;;;7776   	if(unh_cnt1==5)
;;;7777   		{
;;;7778   		unh_cnt1=0;
;;;7779   //		b2Hz_unh=1;
;;;7780   		}
;;;7781   	} 
;;;7782   
;;;7783   
;;;7784   
;;;7785   if(mess_find_unvol(MESS2UNECC_HNDL))
;;;7786   	{		
;;;7787   	if(mess_data[0]==PARAM_UNECC_SET)
;;;7788   		{
;;;7789   		u_necc=mess_data[1];
;;;7790   		}		
;;;7791   	}
;;;7792   
;;;7793   
;;;7794   else if(b1Hz_unh)
;;;7795   	{
;;;7796   	b1Hz_unh=0;
;;;7797   
;;;7798   	if(BAT_TYPE==0)
;;;7799   		{
;;;7800   		if(bat[0]._nd)mat_temper=20;
;;;7801   		else mat_temper=bat[0]._Tb;
;;;7802   
;;;7803   			
;;;7804   		if(mat_temper<0)temp_SL=UB0; 
;;;7805   		else 
;;;7806   			{
;;;7807   			if(mat_temper>40)mat_temper=40; 
;;;7808   			temp_SL=(UB20-UB0)*10;
;;;7809   			temp_SL*=mat_temper;
;;;7810   			temp_SL/=200;
;;;7811   			temp_SL+=UB0;
;;;7812   			}
;;;7813   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7814   			{
;;;7815   			temp_SL=UVZ;
;;;7816   			}
;;;7817   		u_necc=(unsigned int)temp_SL;
;;;7818   	///u_necc=3456;
;;;7819   		}
;;;7820   	else if(BAT_TYPE==1)
;;;7821   		{
;;;7822   		
;;;7823   		gran(&DU_LI_BAT,1,30);
;;;7824   		u_necc=li_bat._Ub+DU_LI_BAT;
;;;7825   		gran(&u_necc,0,UB0);
;;;7826   		gran(&u_necc,0,UB20);
;;;7827   		gran(&u_necc,0,540);		
;;;7828   
;;;7829   
;;;7830   		if(li_bat._batStat!=bsOK)
;;;7831   			{
;;;7832   			u_necc=U0B;
;;;7833   			}
;;;7834   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7835   			{
;;;7836   			u_necc=UVZ;
;;;7837   			}
;;;7838   		/* 
;;;7839   		u_necc=U0B;
;;;7840   		
;;;7841   
;;;7842   	
;;;7843   		u_necc=UB0;
;;;7844   		u_necc=li_bat._Ub+10;
;;;7845   		if((li_bat._Ub<450)||(li_bat._Ub>550))
;;;7846   			{
;;;7847   			lakb_error_cnt++;
;;;7848   			if(lakb_error_cnt>=30)
;;;7849   				{
;;;7850   				lakb_error_cnt=30;
;;;7851   				u_necc=U0B;
;;;7852   				}
;;;7853   			}
;;;7854   		else lakb_error_cnt=0;*/
;;;7855   		}
;;;7856   	else if(BAT_TYPE==2)
;;;7857   		{
;;;7858   		u_necc=U0B;
;;;7859   		
;;;7860   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7861   			{
;;;7862   			u_necc=UVZ;
;;;7863   			}
;;;7864   	
;;;7865   		u_necc=UB0;
;;;7866   		}
;;;7867   
;;;7868   	else if(BAT_TYPE==3)
;;;7869   		{
;;;7870   		u_necc=U0B;
;;;7871   		
;;;7872   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7873   			{
;;;7874   			u_necc=UVZ;
;;;7875   			}
;;;7876   
;;;7877   		gran(&DU_LI_BAT,1,30);
;;;7878   
;;;7879   
;;;7880   		if(lakbNotErrorNum==0)
;;;7881   			{
;;;7882   			u_necc=U0B;
;;;7883   			}
;;;7884   		else 
;;;7885   			{
;;;7886   			signed short i;
;;;7887   			//signed short u_necc_max;
;;;7888   			//u_necc_max=0;
;;;7889   			char soc_flag=0;
;;;7890   
;;;7891   			for(i=(NUMBAT_TELECORE-1);i>=0;i--)
;;;7892   				{
;;;7893   				if(lakb[i]._communicationFullErrorStat==0)u_necc=lakb[i]._tot_bat_volt+DU_LI_BAT;
;;;7894   				if(lakb[i]._s_o_c_percent<QSODERG_LI_BAT)soc_flag=1;
;;;7895   				}
;;;7896   
;;;7897   			if(soc_flag==0)u_necc=USODERG_LI_BAT;
;;;7898   			}
;;;7899   		gran(&u_necc,0,UB0);
;;;7900   		//gran(&u_necc,0,UB20);
;;;7901   		gran(&u_necc,0,540);
;;;7902   		}
;;;7903   	}
;;;7904   
;;;7905   #endif 
;;;7906   
;;;7907   #ifdef UKU_TELECORE2017
;;;7908   
;;;7909   if(unh_cnt0<10)
;;;7910   	{
;;;7911   	unh_cnt0++;
;;;7912   	if(unh_cnt0>=10)
;;;7913   		{
;;;7914   		unh_cnt0=0;
;;;7915   		b1Hz_unh=1;
;;;7916   		}
;;;7917   	}
;;;7918   
;;;7919   if(unh_cnt1<5)
;;;7920   	{
;;;7921   	unh_cnt1++;
;;;7922   	if(unh_cnt1==5)
;;;7923   		{
;;;7924   		unh_cnt1=0;
;;;7925   //		b2Hz_unh=1;
;;;7926   		}
;;;7927   	} 
;;;7928   
;;;7929   
;;;7930   
;;;7931   if(mess_find_unvol(MESS2UNECC_HNDL))
;;;7932   	{		
;;;7933   	if(mess_data[0]==PARAM_UNECC_SET)
;;;7934   		{
;;;7935   		u_necc=mess_data[1];
;;;7936   		}		
;;;7937   	}
;;;7938   
;;;7939   
;;;7940   else if(b1Hz_unh)
;;;7941   	{
;;;7942   	b1Hz_unh=0;
;;;7943   
;;;7944   	if(BAT_TYPE==0)
;;;7945   		{
;;;7946   		if(bat[0]._nd)mat_temper=20;
;;;7947   		else mat_temper=bat[0]._Tb;
;;;7948   
;;;7949   			
;;;7950   		if(mat_temper<0)temp_SL=UB0; 
;;;7951   		else 
;;;7952   			{
;;;7953   			if(mat_temper>40)mat_temper=40; 
;;;7954   			temp_SL=(UB20-UB0)*10;
;;;7955   			temp_SL*=mat_temper;
;;;7956   			temp_SL/=200;
;;;7957   			temp_SL+=UB0;
;;;7958   			}
;;;7959   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7960   			{
;;;7961   			temp_SL=UVZ;
;;;7962   			}
;;;7963   		u_necc=(unsigned int)temp_SL;
;;;7964   	///u_necc=3456;
;;;7965   		}
;;;7966   	else if(BAT_TYPE==1)
;;;7967   		{
;;;7968   		
;;;7969   		gran(&DU_LI_BAT,1,30);
;;;7970   		u_necc=li_bat._Ub+DU_LI_BAT;
;;;7971   		gran(&u_necc,0,UB0);
;;;7972   		gran(&u_necc,0,UB20);
;;;7973   		gran(&u_necc,0,540);		
;;;7974   
;;;7975   
;;;7976   		if(li_bat._batStat!=bsOK)
;;;7977   			{
;;;7978   			u_necc=U0B;
;;;7979   			}
;;;7980   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7981   			{
;;;7982   			u_necc=UVZ;
;;;7983   			}
;;;7984   		}
;;;7985   	else if(BAT_TYPE==2)
;;;7986   		{
;;;7987   		u_necc=U0B;
;;;7988   		
;;;7989   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;7990   			{
;;;7991   			u_necc=UVZ;
;;;7992   			}
;;;7993   	
;;;7994   		u_necc=UB0;
;;;7995   		}
;;;7996   
;;;7997   	else if(BAT_TYPE==3)
;;;7998   		{
;;;7999   		u_necc=U0B;
;;;8000   		
;;;8001   		if((spc_stat==spcVZ)&&(sk_stat[0]==1))
;;;8002   			{
;;;8003   			u_necc=UVZ;
;;;8004   			}
;;;8005   
;;;8006   		gran(&DU_LI_BAT,1,30);
;;;8007   
;;;8008   
;;;8009   		if(lakbNotErrorNum==0)
;;;8010   			{
;;;8011   			u_necc=U0B;
;;;8012   			}
;;;8013   		else 
;;;8014   			{
;;;8015   			signed short i;
;;;8016   			//signed short u_necc_max;
;;;8017   			//u_necc_max=0;
;;;8018   			char soc_flag=0;
;;;8019   
;;;8020   			for(i=(NUMBAT_TELECORE-1);i>=0;i--)
;;;8021   				{
;;;8022   				if(lakb[i]._communicationFullErrorStat==0)u_necc=lakb[i]._tot_bat_volt+DU_LI_BAT;
;;;8023   				if(lakb[i]._s_o_c_percent<QSODERG_LI_BAT)soc_flag=1;
;;;8024   				}
;;;8025   
;;;8026   			if(soc_flag==0)u_necc=USODERG_LI_BAT;
;;;8027   			}
;;;8028   		gran(&u_necc,0,UB0);
;;;8029   		//gran(&u_necc,0,UB20);
;;;8030   		gran(&u_necc,0,540);
;;;8031   		}
;;;8032   	}
;;;8033   
;;;8034   #endif 
;;;8035   //u_necc=2356;
;;;8036   
;;;8037   if((speedChIsOn)||(sp_ch_stat==scsWRK))
;;;8038   	{
;;;8039   	u_necc=speedChrgVolt;
;;;8040   	}
;;;8041   #endif//gran(&u_necc,400,UMAX);
;;;8042   
;;;8043   
;;;8044   
;;;8045   temp_L=(signed long) u_necc;
004b68  f9b40000          LDRSH    r0,[r4,#0]  ; u_necc
;;;8046   temp_L*=98L;
004b6c  f04f0162          MOV      r1,#0x62
004b70  fb00f101          MUL      r1,r0,r1
;;;8047   temp_L/=100L;
004b74  f04f0264          MOV      r2,#0x64
004b78  fb91f1f2          SDIV     r1,r1,r2
;;;8048   u_necc_dn=(signed short)temp_L;
004b7c  4b1e              LDR      r3,|L1.19448|
004b7e  8019              STRH     r1,[r3,#0]
;;;8049   
;;;8050   temp_L=(signed long) u_necc;
;;;8051   temp_L*=102L;
004b80  f04f0166          MOV      r1,#0x66
004b84  fb00f001          MUL      r0,r0,r1
;;;8052   temp_L/=100L;
004b88  fb90f0f2          SDIV     r0,r0,r2
;;;8053   u_necc_up=(signed short)temp_L;
004b8c  4919              LDR      r1,|L1.19444|
004b8e  8008              STRH     r0,[r1,#0]
;;;8054   /*
;;;8055   #ifdef IPS_SGEP_GAZPROM
;;;8056   u_necc=248;
;;;8057   #endif */
;;;8058   }
004b90  bdf8              POP      {r3-r7,pc}
;;;8059   
                          ENDP

                  num_necc_hndl PROC
;;;8061   //-----------------------------------------------
;;;8062   void num_necc_hndl(void)
004b92  e92d41f0          PUSH     {r4-r8,lr}
;;;8063   {
;;;8064   
;;;8065   static short num_necc_block_cnt;
;;;8066   if(num_necc_block_cnt) num_necc_block_cnt--;
004b96  4c2a              LDR      r4,|L1.19520|
004b98  f9b40030          LDRSH    r0,[r4,#0x30]  ; num_necc_block_cnt
004b9c  b110              CBZ      r0,|L1.19364|
004b9e  f1a00001          SUB      r0,r0,#1
004ba2  8620              STRH     r0,[r4,#0x30]
                  |L1.19364|
;;;8067   
;;;8068   Isumm_=Isumm;
004ba4  4834              LDR      r0,|L1.19576|
004ba6  4d35              LDR      r5,|L1.19580|
004ba8  8800              LDRH     r0,[r0,#0]  ; Isumm
004baa  8028              STRH     r0,[r5,#0]
;;;8069   
;;;8070   if(bat[0]._Ib<0) Isumm_+=(abs(bat[0]._Ib))/10;
004bac  4e0f              LDR      r6,|L1.19436|
004bae  270a              MOVS     r7,#0xa
004bb0  f9b60008          LDRSH    r0,[r6,#8]  ; bat
004bb4  2800              CMP      r0,#0
004bb6  da06              BGE      |L1.19398|
004bb8  f7fffffe          BL       abs
004bbc  fb90f0f7          SDIV     r0,r0,r7
004bc0  8829              LDRH     r1,[r5,#0]  ; Isumm_
004bc2  4408              ADD      r0,r0,r1
004bc4  8028              STRH     r0,[r5,#0]
                  |L1.19398|
;;;8071   if(bat[1]._Ib<0) Isumm_+=(abs(bat[1]._Ib))/10;
004bc6  f9b60054          LDRSH    r0,[r6,#0x54]  ; bat
004bca  2800              CMP      r0,#0
004bcc  da06              BGE      |L1.19420|
004bce  f7fffffe          BL       abs
004bd2  fb90f0f7          SDIV     r0,r0,r7
004bd6  8829              LDRH     r1,[r5,#0]  ; Isumm_
004bd8  4408              ADD      r0,r0,r1
004bda  8028              STRH     r0,[r5,#0]
                  |L1.19420|
;;;8072   
;;;8073   num_necc_up=(Isumm_/((signed short)IMAX))+1;
004bdc  4928              LDR      r1,|L1.19584|
004bde  f9b50000          LDRSH    r0,[r5,#0]  ; Isumm_
004be2  f9b11000          LDRSH    r1,[r1,#0]  ; IMAX
004be6  fb90f1f1          SDIV     r1,r0,r1
004bea  e04b              B        |L1.19588|
                  |L1.19436|
                          DCD      bat
                  |L1.19440|
                          DCD      out_U
                  |L1.19444|
                          DCD      u_necc_up
                  |L1.19448|
                          DCD      u_necc_dn
                  |L1.19452|
                          DCD      uavt_set_stat
                  |L1.19456|
                          DCD      uavt_set_error_cnt
                  |L1.19460|
                          DCD      uavt_set_stat_old
                  |L1.19464|
                          DCD      U_AVT
                  |L1.19468|
                          DCD      bps_U
                  |L1.19472|
                          DCD      uavt_set_result_stat
                  |L1.19476|
                          DCD      avt_error_bps
                  |L1.19480|
                          DCD      u_max_temp
                  |L1.19484|
                          DCD      u_min_temp
                  |L1.19488|
                          DCD      uavt_bps_pntr
                  |L1.19492|
                          DCD      bps
                  |L1.19496|
                          DCD      NUMIST
                  |L1.19500|
                          DCD      avt_plazma
                  |L1.19504|
                          DCD      mess_data
                  |L1.19508|
                          DCD      TERMOKOMPENS
                  |L1.19512|
                          DCD      UB20
                  |L1.19516|
                          DCD      UVZ
                  |L1.19520|
                          DCD      ||area_number.25||
                  |L1.19524|
                          DCD      u_necc
                  |L1.19528|
                          DCD      ND_EXT
                  |L1.19532|
                          DCD      t_ext
                  |L1.19536|
                          DCD      mat_temper
                  |L1.19540|
                          DCD      UB0
                  |L1.19544|
                          DCD      sk_stat
                  |L1.19548|
                          DCD      speedChIsOn
                  |L1.19552|
                          DCD      sp_ch_stat
                  |L1.19556|
                          DCD      speedChrgVolt
                  |L1.19560|
                          DCD      hv_vz_stat
                  |L1.19564|
                          DCD      UZ_U
                  |L1.19568|
                          DCD      FZ_U1
                  |L1.19572|
                          DCD      FZ_U2
                  |L1.19576|
                          DCD      Isumm
                  |L1.19580|
                          DCD      Isumm_
                  |L1.19584|
                          DCD      IMAX
                  |L1.19588|
004c84  f1010101          ADD      r1,r1,#1
004c88  b2c9              UXTB     r1,r1
004c8a  7521              STRB     r1,[r4,#0x14]
;;;8074   ////Isumm_+=(signed short)((IMAX*(10-KIMAX))/10);
;;;8075   ////Isumm_+=(signed short)(IMAX-IMIN);
;;;8076   
;;;8077   num_necc_down=(Isumm_/((signed short)IMIN))+1;
004c8c  4af9              LDR      r2,|L1.20596|
004c8e  f9b22000          LDRSH    r2,[r2,#0]  ; IMIN
004c92  fb90f0f2          SDIV     r0,r0,r2
004c96  f1000001          ADD      r0,r0,#1
004c9a  b2c2              UXTB     r2,r0
004c9c  7562              STRB     r2,[r4,#0x15]
;;;8078   
;;;8079   if(num_necc_up>num_necc)
004c9e  48f6              LDR      r0,|L1.20600|
;;;8080   	{
;;;8081   	num_necc=num_necc_up;
;;;8082   	num_necc_block_cnt=60;
004ca0  f04f053c          MOV      r5,#0x3c
004ca4  f9b03000          LDRSH    r3,[r0,#0]            ;8079  ; num_necc
004ca8  4299              CMP      r1,r3                 ;8079
004caa  dd02              BLE      |L1.19634|
004cac  8001              STRH     r1,[r0,#0]            ;8081
004cae  8625              STRH     r5,[r4,#0x30]
004cb0  e005              B        |L1.19646|
                  |L1.19634|
;;;8083   	}
;;;8084   else if(num_necc_down<num_necc)
004cb2  429a              CMP      r2,r3
004cb4  da03              BGE      |L1.19646|
;;;8085   	{
;;;8086   	if(!num_necc_block_cnt)
004cb6  8e21              LDRH     r1,[r4,#0x30]  ; num_necc_block_cnt
004cb8  b909              CBNZ     r1,|L1.19646|
;;;8087   		{
;;;8088   		num_necc=num_necc_down;
004cba  8002              STRH     r2,[r0,#0]
;;;8089   		num_necc_block_cnt=60;
004cbc  8625              STRH     r5,[r4,#0x30]
                  |L1.19646|
;;;8090   		}
;;;8091   	}
;;;8092   
;;;8093   if(PAR) num_necc=NUMIST;
004cbe  49ef              LDR      r1,|L1.20604|
004cc0  880a              LDRH     r2,[r1,#0]  ; PAR
004cc2  49ef              LDR      r1,|L1.20608|
004cc4  b10a              CBZ      r2,|L1.19658|
004cc6  880a              LDRH     r2,[r1,#0]  ; NUMIST
004cc8  8002              STRH     r2,[r0,#0]
                  |L1.19658|
;;;8094   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;8095   if(bPARALLEL) num_necc=NUMIST;
004cca  f8942022          LDRB     r2,[r4,#0x22]  ; bPARALLEL
004cce  b10a              CBZ      r2,|L1.19668|
004cd0  880a              LDRH     r2,[r1,#0]  ; NUMIST
004cd2  8002              STRH     r2,[r0,#0]
                  |L1.19668|
;;;8096   if(vz1_stat==vz1sWRK)num_necc=NUMIST; //Включаем все источники если уравнительный заряд
004cd4  f8942024          LDRB     r2,[r4,#0x24]  ; vz1_stat
004cd8  2a0a              CMP      r2,#0xa
004cda  d101              BNE      |L1.19680|
004cdc  880a              LDRH     r2,[r1,#0]  ; NUMIST
004cde  8002              STRH     r2,[r0,#0]
                  |L1.19680|
;;;8097   if((vz2_stat==vz2sWRK1)||(vz2_stat==vz2sWRK2))num_necc=NUMIST; //Включаем все источники если уравнительный заряд
004ce0  f8942027          LDRB     r2,[r4,#0x27]  ; vz2_stat
004ce4  2a0a              CMP      r2,#0xa
004ce6  d001              BEQ      |L1.19692|
004ce8  2a0b              CMP      r2,#0xb
004cea  d101              BNE      |L1.19696|
                  |L1.19692|
004cec  880a              LDRH     r2,[r1,#0]  ; NUMIST
004cee  8002              STRH     r2,[r0,#0]
                  |L1.19696|
;;;8098   #endif
;;;8099   
;;;8100   gran(&num_necc,1,NUMIST);
004cf0  f9b12000          LDRSH    r2,[r1,#0]  ; NUMIST
004cf4  e8bd41f0          POP      {r4-r8,lr}
004cf8  2101              MOVS     r1,#1
004cfa  48df              LDR      r0,|L1.20600|
004cfc  f7ffbffe          B.W      gran
;;;8101   
;;;8102   }
;;;8103   
                          ENDP

                  cntrl_hndl PROC
;;;8106   //-----------------------------------------------
;;;8107   void cntrl_hndl(void)
004d00  e92d5ff0          PUSH     {r4-r12,lr}
;;;8108   {
;;;8109   
;;;8110   
;;;8111   
;;;8112   IZMAX_=IZMAX;
004d04  48df              LDR      r0,|L1.20612|
004d06  4ce0              LDR      r4,|L1.20616|
004d08  8800              LDRH     r0,[r0,#0]  ; IZMAX
004d0a  f8a40044          STRH     r0,[r4,#0x44]
;;;8113   
;;;8114   //cntrl_hndl_plazma=10;
;;;8115   
;;;8116   if((speedChIsOn)||(sp_ch_stat==scsWRK))IZMAX_=speedChrgCurr;
004d0e  48df              LDR      r0,|L1.20620|
004d10  8800              LDRH     r0,[r0,#0]  ; speedChIsOn
004d12  b918              CBNZ     r0,|L1.19740|
004d14  48de              LDR      r0,|L1.20624|
004d16  7800              LDRB     r0,[r0,#0]  ; sp_ch_stat
004d18  2802              CMP      r0,#2
004d1a  d103              BNE      |L1.19748|
                  |L1.19740|
004d1c  48dd              LDR      r0,|L1.20628|
004d1e  8800              LDRH     r0,[r0,#0]  ; speedChrgCurr
004d20  f8a40044          STRH     r0,[r4,#0x44]
                  |L1.19748|
;;;8117   if(vz1_stat==vz1sWRK) IZMAX_=UZ_IMAX;
004d24  f8940024          LDRB     r0,[r4,#0x24]  ; vz1_stat
004d28  280a              CMP      r0,#0xa
004d2a  d103              BNE      |L1.19764|
004d2c  48da              LDR      r0,|L1.20632|
004d2e  8800              LDRH     r0,[r0,#0]  ; UZ_IMAX
004d30  f8a40044          STRH     r0,[r4,#0x44]
                  |L1.19764|
;;;8118   if(vz2_stat==vz2sWRK1) IZMAX_=FZ_IMAX1;
004d34  f8940027          LDRB     r0,[r4,#0x27]  ; vz2_stat
004d38  280a              CMP      r0,#0xa
004d3a  d103              BNE      |L1.19780|
004d3c  49d7              LDR      r1,|L1.20636|
004d3e  8809              LDRH     r1,[r1,#0]  ; FZ_IMAX1
004d40  f8a41044          STRH     r1,[r4,#0x44]
                  |L1.19780|
;;;8119   if(vz2_stat==vz2sWRK2) IZMAX_=FZ_IMAX2;
004d44  280b              CMP      r0,#0xb
004d46  d103              BNE      |L1.19792|
004d48  48d5              LDR      r0,|L1.20640|
004d4a  8800              LDRH     r0,[r0,#0]  ; FZ_IMAX2
004d4c  f8a40044          STRH     r0,[r4,#0x44]
                  |L1.19792|
;;;8120   //if(spc_stat==spcVZ) IZMAX_=IMAX_VZ;
;;;8121   
;;;8122   if(cntrl_stat_blok_cnt)cntrl_stat_blok_cnt--;
004d50  f9b4006c          LDRSH    r0,[r4,#0x6c]  ; cntrl_stat_blok_cnt
004d54  b118              CBZ      r0,|L1.19806|
004d56  f1a00001          SUB      r0,r0,#1
004d5a  f8a4006c          STRH     r0,[r4,#0x6c]
                  |L1.19806|
;;;8123   if(cntrl_stat_blok_cnt_)cntrl_stat_blok_cnt_--;
004d5e  f9b4006e          LDRSH    r0,[r4,#0x6e]  ; cntrl_stat_blok_cnt_
004d62  b118              CBZ      r0,|L1.19820|
004d64  f1a00001          SUB      r0,r0,#1
004d68  f8a4006e          STRH     r0,[r4,#0x6e]
                  |L1.19820|
;;;8124   
;;;8125   if((bat[0]._temper_stat&0x03)||(bat[1]._temper_stat&0x03))IZMAX_=IZMAX_/10;
004d6c  48cd              LDR      r0,|L1.20644|
004d6e  f04f080a          MOV      r8,#0xa               ;8117
004d72  f890103f          LDRB     r1,[r0,#0x3f]  ; bat
004d76  0789              LSLS     r1,r1,#30
004d78  d103              BNE      |L1.19842|
004d7a  f890008b          LDRB     r0,[r0,#0x8b]  ; bat
004d7e  0780              LSLS     r0,r0,#30
004d80  d005              BEQ      |L1.19854|
                  |L1.19842|
004d82  f8b40044          LDRH     r0,[r4,#0x44]  ; IZMAX_
004d86  fbb0f0f8          UDIV     r0,r0,r8
004d8a  f8a40044          STRH     r0,[r4,#0x44]
                  |L1.19854|
;;;8126   
;;;8127   
;;;8128   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;8129   if((REG_SPEED<1)||(REG_SPEED>5)) REG_SPEED=1;
004d8e  48c6              LDR      r0,|L1.20648|
004d90  2601              MOVS     r6,#1
004d92  f9b01000          LDRSH    r1,[r0,#0]  ; REG_SPEED
004d96  1e49              SUBS     r1,r1,#1
004d98  2905              CMP      r1,#5
004d9a  d300              BCC      |L1.19870|
004d9c  8006              STRH     r6,[r0,#0]
                  |L1.19870|
;;;8130   if(ch_cnt0<(10*REG_SPEED))
004d9e  f9b00000          LDRSH    r0,[r0,#0]  ; REG_SPEED
004da2  2500              MOVS     r5,#0                 ;8116
004da4  eb000180          ADD      r1,r0,r0,LSL #2
004da8  7ae0              LDRB     r0,[r4,#0xb]  ; ch_cnt0
004daa  ebb00f41          CMP      r0,r1,LSL #1
004dae  da08              BGE      |L1.19906|
;;;8131   	{
;;;8132   	ch_cnt0++;
004db0  f1000001          ADD      r0,r0,#1
004db4  b2c0              UXTB     r0,r0
004db6  72e0              STRB     r0,[r4,#0xb]
;;;8133   	if(ch_cnt0>=10*REG_SPEED)
004db8  ebb00f41          CMP      r0,r1,LSL #1
004dbc  db01              BLT      |L1.19906|
;;;8134   		{
;;;8135   		ch_cnt0=0;
004dbe  72e5              STRB     r5,[r4,#0xb]
;;;8136   		b1Hz_ch=1;
004dc0  7326              STRB     r6,[r4,#0xc]
                  |L1.19906|
;;;8137   		}
;;;8138   	}
;;;8139   #endif
;;;8140   #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;8141   if(ch_cnt0<10)
;;;8142   	{
;;;8143   	ch_cnt0++;
;;;8144   	if(ch_cnt0>=10)
;;;8145   		{
;;;8146   		ch_cnt0=0;
;;;8147   		b1Hz_ch=1;
;;;8148   		}
;;;8149   	}
;;;8150   #endif
;;;8151   
;;;8152   
;;;8153   if(mess_find_unvol(MESS2CNTRL_HNDL))
004dc2  20e1              MOVS     r0,#0xe1
004dc4  f7fffffe          BL       mess_find_unvol
;;;8154   	{
;;;8155   	if(mess_data[0]==PARAM_CNTRL_STAT_PLUS)
;;;8156   		{
;;;8157   		cntrl_stat_new=cntrl_stat_old+mess_data[1];
;;;8158   		}
;;;8159   	else if(mess_data[0]==PARAM_CNTRL_STAT_MINUS)
;;;8160   		{
;;;8161   		cntrl_stat_new=cntrl_stat_old-mess_data[1];
;;;8162   		}
;;;8163   	else if(mess_data[0]==PARAM_CNTRL_STAT_STEP_DOWN)
;;;8164   		{
;;;8165   		static char cntrlStatIsDownCnt;
;;;8166   		cntrl_stat--;
;;;8167   
;;;8168   		if((cntrl_stat<=30)||(load_U<USIGN))
;;;8169   			{
;;;8170   			if(++cntrlStatIsDownCnt==250)mess_send(MESS2KB_HNDL,PARAM_CNTRL_IS_DOWN,0,10);
;;;8171   			}
;;;8172   		else 
;;;8173   			{
;;;8174   			cntrlStatIsDownCnt=0;
;;;8175   			}
;;;8176   
;;;8177   		}
;;;8178   	else if(mess_data[0]==PARAM_CNTRL_STAT_SET)
;;;8179   		{
;;;8180   		cntrl_stat_new=mess_data[1];
;;;8181   		}
;;;8182   
;;;8183   	else if(mess_data[0]==PARAM_CNTRL_STAT_FAST_REG)
;;;8184   		{
;;;8185   		#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;8186   		if(bps_U>u_necc)
004dc8  f8dfc2e0          LDR      r12,|L1.20652|
004dcc  4ab8              LDR      r2,|L1.20656|
;;;8187   			{
;;;8188   			cntrl_hndl_plazma=11;
;;;8189   			if(((bps_U-u_necc)>40)&&(cntrl_stat_new>0))cntrl_stat_new-=5;
;;;8190   			else if((cntrl_stat_new)&&b1Hz_ch)cntrl_stat_new--;
;;;8191   			}
;;;8192   		else if(bps_U<u_necc)
;;;8193   			{
;;;8194   			cntrl_hndl_plazma=12;	
;;;8195   			if(((u_necc-bps_U)>40)&&(cntrl_stat_new<1015))cntrl_stat_new+=5;
;;;8196   			else	if((cntrl_stat_new<1020)&&b1Hz_ch)cntrl_stat_new++;
;;;8197   			}
;;;8198   		#elif defined(UKU_220)
;;;8199   		if(load_U>u_necc)
;;;8200   			{
;;;8201   			cntrl_hndl_plazma=13;
;;;8202   			if(((load_U-u_necc)>40)&&(cntrl_stat_new>0))cntrl_stat_new-=5;
;;;8203   			else if((cntrl_stat_new)&&b1Hz_ch)cntrl_stat_new--;
;;;8204   			}
;;;8205   		else if(load_U<u_necc)
;;;8206   			{
;;;8207   			cntrl_hndl_plazma=14;	
;;;8208   			if(((u_necc-load_U)>40)&&(cntrl_stat_new<1015))cntrl_stat_new+=5;
;;;8209   			else	if((cntrl_stat_new<1020)&&b1Hz_ch)cntrl_stat_new++;
;;;8210   			}
;;;8211   		#elif defined(UKU_220_V2)
;;;8212   		if(load_U>u_necc)
;;;8213   			{
;;;8214   			cntrl_hndl_plazma=15;
;;;8215   			if(((load_U-u_necc)>40)&&(cntrl_stat_new>0))cntrl_stat_new-=5;
;;;8216   			else if((cntrl_stat_new)&&b1Hz_ch)cntrl_stat_new--;
;;;8217   			}
;;;8218   		else if(load_U<u_necc)
;;;8219   			{
;;;8220   			cntrl_hndl_plazma=16;	
;;;8221   			if(((u_necc-load_U)>40)&&(cntrl_stat_new<1015))cntrl_stat_new+=5;
;;;8222   			else	if((cntrl_stat_new<1020)&&b1Hz_ch)cntrl_stat_new++;
;;;8223   			}
;;;8224   		#else
;;;8225   
;;;8226   		if(load_U>u_necc)
;;;8227   			{
;;;8228   			cntrl_hndl_plazma=17;
;;;8229   			if(((load_U-u_necc)>10)&&(cntrl_stat_new>0))cntrl_stat_new-=5;
;;;8230   			else if((cntrl_stat_new)&&b1Hz_ch)cntrl_stat_new--;
;;;8231   			}
;;;8232   		else if(load_U<u_necc)
;;;8233   			{
;;;8234   			cntrl_hndl_plazma=18;	
;;;8235   			if(((u_necc-load_U)>10)&&(cntrl_stat_new<1015))cntrl_stat_new+=5;
;;;8236   			else	if((cntrl_stat_new<1020)&&b1Hz_ch)cntrl_stat_new++;
;;;8237   			}
;;;8238   		#endif	
;;;8239   	 	}
;;;8240   
;;;8241   	gran(&cntrl_stat_new,10,1010);			
;;;8242   	cntrl_stat_old=cntrl_stat_new;
;;;8243   	cntrl_stat=cntrl_stat_new;
;;;8244   	}
;;;8245   
;;;8246   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;8247   else if((b1Hz_ch)&&((!bIBAT_SMKLBR)||(bps[8]._cnt>40)))
004dce  f8df92e4          LDR      r9,|L1.20660|
;;;8248   	{
;;;8249   	cntrl_stat_new=cntrl_stat_old;
;;;8250   	cntrl_hndl_plazma=19;
;;;8251   	if((Ibmax/10)>(2*IZMAX_))
;;;8252   		{
;;;8253   		cntrl_hndl_plazma=20;
;;;8254             if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8255   		else	cntrl_stat_new-=10;
;;;8256   		}		
;;;8257   	else if(((Ibmax/10)<(IZMAX_*2))&&(Ibmax>(IZMAX_*15)))
;;;8258   		{
;;;8259   		cntrl_hndl_plazma=21;
;;;8260             if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8261             else	cntrl_stat_new-=3;
;;;8262   		}   
;;;8263   	else if((Ibmax<(IZMAX_*15))&&((Ibmax/10)>IZMAX_))
;;;8264   		{
;;;8265   		cntrl_hndl_plazma=22;
;;;8266   		cntrl_stat_new--;
;;;8267   		}
;;;8268   		
;;;8269   	else if(bps_U<u_necc)
;;;8270   		{
;;;8271   		cntrl_hndl_plazma=23;
;;;8272   		if(bps_U<(u_necc-(UB0-UB20)))
;;;8273   			{
;;;8274   			cntrl_hndl_plazma=24;
;;;8275   			if(Ibmax<0)
;;;8276   				{
;;;8277   				cntrl_hndl_plazma=25;
;;;8278                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8279   				else cntrl_stat_new+=10;
;;;8280   				}
;;;8281   			else if(Ibmax<(IZMAX_*5))
;;;8282   				{
;;;8283   				cntrl_hndl_plazma=26;
;;;8284                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8285   				else	cntrl_stat_new+=2;
;;;8286   				}
;;;8287   			else if(Ibmax<((IZMAX_*10)/*-10*/))//(Ibmax<((IZMAX_*95)/10))
;;;8288   				{
;;;8289   				cntrl_hndl_plazma=27;
;;;8290   				cntrl_stat_new++;
;;;8291   				}					
;;;8292   			}
;;;8293   		else if(bps_U<(u_necc-((UB0-UB20)/4)))
;;;8294   			{
;;;8295   			cntrl_hndl_plazma=28;
;;;8296   			if(Ibmax<(IZMAX_*5))
;;;8297   				{
;;;8298   				cntrl_hndl_plazma=29;
;;;8299                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8300   				else	cntrl_stat_new+=2;
;;;8301   				}
;;;8302   			else if(Ibmax<((IZMAX_*10)/*-10*/))//(Ibmax<((IZMAX_*95)/10))
;;;8303   				{
;;;8304   				cntrl_hndl_plazma=30;
;;;8305   				cntrl_stat_new++;
;;;8306   				}					
;;;8307   			}	
;;;8308   		else if(bps_U<(u_necc-1))
;;;8309   			{
;;;8310   			cntrl_hndl_plazma=31;
;;;8311   			if(Ibmax<((IZMAX_*10)/*-10*/))//(Ibmax<((IZMAX_*95)/10))
;;;8312   				{
;;;8313   				cntrl_hndl_plazma=32;
;;;8314   				cntrl_stat_new++;
;;;8315   				}					
;;;8316   			}					
;;;8317   		}	
;;;8318   	else if((bps_U>u_necc)/*&&(!cntrl_blok)*/)
;;;8319   		{ 	
;;;8320   		cntrl_hndl_plazma=33;
;;;8321   		if(bps_U>(u_necc+(UB0-UB20)))
;;;8322   			{
;;;8323   			cntrl_hndl_plazma=34;
;;;8324                  if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8325   			else	cntrl_stat_new-=10;
;;;8326   			}
;;;8327   		else if(bps_U>(u_necc+((UB0-UB20)/4)))
;;;8328   			{
;;;8329   			cntrl_hndl_plazma=35;
;;;8330                  if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8331   			else cntrl_stat_new-=2;
;;;8332   			}	
;;;8333   		else if(bps_U>(u_necc+1))
;;;8334   			{
;;;8335   			cntrl_hndl_plazma=36;
;;;8336   			cntrl_stat_new--;
;;;8337   			}					
;;;8338   		}
;;;8339   
;;;8340   	if((hv_vz_stat==hvsOFF)&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF))
;;;8341   		{
;;;8342   		if(((sk_stat[1]==1)&&(sk_stat_old[1]==0))&&(VZ_KIND==1))cntrl_stat_new=50;
;;;8343   		}
;;;8344   
;;;8345   	gran(&cntrl_stat_new,10,1010);			
;;;8346   	cntrl_stat_old=cntrl_stat_new;
;;;8347   	cntrl_stat=cntrl_stat_new;
;;;8348   	
;;;8349   	if(ICA_EN==0)
;;;8350   		{
;;;8351   		if(ica_cntrl_hndl_cnt)
004dd2  4fb9              LDR      r7,|L1.20664|
004dd4  2800              CMP      r0,#0                 ;8153
004dd6  d070              BEQ      |L1.20154|
004dd8  49b8              LDR      r1,|L1.20668|
004dda  6808              LDR      r0,[r1,#0]            ;8155  ; mess_data
004ddc  2864              CMP      r0,#0x64              ;8155
004dde  d008              BEQ      |L1.19954|
004de0  2869              CMP      r0,#0x69              ;8159
004de2  d00c              BEQ      |L1.19966|
004de4  286e              CMP      r0,#0x6e              ;8163
004de6  d011              BEQ      |L1.19980|
004de8  28e5              CMP      r0,#0xe5              ;8178
004dea  d02d              BEQ      |L1.20040|
004dec  28e6              CMP      r0,#0xe6              ;8183
004dee  d02f              BEQ      |L1.20048|
004df0  e06f              B        |L1.20178|
                  |L1.19954|
004df2  6848              LDR      r0,[r1,#4]            ;8157  ; mess_data
004df4  8da1              LDRH     r1,[r4,#0x2c]         ;8157  ; cntrl_stat_old
004df6  4408              ADD      r0,r0,r1              ;8157
004df8  f8a40040          STRH     r0,[r4,#0x40]         ;8157
004dfc  e069              B        |L1.20178|
                  |L1.19966|
004dfe  6848              LDR      r0,[r1,#4]            ;8161  ; mess_data
004e00  8da1              LDRH     r1,[r4,#0x2c]         ;8161  ; cntrl_stat_old
004e02  eba10000          SUB      r0,r1,r0              ;8161
004e06  f8a40040          STRH     r0,[r4,#0x40]         ;8161
004e0a  e062              B        |L1.20178|
                  |L1.19980|
004e0c  8d60              LDRH     r0,[r4,#0x2a]         ;8166  ; cntrl_stat
004e0e  f1a00001          SUB      r0,r0,#1              ;8166
004e12  b200              SXTH     r0,r0                 ;8166
004e14  8560              STRH     r0,[r4,#0x2a]         ;8166
004e16  281e              CMP      r0,#0x1e              ;8168
004e18  dd07              BLE      |L1.20010|
004e1a  48a9              LDR      r0,|L1.20672|
004e1c  49a9              LDR      r1,|L1.20676|
004e1e  f9b00000          LDRSH    r0,[r0,#0]            ;8168  ; load_U
004e22  f9b11000          LDRSH    r1,[r1,#0]            ;8168  ; USIGN
004e26  4288              CMP      r0,r1                 ;8168
004e28  da0c              BGE      |L1.20036|
                  |L1.20010|
004e2a  7960              LDRB     r0,[r4,#5]            ;8170  ; cntrlStatIsDownCnt
004e2c  1c40              ADDS     r0,r0,#1              ;8170
004e2e  b2c0              UXTB     r0,r0                 ;8170
004e30  7160              STRB     r0,[r4,#5]            ;8170
004e32  28fa              CMP      r0,#0xfa              ;8170
004e34  d14d              BNE      |L1.20178|
004e36  230a              MOVS     r3,#0xa               ;8170
004e38  2200              MOVS     r2,#0                 ;8170
004e3a  21e7              MOVS     r1,#0xe7              ;8170
004e3c  20e6              MOVS     r0,#0xe6              ;8170
004e3e  f7fffffe          BL       mess_send
004e42  e046              B        |L1.20178|
                  |L1.20036|
004e44  7165              STRB     r5,[r4,#5]            ;8174
004e46  e044              B        |L1.20178|
                  |L1.20040|
004e48  6848              LDR      r0,[r1,#4]            ;8180  ; mess_data
004e4a  f8a40040          STRH     r0,[r4,#0x40]         ;8180
004e4e  e040              B        |L1.20178|
                  |L1.20048|
004e50  f9bc0000          LDRSH    r0,[r12,#0]           ;8186  ; bps_U
004e54  f9b21000          LDRSH    r1,[r2,#0]            ;8186  ; u_necc
004e58  4288              CMP      r0,r1                 ;8186
004e5a  dd1a              BLE      |L1.20114|
004e5c  f04f020b          MOV      r2,#0xb               ;8188
004e60  f8842023          STRB     r2,[r4,#0x23]         ;8188
004e64  eba00001          SUB      r0,r0,r1              ;8189
004e68  2828              CMP      r0,#0x28              ;8189
004e6a  dd08              BLE      |L1.20094|
004e6c  f9b40040          LDRSH    r0,[r4,#0x40]         ;8189  ; cntrl_stat_new
004e70  2800              CMP      r0,#0                 ;8189
004e72  dd04              BLE      |L1.20094|
004e74  f1a00005          SUB      r0,r0,#5              ;8189
004e78  f8a40040          STRH     r0,[r4,#0x40]         ;8189
004e7c  e029              B        |L1.20178|
                  |L1.20094|
004e7e  f9b40040          LDRSH    r0,[r4,#0x40]         ;8190  ; cntrl_stat_new
004e82  b330              CBZ      r0,|L1.20178|
004e84  7b21              LDRB     r1,[r4,#0xc]          ;8190  ; b1Hz_ch
004e86  b321              CBZ      r1,|L1.20178|
004e88  f1a00001          SUB      r0,r0,#1              ;8190
004e8c  f8a40040          STRH     r0,[r4,#0x40]         ;8190
004e90  e01f              B        |L1.20178|
                  |L1.20114|
004e92  da1e              BGE      |L1.20178|
004e94  f04f020c          MOV      r2,#0xc               ;8194
004e98  f8842023          STRB     r2,[r4,#0x23]         ;8194
004e9c  eba10000          SUB      r0,r1,r0              ;8195
004ea0  2828              CMP      r0,#0x28              ;8195
004ea2  dd0b              BLE      |L1.20156|
004ea4  f9b40040          LDRSH    r0,[r4,#0x40]         ;8195  ; cntrl_stat_new
004ea8  f24031f7          MOV      r1,#0x3f7             ;8195
004eac  4288              CMP      r0,r1                 ;8195
004eae  da05              BGE      |L1.20156|
004eb0  f1000005          ADD      r0,r0,#5              ;8195
004eb4  f8a40040          STRH     r0,[r4,#0x40]         ;8195
004eb8  e00b              B        |L1.20178|
                  |L1.20154|
004eba  e016              B        |L1.20202|
                  |L1.20156|
004ebc  f9b40040          LDRSH    r0,[r4,#0x40]         ;8196  ; cntrl_stat_new
004ec0  f5b07f7f          CMP      r0,#0x3fc             ;8196
004ec4  da05              BGE      |L1.20178|
004ec6  7b21              LDRB     r1,[r4,#0xc]          ;8196  ; b1Hz_ch
004ec8  b119              CBZ      r1,|L1.20178|
004eca  f1000001          ADD      r0,r0,#1              ;8196
004ece  f8a40040          STRH     r0,[r4,#0x40]         ;8196
                  |L1.20178|
004ed2  486d              LDR      r0,|L1.20616|
004ed4  f24032f2          MOV      r2,#0x3f2             ;8241
004ed8  210a              MOVS     r1,#0xa               ;8241
004eda  3040              ADDS     r0,r0,#0x40           ;8241
004edc  f7fffffe          BL       gran
004ee0  f8b40040          LDRH     r0,[r4,#0x40]         ;8242  ; cntrl_stat_new
004ee4  85a0              STRH     r0,[r4,#0x2c]         ;8242
004ee6  8560              STRH     r0,[r4,#0x2a]         ;8243
                  |L1.20200|
004ee8  e190              B        |L1.21004|
                  |L1.20202|
004eea  7b20              LDRB     r0,[r4,#0xc]          ;8247  ; b1Hz_ch
004eec  2800              CMP      r0,#0                 ;8247
004eee  d0fb              BEQ      |L1.20200|
004ef0  4875              LDR      r0,|L1.20680|
004ef2  8800              LDRH     r0,[r0,#0]            ;8247  ; bIBAT_SMKLBR
004ef4  b118              CBZ      r0,|L1.20222|
004ef6  f89902e3          LDRB     r0,[r9,#0x2e3]        ;8247  ; bps
004efa  2828              CMP      r0,#0x28              ;8247
004efc  d9f4              BLS      |L1.20200|
                  |L1.20222|
004efe  f1040422          ADD      r4,r4,#0x22           ;8249
004f02  f9b4000a          LDRSH    r0,[r4,#0xa]          ;8249  ; cntrl_stat_old
004f06  83e0              STRH     r0,[r4,#0x1e]         ;8249
004f08  f04f0113          MOV      r1,#0x13              ;8250
004f0c  7061              STRB     r1,[r4,#1]            ;8250
004f0e  f9b41020          LDRSH    r1,[r4,#0x20]         ;8251  ; Ibmax
004f12  8c63              LDRH     r3,[r4,#0x22]         ;8251  ; IZMAX_
004f14  fb91f8f8          SDIV     r8,r1,r8              ;8251
004f18  f1a40422          SUB      r4,r4,#0x22           ;8251
004f1c  ebb80f43          CMP      r8,r3,LSL #1          ;8251
004f20  dd10              BLE      |L1.20292|
004f22  f04f0114          MOV      r1,#0x14              ;8253
004f26  f8841023          STRB     r1,[r4,#0x23]         ;8253
004f2a  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8254  ; cntrl_stat_blok_cnt
004f2e  b121              CBZ      r1,|L1.20282|
004f30  f1a00001          SUB      r0,r0,#1              ;8254
004f34  f8a40040          STRH     r0,[r4,#0x40]         ;8254
004f38  e130              B        |L1.20892|
                  |L1.20282|
004f3a  f1a0000a          SUB      r0,r0,#0xa            ;8255
004f3e  f8a40040          STRH     r0,[r4,#0x40]         ;8255
004f42  e12b              B        |L1.20892|
                  |L1.20292|
004f44  da14              BGE      |L1.20336|
004f46  ebc31a03          RSB      r10,r3,r3,LSL #4      ;8257
004f4a  458a              CMP      r10,r1                ;8257
004f4c  da10              BGE      |L1.20336|
004f4e  f04f0115          MOV      r1,#0x15              ;8259
004f52  f8841023          STRB     r1,[r4,#0x23]         ;8259
004f56  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8260  ; cntrl_stat_blok_cnt
004f5a  b121              CBZ      r1,|L1.20326|
004f5c  f1a00001          SUB      r0,r0,#1              ;8260
004f60  f8a40040          STRH     r0,[r4,#0x40]         ;8260
004f64  e11a              B        |L1.20892|
                  |L1.20326|
004f66  f1a00003          SUB      r0,r0,#3              ;8261
004f6a  f8a40040          STRH     r0,[r4,#0x40]         ;8261
004f6e  e115              B        |L1.20892|
                  |L1.20336|
004f70  ebc31a03          RSB      r10,r3,r3,LSL #4      ;8263
004f74  458a              CMP      r10,r1                ;8263
004f76  dd0a              BLE      |L1.20366|
004f78  4598              CMP      r8,r3                 ;8263
004f7a  dd08              BLE      |L1.20366|
004f7c  f04f0116          MOV      r1,#0x16              ;8265
004f80  f8841023          STRB     r1,[r4,#0x23]         ;8265
004f84  f1a00001          SUB      r0,r0,#1              ;8266
004f88  f8a40040          STRH     r0,[r4,#0x40]         ;8266
004f8c  e106              B        |L1.20892|
                  |L1.20366|
004f8e  f9bcc000          LDRSH    r12,[r12,#0]          ;8269  ; bps_U
004f92  f9b22000          LDRSH    r2,[r2,#0]            ;8269  ; u_necc
004f96  f8df8134          LDR      r8,|L1.20684|
004f9a  f8dfb134          LDR      r11,|L1.20688|
004f9e  4594              CMP      r12,r2                ;8269
004fa0  da66              BGE      |L1.20592|
004fa2  f04f0a17          MOV      r10,#0x17             ;8271
004fa6  f884a023          STRB     r10,[r4,#0x23]        ;8271
004faa  f9b88000          LDRSH    r8,[r8,#0]            ;8272  ; UB0
004fae  f9bba000          LDRSH    r10,[r11,#0]          ;8272  ; UB20
004fb2  eba8080a          SUB      r8,r8,r10             ;8272
004fb6  eba20a08          SUB      r10,r2,r8             ;8272
004fba  45e2              CMP      r10,r12               ;8272
004fbc  dd37              BLE      |L1.20526|
004fbe  f04f0218          MOV      r2,#0x18              ;8274
004fc2  f8842023          STRB     r2,[r4,#0x23]         ;8274
004fc6  2900              CMP      r1,#0                 ;8275
004fc8  da10              BGE      |L1.20460|
004fca  f04f0119          MOV      r1,#0x19              ;8277
004fce  f8841023          STRB     r1,[r4,#0x23]         ;8277
004fd2  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8278  ; cntrl_stat_blok_cnt
004fd6  b121              CBZ      r1,|L1.20450|
004fd8  f1000001          ADD      r0,r0,#1              ;8278
004fdc  f8a40040          STRH     r0,[r4,#0x40]         ;8278
004fe0  e0dc              B        |L1.20892|
                  |L1.20450|
004fe2  f100000a          ADD      r0,r0,#0xa            ;8279
004fe6  f8a40040          STRH     r0,[r4,#0x40]         ;8279
004fea  e0d7              B        |L1.20892|
                  |L1.20460|
004fec  eb030283          ADD      r2,r3,r3,LSL #2       ;8281
004ff0  428a              CMP      r2,r1                 ;8281
004ff2  dd10              BLE      |L1.20502|
004ff4  f04f011a          MOV      r1,#0x1a              ;8283
004ff8  f8841023          STRB     r1,[r4,#0x23]         ;8283
004ffc  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8284  ; cntrl_stat_blok_cnt
005000  b121              CBZ      r1,|L1.20492|
005002  f1000001          ADD      r0,r0,#1              ;8284
005006  f8a40040          STRH     r0,[r4,#0x40]         ;8284
00500a  e0c7              B        |L1.20892|
                  |L1.20492|
00500c  f1000002          ADD      r0,r0,#2              ;8285
005010  f8a40040          STRH     r0,[r4,#0x40]         ;8285
005014  e0c2              B        |L1.20892|
                  |L1.20502|
005016  ebb10f42          CMP      r1,r2,LSL #1          ;8287
00501a  da07              BGE      |L1.20524|
00501c  f04f011b          MOV      r1,#0x1b              ;8289
005020  f8841023          STRB     r1,[r4,#0x23]         ;8289
005024  f1000001          ADD      r0,r0,#1              ;8290
005028  f8a40040          STRH     r0,[r4,#0x40]         ;8290
                  |L1.20524|
00502c  e0b6              B        |L1.20892|
                  |L1.20526|
00502e  ea4f7ae8          ASR      r10,r8,#31            ;8293
005032  eb08789a          ADD      r8,r8,r10,LSR #30     ;8293
005036  eba208a8          SUB      r8,r2,r8,ASR #2       ;8293
00503a  45e0              CMP      r8,r12                ;8293
00503c  dd56              BLE      |L1.20716|
00503e  f04f021c          MOV      r2,#0x1c              ;8295
005042  f8842023          STRB     r2,[r4,#0x23]         ;8295
005046  eb030283          ADD      r2,r3,r3,LSL #2       ;8296
00504a  428a              CMP      r2,r1                 ;8296
00504c  dd42              BLE      |L1.20692|
00504e  f04f011d          MOV      r1,#0x1d              ;8298
005052  f8841023          STRB     r1,[r4,#0x23]         ;8298
005056  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8299  ; cntrl_stat_blok_cnt
00505a  b121              CBZ      r1,|L1.20582|
00505c  f1000001          ADD      r0,r0,#1              ;8299
005060  f8a40040          STRH     r0,[r4,#0x40]         ;8299
005064  e09a              B        |L1.20892|
                  |L1.20582|
005066  f1000002          ADD      r0,r0,#2              ;8300
00506a  f8a40040          STRH     r0,[r4,#0x40]         ;8300
00506e  e095              B        |L1.20892|
                  |L1.20592|
005070  e051              B        |L1.20758|
005072  0000              DCW      0x0000
                  |L1.20596|
                          DCD      IMIN
                  |L1.20600|
                          DCD      num_necc
                  |L1.20604|
                          DCD      PAR
                  |L1.20608|
                          DCD      NUMIST
                  |L1.20612|
                          DCD      IZMAX
                  |L1.20616|
                          DCD      ||area_number.25||
                  |L1.20620|
                          DCD      speedChIsOn
                  |L1.20624|
                          DCD      sp_ch_stat
                  |L1.20628|
                          DCD      speedChrgCurr
                  |L1.20632|
                          DCD      UZ_IMAX
                  |L1.20636|
                          DCD      FZ_IMAX1
                  |L1.20640|
                          DCD      FZ_IMAX2
                  |L1.20644|
                          DCD      bat
                  |L1.20648|
                          DCD      REG_SPEED
                  |L1.20652|
                          DCD      bps_U
                  |L1.20656|
                          DCD      u_necc
                  |L1.20660|
                          DCD      bps
                  |L1.20664|
                          DCD      ica_cntrl_hndl_cnt
                  |L1.20668|
                          DCD      mess_data
                  |L1.20672|
                          DCD      load_U
                  |L1.20676|
                          DCD      USIGN
                  |L1.20680|
                          DCD      bIBAT_SMKLBR
                  |L1.20684|
                          DCD      UB0
                  |L1.20688|
                          DCD      UB20
                  |L1.20692|
0050d4  ebb10f42          CMP      r1,r2,LSL #1          ;8302
0050d8  da60              BGE      |L1.20892|
0050da  f04f011e          MOV      r1,#0x1e              ;8304
0050de  f8841023          STRB     r1,[r4,#0x23]         ;8304
0050e2  f1000001          ADD      r0,r0,#1              ;8305
0050e6  f8a40040          STRH     r0,[r4,#0x40]         ;8305
0050ea  e057              B        |L1.20892|
                  |L1.20716|
0050ec  1e52              SUBS     r2,r2,#1              ;8308
0050ee  4594              CMP      r12,r2                ;8308
0050f0  da54              BGE      |L1.20892|
0050f2  f04f021f          MOV      r2,#0x1f              ;8310
0050f6  f8842023          STRB     r2,[r4,#0x23]         ;8310
0050fa  eb030283          ADD      r2,r3,r3,LSL #2       ;8311
0050fe  ebb10f42          CMP      r1,r2,LSL #1          ;8311
005102  da4b              BGE      |L1.20892|
005104  f04f0120          MOV      r1,#0x20              ;8313
005108  f8841023          STRB     r1,[r4,#0x23]         ;8313
00510c  f1000001          ADD      r0,r0,#1              ;8314
005110  f8a40040          STRH     r0,[r4,#0x40]         ;8314
005114  e042              B        |L1.20892|
                  |L1.20758|
005116  dd41              BLE      |L1.20892|
005118  f04f0121          MOV      r1,#0x21              ;8320
00511c  f8841023          STRB     r1,[r4,#0x23]         ;8320
005120  f9b81000          LDRSH    r1,[r8,#0]            ;8321  ; UB0
005124  f9bb3000          LDRSH    r3,[r11,#0]           ;8321  ; UB20
005128  eba10103          SUB      r1,r1,r3              ;8321
00512c  eb010302          ADD      r3,r1,r2              ;8321
005130  4563              CMP      r3,r12                ;8321
005132  da10              BGE      |L1.20822|
005134  f04f0122          MOV      r1,#0x22              ;8323
005138  f8841023          STRB     r1,[r4,#0x23]         ;8323
00513c  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8324  ; cntrl_stat_blok_cnt
005140  b121              CBZ      r1,|L1.20812|
005142  f1a00001          SUB      r0,r0,#1              ;8324
005146  f8a40040          STRH     r0,[r4,#0x40]         ;8324
00514a  e027              B        |L1.20892|
                  |L1.20812|
00514c  f1a0000a          SUB      r0,r0,#0xa            ;8325
005150  f8a40040          STRH     r0,[r4,#0x40]         ;8325
005154  e022              B        |L1.20892|
                  |L1.20822|
005156  17cb              ASRS     r3,r1,#31             ;8327
005158  eb017193          ADD      r1,r1,r3,LSR #30      ;8327
00515c  eb0201a1          ADD      r1,r2,r1,ASR #2       ;8327
005160  4561              CMP      r1,r12                ;8327
005162  da10              BGE      |L1.20870|
005164  f04f0123          MOV      r1,#0x23              ;8329
005168  f8841023          STRB     r1,[r4,#0x23]         ;8329
00516c  f8b4106c          LDRH     r1,[r4,#0x6c]         ;8330  ; cntrl_stat_blok_cnt
005170  b121              CBZ      r1,|L1.20860|
005172  f1a00001          SUB      r0,r0,#1              ;8330
005176  f8a40040          STRH     r0,[r4,#0x40]         ;8330
00517a  e00f              B        |L1.20892|
                  |L1.20860|
00517c  f1a00002          SUB      r0,r0,#2              ;8331
005180  f8a40040          STRH     r0,[r4,#0x40]         ;8331
005184  e00a              B        |L1.20892|
                  |L1.20870|
005186  1c52              ADDS     r2,r2,#1              ;8333
005188  4594              CMP      r12,r2                ;8333
00518a  dd07              BLE      |L1.20892|
00518c  f04f0124          MOV      r1,#0x24              ;8335
005190  f8841023          STRB     r1,[r4,#0x23]         ;8335
005194  f1a00001          SUB      r0,r0,#1              ;8336
005198  f8a40040          STRH     r0,[r4,#0x40]         ;8336
                  |L1.20892|
00519c  48ff              LDR      r0,|L1.21916|
00519e  f8941024          LDRB     r1,[r4,#0x24]         ;8340  ; vz1_stat
0051a2  7800              LDRB     r0,[r0,#0]            ;8340  ; hv_vz_stat
0051a4  4308              ORRS     r0,r0,r1              ;8340
0051a6  f8941027          LDRB     r1,[r4,#0x27]         ;8340  ; vz2_stat
0051aa  4308              ORRS     r0,r0,r1              ;8340
0051ac  d10e              BNE      |L1.20940|
0051ae  48fc              LDR      r0,|L1.21920|
0051b0  7840              LDRB     r0,[r0,#1]            ;8342  ; sk_stat
0051b2  2801              CMP      r0,#1                 ;8342
0051b4  d10a              BNE      |L1.20940|
0051b6  48fb              LDR      r0,|L1.21924|
0051b8  7840              LDRB     r0,[r0,#1]            ;8342  ; sk_stat_old
0051ba  b938              CBNZ     r0,|L1.20940|
0051bc  48fa              LDR      r0,|L1.21928|
0051be  8800              LDRH     r0,[r0,#0]            ;8342  ; VZ_KIND
0051c0  2801              CMP      r0,#1                 ;8342
0051c2  d103              BNE      |L1.20940|
0051c4  f04f0032          MOV      r0,#0x32              ;8342
0051c8  f8a40040          STRH     r0,[r4,#0x40]         ;8342
                  |L1.20940|
0051cc  f24032f2          MOV      r2,#0x3f2             ;8345
0051d0  210a              MOVS     r1,#0xa               ;8345
0051d2  48f6              LDR      r0,|L1.21932|
0051d4  f7fffffe          BL       gran
0051d8  f8b40040          LDRH     r0,[r4,#0x40]         ;8346  ; cntrl_stat_new
0051dc  85a0              STRH     r0,[r4,#0x2c]         ;8346
0051de  8560              STRH     r0,[r4,#0x2a]         ;8347
0051e0  48f3              LDR      r0,|L1.21936|
0051e2  f9b00000          LDRSH    r0,[r0,#0]            ;8349  ; ICA_EN
0051e6  b938              CBNZ     r0,|L1.20984|
0051e8  8839              LDRH     r1,[r7,#0]  ; ica_cntrl_hndl_cnt
0051ea  b129              CBZ      r1,|L1.20984|
;;;8352   			{
;;;8353   			cntrl_stat = ica_cntrl_hndl;
0051ec  49f1              LDR      r1,|L1.21940|
0051ee  8809              LDRH     r1,[r1,#0]  ; ica_cntrl_hndl
0051f0  8561              STRH     r1,[r4,#0x2a]
;;;8354   			cntrl_stat_new = ica_cntrl_hndl;//=10*PWM_START;
0051f2  f8a41040          STRH     r1,[r4,#0x40]
;;;8355   			cntrl_stat_old = ica_cntrl_hndl;//=10*PWM_START;
0051f6  85a1              STRH     r1,[r4,#0x2c]
                  |L1.20984|
;;;8356   			}
;;;8357   		}
;;;8358   	
;;;8359   	if((ICA_EN==1)||(ICA_EN==2))
0051f8  2801              CMP      r0,#1
0051fa  d001              BEQ      |L1.20992|
0051fc  2802              CMP      r0,#2
0051fe  d105              BNE      |L1.21004|
                  |L1.20992|
;;;8360   		{
;;;8361   		cntrl_stat=cntrl_stat_new+ica_u_necc;
005200  49ed              LDR      r1,|L1.21944|
005202  f8b40040          LDRH     r0,[r4,#0x40]  ; cntrl_stat_new
005206  8809              LDRH     r1,[r1,#0]  ; ica_u_necc
005208  4408              ADD      r0,r0,r1
00520a  8560              STRH     r0,[r4,#0x2a]
                  |L1.21004|
;;;8362   		}			
;;;8363   	}
;;;8364   #else
;;;8365   else if((b1Hz_ch)&&((!bIBAT_SMKLBR)||(bps[8]._cnt>40)))
;;;8366   	{
;;;8367   	cntrl_hndl_plazma=37;
;;;8368   	cntrl_stat_new=cntrl_stat_old;
;;;8369   	
;;;8370   	if((Ibmax/10)>(2*IZMAX_))
;;;8371   		{
;;;8372   		cntrl_hndl_plazma=38;
;;;8373             if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8374   		else	cntrl_stat_new-=10;
;;;8375   		}		
;;;8376   	else if(((Ibmax/10)<(IZMAX_*2))&&(Ibmax>(IZMAX_*15)))
;;;8377   		{
;;;8378   		cntrl_hndl_plazma=39;
;;;8379             if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8380             else	cntrl_stat_new-=3;
;;;8381   		}   
;;;8382   	else if((Ibmax<(IZMAX_*15))&&((Ibmax/10)>IZMAX_))
;;;8383   		{
;;;8384   		cntrl_hndl_plazma=40;
;;;8385   		cntrl_stat_new--;
;;;8386   		}
;;;8387   		
;;;8388   	else if(load_U<u_necc)
;;;8389   		{
;;;8390   		cntrl_hndl_plazma=41;
;;;8391   		if(load_U<(u_necc-(UB0-UB20)))
;;;8392   			{
;;;8393   			cntrl_hndl_plazma=42;
;;;8394   			if(Ibmax<0)
;;;8395   				{
;;;8396   				cntrl_hndl_plazma=43;
;;;8397                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8398   				else cntrl_stat_new+=10;
;;;8399   				}
;;;8400   			else if(Ibmax<(IZMAX_*5))
;;;8401   				{
;;;8402   				cntrl_hndl_plazma=44;
;;;8403                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8404   				else	cntrl_stat_new+=2;
;;;8405   				}
;;;8406   			else if(Ibmax<((IZMAX_*95)/10))
;;;8407   				{
;;;8408   				cntrl_hndl_plazma=45;
;;;8409   				cntrl_stat_new++;
;;;8410   				}					
;;;8411   			}
;;;8412   		else if(load_U<(u_necc-((UB0-UB20)/4)))
;;;8413   			{
;;;8414   			cntrl_hndl_plazma=46;
;;;8415   			if(Ibmax<(IZMAX_*5))
;;;8416   				{
;;;8417   				cntrl_hndl_plazma=47;
;;;8418                       if(cntrl_stat_blok_cnt)cntrl_stat_new++;
;;;8419   				else	cntrl_stat_new+=2;
;;;8420   				}
;;;8421   			else if(Ibmax<((IZMAX_*95)/10))
;;;8422   				{
;;;8423   				cntrl_hndl_plazma=48;
;;;8424   				cntrl_stat_new++;
;;;8425   				}					
;;;8426   			}	
;;;8427   		else if(load_U<(u_necc-1))
;;;8428   			{
;;;8429   			cntrl_hndl_plazma=49;
;;;8430   			if(Ibmax<((IZMAX_*95)/10))
;;;8431   				{
;;;8432   				cntrl_hndl_plazma=50;
;;;8433   				cntrl_stat_new++;
;;;8434   				}					
;;;8435   			}					
;;;8436   		}	
;;;8437   	else if((load_U>u_necc)/*&&(!cntrl_blok)*/)
;;;8438   		{
;;;8439   		cntrl_hndl_plazma=51;
;;;8440   		if(load_U>(u_necc+(UB0-UB20)))
;;;8441   			{
;;;8442   			cntrl_hndl_plazma=52;
;;;8443                  if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8444   			else	cntrl_stat_new-=10;
;;;8445   			}
;;;8446   		else if(load_U>(u_necc+((UB0-UB20)/4)))
;;;8447   			{
;;;8448   			cntrl_hndl_plazma=53;
;;;8449                  if(cntrl_stat_blok_cnt)cntrl_stat_new--;
;;;8450   			else cntrl_stat_new-=2;
;;;8451   			}	
;;;8452   		else if(load_U>(u_necc+1))
;;;8453   			{
;;;8454   			cntrl_hndl_plazma=54;
;;;8455   			cntrl_stat_new--;
;;;8456   			}					
;;;8457   		}
;;;8458   
;;;8459   	gran(&cntrl_stat_new,10,1010);			
;;;8460   	cntrl_stat_old=cntrl_stat_new;
;;;8461   	cntrl_stat=cntrl_stat_new;	
;;;8462   	}
;;;8463   #endif
;;;8464   
;;;8465   iiii=0;
00520c  73a5              STRB     r5,[r4,#0xe]
;;;8466   for(i=0;i<NUMIST;i++)
00520e  7365              STRB     r5,[r4,#0xd]
005210  48ea              LDR      r0,|L1.21948|
005212  f9b01000          LDRSH    r1,[r0,#0]
005216  e00c              B        |L1.21042|
                  |L1.21016|
;;;8467        {
;;;8468        if(bps[i]._cnt<30)iiii=1;
005218  ebc002c0          RSB      r2,r0,r0,LSL #3
00521c  eb021200          ADD      r2,r2,r0,LSL #4
005220  eb090282          ADD      r2,r9,r2,LSL #2
005224  78d2              LDRB     r2,[r2,#3]
005226  2a1e              CMP      r2,#0x1e
005228  d200              BCS      |L1.21036|
00522a  73a6              STRB     r6,[r4,#0xe]
                  |L1.21036|
00522c  f1000001          ADD      r0,r0,#1              ;8466
005230  7360              STRB     r0,[r4,#0xd]          ;8466
                  |L1.21042|
005232  7b60              LDRB     r0,[r4,#0xd]          ;8466  ; i
005234  4288              CMP      r0,r1                 ;8466
005236  dbef              BLT      |L1.21016|
;;;8469        }
;;;8470   
;;;8471   if(iiii==0)
005238  7ba0              LDRB     r0,[r4,#0xe]  ; iiii
00523a  b928              CBNZ     r0,|L1.21064|
;;;8472        {
;;;8473        cntrl_stat=600;	
00523c  f44f7016          MOV      r0,#0x258
005240  8560              STRH     r0,[r4,#0x2a]
;;;8474        cntrl_stat_old=600;
005242  85a0              STRH     r0,[r4,#0x2c]
;;;8475        cntrl_stat_new=600;
005244  f8a40040          STRH     r0,[r4,#0x40]
                  |L1.21064|
;;;8476   	#ifdef UKU_TELECORE2015
;;;8477   	//cntrl_stat=0;
;;;8478   	//cntrl_stat_old=0;
;;;8479   	//cntrl_stat_new=0;
;;;8480   	#endif
;;;8481        }
;;;8482   
;;;8483   #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;8484   if(ica_cntrl_hndl_cnt)	ica_cntrl_hndl_cnt--;
005248  f9b70000          LDRSH    r0,[r7,#0]  ; ica_cntrl_hndl_cnt
00524c  b110              CBZ      r0,|L1.21076|
00524e  f1a00001          SUB      r0,r0,#1
005252  8038              STRH     r0,[r7,#0]
                  |L1.21076|
;;;8485   
;;;8486   
;;;8487   
;;;8488   #endif
;;;8489   
;;;8490   
;;;8491   gran(&cntrl_stat,10,1010); 
005254  48d5              LDR      r0,|L1.21932|
005256  f24032f2          MOV      r2,#0x3f2
00525a  210a              MOVS     r1,#0xa
00525c  3816              SUBS     r0,r0,#0x16
00525e  f7fffffe          BL       gran
;;;8492   b1Hz_ch=0;
005262  7325              STRB     r5,[r4,#0xc]
                  |L1.21092|
;;;8493   }
005264  e8bd9ff0          POP      {r4-r12,pc}
;;;8494   #endif
                          ENDP

                  ext_drv PROC
;;;8983   //-----------------------------------------------
;;;8984   void ext_drv(void)
005268  e92d5ff0          PUSH     {r4-r12,lr}
;;;8985   {
;;;8986   char i;
;;;8987   
;;;8988   
;;;8989   for(i=0;i<NUMSK;i++)
00526c  f04f0000          MOV      r0,#0
005270  4ad4              LDR      r2,|L1.21956|
;;;8990   	{
;;;8991   	#ifdef UKU_MGTS
;;;8992   	if(adc_buff_[sk_buff_RSTKM[i]]<2000)
;;;8993   	#endif
;;;8994   	#ifdef UKU_RSTKM
;;;8995   	if(adc_buff_[sk_buff_RSTKM[i]]<2000)
;;;8996   	#endif
;;;8997   	#ifdef UKU_3U
;;;8998   	if(adc_buff_[sk_buff_3U[i]]<2000)
;;;8999   	#endif
;;;9000   	#ifdef UKU_GLONASS
;;;9001   	if(adc_buff_[sk_buff_GLONASS[i]]<2000)
;;;9002   	#endif
;;;9003   	#ifdef UKU_KONTUR
;;;9004   	if(adc_buff_[sk_buff_KONTUR[i]]<2000)
;;;9005   	#endif
;;;9006   	#ifdef UKU_6U
;;;9007   	if(adc_buff_[sk_buff_6U[i]]<2000)
;;;9008   	#endif
;;;9009   	#ifdef UKU_220
;;;9010   	if(adc_buff_[sk_buff_220[i]]<2000)
;;;9011   	#endif
;;;9012   	#ifdef UKU_220_V2
;;;9013   	if(adc_buff_[sk_buff_220[i]]<2000)
;;;9014   	#endif
;;;9015   	#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9016   	if(adc_buff_[sk_buff_220[i]]<2000)
;;;9017   	#endif
;;;9018   	#ifdef UKU_TELECORE2015	
;;;9019   	if(adc_buff_[sk_buff_TELECORE2015[i]]<2000)	 //TODO
;;;9020   	#endif
;;;9021   	#ifdef UKU_TELECORE2017
;;;9022   	if(adc_buff_[sk_buff_TELECORE2015[i]]<2000)	 //TODO
;;;9023   	#endif
;;;9024   	#ifdef IPS_SGEP_GAZPROM
;;;9025   	if(adc_buff_[sk_buff_6U[i]]<2000)
;;;9026   	#endif		
;;;9027   		{
;;;9028   		if(sk_cnt[i]<10)
005272  4bd3              LDR      r3,|L1.21952|
;;;9029   			{
;;;9030   			sk_cnt[i]++;
;;;9031   			if(sk_cnt[i]>=10)
;;;9032   				{
;;;9033   				sk_stat[i]=ssON;
005274  4dca              LDR      r5,|L1.21920|
005276  f04f0a01          MOV      r10,#1
;;;9034   				}
;;;9035   			}
;;;9036   		else 
;;;9037   			{
;;;9038   			sk_cnt[i]=10;
00527a  f04f0b0a          MOV      r11,#0xa
00527e  4606              MOV      r6,r0                 ;8989
005280  f9b24000          LDRSH    r4,[r2,#0]            ;8989
005284  e025              B        |L1.21202|
                  |L1.21126|
005286  49d0              LDR      r1,|L1.21960|
005288  4fd0              LDR      r7,|L1.21964|
00528a  5c09              LDRB     r1,[r1,r0]            ;9016
00528c  f9371011          LDRSH    r1,[r7,r1,LSL #1]     ;9016
005290  f5b16ffa          CMP      r1,#0x7d0             ;9016
005294  da0e              BGE      |L1.21172|
005296  5619              LDRSB    r1,[r3,r0]            ;9028
005298  290a              CMP      r1,#0xa               ;9028
00529a  da08              BGE      |L1.21166|
00529c  f1010101          ADD      r1,r1,#1              ;9030
0052a0  b249              SXTB     r1,r1                 ;9030
0052a2  5419              STRB     r1,[r3,r0]            ;9030
0052a4  290a              CMP      r1,#0xa               ;9031
0052a6  db11              BLT      |L1.21196|
0052a8  f805a000          STRB     r10,[r5,r0]           ;9033
0052ac  e00e              B        |L1.21196|
                  |L1.21166|
0052ae  f803b000          STRB     r11,[r3,r0]
0052b2  e00b              B        |L1.21196|
                  |L1.21172|
;;;9039   			}
;;;9040                  
;;;9041   		}
;;;9042   	else
;;;9043   		{
;;;9044   		if(sk_cnt[i]>0)
0052b4  5619              LDRSB    r1,[r3,r0]
0052b6  2900              CMP      r1,#0
0052b8  dd07              BLE      |L1.21194|
;;;9045   			{
;;;9046   			sk_cnt[i]--;
0052ba  f1a10101          SUB      r1,r1,#1
0052be  b249              SXTB     r1,r1
0052c0  5419              STRB     r1,[r3,r0]
;;;9047   			if(sk_cnt[i]<=0)
0052c2  2900              CMP      r1,#0
0052c4  dc02              BGT      |L1.21196|
;;;9048   				{
;;;9049   				sk_stat[i]=ssOFF;
0052c6  542e              STRB     r6,[r5,r0]
0052c8  e000              B        |L1.21196|
                  |L1.21194|
;;;9050   				}
;;;9051   			}
;;;9052   		else 
;;;9053   			{
;;;9054   			sk_cnt[i]=0;
0052ca  541e              STRB     r6,[r3,r0]
                  |L1.21196|
0052cc  f1000001          ADD      r0,r0,#1              ;8989
0052d0  b2c0              UXTB     r0,r0                 ;8989
                  |L1.21202|
0052d2  42a0              CMP      r0,r4                 ;8989
0052d4  dbd7              BLT      |L1.21126|
;;;9055   			}
;;;9056   		}
;;;9057   	}
;;;9058   
;;;9059   for(i=0;i<NUMSK;i++)
0052d6  f04f0400          MOV      r4,#0
;;;9060   	{
;;;9061   	if(((SK_SIGN[i]==0)&&(sk_stat[i]==ssON))||((SK_SIGN[i])&&(sk_stat[i]==ssOFF)) )
;;;9062   		{
;;;9063   		if(sk_av_cnt[i]<10)
0052da  f8df92f4          LDR      r9,|L1.21968|
;;;9064   			{
;;;9065   			sk_av_cnt[i]++;
;;;9066   			if(sk_av_cnt[i]>=10)
;;;9067   				{
;;;9068   				sk_av_stat[i]=sasON;
0052de  4fbd              LDR      r7,|L1.21972|
;;;9069   				}
;;;9070   			}
;;;9071   		else 
;;;9072   			{
;;;9073   			sk_av_cnt[i]=10;
;;;9074   			}
;;;9075   		}
;;;9076   	else
;;;9077   		{
;;;9078   		if(sk_av_cnt[i]>=0)
;;;9079   			{
;;;9080   			sk_av_cnt[i]--;
;;;9081   			if(sk_av_cnt[i]<=0)
;;;9082   				{
;;;9083   				sk_av_stat[i]=sasOFF;
;;;9084   				}
;;;9085   			}
;;;9086   		else 
;;;9087   			{
;;;9088   			sk_av_cnt[i]=0;
;;;9089   			}
;;;9090   		}
;;;9091   
;;;9092   #ifndef UKU_KONTUR
;;;9093   	if(sk_av_stat_old[i]!=sk_av_stat[i])
0052e0  f8df82f4          LDR      r8,|L1.21976|
0052e4  e083              B        |L1.21486|
                  |L1.21222|
0052e6  48bd              LDR      r0,|L1.21980|
0052e8  f9300014          LDRSH    r0,[r0,r4,LSL #1]     ;9061
0052ec  b910              CBNZ     r0,|L1.21236|
0052ee  5d29              LDRB     r1,[r5,r4]            ;9061
0052f0  2901              CMP      r1,#1                 ;9061
0052f2  d00f              BEQ      |L1.21268|
                  |L1.21236|
0052f4  b108              CBZ      r0,|L1.21242|
0052f6  5d28              LDRB     r0,[r5,r4]            ;9061
0052f8  b160              CBZ      r0,|L1.21268|
                  |L1.21242|
0052fa  f9190004          LDRSB    r0,[r9,r4]            ;9078
0052fe  2800              CMP      r0,#0                 ;9078
005300  db19              BLT      |L1.21302|
005302  f1a00001          SUB      r0,r0,#1              ;9080
005306  b240              SXTB     r0,r0                 ;9080
005308  f8090004          STRB     r0,[r9,r4]            ;9080
00530c  2800              CMP      r0,#0                 ;9081
00530e  dc14              BGT      |L1.21306|
005310  553e              STRB     r6,[r7,r4]            ;9083
005312  e012              B        |L1.21306|
                  |L1.21268|
005314  f9190004          LDRSB    r0,[r9,r4]            ;9063
005318  280a              CMP      r0,#0xa               ;9063
00531a  da09              BGE      |L1.21296|
00531c  f1000001          ADD      r0,r0,#1              ;9065
005320  b240              SXTB     r0,r0                 ;9065
005322  f8090004          STRB     r0,[r9,r4]            ;9065
005326  280a              CMP      r0,#0xa               ;9066
005328  db07              BLT      |L1.21306|
00532a  f807a004          STRB     r10,[r7,r4]           ;9068
00532e  e004              B        |L1.21306|
                  |L1.21296|
005330  f809b004          STRB     r11,[r9,r4]           ;9073
005334  e001              B        |L1.21306|
                  |L1.21302|
005336  f8096004          STRB     r6,[r9,r4]            ;9088
                  |L1.21306|
00533a  f8181004          LDRB     r1,[r8,r4]
00533e  5d38              LDRB     r0,[r7,r4]
005340  4281              CMP      r1,r0
005342  d04e              BEQ      |L1.21474|
;;;9094   		{
;;;9095   		plazma_sk++;
005344  4a99              LDR      r2,|L1.21932|
005346  3a40              SUBS     r2,r2,#0x40
005348  8fd1              LDRH     r1,[r2,#0x3e]  ; plazma_sk
00534a  f1010101          ADD      r1,r1,#1
00534e  87d1              STRH     r1,[r2,#0x3e]
;;;9096   		if(sk_av_stat[i]==sasON)
005350  2801              CMP      r0,#1
005352  d007              BEQ      |L1.21348|
;;;9097   			{
;;;9098   			if(i==0)snmp_trap_send("SK #1 Alarm",15,1,1);
;;;9099   			else if(i==1)
;;;9100   				{
;;;9101   				#ifndef UKU_TELEKORE2017
;;;9102   				snmp_trap_send("SK #2 Alarm",15,2,1);
;;;9103   				#endif
;;;9104   				#ifdef UKU_TELEKORE2017
;;;9105   				snmp_trap_send("Door open",15,2,1);
;;;9106   				#endif
;;;9107   				}
;;;9108   			else if(i==2)snmp_trap_send("SK #3 Alarm",15,3,1);
;;;9109   			else if(i==3)snmp_trap_send("SK #4 Alarm",15,4,1);
;;;9110   			}
;;;9111   		else 
;;;9112   			{
;;;9113   			if(i==0)snmp_trap_send("SK #1 Alarm is off",15,1,0);
005354  b354              CBZ      r4,|L1.21420|
;;;9114   			else if(i==1)
005356  2c01              CMP      r4,#1
005358  d02f              BEQ      |L1.21434|
;;;9115   				{
;;;9116   				#ifndef UKU_TELEKORE2017
;;;9117   				snmp_trap_send("SK #2 Alarm is off",15,2,0);
;;;9118   				#endif
;;;9119   				#ifdef UKU_TELEKORE2017
;;;9120   				snmp_trap_send("Door open clear",15,2,0);
;;;9121   				#endif
;;;9122   				}
;;;9123   			else if(i==2)snmp_trap_send("SK #3 Alarm is off",15,3,0);
00535a  2c02              CMP      r4,#2
00535c  d034              BEQ      |L1.21448|
;;;9124   			else if(i==3)snmp_trap_send("SK #4 Alarm is off",15,4,0);
00535e  2c03              CMP      r4,#3
005360  d039              BEQ      |L1.21462|
005362  e03e              B        |L1.21474|
                  |L1.21348|
005364  b134              CBZ      r4,|L1.21364|
005366  2c01              CMP      r4,#1                 ;9099
005368  d00b              BEQ      |L1.21378|
00536a  2c02              CMP      r4,#2                 ;9108
00536c  d010              BEQ      |L1.21392|
00536e  2c03              CMP      r4,#3                 ;9109
005370  d015              BEQ      |L1.21406|
005372  e036              B        |L1.21474|
                  |L1.21364|
005374  2301              MOVS     r3,#1                 ;9098
005376  461a              MOV      r2,r3                 ;9098
005378  210f              MOVS     r1,#0xf               ;9098
00537a  a099              ADR      r0,|L1.21984|
00537c  f7fffffe          BL       snmp_trap_send
005380  e02f              B        |L1.21474|
                  |L1.21378|
005382  2301              MOVS     r3,#1                 ;9102
005384  2202              MOVS     r2,#2                 ;9102
005386  210f              MOVS     r1,#0xf               ;9102
005388  a098              ADR      r0,|L1.21996|
00538a  f7fffffe          BL       snmp_trap_send
00538e  e028              B        |L1.21474|
                  |L1.21392|
005390  2301              MOVS     r3,#1                 ;9108
005392  2203              MOVS     r2,#3                 ;9108
005394  210f              MOVS     r1,#0xf               ;9108
005396  a098              ADR      r0,|L1.22008|
005398  f7fffffe          BL       snmp_trap_send
00539c  e021              B        |L1.21474|
                  |L1.21406|
00539e  2301              MOVS     r3,#1                 ;9109
0053a0  2204              MOVS     r2,#4                 ;9109
0053a2  210f              MOVS     r1,#0xf               ;9109
0053a4  a097              ADR      r0,|L1.22020|
0053a6  f7fffffe          BL       snmp_trap_send
0053aa  e01a              B        |L1.21474|
                  |L1.21420|
0053ac  2300              MOVS     r3,#0                 ;9113
0053ae  2201              MOVS     r2,#1                 ;9113
0053b0  210f              MOVS     r1,#0xf               ;9113
0053b2  a097              ADR      r0,|L1.22032|
0053b4  f7fffffe          BL       snmp_trap_send
0053b8  e013              B        |L1.21474|
                  |L1.21434|
0053ba  2300              MOVS     r3,#0                 ;9117
0053bc  2202              MOVS     r2,#2                 ;9117
0053be  210f              MOVS     r1,#0xf               ;9117
0053c0  a098              ADR      r0,|L1.22052|
0053c2  f7fffffe          BL       snmp_trap_send
0053c6  e00c              B        |L1.21474|
                  |L1.21448|
0053c8  2300              MOVS     r3,#0                 ;9123
0053ca  2203              MOVS     r2,#3                 ;9123
0053cc  210f              MOVS     r1,#0xf               ;9123
0053ce  a09a              ADR      r0,|L1.22072|
0053d0  f7fffffe          BL       snmp_trap_send
0053d4  e005              B        |L1.21474|
                  |L1.21462|
0053d6  2300              MOVS     r3,#0
0053d8  2204              MOVS     r2,#4
0053da  210f              MOVS     r1,#0xf
0053dc  a09b              ADR      r0,|L1.22092|
0053de  f7fffffe          BL       snmp_trap_send
                  |L1.21474|
;;;9125   			}
;;;9126   	 	}
;;;9127   #endif
;;;9128   
;;;9129   #ifdef UKU_KONTUR
;;;9130   	if(sk_av_stat_old[i]!=sk_av_stat[i])
;;;9131   		{
;;;9132   		plazma_sk++;
;;;9133   		if(sk_av_stat[i]==sasON)
;;;9134   			{
;;;9135   			if(i==0)snmp_trap_send("Door is opened",15,1,1);
;;;9136   			else if(i==1)snmp_trap_send("Smoke Alarm",15,2,1);
;;;9137   			else if(i==2)snmp_trap_send("Shock Sensor Alarm",15,3,1);
;;;9138   			else if(i==3)snmp_trap_send("SK #4 Alarm",15,4,1);
;;;9139   			}
;;;9140   		else 
;;;9141   			{
;;;9142   			if(i==0)snmp_trap_send("Door is closed",15,1,0);
;;;9143   			else if(i==1)snmp_trap_send("Smoke Alarm is off",15,2,0);
;;;9144   			else if(i==2)snmp_trap_send("Shock Sensor Alarm is off",15,3,0);
;;;9145   			else if(i==3)snmp_trap_send("SK #4 Alarm is off",15,4,0);
;;;9146   			}
;;;9147   	 	}
;;;9148   #endif
;;;9149   	sk_av_stat_old[i]=sk_av_stat[i];
0053e2  5d38              LDRB     r0,[r7,r4]
0053e4  f8080004          STRB     r0,[r8,r4]
0053e8  f1040401          ADD      r4,r4,#1              ;9059
0053ec  b2e4              UXTB     r4,r4                 ;9059
                  |L1.21486|
0053ee  4875              LDR      r0,|L1.21956|
0053f0  f9b00000          LDRSH    r0,[r0,#0]            ;9059  ; NUMSK
0053f4  4284              CMP      r4,r0                 ;9059
0053f6  f6ffaf76          BLT      |L1.21222|
;;;9150   	}
;;;9151   }
0053fa  e733              B        |L1.21092|
;;;9152   
                          ENDP

                  zar_superviser_start PROC
;;;9189   //-----------------------------------------------
;;;9190   void zar_superviser_start(void)
0053fc  4a98              LDR      r2,|L1.22112|
;;;9191   {
;;;9192   sign_U[0]=1;
0053fe  f04f0001          MOV      r0,#1
005402  7010              STRB     r0,[r2,#0]
;;;9193   sign_I[0]=1;
005404  4997              LDR      r1,|L1.22116|
005406  7008              STRB     r0,[r1,#0]
;;;9194   sign_U[1]=1;
005408  7050              STRB     r0,[r2,#1]
;;;9195   sign_I[1]=1;
00540a  7048              STRB     r0,[r1,#1]
;;;9196   
;;;9197   }
00540c  4770              BX       lr
;;;9198   
                          ENDP

                  zar_superviser_drv PROC
;;;9154   //-----------------------------------------------
;;;9155   void zar_superviser_drv(void)
00540e  e92d5ff0          PUSH     {r4-r12,lr}
;;;9156   {
;;;9157   
;;;9158   if(((bat[0]._Ub>u_necc_up) || (bat[0]._Ub<u_necc_dn))&&(main_kb_cnt<((TBAT*60)-30))&&(main_kb_cnt>((TBAT*60)-150))) sign_U[0]=0;
005412  4896              LDR      r0,|L1.22124|
005414  f8df9258          LDR      r9,|L1.22128|
005418  f8df824c          LDR      r8,|L1.22120|
00541c  f9b0c000          LDRSH    r12,[r0,#0]  ; u_necc_up
005420  f9b90000          LDRSH    r0,[r9,#0]
005424  4c61              LDR      r4,|L1.21932|
005426  ebc01100          RSB      r1,r0,r0,LSL #4
00542a  3c40              SUBS     r4,r4,#0x40
00542c  f9b87002          LDRSH    r7,[r8,#2]  ; bat
005430  f06f0a1d          MVN      r10,#0x1d
005434  f06f0b95          MVN      r11,#0x95
005438  2500              MOVS     r5,#0
00543a  4e89              LDR      r6,|L1.22112|
00543c  f9b4004a          LDRSH    r0,[r4,#0x4a]
005440  eb0a0281          ADD      r2,r10,r1,LSL #2
005444  eb0b0381          ADD      r3,r11,r1,LSL #2
005448  4567              CMP      r7,r12
00544a  dc05              BGT      |L1.21592|
00544c  f8dfc224          LDR      r12,|L1.22132|
005450  f9bcc000          LDRSH    r12,[r12,#0]  ; u_necc_dn
005454  4567              CMP      r7,r12
005456  da04              BGE      |L1.21602|
                  |L1.21592|
005458  4282              CMP      r2,r0
00545a  dd02              BLE      |L1.21602|
00545c  4283              CMP      r3,r0
00545e  da00              BGE      |L1.21602|
005460  7035              STRB     r5,[r6,#0]
                  |L1.21602|
;;;9159   
;;;9160   if(((bat[0]._Ib>(2*IKB)) || (bat[0]._Ib<(-IKB*2))) &&(main_kb_cnt<((TBAT*60)-30))&&(main_kb_cnt>((TBAT*60)-150))) sign_I[0]=0;
005462  4f85              LDR      r7,|L1.22136|
005464  f9b8c008          LDRSH    r12,[r8,#8]  ; bat
005468  f9b7e000          LDRSH    lr,[r7,#0]  ; IKB
00546c  4f7d              LDR      r7,|L1.22116|
00546e  ebbc0f4e          CMP      r12,lr,LSL #1
005472  dc04              BGT      |L1.21630|
005474  f1ce0e00          RSB      lr,lr,#0
005478  ebbc0f4e          CMP      r12,lr,LSL #1
00547c  da04              BGE      |L1.21640|
                  |L1.21630|
00547e  4282              CMP      r2,r0
005480  dd02              BLE      |L1.21640|
005482  4283              CMP      r3,r0
005484  da00              BGE      |L1.21640|
005486  703d              STRB     r5,[r7,#0]
                  |L1.21640|
;;;9161   																 
;;;9162   if((main_kb_cnt==((TBAT*60)-10)) &&(spc_stat==spcOFF))
005488  f06f0209          MVN      r2,#9
00548c  eb020181          ADD      r1,r2,r1,LSL #2
005490  4281              CMP      r1,r0
005492  d120              BNE      |L1.21718|
005494  7e20              LDRB     r0,[r4,#0x18]  ; spc_stat
005496  b9f0              CBNZ     r0,|L1.21718|
;;;9163   	{
;;;9164   	if((sign_U[0]==1) && (sign_I[0]==1) && (lc640_read_int(EE_BAT1_ZAR_CNT)!=BAT_C_REAL[0]) && (NUMBAT) && (!(bat[0]._av&1)))
005498  7830              LDRB     r0,[r6,#0]  ; sign_U
00549a  2801              CMP      r0,#1
00549c  d11b              BNE      |L1.21718|
00549e  7838              LDRB     r0,[r7,#0]  ; sign_I
0054a0  2801              CMP      r0,#1
0054a2  d118              BNE      |L1.21718|
0054a4  f44f70ef          MOV      r0,#0x1de
0054a8  f7fffffe          BL       lc640_read_int
0054ac  4973              LDR      r1,|L1.22140|
0054ae  f9b11000          LDRSH    r1,[r1,#0]  ; BAT_C_REAL
0054b2  4288              CMP      r0,r1
0054b4  d00f              BEQ      |L1.21718|
0054b6  4872              LDR      r0,|L1.22144|
0054b8  8800              LDRH     r0,[r0,#0]  ; NUMBAT
0054ba  b160              CBZ      r0,|L1.21718|
0054bc  f898003d          LDRB     r0,[r8,#0x3d]  ; bat
0054c0  07c0              LSLS     r0,r0,#31
0054c2  d108              BNE      |L1.21718|
;;;9165   		{
;;;9166   		lc640_write_int(EE_BAT1_ZAR_CNT,BAT_C_REAL[0]);
0054c4  f44f70ef          MOV      r0,#0x1de
0054c8  f7fffffe          BL       lc640_write_int
;;;9167   		superviser_cnt++;
0054cc  486d              LDR      r0,|L1.22148|
0054ce  7801              LDRB     r1,[r0,#0]  ; superviser_cnt
0054d0  f1010101          ADD      r1,r1,#1
0054d4  7001              STRB     r1,[r0,#0]
                  |L1.21718|
;;;9168   		}
;;;9169   	
;;;9170   	}
;;;9171   
;;;9172   if(((bat[0]._Ub>u_necc_up) || (bat[1]._Ub<u_necc_dn))&&(main_kb_cnt<((TBAT*60)-30))&&(main_kb_cnt>((TBAT*60)-150))) sign_U[1]=0;
0054d6  4865              LDR      r0,|L1.22124|
0054d8  f9b81002          LDRSH    r1,[r8,#2]  ; bat
0054dc  f9b00000          LDRSH    r0,[r0,#0]  ; u_necc_up
0054e0  4281              CMP      r1,r0
0054e2  dc06              BGT      |L1.21746|
0054e4  4863              LDR      r0,|L1.22132|
0054e6  f9b8104e          LDRSH    r1,[r8,#0x4e]  ; bat
0054ea  f9b00000          LDRSH    r0,[r0,#0]  ; u_necc_dn
0054ee  4281              CMP      r1,r0
0054f0  da0e              BGE      |L1.21776|
                  |L1.21746|
0054f2  f9b90000          LDRSH    r0,[r9,#0]  ; TBAT
0054f6  f9b4104a          LDRSH    r1,[r4,#0x4a]  ; main_kb_cnt
0054fa  ebc01000          RSB      r0,r0,r0,LSL #4
0054fe  eb0a0280          ADD      r2,r10,r0,LSL #2
005502  428a              CMP      r2,r1
005504  dd04              BLE      |L1.21776|
005506  eb0b0080          ADD      r0,r11,r0,LSL #2
00550a  4288              CMP      r0,r1
00550c  da00              BGE      |L1.21776|
00550e  7075              STRB     r5,[r6,#1]
                  |L1.21776|
;;;9173   
;;;9174   if(((bat[1]._Ib>(2*IKB)) || (bat[1]._Ib<(-IKB*2))) &&(main_kb_cnt<((TBAT*60)-30))&&(main_kb_cnt>((TBAT*60)-150))) sign_I[1]=0;
005510  4959              LDR      r1,|L1.22136|
005512  f9b80054          LDRSH    r0,[r8,#0x54]  ; bat
005516  f9b11000          LDRSH    r1,[r1,#0]  ; IKB
00551a  ebb00f41          CMP      r0,r1,LSL #1
00551e  dc03              BGT      |L1.21800|
005520  4249              RSBS     r1,r1,#0
005522  ebb00f41          CMP      r0,r1,LSL #1
005526  da0e              BGE      |L1.21830|
                  |L1.21800|
005528  f9b90000          LDRSH    r0,[r9,#0]  ; TBAT
00552c  f9b4104a          LDRSH    r1,[r4,#0x4a]  ; main_kb_cnt
005530  ebc01000          RSB      r0,r0,r0,LSL #4
005534  eb0a0280          ADD      r2,r10,r0,LSL #2
005538  428a              CMP      r2,r1
00553a  dd04              BLE      |L1.21830|
00553c  eb0b0080          ADD      r0,r11,r0,LSL #2
005540  4288              CMP      r0,r1
005542  da00              BGE      |L1.21830|
005544  707d              STRB     r5,[r7,#1]
                  |L1.21830|
;;;9175   																 
;;;9176   if((main_kb_cnt==((TBAT*60)-10)) &&(spc_stat==spcOFF))
005546  f9b90000          LDRSH    r0,[r9,#0]  ; TBAT
00554a  ebc01100          RSB      r1,r0,r0,LSL #4
00554e  f06f0009          MVN      r0,#9
005552  eb000081          ADD      r0,r0,r1,LSL #2
005556  f9b4104a          LDRSH    r1,[r4,#0x4a]  ; main_kb_cnt
00555a  4288              CMP      r0,r1
00555c  d11d              BNE      |L1.21914|
00555e  7e20              LDRB     r0,[r4,#0x18]  ; spc_stat
005560  b9d8              CBNZ     r0,|L1.21914|
;;;9177   	{
;;;9178   	if((sign_U[1]==1) && (sign_I[1]==1) && (lc640_read_int(EE_BAT2_ZAR_CNT)!=BAT_C_REAL[1]) && (NUMBAT==2) && (!(bat[1]._av&1)))
005562  7870              LDRB     r0,[r6,#1]  ; sign_U
005564  2801              CMP      r0,#1
005566  d118              BNE      |L1.21914|
005568  7878              LDRB     r0,[r7,#1]  ; sign_I
00556a  2801              CMP      r0,#1
00556c  d115              BNE      |L1.21914|
00556e  f44f75fe          MOV      r5,#0x1fc
005572  4628              MOV      r0,r5
005574  f7fffffe          BL       lc640_read_int
005578  4940              LDR      r1,|L1.22140|
00557a  f9b11002          LDRSH    r1,[r1,#2]  ; BAT_C_REAL
00557e  4288              CMP      r0,r1
005580  d00b              BEQ      |L1.21914|
005582  483f              LDR      r0,|L1.22144|
005584  8800              LDRH     r0,[r0,#0]  ; NUMBAT
005586  2802              CMP      r0,#2
005588  d107              BNE      |L1.21914|
00558a  f8980089          LDRB     r0,[r8,#0x89]  ; bat
00558e  07c0              LSLS     r0,r0,#31
005590  d17f              BNE      |L1.22162|
;;;9179   		{
;;;9180   		lc640_write_int(EE_BAT2_ZAR_CNT,BAT_C_REAL[1]);
005592  4628              MOV      r0,r5
005594  f7fffffe          BL       lc640_write_int
;;;9181   		superviser_cnt++;
005598  e076              B        |L1.22152|
                  |L1.21914|
00559a  e07a              B        |L1.22162|
                  |L1.21916|
                          DCD      hv_vz_stat
                  |L1.21920|
                          DCD      sk_stat
                  |L1.21924|
                          DCD      sk_stat_old
                  |L1.21928|
                          DCD      VZ_KIND
                  |L1.21932|
                          DCD      ||area_number.25||+0x40
                  |L1.21936|
                          DCD      ICA_EN
                  |L1.21940|
                          DCD      ica_cntrl_hndl
                  |L1.21944|
                          DCD      ica_u_necc
                  |L1.21948|
                          DCD      NUMIST
                  |L1.21952|
                          DCD      sk_cnt
                  |L1.21956|
                          DCD      NUMSK
                  |L1.21960|
                          DCD      ||area_number.19||
                  |L1.21964|
                          DCD      ||.bss||+0x40c
                  |L1.21968|
                          DCD      sk_av_cnt
                  |L1.21972|
                          DCD      sk_av_stat
                  |L1.21976|
                          DCD      sk_av_stat_old
                  |L1.21980|
                          DCD      SK_SIGN
                  |L1.21984|
0055e0  534b2023          DCB      "SK #1 Alarm",0
0055e4  3120416c
0055e8  61726d00
                  |L1.21996|
0055ec  534b2023          DCB      "SK #2 Alarm",0
0055f0  3220416c
0055f4  61726d00
                  |L1.22008|
0055f8  534b2023          DCB      "SK #3 Alarm",0
0055fc  3320416c
005600  61726d00
                  |L1.22020|
005604  534b2023          DCB      "SK #4 Alarm",0
005608  3420416c
00560c  61726d00
                  |L1.22032|
005610  534b2023          DCB      "SK #1 Alarm is off",0
005614  3120416c
005618  61726d20
00561c  6973206f
005620  666600  
005623  00                DCB      0
                  |L1.22052|
005624  534b2023          DCB      "SK #2 Alarm is off",0
005628  3220416c
00562c  61726d20
005630  6973206f
005634  666600  
005637  00                DCB      0
                  |L1.22072|
005638  534b2023          DCB      "SK #3 Alarm is off",0
00563c  3320416c
005640  61726d20
005644  6973206f
005648  666600  
00564b  00                DCB      0
                  |L1.22092|
00564c  534b2023          DCB      "SK #4 Alarm is off",0
005650  3420416c
005654  61726d20
005658  6973206f
00565c  666600  
00565f  00                DCB      0
                  |L1.22112|
                          DCD      sign_U
                  |L1.22116|
                          DCD      sign_I
                  |L1.22120|
                          DCD      bat
                  |L1.22124|
                          DCD      u_necc_up
                  |L1.22128|
                          DCD      TBAT
                  |L1.22132|
                          DCD      u_necc_dn
                  |L1.22136|
                          DCD      IKB
                  |L1.22140|
                          DCD      BAT_C_REAL
                  |L1.22144|
                          DCD      NUMBAT
                  |L1.22148|
                          DCD      superviser_cnt
                  |L1.22152|
005688  48ff              LDR      r0,|L1.23176|
00568a  7801              LDRB     r1,[r0,#0]  ; superviser_cnt
00568c  f1010101          ADD      r1,r1,#1
005690  7001              STRB     r1,[r0,#0]
                  |L1.22162|
;;;9182   		}
;;;9183   	
;;;9184   	}
;;;9185   
;;;9186   if(main_kb_cnt==((TBAT*60)-2)) zar_superviser_start();
005692  f9b90000          LDRSH    r0,[r9,#0]  ; TBAT
005696  f06f0101          MVN      r1,#1
00569a  ebc01000          RSB      r0,r0,r0,LSL #4
00569e  eb010080          ADD      r0,r1,r0,LSL #2
0056a2  f9b4104a          LDRSH    r1,[r4,#0x4a]  ; main_kb_cnt
0056a6  4288              CMP      r0,r1
0056a8  d102              BNE      |L1.22192|
0056aa  e8bd5ff0          POP      {r4-r12,lr}
0056ae  e7fe              B        zar_superviser_start
                  |L1.22192|
;;;9187   }
0056b0  e5d8              B        |L1.21092|
;;;9188   
                          ENDP

                  npn_hndl PROC
;;;9199   //-----------------------------------------------
;;;9200   void npn_hndl(void)
0056b2  e92d03f0          PUSH     {r4-r9}
;;;9201   {
;;;9202   if(NPN_OUT!=npnoOFF)
0056b6  48f5              LDR      r0,|L1.23180|
;;;9203   	{
;;;9204   /*	if(NPN_SIGN==npnsAVNET)
;;;9205   		{
;;;9206   		if(net_av==1)
;;;9207   			{
;;;9208   			if(npn_tz_cnt<TZNPN)
;;;9209   				{
;;;9210   				npn_tz_cnt++;
;;;9211   				if(npn_tz_cnt==TZNPN)
;;;9212   					{
;;;9213   					npn_stat=npnsOFF;
;;;9214   					}
;;;9215   				}
;;;9216   			}
;;;9217   		else
;;;9218   			{
;;;9219   			if(npn_tz_cnt)
;;;9220   				{
;;;9221   				npn_tz_cnt--;
;;;9222   				if(npn_tz_cnt==0)
;;;9223   					{
;;;9224   					npn_stat=npnsON;
;;;9225   					}
;;;9226   				}
;;;9227   			}
;;;9228   		}*/
;;;9229   /*	if(NPN_SIGN==npnsULOAD)
;;;9230   		{
;;;9231   		if(load_U<UONPN)
;;;9232   			{
;;;9233   			if(npn_tz_cnt<TZNPN)
;;;9234   				{
;;;9235   				npn_tz_cnt++;
;;;9236   				if(npn_tz_cnt==TZNPN)
;;;9237   					{
;;;9238   					npn_stat=npnsOFF;
;;;9239   					}
;;;9240   				}
;;;9241   			}
;;;9242   		else if(load_U>UVNPN)
;;;9243   			{
;;;9244   			if(npn_tz_cnt)
;;;9245   				{
;;;9246   				npn_tz_cnt--;
;;;9247   				if(npn_tz_cnt==0)
;;;9248   					{
;;;9249   					npn_stat=npnsON;
;;;9250   					}
;;;9251   				}
;;;9252   			}
;;;9253   		}*/
;;;9254   
;;;9255   	if((load_U<UONPN)&&((net_Ua<UMN)||(net_Ub<UMN)||(net_Uc<UMN)))
;;;9256   		{
;;;9257   		if(npn_tz_cnt<TZNPN)
0056b8  4ff5              LDR      r7,|L1.23184|
;;;9258   			{
;;;9259   			npn_tz_cnt++;
;;;9260   			if(npn_tz_cnt==TZNPN)
;;;9261   				{
;;;9262   				npn_stat=npnsOFF;
0056ba  4ef6              LDR      r6,|L1.23188|
0056bc  7800              LDRB     r0,[r0,#0]            ;9202  ; NPN_OUT
0056be  f04f0c00          MOV      r12,#0                ;9202
;;;9263   				}
;;;9264   			}
;;;9265   		}
;;;9266   	else if((load_U>UVNPN)&&(net_Ua>UMN)&&(net_Ub>UMN)&&(net_Uc>UMN))
;;;9267   		{
;;;9268   		if(npn_tz_cnt)
;;;9269   			{
;;;9270   			npn_tz_cnt--;
;;;9271   			if(npn_tz_cnt==0)
;;;9272   				{
;;;9273   				npn_stat=npnsON;
0056c2  f04f0801          MOV      r8,#1
0056c6  b3e8              CBZ      r0,|L1.22340|
0056c8  48f3              LDR      r0,|L1.23192|
0056ca  4639              MOV      r1,r7                 ;9257
0056cc  f9b05000          LDRSH    r5,[r0,#0]            ;9255  ; load_U
0056d0  48f2              LDR      r0,|L1.23196|
0056d2  f9b11000          LDRSH    r1,[r1,#0]            ;9257
0056d6  f9b09000          LDRSH    r9,[r0,#0]            ;9255  ; UONPN
0056da  48f1              LDR      r0,|L1.23200|
0056dc  454d              CMP      r5,r9                 ;9255
0056de  f9b02000          LDRSH    r2,[r0,#0]            ;9255
0056e2  48f0              LDR      r0,|L1.23204|
0056e4  f9b03000          LDRSH    r3,[r0,#0]            ;9255
0056e8  48ef              LDR      r0,|L1.23208|
0056ea  f9b04000          LDRSH    r4,[r0,#0]            ;9255
0056ee  48ef              LDR      r0,|L1.23212|
0056f0  f9b00000          LDRSH    r0,[r0,#0]            ;9255
0056f4  da13              BGE      |L1.22302|
0056f6  4282              CMP      r2,r0                 ;9255
0056f8  db03              BLT      |L1.22274|
0056fa  4283              CMP      r3,r0                 ;9255
0056fc  db01              BLT      |L1.22274|
0056fe  4284              CMP      r4,r0                 ;9255
005700  da0d              BGE      |L1.22302|
                  |L1.22274|
005702  48eb              LDR      r0,|L1.23216|
005704  f9b02000          LDRSH    r2,[r0,#0]            ;9257  ; TZNPN
005708  4291              CMP      r1,r2                 ;9257
00570a  da23              BGE      |L1.22356|
00570c  f1010101          ADD      r1,r1,#1              ;9259
005710  b208              SXTH     r0,r1                 ;9259
005712  8038              STRH     r0,[r7,#0]            ;9259
005714  4290              CMP      r0,r2                 ;9260
005716  d11d              BNE      |L1.22356|
005718  f886c000          STRB     r12,[r6,#0]           ;9262
00571c  e01a              B        |L1.22356|
                  |L1.22302|
00571e  f8dfc394          LDR      r12,|L1.23220|
005722  f9bcc000          LDRSH    r12,[r12,#0]          ;9266  ; UVNPN
005726  4565              CMP      r5,r12                ;9266
005728  dd14              BLE      |L1.22356|
00572a  4282              CMP      r2,r0                 ;9266
00572c  dd12              BLE      |L1.22356|
00572e  4283              CMP      r3,r0                 ;9266
005730  dd10              BLE      |L1.22356|
005732  4284              CMP      r4,r0                 ;9266
005734  dd0e              BLE      |L1.22356|
005736  b169              CBZ      r1,|L1.22356|
005738  f1a10101          SUB      r1,r1,#1              ;9270
00573c  b208              SXTH     r0,r1                 ;9270
00573e  8038              STRH     r0,[r7,#0]            ;9270
005740  b940              CBNZ     r0,|L1.22356|
005742  e000              B        |L1.22342|
                  |L1.22340|
005744  e002              B        |L1.22348|
                  |L1.22342|
005746  f8868000          STRB     r8,[r6,#0]
00574a  e003              B        |L1.22356|
                  |L1.22348|
;;;9274   				}
;;;9275   			}
;;;9276   		}
;;;9277   	}
;;;9278   else
;;;9279   	{
;;;9280   	npn_tz_cnt=0;
00574c  f8a7c000          STRH     r12,[r7,#0]
;;;9281   	npn_stat=npnsON;
005750  f8868000          STRB     r8,[r6,#0]
                  |L1.22356|
;;;9282   	}
;;;9283   
;;;9284   if(npn_stat==npnsOFF) mess_send(MESS2RELE_HNDL,PARAM_RELE_NPN,1,15);
005754  7830              LDRB     r0,[r6,#0]  ; npn_stat
005756  2800              CMP      r0,#0
005758  d107              BNE      |L1.22378|
00575a  e8bd03f0          POP      {r4-r9}
00575e  230f              MOVS     r3,#0xf
005760  2201              MOVS     r2,#1
005762  216e              MOVS     r1,#0x6e
005764  20d2              MOVS     r0,#0xd2
005766  f7ffbffe          B.W      mess_send
                  |L1.22378|
;;;9285   
;;;9286   
;;;9287   }
00576a  e8bd03f0          POP      {r4-r9}
00576e  4770              BX       lr
;;;9288   
                          ENDP

                  loadoff_hndl PROC
;;;9290   //-----------------------------------------------
;;;9291   void loadoff_hndl(void)
005770  b5f0              PUSH     {r4-r7,lr}
;;;9292   {
;;;9293   if((load_U>UONPN)||(load_U<UVNPN))
005772  48c9              LDR      r0,|L1.23192|
;;;9294   	{
;;;9295   	if(load_off_cnt<TZNPN)
005774  4dd0              LDR      r5,|L1.23224|
;;;9296   		{
;;;9297   		load_off_cnt++;
;;;9298   		if(load_off_cnt>=TZNPN)
;;;9299   			{
;;;9300   			load_off_stat=npnsOFF;
005776  2700              MOVS     r7,#0
005778  f9b01000          LDRSH    r1,[r0,#0]            ;9293  ; load_U
00577c  48c7              LDR      r0,|L1.23196|
00577e  4ecf              LDR      r6,|L1.23228|
005780  f9b02000          LDRSH    r2,[r0,#0]            ;9293  ; UONPN
005784  f9b50000          LDRSH    r0,[r5,#0]            ;9295
005788  4291              CMP      r1,r2                 ;9293
00578a  dc04              BGT      |L1.22422|
00578c  4bc9              LDR      r3,|L1.23220|
00578e  f9b33000          LDRSH    r3,[r3,#0]            ;9293  ; UVNPN
005792  4299              CMP      r1,r3                 ;9293
005794  da0d              BGE      |L1.22450|
                  |L1.22422|
005796  49c6              LDR      r1,|L1.23216|
005798  f9b11000          LDRSH    r1,[r1,#0]            ;9295  ; TZNPN
00579c  4288              CMP      r0,r1                 ;9295
00579e  da1c              BGE      |L1.22490|
0057a0  f1000001          ADD      r0,r0,#1              ;9297
0057a4  b200              SXTH     r0,r0                 ;9297
0057a6  8028              STRH     r0,[r5,#0]            ;9297
0057a8  4288              CMP      r0,r1                 ;9298
0057aa  db16              BLT      |L1.22490|
0057ac  7037              STRB     r7,[r6,#0]
;;;9301   			load_off_cnt=TZNPN;
0057ae  8029              STRH     r1,[r5,#0]
0057b0  e013              B        |L1.22490|
                  |L1.22450|
;;;9302   			}
;;;9303   		}
;;;9304   	}
;;;9305   else if((load_U>(UVNPN+dUNPN))&&(load_U<(UONPN-dUNPN)))
0057b2  4cc3              LDR      r4,|L1.23232|
0057b4  f9b44000          LDRSH    r4,[r4,#0]  ; dUNPN
0057b8  4423              ADD      r3,r3,r4
0057ba  428b              CMP      r3,r1
0057bc  da0d              BGE      |L1.22490|
0057be  1b12              SUBS     r2,r2,r4
0057c0  428a              CMP      r2,r1
0057c2  dd0a              BLE      |L1.22490|
;;;9306   	{
;;;9307   	if(load_off_cnt)
0057c4  b148              CBZ      r0,|L1.22490|
;;;9308   		{
;;;9309   		load_off_cnt--;
0057c6  f1a00001          SUB      r0,r0,#1
0057ca  b200              SXTH     r0,r0
0057cc  8028              STRH     r0,[r5,#0]
;;;9310   		if(load_off_cnt<=0)
0057ce  2800              CMP      r0,#0
0057d0  dc03              BGT      |L1.22490|
;;;9311   			{
;;;9312   			load_off_stat=npnsON;
0057d2  f04f0001          MOV      r0,#1
0057d6  7030              STRB     r0,[r6,#0]
;;;9313   			load_off_cnt=0;
0057d8  802f              STRH     r7,[r5,#0]
                  |L1.22490|
;;;9314   			}
;;;9315   		}
;;;9316   	}
;;;9317   
;;;9318   
;;;9319   if(load_off_stat==npnsOFF) tloaddisable_cmnd=10;
0057da  7830              LDRB     r0,[r6,#0]  ; load_off_stat
0057dc  2800              CMP      r0,#0
0057de  d103              BNE      |L1.22504|
0057e0  49b8              LDR      r1,|L1.23236|
0057e2  f04f000a          MOV      r0,#0xa
0057e6  7008              STRB     r0,[r1,#0]
                  |L1.22504|
;;;9320   
;;;9321   
;;;9322   }
0057e8  bdf0              POP      {r4-r7,pc}
;;;9323   
                          ENDP

                  speedChargeStartStop PROC
;;;9500   //-----------------------------------------------
;;;9501   void speedChargeStartStop(void)
0057ea  b508              PUSH     {r3,lr}
;;;9502   {
;;;9503   /*if(speedChIsOn)
;;;9504   	{
;;;9505   	speedChIsOn=0;
;;;9506   	}
;;;9507   
;;;9508   else
;;;9509   	{
;;;9510   	if(speedChrgBlckStat==0)
;;;9511   		{
;;;9512   		speedChIsOn=1;
;;;9513   		speedChTimeCnt=0;
;;;9514   		}
;;;9515   	else
;;;9516   		{
;;;9517   		show_mess(	"     Ускоренный     ",
;;;9518   	          		"       заряд        ",
;;;9519   	          		"    заблокирован!   ",
;;;9520   	          		"                    ",2000);	 
;;;9521   		}
;;;9522   	}*/
;;;9523   
;;;9524   if(sp_ch_stat!=scsOFF)
0057ec  48b6              LDR      r0,|L1.23240|
0057ee  7801              LDRB     r1,[r0,#0]  ; sp_ch_stat
0057f0  b141              CBZ      r1,|L1.22532|
;;;9525   	{
;;;9526   	sp_ch_stat=scsOFF;
0057f2  f04f0100          MOV      r1,#0
0057f6  7001              STRB     r1,[r0,#0]
;;;9527   	speedz_mem_hndl(10);
0057f8  e8bd4008          POP      {r3,lr}
0057fc  f04f000a          MOV      r0,#0xa
005800  f7ffbffe          B.W      speedz_mem_hndl
                  |L1.22532|
;;;9528   	}
;;;9529   
;;;9530   else
;;;9531   	{
;;;9532   	if((speedChrgBlckStat==0)&&(spc_stat==spcOFF)
005804  49b1              LDR      r1,|L1.23244|
005806  f9b12000          LDRSH    r2,[r1,#0]  ; speedChrgBlckStat
00580a  49b1              LDR      r1,|L1.23248|
00580c  780b              LDRB     r3,[r1,#0]  ; spc_stat
00580e  431a              ORRS     r2,r2,r3
005810  7b0b              LDRB     r3,[r1,#0xc]  ; vz1_stat
005812  7bc9              LDRB     r1,[r1,#0xf]  ; vz2_stat
005814  431a              ORRS     r2,r2,r3
005816  430a              ORRS     r2,r2,r1
005818  d009              BEQ      |L1.22574|
;;;9533   		#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9534   		&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF)
;;;9535   		#endif
;;;9536   		)
;;;9537   		{
;;;9538   		#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9539   		sp_ch_stat=scsSTEP1;
;;;9540   		#else
;;;9541   		sp_ch_stat=scsWRK;
;;;9542   		#endif
;;;9543   		speedz_mem_hndl(1);
;;;9544   		}
;;;9545   	else 
;;;9546   		{
;;;9547   		show_mess(	"     Ускоренный     ",
00581a  f44f60fa          MOV      r0,#0x7d0
00581e  9000              STR      r0,[sp,#0]
005820  4bac              LDR      r3,|L1.23252|
005822  a2ad              ADR      r2,|L1.23256|
005824  a1b2              ADR      r1,|L1.23280|
005826  a0b8              ADR      r0,|L1.23304|
005828  f7fffffe          BL       show_mess
;;;9548   	          		"       заряд        ",
;;;9549   	          		"    заблокирован!   ",
;;;9550   	          		"                    ",2000);
;;;9551   		}
;;;9552   	}
;;;9553   }
00582c  bd08              POP      {r3,pc}
                  |L1.22574|
00582e  f04f0101          MOV      r1,#1                 ;9539
005832  7001              STRB     r1,[r0,#0]            ;9539
005834  e8bd4008          POP      {r3,lr}               ;9543
005838  4608              MOV      r0,r1                 ;9543
00583a  f7ffbffe          B.W      speedz_mem_hndl
;;;9554   
                          ENDP

                  speedChargeHndl PROC
;;;9324   //-----------------------------------------------
;;;9325   void speedChargeHndl(void)
00583e  e92d4ff8          PUSH     {r3-r11,lr}
;;;9326   {
;;;9327   /*
;;;9328   if(sp_ch_stat==scsOFF)
;;;9329   	{
;;;9330   	if((sk_stat[1]==1)&&(sk_stat_old[1]=0))
;;;9331   	}*/
;;;9332   	 
;;;9333   if(sp_ch_stat==scsSTEP1)
005842  4fa1              LDR      r7,|L1.23240|
;;;9334   	{
;;;9335   	if(sp_ch_stat_old!=sp_ch_stat)
005844  4db7              LDR      r5,|L1.23332|
;;;9336   		{
;;;9337   		sp_ch_stat_cnt=5;
;;;9338   		}
;;;9339   	if(sp_ch_stat_cnt)
;;;9340   		{
;;;9341   		sp_ch_stat_cnt--;
;;;9342   		if(sp_ch_stat_cnt==0)
;;;9343   			{
;;;9344   			sp_ch_stat=scsERR1; 	//Не включилась вентиляция;
;;;9345   
;;;9346   			}
;;;9347   		}
;;;9348   	if(sk_stat[0]==1)sp_ch_stat=scsWRK;
005846  f8df82d8          LDR      r8,|L1.23328|
00584a  7839              LDRB     r1,[r7,#0]            ;9333  ; sp_ch_stat
00584c  7828              LDRB     r0,[r5,#0]            ;9335
00584e  4cb6              LDR      r4,|L1.23336|
005850  f04f0a02          MOV      r10,#2
005854  2901              CMP      r1,#1                 ;9333
005856  d115              BNE      |L1.22660|
005858  2801              CMP      r0,#1                 ;9335
00585a  d002              BEQ      |L1.22626|
00585c  f04f0105          MOV      r1,#5                 ;9337
005860  8021              STRH     r1,[r4,#0]            ;9337
                  |L1.22626|
005862  f9b41000          LDRSH    r1,[r4,#0]            ;9339  ; sp_ch_stat_cnt
005866  b139              CBZ      r1,|L1.22648|
005868  f1a10101          SUB      r1,r1,#1              ;9341
00586c  b209              SXTH     r1,r1                 ;9341
00586e  8021              STRH     r1,[r4,#0]            ;9341
005870  b911              CBNZ     r1,|L1.22648|
005872  f04f0103          MOV      r1,#3                 ;9344
005876  7039              STRB     r1,[r7,#0]            ;9344
                  |L1.22648|
005878  f8981000          LDRB     r1,[r8,#0]  ; sk_stat
00587c  2901              CMP      r1,#1
00587e  d101              BNE      |L1.22660|
005880  f887a000          STRB     r10,[r7,#0]
                  |L1.22660|
;;;9349   	}
;;;9350   
;;;9351   if(sp_ch_stat==scsWRK)
005884  7839              LDRB     r1,[r7,#0]  ; sp_ch_stat
005886  2600              MOVS     r6,#0
005888  2902              CMP      r1,#2
00588a  d11f              BNE      |L1.22732|
;;;9352   	{
;;;9353   	if(sp_ch_stat_old!=sp_ch_stat)
;;;9354   		{
;;;9355   		sp_ch_wrk_cnt=(signed long)speedChrgTimeInHour*3600L;
00588c  4aa7              LDR      r2,|L1.23340|
;;;9356   		hv_vz_up_cnt=0;
00588e  49a8              LDR      r1,|L1.23344|
005890  2802              CMP      r0,#2                 ;9353
005892  d008              BEQ      |L1.22694|
005894  48a7              LDR      r0,|L1.23348|
005896  f44f6361          MOV      r3,#0xe10             ;9355
00589a  f9b00000          LDRSH    r0,[r0,#0]            ;9355  ; speedChrgTimeInHour
00589e  fb00f003          MUL      r0,r0,r3              ;9355
0058a2  6010              STR      r0,[r2,#0]            ;9355  ; sp_ch_wrk_cnt
0058a4  600e              STR      r6,[r1,#0]  ; hv_vz_up_cnt
                  |L1.22694|
;;;9357   		}
;;;9358   	sp_ch_wrk_cnt--;
0058a6  6810              LDR      r0,[r2,#0]  ; sp_ch_wrk_cnt
0058a8  f1a00001          SUB      r0,r0,#1
0058ac  6010              STR      r0,[r2,#0]  ; sp_ch_wrk_cnt
;;;9359   	hv_vz_up_cnt++;
0058ae  680a              LDR      r2,[r1,#0]  ; hv_vz_up_cnt
0058b0  f1020201          ADD      r2,r2,#1
0058b4  600a              STR      r2,[r1,#0]  ; hv_vz_up_cnt
;;;9360   	if(sp_ch_wrk_cnt==0)
0058b6  b918              CBNZ     r0,|L1.22720|
;;;9361   		{
;;;9362   		sp_ch_stat=scsOFF;
0058b8  703e              STRB     r6,[r7,#0]
;;;9363   		speedz_mem_hndl(0);
0058ba  2000              MOVS     r0,#0
0058bc  f7fffffe          BL       speedz_mem_hndl
                  |L1.22720|
;;;9364   		}
;;;9365   	#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9366   	if(sk_stat[0]==0)sp_ch_stat=scsERR2;
0058c0  f8980000          LDRB     r0,[r8,#0]  ; sk_stat
0058c4  b910              CBNZ     r0,|L1.22732|
0058c6  f04f0004          MOV      r0,#4
0058ca  7038              STRB     r0,[r7,#0]
                  |L1.22732|
;;;9367   	#endif
;;;9368   	}
;;;9369   
;;;9370   if(sp_ch_stat==scsERR1)		//Отсутствует вентиляция при включении
0058cc  7838              LDRB     r0,[r7,#0]  ; sp_ch_stat
;;;9371   	{
;;;9372   	if((sp_ch_stat_old!=sp_ch_stat)||(sp_ch_stat_cnt==0))
;;;9373   		{
;;;9374   		sp_ch_stat_cnt=10;
;;;9375   		}
;;;9376   	sp_ch_stat_cnt--;
;;;9377   	if((sp_ch_stat_cnt==10)||(sp_ch_stat_cnt==9))
;;;9378   		{
;;;9379   		show_mess(	"  УСКОРЕННЫЙ ЗАРЯД  ",
0058ce  f2413b88          MOV      r11,#0x1388
0058d2  f04f090a          MOV      r9,#0xa               ;9374
0058d6  2803              CMP      r0,#3                 ;9370
0058d8  d119              BNE      |L1.22798|
0058da  7828              LDRB     r0,[r5,#0]            ;9372  ; sp_ch_stat_old
0058dc  2803              CMP      r0,#3                 ;9372
0058de  d101              BNE      |L1.22756|
0058e0  8820              LDRH     r0,[r4,#0]            ;9372  ; sp_ch_stat_cnt
0058e2  b908              CBNZ     r0,|L1.22760|
                  |L1.22756|
0058e4  f8a49000          STRH     r9,[r4,#0]            ;9374
                  |L1.22760|
0058e8  8820              LDRH     r0,[r4,#0]            ;9376  ; sp_ch_stat_cnt
0058ea  f1a00001          SUB      r0,r0,#1              ;9376
0058ee  b200              SXTH     r0,r0                 ;9376
0058f0  8020              STRH     r0,[r4,#0]            ;9376
0058f2  280a              CMP      r0,#0xa               ;9377
0058f4  d001              BEQ      |L1.22778|
0058f6  2809              CMP      r0,#9                 ;9377
0058f8  d109              BNE      |L1.22798|
                  |L1.22778|
0058fa  4b8f              LDR      r3,|L1.23352|
0058fc  a08f              ADR      r0,|L1.23356|
0058fe  f1030218          ADD      r2,r3,#0x18
005902  f1020118          ADD      r1,r2,#0x18
005906  f8cdb000          STR      r11,[sp,#0]
00590a  f7fffffe          BL       show_mess
                  |L1.22798|
;;;9380   					"   НЕ МОЖЕТ БЫТЬ    ",
;;;9381   					"      ВКЛЮЧЕН       ",
;;;9382   					"  БЕЗ ВЕНТИЛЯЦИИ!!  ",
;;;9383   					5000);
;;;9384   		}
;;;9385   	}
;;;9386   if(sp_ch_stat==scsERR2)		//Пропала вентиляция при работе
00590e  7838              LDRB     r0,[r7,#0]  ; sp_ch_stat
005910  2804              CMP      r0,#4
005912  d11f              BNE      |L1.22868|
;;;9387   	{
;;;9388   	if((sp_ch_stat_old!=sp_ch_stat)||(sp_ch_stat_cnt==0))
005914  7828              LDRB     r0,[r5,#0]  ; sp_ch_stat_old
005916  2804              CMP      r0,#4
005918  d101              BNE      |L1.22814|
00591a  8820              LDRH     r0,[r4,#0]  ; sp_ch_stat_cnt
00591c  b908              CBNZ     r0,|L1.22818|
                  |L1.22814|
;;;9389   		{
;;;9390   		sp_ch_stat_cnt=10;
00591e  f8a49000          STRH     r9,[r4,#0]
                  |L1.22818|
;;;9391   		}
;;;9392   	sp_ch_stat_cnt--;
005922  8820              LDRH     r0,[r4,#0]  ; sp_ch_stat_cnt
005924  f1a00001          SUB      r0,r0,#1
005928  b200              SXTH     r0,r0
00592a  8020              STRH     r0,[r4,#0]
;;;9393   	if((sp_ch_stat_cnt==10)||(sp_ch_stat_cnt==9))
00592c  280a              CMP      r0,#0xa
00592e  d001              BEQ      |L1.22836|
005930  2809              CMP      r0,#9
005932  d109              BNE      |L1.22856|
                  |L1.22836|
;;;9394   		{
;;;9395   		show_mess(	"  УСКОРЕННЫЙ ЗАРЯД  ",
005934  4b87              LDR      r3,|L1.23380|
005936  a081              ADR      r0,|L1.23356|
005938  f1030218          ADD      r2,r3,#0x18
00593c  f1020118          ADD      r1,r2,#0x18
005940  f8cdb000          STR      r11,[sp,#0]
005944  f7fffffe          BL       show_mess
                  |L1.22856|
;;;9396   					"    ЗАБЛОКИРОВАН    ",
;;;9397   					"     НЕИСПРАВНА     ",
;;;9398   					"    ВЕНТИЛЯЦИЯ!!!   ",
;;;9399   					5000);
;;;9400   		}
;;;9401   	if(sk_stat[0]==1)sp_ch_stat=scsWRK;
005948  f8980000          LDRB     r0,[r8,#0]  ; sk_stat
00594c  2801              CMP      r0,#1
00594e  d101              BNE      |L1.22868|
005950  f887a000          STRB     r10,[r7,#0]
                  |L1.22868|
;;;9402   	}
;;;9403   
;;;9404   
;;;9405   sp_ch_stat_old=sp_ch_stat;
005954  7838              LDRB     r0,[r7,#0]  ; sp_ch_stat
005956  7028              STRB     r0,[r5,#0]
;;;9406   
;;;9407   
;;;9408   
;;;9409   if(speedChrgAvtEn==1)
005958  497f              LDR      r1,|L1.23384|
;;;9410   	{
;;;9411   	if((sp_ch_stat==scsOFF)&&(spc_stat==spcOFF)
;;;9412   		#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9413   		&&(vz1_stat==vz1sOFF)&&(vz2_stat==vz2sOFF)
;;;9414   		#endif
;;;9415   		)
;;;9416   		{
;;;9417   		if((load_U<u_necc)&&((u_necc-load_U)>speedChrgDU)
;;;9418   		#ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;9419   		&&(abs(Ib_ips_termokompensat/10-IZMAX)<5)
;;;9420   		#endif
;;;9421   		#ifdef UKU_220_V2
;;;9422   		&&(abs(bat[0]._Ib/10-IZMAX)<5)
;;;9423   		#endif
;;;9424   		&&(!speedChrgBlckStat))
00595a  4c5c              LDR      r4,|L1.23244|
00595c  8809              LDRH     r1,[r1,#0]            ;9409  ; speedChrgAvtEn
00595e  2901              CMP      r1,#1                 ;9409
005960  d129              BNE      |L1.22966|
005962  495b              LDR      r1,|L1.23248|
005964  780a              LDRB     r2,[r1,#0]            ;9411  ; spc_stat
005966  4310              ORRS     r0,r0,r2              ;9411
005968  7b0a              LDRB     r2,[r1,#0xc]          ;9411  ; vz1_stat
00596a  7bc9              LDRB     r1,[r1,#0xf]          ;9411  ; vz2_stat
00596c  4310              ORRS     r0,r0,r2              ;9411
00596e  4308              ORRS     r0,r0,r1              ;9411
005970  d121              BNE      |L1.22966|
005972  4849              LDR      r0,|L1.23192|
005974  4979              LDR      r1,|L1.23388|
005976  f9b00000          LDRSH    r0,[r0,#0]            ;9417  ; load_U
00597a  f9b11000          LDRSH    r1,[r1,#0]            ;9417  ; u_necc
00597e  4288              CMP      r0,r1                 ;9417
005980  da19              BGE      |L1.22966|
005982  1a08              SUBS     r0,r1,r0              ;9417
005984  4976              LDR      r1,|L1.23392|
005986  f9b11000          LDRSH    r1,[r1,#0]            ;9417  ; speedChrgDU
00598a  4288              CMP      r0,r1                 ;9417
00598c  dd13              BLE      |L1.22966|
00598e  4875              LDR      r0,|L1.23396|
005990  4975              LDR      r1,|L1.23400|
005992  f9b00000          LDRSH    r0,[r0,#0]            ;9419  ; Ib_ips_termokompensat
005996  8809              LDRH     r1,[r1,#0]            ;9419  ; IZMAX
005998  fb90f0f9          SDIV     r0,r0,r9              ;9419
00599c  1a40              SUBS     r0,r0,r1              ;9419
00599e  b200              SXTH     r0,r0                 ;9419
0059a0  f7fffffe          BL       abs
0059a4  2805              CMP      r0,#5                 ;9419
0059a6  da06              BGE      |L1.22966|
0059a8  8820              LDRH     r0,[r4,#0]  ; speedChrgBlckStat
0059aa  b920              CBNZ     r0,|L1.22966|
;;;9425   			{
;;;9426   			speedChargeStartStop();
0059ac  f7fffffe          BL       speedChargeStartStop
;;;9427   			speedz_mem_hndl(5);
0059b0  2005              MOVS     r0,#5
0059b2  f7fffffe          BL       speedz_mem_hndl
                  |L1.22966|
;;;9428   			}
;;;9429   		}
;;;9430   	}
;;;9431   
;;;9432   
;;;9433   
;;;9434   /*
;;;9435   if(speedChIsOn)
;;;9436   	{
;;;9437   	speedChTimeCnt++;
;;;9438   	if(speedChTimeCnt>=((signed long)speedChrgTimeInHour*3600L))
;;;9439   		{
;;;9440   		speedChIsOn=0;
;;;9441   		}
;;;9442   	if(speedChrgBlckStat)
;;;9443   		{
;;;9444   		speedChIsOn=0;
;;;9445   		speedChTimeCnt=0;
;;;9446   		}
;;;9447   	}
;;;9448   
;;;9449   
;;;9450   
;;;9451   if(speedChrgAvtEn)
;;;9452   	{
;;;9453   	if(!speedChIsOn)
;;;9454   		{
;;;9455   		if((load_U<u_necc)&&((u_necc-load_U)>speedChrgDU)&&(abs(Ib_ips_termokompensat/10-IZMAX)<5)&&(!speedChrgBlckStat))
;;;9456   			{
;;;9457   			speedChIsOn=1;
;;;9458   			}
;;;9459   		}
;;;9460   	}
;;;9461   
;;;9462   
;;;9463   */
;;;9464   if(/*(speedChrgBlckSrc!=1)&&*/(speedChrgBlckSrc!=2)) speedChrgBlckStat=0;
0059b6  486d              LDR      r0,|L1.23404|
0059b8  8800              LDRH     r0,[r0,#0]  ; speedChrgBlckSrc
0059ba  2802              CMP      r0,#2
0059bc  d002              BEQ      |L1.22980|
0059be  8026              STRH     r6,[r4,#0]
                  |L1.22976|
;;;9465   else
;;;9466   	{
;;;9467   	speedChrgBlckStat=0;
;;;9468   	if(speedChrgBlckSrc==1)
;;;9469   		{
;;;9470   		if(((speedChrgBlckLog==0)&&(adc_buff_[11]>2000)) || ((speedChrgBlckLog==1)&&(adc_buff_[11]<2000))) speedChrgBlckStat=1;
;;;9471   		}
;;;9472   	else if(speedChrgBlckSrc==2)
;;;9473   		{
;;;9474   		if(((speedChrgBlckLog==0)&&(adc_buff_[13]>2000)) || ((speedChrgBlckLog==1)&&(adc_buff_[13]<2000))) speedChrgBlckStat=1;
;;;9475   		}
;;;9476   	}
;;;9477   
;;;9478   /*
;;;9479   if(speedChrgBlckStat==1)
;;;9480   	{
;;;9481   
;;;9482   	//speedChargeStartStop();
;;;9483   
;;;9484   	speedChrgShowCnt++;
;;;9485   	if(speedChrgShowCnt>=30)	
;;;9486   		{
;;;9487   		speedChrgShowCnt=0;
;;;9488   		show_mess(	"     УСКОРЕННЫЙ     ",
;;;9489   					"       ЗАРЯД        ",
;;;9490   					"     ЗАПРЕЩЕН!!!    ",
;;;9491   					"                    ",
;;;9492   					5000);
;;;9493   		}
;;;9494   	} 
;;;9495   else speedChrgShowCnt=0;  */
;;;9496   
;;;9497   
;;;9498   }
0059c0  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.22980|
0059c4  8026              STRH     r6,[r4,#0]            ;9467
0059c6  486a              LDR      r0,|L1.23408|
0059c8  496a              LDR      r1,|L1.23412|
0059ca  f44f63fa          MOV      r3,#0x7d0             ;9470
0059ce  f9b00000          LDRSH    r0,[r0,#0]            ;9474  ; speedChrgBlckLog
0059d2  b918              CBNZ     r0,|L1.23004|
0059d4  f9b1201a          LDRSH    r2,[r1,#0x1a]         ;9474  ; adc_buff_
0059d8  429a              CMP      r2,r3                 ;9474
0059da  dc05              BGT      |L1.23016|
                  |L1.23004|
0059dc  2801              CMP      r0,#1                 ;9474
0059de  d1ef              BNE      |L1.22976|
0059e0  f9b1001a          LDRSH    r0,[r1,#0x1a]         ;9474  ; adc_buff_
0059e4  4298              CMP      r0,r3                 ;9474
0059e6  daeb              BGE      |L1.22976|
                  |L1.23016|
0059e8  f04f0001          MOV      r0,#1                 ;9474
0059ec  8020              STRH     r0,[r4,#0]            ;9474
0059ee  e7e7              B        |L1.22976|
;;;9499   
                          ENDP

                  averageChargeHndl PROC
;;;9555   //-----------------------------------------------
;;;9556   void averageChargeHndl(void)
0059f0  e92d4ff8          PUSH     {r3-r11,lr}
;;;9557   {
;;;9558   /*
;;;9559   if(hv_vz_stat==hvsOFF)
;;;9560   	{
;;;9561   	if((sk_stat[1]==1)&&(sk_stat_old[1]=0))
;;;9562   	} */
;;;9563   if(hv_vz_stat!=hvsOFF)
0059f4  f8dfa180          LDR      r10,|L1.23416|
0059f8  f04f0b00          MOV      r11,#0
0059fc  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005a00  b130              CBZ      r0,|L1.23056|
;;;9564   	{
;;;9565   	hv_vz_stat=hvsOFF; 	
005a02  f88ab000          STRB     r11,[r10,#0]
;;;9566   	lc640_write(EE_HV_VZ_STAT,hvsOFF);
005a06  2100              MOVS     r1,#0
005a08  f44f70b4          MOV      r0,#0x168
005a0c  f7fffffe          BL       lc640_write
                  |L1.23056|
;;;9567   	}
;;;9568   
;;;9569   if(hv_vz_stat==hvsSTEP1)
005a10  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
;;;9570   	{
;;;9571   	if(hv_vz_stat_old!=hv_vz_stat)
;;;9572   		{
;;;9573   		hv_vz_stat_cnt=5;
;;;9574   		}
;;;9575   	if(hv_vz_stat_cnt)
;;;9576   		{
;;;9577   		hv_vz_stat_cnt--;
;;;9578   		if(hv_vz_stat_cnt==0)
;;;9579   			{
;;;9580   			hv_vz_stat=hvsERR1; 	//Не включилась вентиляция;
;;;9581   			lc640_write(EE_HV_VZ_STAT,hvsERR1);
;;;9582   			}
;;;9583   		}
;;;9584   	if(sk_stat[0]==1)
005a14  4e42              LDR      r6,|L1.23328|
005a16  4d59              LDR      r5,|L1.23420|
005a18  4c59              LDR      r4,|L1.23424|
005a1a  f04f0905          MOV      r9,#5                 ;9573
005a1e  2801              CMP      r0,#1                 ;9569
005a20  d130              BNE      |L1.23172|
005a22  7828              LDRB     r0,[r5,#0]            ;9571  ; hv_vz_stat_old
005a24  2801              CMP      r0,#1                 ;9571
005a26  d001              BEQ      |L1.23084|
005a28  f8a49000          STRH     r9,[r4,#0]            ;9573
                  |L1.23084|
005a2c  f9b40000          LDRSH    r0,[r4,#0]            ;9575  ; hv_vz_stat_cnt
005a30  b168              CBZ      r0,|L1.23118|
005a32  f1a00001          SUB      r0,r0,#1              ;9577
005a36  b200              SXTH     r0,r0                 ;9577
005a38  8020              STRH     r0,[r4,#0]            ;9577
005a3a  b940              CBNZ     r0,|L1.23118|
005a3c  f04f0006          MOV      r0,#6                 ;9580
005a40  f88a0000          STRB     r0,[r10,#0]           ;9580
005a44  4601              MOV      r1,r0                 ;9581
005a46  f44f70b4          MOV      r0,#0x168             ;9581
005a4a  f7fffffe          BL       lc640_write
                  |L1.23118|
005a4e  7830              LDRB     r0,[r6,#0]  ; sk_stat
005a50  2801              CMP      r0,#1
005a52  d117              BNE      |L1.23172|
;;;9585   		{
;;;9586   		hv_vz_stat=hvsSTEP2;
005a54  f04f0002          MOV      r0,#2
005a58  f88a0000          STRB     r0,[r10,#0]
;;;9587   		lc640_write(EE_HV_VZ_STAT,hvsSTEP2);
005a5c  4601              MOV      r1,r0
005a5e  f44f70b4          MOV      r0,#0x168
005a62  f7fffffe          BL       lc640_write
;;;9588   		tree_up(iHV_STEP2_2,1,0,0);
005a66  2300              MOVS     r3,#0
005a68  461a              MOV      r2,r3
005a6a  2101              MOVS     r1,#1
005a6c  20dc              MOVS     r0,#0xdc
005a6e  f7fffffe          BL       tree_up
;;;9589   		tree_up(iHV_STEP2_1,0,0,0);
005a72  2300              MOVS     r3,#0
005a74  461a              MOV      r2,r3
005a76  4619              MOV      r1,r3
005a78  20db              MOVS     r0,#0xdb
005a7a  f7fffffe          BL       tree_up
;;;9590   		ret(1200);
005a7e  f44f6096          MOV      r0,#0x4b0
005a82  e07f              B        |L1.23428|
                  |L1.23172|
005a84  e080              B        |L1.23432|
005a86  0000              DCW      0x0000
                  |L1.23176|
                          DCD      superviser_cnt
                  |L1.23180|
                          DCD      NPN_OUT
                  |L1.23184|
                          DCD      npn_tz_cnt
                  |L1.23188|
                          DCD      npn_stat
                  |L1.23192|
                          DCD      load_U
                  |L1.23196|
                          DCD      UONPN
                  |L1.23200|
                          DCD      net_Ua
                  |L1.23204|
                          DCD      net_Ub
                  |L1.23208|
                          DCD      net_Uc
                  |L1.23212|
                          DCD      UMN
                  |L1.23216|
                          DCD      TZNPN
                  |L1.23220|
                          DCD      UVNPN
                  |L1.23224|
                          DCD      load_off_cnt
                  |L1.23228|
                          DCD      load_off_stat
                  |L1.23232|
                          DCD      dUNPN
                  |L1.23236|
                          DCD      tloaddisable_cmnd
                  |L1.23240|
                          DCD      sp_ch_stat
                  |L1.23244|
                          DCD      speedChrgBlckStat
                  |L1.23248|
                          DCD      ||area_number.25||+0x18
                  |L1.23252|
                          DCD      ||.text||+0xec4
                  |L1.23256|
005ad8  20202020          DCB      "    ",231,224,225,235,238,234,232,240,238,226,224,237,"!"
005adc  e7e0e1eb
005ae0  eeeae8f0
005ae4  eee2e0ed
005ae8  21      
005ae9  20202000          DCB      "   ",0
005aed  00                DCB      0
005aee  00                DCB      0
005aef  00                DCB      0
                  |L1.23280|
005af0  20202020          DCB      "       ",231,224,240,255,228,"        ",0
005af4  202020e7
005af8  e0f0ffe4
005afc  20202020
005b00  20202020
005b04  00      
005b05  00                DCB      0
005b06  00                DCB      0
005b07  00                DCB      0
                  |L1.23304|
005b08  20202020          DCB      "     ",211,241,234,238,240,229,237,237,251,233,"     ",0
005b0c  20d3f1ea
005b10  eef0e5ed
005b14  edfbe920
005b18  20202020
005b1c  00      
005b1d  00                DCB      0
005b1e  00                DCB      0
005b1f  00                DCB      0
                  |L1.23328|
                          DCD      sk_stat
                  |L1.23332|
                          DCD      sp_ch_stat_old
                  |L1.23336|
                          DCD      sp_ch_stat_cnt
                  |L1.23340|
                          DCD      sp_ch_wrk_cnt
                  |L1.23344|
                          DCD      hv_vz_up_cnt
                  |L1.23348|
                          DCD      speedChrgTimeInHour
                  |L1.23352|
                          DCD      ||.text||+0xd8c
                  |L1.23356|
005b3c  2020d3d1          DCB      "  ",211,209,202,206,208,197,205,205,219,201," ",199,192
005b40  caced0c5
005b44  cdcddbc9
005b48  20c7c0  
005b4b  d0dfc420          DCB      208,223,196,"  ",0
005b4f  2000    
005b51  00                DCB      0
005b52  00                DCB      0
005b53  00                DCB      0
                  |L1.23380|
                          DCD      ||.text||+0x8dc
                  |L1.23384|
                          DCD      speedChrgAvtEn
                  |L1.23388|
                          DCD      u_necc
                  |L1.23392|
                          DCD      speedChrgDU
                  |L1.23396|
                          DCD      Ib_ips_termokompensat
                  |L1.23400|
                          DCD      IZMAX
                  |L1.23404|
                          DCD      speedChrgBlckSrc
                  |L1.23408|
                          DCD      speedChrgBlckLog
                  |L1.23412|
                          DCD      ||.bss||+0x40c
                  |L1.23416|
                          DCD      hv_vz_stat
                  |L1.23420|
                          DCD      hv_vz_stat_old
                  |L1.23424|
                          DCD      hv_vz_stat_cnt
                  |L1.23428|
005b84  f7fffffe          BL       ||ret||
                  |L1.23432|
;;;9591   		}
;;;9592   	}
;;;9593   
;;;9594   if(hv_vz_stat==hvsSTEP2)
005b88  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005b8c  2802              CMP      r0,#2
005b8e  d10b              BNE      |L1.23464|
;;;9595   	{
;;;9596   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
005b90  7829              LDRB     r1,[r5,#0]  ; hv_vz_stat_old
005b92  2902              CMP      r1,#2
005b94  d101              BNE      |L1.23450|
005b96  8821              LDRH     r1,[r4,#0]  ; hv_vz_stat_cnt
005b98  b911              CBNZ     r1,|L1.23456|
                  |L1.23450|
;;;9597   		{
;;;9598   		hv_vz_stat_cnt=15;
005b9a  f04f010f          MOV      r1,#0xf
005b9e  8021              STRH     r1,[r4,#0]
                  |L1.23456|
;;;9599   		}
;;;9600   	hv_vz_stat_cnt--;
005ba0  8821              LDRH     r1,[r4,#0]  ; hv_vz_stat_cnt
005ba2  f1a10101          SUB      r1,r1,#1
005ba6  8021              STRH     r1,[r4,#0]
                  |L1.23464|
;;;9601   	//if((hv_vz_stat_cnt==14)/*||(hv_vz_stat_cnt==13)||(hv_vz_stat_cnt==12)*/)
;;;9602   	//	{
;;;9603   //		show_mess_number(	"     ВНИМАНИЕ!!!    ",
;;;9604   	//				"  Напряжение будет  ",
;;;9605   	//				" увеличено до     @В",
;;;9606   	//				"ОТКЛЮЧИТЕ НАГРУЗКУ!!",
;;;9607   	//				4800,UVZ,1);
;;;9608   	//	}
;;;9609   	//if((hv_vz_stat_cnt==8)/*||(hv_vz_stat_cnt==7)||(hv_vz_stat_cnt==6)*/)
;;;9610   	//	{
;;;9611   	//	show_mess(	"    ПОДТВЕРДИТЕ     ",
;;;9612   	//				"     НАЖАТИЕМ       ",
;;;9613   	//				"    ЦЕНТРАЛЬНОЙ     ",
;;;9614   	//				"      КНОПКИ        ",
;;;9615   	//				4800);
;;;9616   	//	} 
;;;9617   /*	if(sk_stat[1]==1)
;;;9618   		{
;;;9619   		hv_vz_stat=hvsWRK;
;;;9620   		lc640_write(EE_HV_VZ_STAT,hvsWRK);
;;;9621   		}*/
;;;9622   	}
;;;9623   
;;;9624   if(hv_vz_stat==hvsSTEP3)
;;;9625   	{
;;;9626   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
;;;9627   		{
;;;9628   		hv_vz_stat_cnt=10;
005ba8  270a              MOVS     r7,#0xa
;;;9629   		}
;;;9630   	hv_vz_stat_cnt--;
;;;9631   	if((hv_vz_stat_cnt==10)||(hv_vz_stat_cnt==9))
;;;9632   		{
;;;9633   		show_mess(	"     ВКЛЮЧИТЕ       ",
005baa  f2413888          MOV      r8,#0x1388
005bae  2803              CMP      r0,#3                 ;9624
005bb0  d122              BNE      |L1.23544|
005bb2  7828              LDRB     r0,[r5,#0]            ;9626  ; hv_vz_stat_old
005bb4  2803              CMP      r0,#3                 ;9626
005bb6  d101              BNE      |L1.23484|
005bb8  8820              LDRH     r0,[r4,#0]            ;9626  ; hv_vz_stat_cnt
005bba  b900              CBNZ     r0,|L1.23486|
                  |L1.23484|
005bbc  8027              STRH     r7,[r4,#0]            ;9628
                  |L1.23486|
005bbe  8820              LDRH     r0,[r4,#0]            ;9630  ; hv_vz_stat_cnt
005bc0  f1a00001          SUB      r0,r0,#1              ;9630
005bc4  b200              SXTH     r0,r0                 ;9630
005bc6  8020              STRH     r0,[r4,#0]            ;9630
005bc8  280a              CMP      r0,#0xa               ;9631
005bca  d001              BEQ      |L1.23504|
005bcc  2809              CMP      r0,#9                 ;9631
005bce  d109              BNE      |L1.23524|
                  |L1.23504|
005bd0  4bfb              LDR      r3,|L1.24512|
005bd2  a2fc              ADR      r2,|L1.24516|
005bd4  f5a361a2          SUB      r1,r3,#0x510
005bd8  f5016080          ADD      r0,r1,#0x400
005bdc  f8cd8000          STR      r8,[sp,#0]
005be0  f7fffffe          BL       show_mess
                  |L1.23524|
;;;9634   					"      ТУМБЛЕР       ",
;;;9635   					"   ВЫРАВНИВАЮЩИЙ    ",
;;;9636   					"       ЗАРЯД        ",
;;;9637   					5000);
;;;9638   		}
;;;9639   	if(sk_stat[1]==1)
005be4  7870              LDRB     r0,[r6,#1]  ; sk_stat
005be6  2801              CMP      r0,#1
005be8  d106              BNE      |L1.23544|
;;;9640   		{
;;;9641   		hv_vz_stat=hvsWRK;
005bea  f88a9000          STRB     r9,[r10,#0]
;;;9642   		lc640_write(EE_HV_VZ_STAT,hvsWRK);
005bee  2105              MOVS     r1,#5
005bf0  f44f70b4          MOV      r0,#0x168
005bf4  f7fffffe          BL       lc640_write
                  |L1.23544|
;;;9643   		}
;;;9644   	}
;;;9645   
;;;9646   if(hv_vz_stat==hvsWRK)
005bf8  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005bfc  2805              CMP      r0,#5
005bfe  d13a              BNE      |L1.23670|
;;;9647   	{
;;;9648   	if(hv_vz_stat_old!=hv_vz_stat)
005c00  7828              LDRB     r0,[r5,#0]  ; hv_vz_stat_old
;;;9649   		{
;;;9650   		hv_vz_wrk_cnt=3600L/*100L*/*((long)VZ_HR);
005c02  4af6              LDR      r2,|L1.24540|
;;;9651   		if(VZ_HR==0)  	hv_vz_wrk_cnt=1800L;
;;;9652   		hv_vz_up_cnt=0L;
005c04  49f6              LDR      r1,|L1.24544|
005c06  2805              CMP      r0,#5                 ;9648
005c08  d00d              BEQ      |L1.23590|
005c0a  48f6              LDR      r0,|L1.24548|
005c0c  f44f6361          MOV      r3,#0xe10             ;9650
005c10  f9b00000          LDRSH    r0,[r0,#0]            ;9650  ; VZ_HR
005c14  fb00f303          MUL      r3,r0,r3              ;9650
005c18  6013              STR      r3,[r2,#0]            ;9650  ; hv_vz_wrk_cnt
005c1a  b910              CBNZ     r0,|L1.23586|
005c1c  f44f60e1          MOV      r0,#0x708             ;9651
005c20  6010              STR      r0,[r2,#0]            ;9651  ; hv_vz_wrk_cnt
                  |L1.23586|
005c22  f8c1b000          STR      r11,[r1,#0]  ; hv_vz_up_cnt
                  |L1.23590|
;;;9653   		}
;;;9654   	hv_vz_wrk_cnt--;
005c26  6810              LDR      r0,[r2,#0]  ; hv_vz_wrk_cnt
005c28  f1a00001          SUB      r0,r0,#1
005c2c  6010              STR      r0,[r2,#0]  ; hv_vz_wrk_cnt
;;;9655   	hv_vz_up_cnt++;
005c2e  680a              LDR      r2,[r1,#0]  ; hv_vz_up_cnt
005c30  f1020201          ADD      r2,r2,#1
005c34  600a              STR      r2,[r1,#0]  ; hv_vz_up_cnt
;;;9656   
;;;9657   	if(hv_vz_wrk_cnt==0)
005c36  b940              CBNZ     r0,|L1.23626|
;;;9658   		{
;;;9659   		hv_vz_stat=hvsERR4;
005c38  f04f0009          MOV      r0,#9
005c3c  f88a0000          STRB     r0,[r10,#0]
;;;9660   		lc640_write(EE_HV_VZ_STAT,hvsERR4);
005c40  4601              MOV      r1,r0
005c42  f44f70b4          MOV      r0,#0x168
005c46  f7fffffe          BL       lc640_write
                  |L1.23626|
;;;9661   		}
;;;9662   	if(sk_stat[0]==0)
005c4a  7830              LDRB     r0,[r6,#0]  ; sk_stat
005c4c  b940              CBNZ     r0,|L1.23648|
;;;9663   		{
;;;9664   		hv_vz_stat=hvsERR2;
005c4e  f04f0007          MOV      r0,#7
005c52  f88a0000          STRB     r0,[r10,#0]
;;;9665   		lc640_write(EE_HV_VZ_STAT,hvsERR2);
005c56  4601              MOV      r1,r0
005c58  f44f70b4          MOV      r0,#0x168
005c5c  f7fffffe          BL       lc640_write
                  |L1.23648|
;;;9666   		}
;;;9667   	if(sk_stat[1]==0)
005c60  7870              LDRB     r0,[r6,#1]  ; sk_stat
005c62  b940              CBNZ     r0,|L1.23670|
;;;9668   		{
;;;9669   		hv_vz_stat=hvsERR3;
005c64  f04f0008          MOV      r0,#8
005c68  f88a0000          STRB     r0,[r10,#0]
;;;9670   		lc640_write(EE_HV_VZ_STAT,hvsERR3);
005c6c  4601              MOV      r1,r0
005c6e  f44f70b4          MOV      r0,#0x168
005c72  f7fffffe          BL       lc640_write
                  |L1.23670|
;;;9671   		}
;;;9672   	}
;;;9673   
;;;9674   if(hv_vz_stat==hvsERR1)		//Отсутствует вентиляция при включении
005c76  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005c7a  2806              CMP      r0,#6
005c7c  d11a              BNE      |L1.23732|
;;;9675   	{
;;;9676   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
005c7e  7828              LDRB     r0,[r5,#0]  ; hv_vz_stat_old
005c80  2806              CMP      r0,#6
005c82  d101              BNE      |L1.23688|
005c84  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005c86  b900              CBNZ     r0,|L1.23690|
                  |L1.23688|
;;;9677   		{
;;;9678   		hv_vz_stat_cnt=10;
005c88  8027              STRH     r7,[r4,#0]
                  |L1.23690|
;;;9679   		}
;;;9680   	hv_vz_stat_cnt--;
005c8a  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005c8c  f1a00001          SUB      r0,r0,#1
005c90  b200              SXTH     r0,r0
005c92  8020              STRH     r0,[r4,#0]
;;;9681   	if((hv_vz_stat_cnt==10)||(hv_vz_stat_cnt==9))
005c94  280a              CMP      r0,#0xa
005c96  d001              BEQ      |L1.23708|
005c98  2809              CMP      r0,#9
005c9a  d10b              BNE      |L1.23732|
                  |L1.23708|
;;;9682   		{
;;;9683   		show_mess(	"ВЫРАВНИВАЮЩИЙ ЗАРЯД ",
005c9c  4bc8              LDR      r3,|L1.24512|
005c9e  f8cd8000          STR      r8,[sp,#0]
005ca2  3bf0              SUBS     r3,r3,#0xf0
005ca4  f1030218          ADD      r2,r3,#0x18
005ca8  f1020118          ADD      r1,r2,#0x18
005cac  f5a16093          SUB      r0,r1,#0x498
005cb0  f7fffffe          BL       show_mess
                  |L1.23732|
;;;9684   					"   НЕ МОЖЕТ БЫТЬ    ",
;;;9685   					"      ВКЛЮЧЕН       ",
;;;9686   					"  БЕЗ ВЕНТИЛЯЦИИ!!  ",
;;;9687   					5000);
;;;9688   		}
;;;9689   	}
;;;9690   if(hv_vz_stat==hvsERR2)		//Пропала вентиляция при работе
005cb4  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005cb8  2807              CMP      r0,#7
005cba  d123              BNE      |L1.23812|
;;;9691   	{
;;;9692   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
005cbc  7828              LDRB     r0,[r5,#0]  ; hv_vz_stat_old
005cbe  2807              CMP      r0,#7
005cc0  d101              BNE      |L1.23750|
005cc2  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005cc4  b900              CBNZ     r0,|L1.23752|
                  |L1.23750|
;;;9693   		{
;;;9694   		hv_vz_stat_cnt=10;
005cc6  8027              STRH     r7,[r4,#0]
                  |L1.23752|
;;;9695   		}
;;;9696   	hv_vz_stat_cnt--;
005cc8  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005cca  f1a00001          SUB      r0,r0,#1
005cce  b200              SXTH     r0,r0
005cd0  8020              STRH     r0,[r4,#0]
;;;9697   	if((hv_vz_stat_cnt==10)||(hv_vz_stat_cnt==9))
005cd2  280a              CMP      r0,#0xa
005cd4  d001              BEQ      |L1.23770|
005cd6  2809              CMP      r0,#9
005cd8  d10a              BNE      |L1.23792|
                  |L1.23770|
;;;9698   		{
;;;9699   		show_mess(	"ВЫРАВНИВАЮЩИЙ ЗАРЯД ",
005cda  4bc3              LDR      r3,|L1.24552|
005cdc  f8cd8000          STR      r8,[sp,#0]
005ce0  f1030218          ADD      r2,r3,#0x18
005ce4  f1020118          ADD      r1,r2,#0x18
005ce8  f1010018          ADD      r0,r1,#0x18
005cec  f7fffffe          BL       show_mess
                  |L1.23792|
;;;9700   					"    ЗАБЛОКИРОВАН    ",
;;;9701   					"     НЕИСПРАВНА     ",
;;;9702   					"    ВЕНТИЛЯЦИЯ!!!   ",
;;;9703   					5000);
;;;9704   		}
;;;9705   	if(sk_stat[0]==1)
005cf0  7830              LDRB     r0,[r6,#0]  ; sk_stat
005cf2  2801              CMP      r0,#1
005cf4  d106              BNE      |L1.23812|
;;;9706   		{
;;;9707   		hv_vz_stat=hvsWRK;
005cf6  f88a9000          STRB     r9,[r10,#0]
;;;9708   		lc640_write(EE_HV_VZ_STAT,hvsWRK);
005cfa  2105              MOVS     r1,#5
005cfc  f44f70b4          MOV      r0,#0x168
005d00  f7fffffe          BL       lc640_write
                  |L1.23812|
;;;9709   		}
;;;9710   	}
;;;9711   
;;;9712   if(hv_vz_stat==hvsERR3)		//Отключен тумблер "Выравнивающий заряд"
005d04  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005d08  2808              CMP      r0,#8
005d0a  d123              BNE      |L1.23892|
;;;9713   	{
;;;9714   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
005d0c  7828              LDRB     r0,[r5,#0]  ; hv_vz_stat_old
005d0e  2808              CMP      r0,#8
005d10  d101              BNE      |L1.23830|
005d12  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005d14  b900              CBNZ     r0,|L1.23832|
                  |L1.23830|
;;;9715   		{
;;;9716   		hv_vz_stat_cnt=10;
005d16  8027              STRH     r7,[r4,#0]
                  |L1.23832|
;;;9717   		}
;;;9718   	hv_vz_stat_cnt--;
005d18  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005d1a  f1a00001          SUB      r0,r0,#1
005d1e  b200              SXTH     r0,r0
005d20  8020              STRH     r0,[r4,#0]
;;;9719   	if((hv_vz_stat_cnt==10)||(hv_vz_stat_cnt==9))
005d22  280a              CMP      r0,#0xa
005d24  d001              BEQ      |L1.23850|
005d26  2809              CMP      r0,#9
005d28  d10a              BNE      |L1.23872|
                  |L1.23850|
;;;9720   		{
;;;9721   		show_mess(	"ВЫРАВНИВАЮЩИЙ ЗАРЯД ",
005d2a  4bb0              LDR      r3,|L1.24556|
005d2c  f8cd8000          STR      r8,[sp,#0]
005d30  f5a36216          SUB      r2,r3,#0x960
005d34  f1020118          ADD      r1,r2,#0x18
005d38  f5a1609f          SUB      r0,r1,#0x4f8
005d3c  f7fffffe          BL       show_mess
                  |L1.23872|
;;;9722   					"  БУДЕТ ПРОДОЛЖЕН   ",
;;;9723   					"  ПОСЛЕ ВКЛЮЧЕНИЯ   ",
;;;9724   					"    ТУМБЛЕРА!!!     ",
;;;9725   					5000);
;;;9726   		}
;;;9727   	if(sk_stat[1]==1)
005d40  7870              LDRB     r0,[r6,#1]  ; sk_stat
005d42  2801              CMP      r0,#1
005d44  d106              BNE      |L1.23892|
;;;9728   		{
;;;9729   		hv_vz_stat=hvsWRK;
005d46  f88a9000          STRB     r9,[r10,#0]
;;;9730   		lc640_write(EE_HV_VZ_STAT,hvsWRK);
005d4a  2105              MOVS     r1,#5
005d4c  f44f70b4          MOV      r0,#0x168
005d50  f7fffffe          BL       lc640_write
                  |L1.23892|
;;;9731   		}
;;;9732   	}
;;;9733   if(hv_vz_stat==hvsERR4)		//ВЗ закончился а тумблер включен
005d54  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005d58  2809              CMP      r0,#9
005d5a  d123              BNE      |L1.23972|
;;;9734   	{
;;;9735   	if((hv_vz_stat_old!=hv_vz_stat)||(hv_vz_stat_cnt==0))
005d5c  7828              LDRB     r0,[r5,#0]  ; hv_vz_stat_old
005d5e  2809              CMP      r0,#9
005d60  d101              BNE      |L1.23910|
005d62  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005d64  b900              CBNZ     r0,|L1.23912|
                  |L1.23910|
;;;9736   		{
;;;9737   		hv_vz_stat_cnt=10;
005d66  8027              STRH     r7,[r4,#0]
                  |L1.23912|
;;;9738   		}
;;;9739   	hv_vz_stat_cnt--;
005d68  8820              LDRH     r0,[r4,#0]  ; hv_vz_stat_cnt
005d6a  f1a00001          SUB      r0,r0,#1
005d6e  b200              SXTH     r0,r0
005d70  8020              STRH     r0,[r4,#0]
;;;9740   	if((hv_vz_stat_cnt==10)||(hv_vz_stat_cnt==9))
005d72  280a              CMP      r0,#0xa
005d74  d001              BEQ      |L1.23930|
005d76  2809              CMP      r0,#9
005d78  d109              BNE      |L1.23950|
                  |L1.23930|
;;;9741   		{
;;;9742   		show_mess(	"     ВЫКЛЮЧИТЕ      ",
005d7a  4b91              LDR      r3,|L1.24512|
005d7c  a291              ADR      r2,|L1.24516|
005d7e  f5a361a2          SUB      r1,r3,#0x510
005d82  f50160a8          ADD      r0,r1,#0x540
005d86  f8cd8000          STR      r8,[sp,#0]
005d8a  f7fffffe          BL       show_mess
                  |L1.23950|
;;;9743   					"      ТУМБЛЕР       ",
;;;9744   					"   ВЫРАВНИВАЮЩИЙ    ",
;;;9745   					"       ЗАРЯД        ",
;;;9746   					5000);
;;;9747   		}
;;;9748   	if(sk_stat[1]==0)
005d8e  7870              LDRB     r0,[r6,#1]  ; sk_stat
005d90  b940              CBNZ     r0,|L1.23972|
;;;9749   		{
;;;9750   		hv_vz_stat=hvsOFF;
005d92  f88ab000          STRB     r11,[r10,#0]
;;;9751   		lc640_write(EE_HV_VZ_STAT,hvsOFF);
005d96  2100              MOVS     r1,#0
005d98  f44f70b4          MOV      r0,#0x168
005d9c  f7fffffe          BL       lc640_write
;;;9752   		vz_stop();
005da0  f7fffffe          BL       vz_stop
                  |L1.23972|
;;;9753   
;;;9754   		}
;;;9755   	}
;;;9756   hv_vz_stat_old=hv_vz_stat;
005da4  f89a0000          LDRB     r0,[r10,#0]  ; hv_vz_stat
005da8  7028              STRB     r0,[r5,#0]
;;;9757   /*
;;;9758   if(speedChIsOn)
;;;9759   	{
;;;9760   	speedChTimeCnt++;
;;;9761   	if(speedChTimeCnt>=((signed long)speedChrgTimeInHour*3600L))
;;;9762   		{
;;;9763   		speedChIsOn=0;
;;;9764   		}
;;;9765   	if(speedChrgBlckStat)
;;;9766   		{
;;;9767   		speedChIsOn=0;
;;;9768   		speedChTimeCnt=0;
;;;9769   		}
;;;9770   	}
;;;9771   
;;;9772   
;;;9773   
;;;9774   if(speedChrgAvtEn)
;;;9775   	{
;;;9776   	if(!speedChIsOn)
;;;9777   		{
;;;9778   		if((load_U<u_necc)&&((u_necc-load_U)>speedChrgDU)&&(abs(Ib_ips_termokompensat/10-IZMAX)<5)&&(!speedChrgBlckStat))
;;;9779   			{
;;;9780   			speedChIsOn=1;
;;;9781   			}
;;;9782   		}
;;;9783   	}
;;;9784   
;;;9785   
;;;9786   
;;;9787   if((speedChrgBlckSrc!=1)&&(speedChrgBlckSrc!=2)) speedChrgBlckStat=0;
;;;9788   else
;;;9789   	{
;;;9790   	speedChrgBlckStat=0;
;;;9791   	if(speedChrgBlckSrc==1)
;;;9792   		{
;;;9793   		if(((speedChrgBlckLog==0)&&(adc_buff_[11]>2000)) || ((speedChrgBlckLog==1)&&(adc_buff_[11]<2000))) speedChrgBlckStat=1;
;;;9794   		}
;;;9795   	else if(speedChrgBlckSrc==2)
;;;9796   		{
;;;9797   		if(((speedChrgBlckLog==0)&&(adc_buff_[13]>2000)) || ((speedChrgBlckLog==1)&&(adc_buff_[13]<2000))) speedChrgBlckStat=1;
;;;9798   		}
;;;9799   	}
;;;9800   
;;;9801   
;;;9802   if(speedChrgBlckStat==1)
;;;9803   	{
;;;9804   
;;;9805   	//speedChargeStartStop();
;;;9806   
;;;9807   	speedChrgShowCnt++;
;;;9808   	if(speedChrgShowCnt>=30)	
;;;9809   		{
;;;9810   		speedChrgShowCnt=0;
;;;9811   		show_mess(	"     УСКОРЕННЫЙ     ",
;;;9812   					"       ЗАРЯД        ",
;;;9813   					"     ЗАПРЕЩЕН!!!    ",
;;;9814   					"                    ",
;;;9815   					5000);
;;;9816   		}
;;;9817   	}
;;;9818   else speedChrgShowCnt=0;
;;;9819   
;;;9820   */
;;;9821   }
005daa  e609              B        |L1.22976|
;;;9822   
                          ENDP

                  numOfForvardBps_hndl PROC
;;;9839   //-----------------------------------------------
;;;9840   void	numOfForvardBps_hndl(void)			//Программа смены первого источника для равномерного износа БПСов
005dac  e92d41f0          PUSH     {r4-r8,lr}
;;;9841   {
;;;9842   
;;;9843   numOfForvardBps_old=numOfForvardBps;
005db0  4c8f              LDR      r4,|L1.24560|
005db2  7f60              LDRB     r0,[r4,#0x1d]  ; numOfForvardBps
005db4  77a0              STRB     r0,[r4,#0x1e]
;;;9844   
;;;9845   numOfForvardBps=0;
005db6  f04f0500          MOV      r5,#0
005dba  7765              STRB     r5,[r4,#0x1d]
;;;9846   
;;;9847   //FORVARDBPSCHHOUR=10;
;;;9848   
;;;9849   if((FORVARDBPSCHHOUR<=0)||(FORVARDBPSCHHOUR>500))
005dbc  4e8d              LDR      r6,|L1.24564|
005dbe  f9b60000          LDRSH    r0,[r6,#0]  ; FORVARDBPSCHHOUR
005dc2  2800              CMP      r0,#0
005dc4  dd02              BLE      |L1.24012|
005dc6  f5b07ffa          CMP      r0,#0x1f4
005dca  dd02              BLE      |L1.24018|
                  |L1.24012|
;;;9850   	{
;;;9851   	FORVARDBPSCHHOUR=0;
005dcc  8035              STRH     r5,[r6,#0]
                  |L1.24014|
;;;9852   	return;
;;;9853   	}
;;;9854   
;;;9855   numOfForvardBps_minCnt++;
;;;9856   
;;;9857   
;;;9858   if(numOfForvardBps_minCnt>=60)
;;;9859   	{
;;;9860   	numOfForvardBps_minCnt=0;
;;;9861   	numOfForvardBps_hourCnt=lc640_read_int(EE_FORVBPSHOURCNT);
;;;9862   	numOfForvardBps_hourCnt++;
;;;9863   	if(numOfForvardBps_hourCnt>=(FORVARDBPSCHHOUR*NUMIST))
;;;9864   		{
;;;9865   		numOfForvardBps_hourCnt=0;
;;;9866   		}
;;;9867   	lc640_write_int(EE_FORVBPSHOURCNT,numOfForvardBps_hourCnt);
;;;9868   	}
;;;9869   
;;;9870   numOfForvardBps=numOfForvardBps_hourCnt/FORVARDBPSCHHOUR;
;;;9871   
;;;9872   //if(numOfForvardBps)
;;;9873   //numOfForvardBps_old=numOfForvardBps; 
;;;9874   }
005dce  e8bd81f0          POP      {r4-r8,pc}
                  |L1.24018|
005dd2  7fe0              LDRB     r0,[r4,#0x1f]         ;9855  ; numOfForvardBps_minCnt
005dd4  f1000001          ADD      r0,r0,#1              ;9855
005dd8  b2c0              UXTB     r0,r0                 ;9855
005dda  77e0              STRB     r0,[r4,#0x1f]         ;9855
005ddc  283c              CMP      r0,#0x3c              ;9858
005dde  d31a              BCC      |L1.24086|
005de0  77e5              STRB     r5,[r4,#0x1f]         ;9860
005de2  f44f7794          MOV      r7,#0x128             ;9861
005de6  4638              MOV      r0,r7                 ;9861
005de8  f7fffffe          BL       lc640_read_int
005dec  f1000001          ADD      r0,r0,#1              ;9862
005df0  b200              SXTH     r0,r0                 ;9862
005df2  f8a40070          STRH     r0,[r4,#0x70]         ;9862
005df6  4a80              LDR      r2,|L1.24568|
005df8  f9b61000          LDRSH    r1,[r6,#0]            ;9863  ; FORVARDBPSCHHOUR
005dfc  f9b22000          LDRSH    r2,[r2,#0]            ;9863  ; NUMIST
005e00  fb01f102          MUL      r1,r1,r2              ;9863
005e04  4281              CMP      r1,r0                 ;9863
005e06  dc01              BGT      |L1.24076|
005e08  f8a45070          STRH     r5,[r4,#0x70]         ;9865
                  |L1.24076|
005e0c  f9b41070          LDRSH    r1,[r4,#0x70]         ;9867  ; numOfForvardBps_hourCnt
005e10  4638              MOV      r0,r7                 ;9867
005e12  f7fffffe          BL       lc640_write_int
                  |L1.24086|
005e16  f9b40070          LDRSH    r0,[r4,#0x70]         ;9870  ; numOfForvardBps_hourCnt
005e1a  f9b61000          LDRSH    r1,[r6,#0]            ;9870  ; FORVARDBPSCHHOUR
005e1e  fb90f0f1          SDIV     r0,r0,r1              ;9870
005e22  7760              STRB     r0,[r4,#0x1d]         ;9870
005e24  e7d3              B        |L1.24014|
;;;9875   
                          ENDP

                  numOfForvardBps_init PROC
;;;9876   //-----------------------------------------------
;;;9877   void	numOfForvardBps_init(void)			//Программа сброса системы смены первого источника для равномерного износа БПСов
005e26  b510              PUSH     {r4,lr}
;;;9878   {									//Должна вызываться при изменении кол-ва источников в структуре
;;;9879   lc640_write_int(EE_FORVBPSHOURCNT,0);
005e28  2100              MOVS     r1,#0
005e2a  f44f7094          MOV      r0,#0x128
005e2e  f7fffffe          BL       lc640_write_int
;;;9880   numOfForvardBps_minCnt=58;
005e32  496f              LDR      r1,|L1.24560|
005e34  f04f003a          MOV      r0,#0x3a
005e38  77c8              STRB     r0,[r1,#0x1f]
;;;9881   }
005e3a  bd10              POP      {r4,pc}
;;;9882   
                          ENDP

                  outVoltContrHndl PROC
;;;9883   //-----------------------------------------------
;;;9884   void outVoltContrHndl(void)
005e3c  b570              PUSH     {r4-r6,lr}
;;;9885   { 
;;;9886   if((load_U>U_OUT_KONTR_MAX)||(load_U<U_OUT_KONTR_MIN))
005e3e  4c6f              LDR      r4,|L1.24572|
005e40  486f              LDR      r0,|L1.24576|
;;;9887   	{
;;;9888   	outVoltContrHndlCnt_=0;
;;;9889   	if(outVoltContrHndlCnt<U_OUT_KONTR_DELAY)
005e42  4a70              LDR      r2,|L1.24580|
005e44  f9b41000          LDRSH    r1,[r4,#0]            ;9886  ; load_U
005e48  f9b06000          LDRSH    r6,[r0,#0]            ;9886  ; U_OUT_KONTR_MAX
005e4c  2500              MOVS     r5,#0                 ;9888
005e4e  f9b20000          LDRSH    r0,[r2,#0]
005e52  4b6d              LDR      r3,|L1.24584|
005e54  42b1              CMP      r1,r6                 ;9886
005e56  dc04              BGT      |L1.24162|
005e58  4e6c              LDR      r6,|L1.24588|
005e5a  f9b66000          LDRSH    r6,[r6,#0]            ;9886  ; U_OUT_KONTR_MIN
005e5e  42b1              CMP      r1,r6                 ;9886
005e60  da0f              BGE      |L1.24194|
                  |L1.24162|
005e62  801d              STRH     r5,[r3,#0]            ;9888
005e64  496a              LDR      r1,|L1.24592|
005e66  f9b11000          LDRSH    r1,[r1,#0]  ; U_OUT_KONTR_DELAY
005e6a  4288              CMP      r0,r1
005e6c  da1b              BGE      |L1.24230|
;;;9890   		{
;;;9891   		outVoltContrHndlCnt++;
005e6e  f1000001          ADD      r0,r0,#1
005e72  b200              SXTH     r0,r0
005e74  8010              STRH     r0,[r2,#0]
;;;9892   		if(outVoltContrHndlCnt==U_OUT_KONTR_DELAY)
005e76  4288              CMP      r0,r1
005e78  d115              BNE      |L1.24230|
;;;9893   			{
;;;9894   			avar_uout_hndl(1);
005e7a  2001              MOVS     r0,#1
005e7c  f7fffffe          BL       avar_uout_hndl
005e80  e011              B        |L1.24230|
                  |L1.24194|
;;;9895   			}
;;;9896   		}
;;;9897   	}
;;;9898   else
;;;9899   	{
;;;9900   	if(outVoltContrHndlCnt)
005e82  b180              CBZ      r0,|L1.24230|
;;;9901   		{
;;;9902   		if(outVoltContrHndlCnt_<5)
005e84  f9b30000          LDRSH    r0,[r3,#0]  ; outVoltContrHndlCnt_
005e88  2805              CMP      r0,#5
005e8a  da0c              BGE      |L1.24230|
;;;9903   			{
;;;9904   			outVoltContrHndlCnt_++;
005e8c  f1000001          ADD      r0,r0,#1
005e90  b200              SXTH     r0,r0
005e92  8018              STRH     r0,[r3,#0]
;;;9905   			if(outVoltContrHndlCnt_>=5)
005e94  2805              CMP      r0,#5
005e96  db06              BLT      |L1.24230|
;;;9906   				{
;;;9907   				outVoltContrHndlCnt=0;
005e98  8015              STRH     r5,[r2,#0]
;;;9908   				if(uout_av)avar_uout_hndl(0);
005e9a  485e              LDR      r0,|L1.24596|
005e9c  7800              LDRB     r0,[r0,#0]  ; uout_av
005e9e  b110              CBZ      r0,|L1.24230|
005ea0  2000              MOVS     r0,#0
005ea2  f7fffffe          BL       avar_uout_hndl
                  |L1.24230|
;;;9909   				}
;;;9910   			}
;;;9911   		}
;;;9912   	}
;;;9913   
;;;9914   if (load_U<(USIGN*10)) 
005ea6  485c              LDR      r0,|L1.24600|
005ea8  f9b41000          LDRSH    r1,[r4,#0]  ; load_U
005eac  f9b00000          LDRSH    r0,[r0,#0]  ; USIGN
005eb0  eb000080          ADD      r0,r0,r0,LSL #2
005eb4  ebb10f40          CMP      r1,r0,LSL #1
005eb8  da0b              BGE      |L1.24274|
;;;9915   	{
;;;9916   	if(!bSILENT)
005eba  4858              LDR      r0,|L1.24604|
005ebc  6800              LDR      r0,[r0,#0]  ; bSILENT
005ebe  2800              CMP      r0,#0
005ec0  d107              BNE      |L1.24274|
;;;9917   		{
;;;9918   		mess_send(MESS2RELE_HNDL,PARAM_RELE_BAT_IS_DISCHARGED,1,20);
005ec2  e8bd4070          POP      {r4-r6,lr}
005ec6  2314              MOVS     r3,#0x14
005ec8  2201              MOVS     r2,#1
005eca  2172              MOVS     r1,#0x72
005ecc  20d2              MOVS     r0,#0xd2
005ece  f7ffbffe          B.W      mess_send
                  |L1.24274|
;;;9919   		}
;;;9920   
;;;9921   	//bU_BAT2REL_AV_BAT=1;
;;;9922   	}
;;;9923   
;;;9924   
;;;9925   }
005ed2  bd70              POP      {r4-r6,pc}
;;;9926   
                          ENDP

                  vent_resurs_hndl PROC
;;;9927   //-----------------------------------------------
;;;9928   void vent_resurs_hndl(void)
005ed4  e92d47f0          PUSH     {r4-r10,lr}
;;;9929   {
;;;9930   char i;
;;;9931   char crc_in,crc_eval;
;;;9932   
;;;9933   for(i=0;i<NUMIST;i++)
005ed8  f04f0200          MOV      r2,#0
;;;9934   	{
;;;9935   	if((bps[i]._buff[7]&0xc0)==0x00)
;;;9936   		{
;;;9937   		bps[i]._vent_resurs_temp[0]=bps[i]._buff[7];
;;;9938   		}
;;;9939   	else if((bps[i]._buff[7]&0xc0)==0x40)
;;;9940   		{
;;;9941   		bps[i]._vent_resurs_temp[1]=bps[i]._buff[7];
;;;9942   		}
;;;9943   	else if((bps[i]._buff[7]&0xc0)==0x80)
;;;9944   		{
;;;9945   		bps[i]._vent_resurs_temp[2]=bps[i]._buff[7];
;;;9946   		}
;;;9947   	else if((bps[i]._buff[7]&0xc0)==0xc0)
;;;9948   		{
;;;9949   		bps[i]._vent_resurs_temp[3]=bps[i]._buff[7];
;;;9950   		}
;;;9951   	crc_in=0;
;;;9952   	crc_in|=(bps[i]._vent_resurs_temp[0]&0x30)>>4;
;;;9953   	crc_in|=(bps[i]._vent_resurs_temp[1]&0x30)>>2;
;;;9954   	crc_in|=(bps[i]._vent_resurs_temp[2]&0x30);
;;;9955   	crc_in|=(bps[i]._vent_resurs_temp[3]&0x30)<<2;
;;;9956   
;;;9957   	crc_eval =bps[i]._vent_resurs_temp[0]&0x0f;
;;;9958   	crc_eval^=bps[i]._vent_resurs_temp[1]&0x0f;
;;;9959   	crc_eval^=bps[i]._vent_resurs_temp[2]&0x0f;
;;;9960   	crc_eval^=bps[i]._vent_resurs_temp[3]&0x0f;
;;;9961   
;;;9962   	if(crc_eval==crc_in)
;;;9963   		{
;;;9964   		unsigned short temp_US;
;;;9965   		temp_US=0;
;;;9966   
;;;9967   		temp_US|=(bps[i]._vent_resurs_temp[3]&0x0f);
;;;9968   		temp_US<<=4;
;;;9969   		temp_US|=(bps[i]._vent_resurs_temp[2]&0x0f);
;;;9970   		temp_US<<=4;
;;;9971   		temp_US|=(bps[i]._vent_resurs_temp[1]&0x0f);
;;;9972   		temp_US<<=4;
;;;9973   		temp_US|=(bps[i]._vent_resurs_temp[0]&0x0f);
;;;9974   
;;;9975   		if(bps[i]._vent_resurs!=temp_US)bps[i]._vent_resurs=temp_US;
;;;9976   		}
;;;9977   
;;;9978   	if((bps[i]._vent_resurs>TVENTMAX*10)&&(TVENTMAX>0))
005edc  4850              LDR      r0,|L1.24608|
005ede  f8dfc144          LDR      r12,|L1.24612|
005ee2  f9b06000          LDRSH    r6,[r0,#0]
005ee6  4844              LDR      r0,|L1.24568|
005ee8  f9b07000          LDRSH    r7,[r0,#0]            ;9933
005eec  e0a3              B        |L1.24630|
                  |L1.24302|
005eee  ebc200c2          RSB      r0,r2,r2,LSL #3       ;9935
005ef2  eb001002          ADD      r0,r0,r2,LSL #4       ;9935
005ef6  eb0c0080          ADD      r0,r12,r0,LSL #2      ;9935
005efa  7b41              LDRB     r1,[r0,#0xd]          ;9935
005efc  098b              LSRS     r3,r1,#6              ;9935
005efe  d006              BEQ      |L1.24334|
005f00  2301              MOVS     r3,#1                 ;9939
005f02  ebb31f91          CMP      r3,r1,LSR #6          ;9939
005f06  d105              BNE      |L1.24340|
005f08  f8801055          STRB     r1,[r0,#0x55]         ;9941
005f0c  e00f              B        |L1.24366|
                  |L1.24334|
005f0e  f8801054          STRB     r1,[r0,#0x54]         ;9937
005f12  e00c              B        |L1.24366|
                  |L1.24340|
005f14  2302              MOVS     r3,#2                 ;9943
005f16  ebb31f91          CMP      r3,r1,LSR #6          ;9943
005f1a  d102              BNE      |L1.24354|
005f1c  f8801056          STRB     r1,[r0,#0x56]         ;9945
005f20  e005              B        |L1.24366|
                  |L1.24354|
005f22  2303              MOVS     r3,#3                 ;9947
005f24  ebb31f91          CMP      r3,r1,LSR #6          ;9947
005f28  d101              BNE      |L1.24366|
005f2a  f8801057          STRB     r1,[r0,#0x57]         ;9949
                  |L1.24366|
005f2e  f8101f54          LDRB     r1,[r0,#0x54]!        ;9952
005f32  f3c11401          UBFX     r4,r1,#4,#2           ;9952
005f36  7843              LDRB     r3,[r0,#1]            ;9953
005f38  f0030530          AND      r5,r3,#0x30           ;9953
005f3c  ea440495          ORR      r4,r4,r5,LSR #2       ;9953
005f40  f8909002          LDRB     r9,[r0,#2]            ;9954
005f44  f0090830          AND      r8,r9,#0x30           ;9954
005f48  ea480804          ORR      r8,r8,r4              ;9954
005f4c  78c5              LDRB     r5,[r0,#3]            ;9955
005f4e  f1a00054          SUB      r0,r0,#0x54           ;9955
005f52  f0050430          AND      r4,r5,#0x30           ;9955
005f56  ea480884          ORR      r8,r8,r4,LSL #2       ;9955
005f5a  f001010f          AND      r1,r1,#0xf            ;9957
005f5e  f003040f          AND      r4,r3,#0xf            ;9958
005f62  ea840a01          EOR      r10,r4,r1             ;9958
005f66  f009030f          AND      r3,r9,#0xf            ;9959
005f6a  ea83090a          EOR      r9,r3,r10             ;9959
005f6e  f005050f          AND      r5,r5,#0xf            ;9960
005f72  ea850909          EOR      r9,r5,r9              ;9960
005f76  45c1              CMP      r9,r8                 ;9962
005f78  d113              BNE      |L1.24482|
005f7a  ea4f1505          LSL      r5,r5,#4              ;9968
005f7e  ea430305          ORR      r3,r3,r5              ;9969
005f82  ea4f1303          LSL      r3,r3,#4              ;9970
005f86  ea440403          ORR      r4,r4,r3              ;9971
005f8a  ea4f5304          LSL      r3,r4,#20             ;9972
005f8e  ea4f4313          LSR      r3,r3,#16             ;9972
005f92  ea410103          ORR      r1,r1,r3              ;9973
005f96  f8b03058          LDRH     r3,[r0,#0x58]         ;9975
005f9a  428b              CMP      r3,r1                 ;9975
005f9c  d001              BEQ      |L1.24482|
005f9e  f8a01058          STRH     r1,[r0,#0x58]         ;9975
                  |L1.24482|
005fa2  f8b01058          LDRH     r1,[r0,#0x58]
005fa6  eb060386          ADD      r3,r6,r6,LSL #2
005faa  ebb10f43          CMP      r1,r3,LSL #1
005fae  dd3b              BLE      |L1.24616|
005fb0  2e00              CMP      r6,#0
005fb2  dd39              BLE      |L1.24616|
;;;9979   		{
;;;9980   		bps[i]._av|=(1<<4);
005fb4  7841              LDRB     r1,[r0,#1]
005fb6  f0410110          ORR      r1,r1,#0x10
005fba  7041              STRB     r1,[r0,#1]
005fbc  e038              B        |L1.24624|
005fbe  0000              DCW      0x0000
                  |L1.24512|
                          DCD      ||.text||+0xe7c
                  |L1.24516|
005fc4  202020c2          DCB      "   ",194,219,208,192,194,205,200,194,192,222,217,200,201
005fc8  dbd0c0c2
005fcc  cdc8c2c0
005fd0  ded9c8c9
005fd4  20202020          DCB      "    ",0
005fd8  00      
005fd9  00                DCB      0
005fda  00                DCB      0
005fdb  00                DCB      0
                  |L1.24540|
                          DCD      hv_vz_wrk_cnt
                  |L1.24544|
                          DCD      hv_vz_up_cnt
                  |L1.24548|
                          DCD      VZ_HR
                  |L1.24552|
                          DCD      ||.text||+0x8dc
                  |L1.24556|
                          DCD      ||.text||+0x1764
                  |L1.24560|
                          DCD      ||area_number.25||
                  |L1.24564|
                          DCD      FORVARDBPSCHHOUR
                  |L1.24568|
                          DCD      NUMIST
                  |L1.24572|
                          DCD      load_U
                  |L1.24576|
                          DCD      U_OUT_KONTR_MAX
                  |L1.24580|
                          DCD      outVoltContrHndlCnt
                  |L1.24584|
                          DCD      outVoltContrHndlCnt_
                  |L1.24588|
                          DCD      U_OUT_KONTR_MIN
                  |L1.24592|
                          DCD      U_OUT_KONTR_DELAY
                  |L1.24596|
                          DCD      uout_av
                  |L1.24600|
                          DCD      USIGN
                  |L1.24604|
                          DCD      bSILENT
                  |L1.24608|
                          DCD      TVENTMAX
                  |L1.24612|
                          DCD      bps
                  |L1.24616|
;;;9981   		}
;;;9982   	else bps[i]._av&=~(1<<4);
006028  7841              LDRB     r1,[r0,#1]
00602a  f0210110          BIC      r1,r1,#0x10
00602e  7041              STRB     r1,[r0,#1]
                  |L1.24624|
006030  f1020201          ADD      r2,r2,#1              ;9933
006034  b2d2              UXTB     r2,r2                 ;9933
                  |L1.24630|
006036  42ba              CMP      r2,r7                 ;9933
006038  f6ffaf59          BLT      |L1.24302|
;;;9983   	}
;;;9984   }
00603c  e8bd87f0          POP      {r4-r10,pc}
;;;9985   
                          ENDP

                  vent_hndl PROC
;;;9986   //-----------------------------------------------
;;;9987   void vent_hndl(void)
006040  e92d4ff0          PUSH     {r4-r11,lr}
;;;9988   {
006044  b087              SUB      sp,sp,#0x1c
;;;9989   if(RELEVENTSIGN==rvsAKB)
006046  48ab              LDR      r0,|L1.25332|
;;;9990   	{
;;;9991   	if(vent_stat==0)
006048  4cab              LDR      r4,|L1.25336|
;;;9992   		{
;;;9993   		if	(
;;;9994   			(BAT_IS_ON[0]==bisON)&&((bat[0]._Tb>TVENTON)||(bat[0]._nd))
00604a  49ac              LDR      r1,|L1.25340|
;;;9995   			||
;;;9996   			(BAT_IS_ON[1]==bisON)&&((bat[1]._Tb>TVENTON)||(bat[1]._nd))
;;;9997   			)
;;;9998   			{
;;;9999   			vent_stat=1;
;;;10000  			}
;;;10001  		}
;;;10002  	else if(vent_stat==1)
;;;10003  		{
;;;10004  		if	(
;;;10005  			((BAT_IS_ON[0]!=bisON)||((BAT_IS_ON[0]==bisON)&&(bat[0]._Tb<TVENTOFF)&&(!bat[0]._nd)))
00604c  4aac              LDR      r2,|L1.25344|
00604e  7800              LDRB     r0,[r0,#0]            ;9989  ; RELEVENTSIGN
006050  f9943000          LDRSB    r3,[r4,#0]            ;9991
006054  f9b11000          LDRSH    r1,[r1,#0]            ;9994
006058  f9b22000          LDRSH    r2,[r2,#0]
00605c  b148              CBZ      r0,|L1.24690|
;;;10006  			&&
;;;10007  			((BAT_IS_ON[1]!=bisON)||((BAT_IS_ON[1]==bisON)&&(bat[1]._Tb<TVENTOFF)&&(!bat[1]._nd)))
;;;10008  			)
;;;10009  			{
;;;10010  			vent_stat=0;
;;;10011  			}
;;;10012  		}
;;;10013  	}
;;;10014  else if(RELEVENTSIGN==rvsBPS)
00605e  2802              CMP      r0,#2
006060  d03c              BEQ      |L1.24796|
;;;10015  	{
;;;10016  /*	if	(
;;;10017  		(((bps[0]._flags_tm&0x06)||(bps[0]._cnt>=30)))||
;;;10018  		(((bps[1]._flags_tm&0x06)||(bps[1]._cnt>=30))&&(NUMIST>1))||
;;;10019  		(((bps[2]._flags_tm&0x06)||(bps[2]._cnt>=30))&&(NUMIST>2))||
;;;10020  		(((bps[3]._flags_tm&0x06)||(bps[3]._cnt>=30))&&(NUMIST>3))||
;;;10021  		(((bps[4]._flags_tm&0x06)||(bps[4]._cnt>=30))&&(NUMIST>4))||
;;;10022  		(((bps[5]._flags_tm&0x06)||(bps[5]._cnt>=30))&&(NUMIST>5))||
;;;10023  		(((bps[6]._flags_tm&0x06)||(bps[6]._cnt>=30))&&(NUMIST>6))
;;;10024  		)
;;;10025  		{
;;;10026  		vent_stat=1;
;;;10027  		}
;;;10028  	else vent_stat=0;
;;;10029  	*/
;;;10030  
;;;10031  	if	(
;;;10032  		((NUMIST)&&((bps[0]._Ti>TVENTON)||(bps[0]._cnt>=30)))
;;;10033  		||
;;;10034  		((NUMIST>1)&&((bps[1]._Ti>TVENTON)||(bps[1]._cnt>=30)))
;;;10035  		||
;;;10036  		((NUMIST>2)&&((bps[2]._Ti>TVENTON)||(bps[2]._cnt>=30)))
;;;10037  		||
;;;10038  		((NUMIST>3)&&((bps[3]._Ti>TVENTON)||(bps[3]._cnt>=30)))
;;;10039  		||
;;;10040  		((NUMIST>4)&&((bps[4]._Ti>TVENTON)||(bps[4]._cnt>=30)))
;;;10041  		||
;;;10042  		((NUMIST>5)&&((bps[5]._Ti>TVENTON)||(bps[5]._cnt>=30)))
;;;10043  		||
;;;10044  		((NUMIST>6)&&((bps[6]._Ti>TVENTON)||(bps[6]._cnt>=30)))
;;;10045  		||
;;;10046  		((NUMIST>7)&&((bps[7]._Ti>TVENTON)||(bps[7]._cnt>=30)))
;;;10047  		)
;;;10048  		{
;;;10049  		vent_stat=1;
;;;10050  		}
;;;10051  	else if(vent_stat==1)
;;;10052  		{
;;;10053  		if	(
;;;10054  			((!NUMIST)||((NUMIST)&&(bps[0]._Ti<TVENTOFF)&&(bps[0]._cnt<10)))
;;;10055  			&&
;;;10056  			((NUMIST<2)||((NUMIST>=2)&&(bps[1]._Ti<TVENTOFF)&&(bps[1]._cnt<10)))
;;;10057  			&&
;;;10058  			((NUMIST<3)||((NUMIST>=3)&&(bps[2]._Ti<TVENTOFF)&&(bps[2]._cnt<10)))
;;;10059  			&&
;;;10060  			((NUMIST<4)||((NUMIST>=4)&&(bps[3]._Ti<TVENTOFF)&&(bps[3]._cnt<10)))
;;;10061  			&&
;;;10062  			((NUMIST<5)||((NUMIST>=5)&&(bps[4]._Ti<TVENTOFF)&&(bps[4]._cnt<10)))
;;;10063  			&&
;;;10064  			((NUMIST<6)||((NUMIST>=6)&&(bps[5]._Ti<TVENTOFF)&&(bps[5]._cnt<10)))
;;;10065  			&&
;;;10066  			((NUMIST<7)||((NUMIST>=7)&&(bps[6]._Ti<TVENTOFF)&&(bps[6]._cnt<10)))
;;;10067  			&&
;;;10068  			((NUMIST<8)||((NUMIST>=8)&&(bps[7]._Ti<TVENTOFF)&&(bps[7]._cnt<10)))
;;;10069  			)
;;;10070  			{
;;;10071  			vent_stat=0;
;;;10072  			}
;;;10073  		}
;;;10074  	}
;;;10075  else if(RELEVENTSIGN==rvsEXT)
006062  2801              CMP      r0,#1
006064  d07e              BEQ      |L1.24932|
;;;10076  	{
;;;10077  	if	(
;;;10078  		((NUMDT)&&((t_ext[0]>TVENTON)||(ND_EXT[0])))
;;;10079  		||
;;;10080  		((NUMDT>1)&&((t_ext[1]>TVENTON)||(ND_EXT[1])))
;;;10081  		||
;;;10082  		((NUMDT>2)&&((t_ext[2]>TVENTON)||(ND_EXT[2])))
;;;10083  		)
;;;10084  		{
;;;10085  		vent_stat=1;
;;;10086  		}
;;;10087  	else if(vent_stat==1)
;;;10088  		{
;;;10089  		if	(
;;;10090  			((!NUMDT)||((NUMDT)&&(t_ext[0]<TVENTOFF)&&(!ND_EXT[0])))
;;;10091  			&&
;;;10092  			((NUMDT<2)||((NUMDT>=2)&&(t_ext[1]<TVENTOFF)&&(!ND_EXT[1])))
;;;10093  			&&
;;;10094  			((NUMDT<3)||((NUMDT>=3)&&(t_ext[2]<TVENTOFF)&&(!ND_EXT[2])))
;;;10095  			)
;;;10096  			{
;;;10097  			vent_stat=0;
;;;10098  			}
;;;10099  		}
;;;10100  	}
;;;10101  else vent_stat=1;
006066  f04f0001          MOV      r0,#1
00606a  7020              STRB     r0,[r4,#0]
                  |L1.24684|
;;;10102  }
00606c  b007              ADD      sp,sp,#0x1c
00606e  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.24690|
006072  4fa4              LDR      r7,|L1.25348|
006074  f8df8290          LDR      r8,|L1.25352|
006078  f9b7000a          LDRSH    r0,[r7,#0xa]          ;9994
00607c  7b3d              LDRB     r5,[r7,#0xc]          ;9994
00607e  f9b76056          LDRSH    r6,[r7,#0x56]         ;9996
006082  f898c000          LDRB     r12,[r8,#0]           ;9993
006086  f8977058          LDRB     r7,[r7,#0x58]         ;9996
00608a  f8988001          LDRB     r8,[r8,#1]            ;9996
00608e  b12b              CBZ      r3,|L1.24732|
006090  2b01              CMP      r3,#1                 ;10002
006092  d1eb              BNE      |L1.24684|
006094  f1bc0f55          CMP      r12,#0x55             ;10004
006098  d115              BNE      |L1.24774|
00609a  e010              B        |L1.24766|
                  |L1.24732|
00609c  f1bc0f55          CMP      r12,#0x55             ;9993
0060a0  d102              BNE      |L1.24744|
0060a2  4288              CMP      r0,r1                 ;9994
0060a4  dc07              BGT      |L1.24758|
0060a6  b935              CBNZ     r5,|L1.24758|
                  |L1.24744|
0060a8  f1b80f55          CMP      r8,#0x55              ;9996
0060ac  d1de              BNE      |L1.24684|
0060ae  428e              CMP      r6,r1                 ;9996
0060b0  dc01              BGT      |L1.24758|
0060b2  2f00              CMP      r7,#0                 ;9996
0060b4  d0da              BEQ      |L1.24684|
                  |L1.24758|
0060b6  f04f0001          MOV      r0,#1                 ;9999
0060ba  7020              STRB     r0,[r4,#0]            ;9999
0060bc  e7d6              B        |L1.24684|
                  |L1.24766|
0060be  4290              CMP      r0,r2                 ;10005
0060c0  dad4              BGE      |L1.24684|
0060c2  2d00              CMP      r5,#0                 ;10005
0060c4  d1d2              BNE      |L1.24684|
                  |L1.24774|
0060c6  f1b80f55          CMP      r8,#0x55              ;10007
0060ca  d103              BNE      |L1.24788|
0060cc  4296              CMP      r6,r2                 ;10007
0060ce  dacd              BGE      |L1.24684|
0060d0  2f00              CMP      r7,#0                 ;10007
0060d2  d1cb              BNE      |L1.24684|
                  |L1.24788|
0060d4  f04f0000          MOV      r0,#0                 ;10010
0060d8  7020              STRB     r0,[r4,#0]            ;10010
0060da  e7c7              B        |L1.24684|
                  |L1.24796|
0060dc  4e8c              LDR      r6,|L1.25360|
0060de  488b              LDR      r0,|L1.25356|
0060e0  6ab5              LDR      r5,[r6,#0x28]         ;10032
0060e2  f9b00000          LDRSH    r0,[r0,#0]            ;10031  ; NUMIST
0060e6  78f6              LDRB     r6,[r6,#3]            ;10032
0060e8  b118              CBZ      r0,|L1.24818|
0060ea  428d              CMP      r5,r1                 ;10032
0060ec  dc7a              BGT      |L1.25060|
0060ee  2e1e              CMP      r6,#0x1e              ;10032
0060f0  d278              BCS      |L1.25060|
                  |L1.24818|
0060f2  f8dfc21c          LDR      r12,|L1.25360|
0060f6  2801              CMP      r0,#1                 ;10034
0060f8  f8dc7084          LDR      r7,[r12,#0x84]        ;10034
0060fc  f89cc05f          LDRB     r12,[r12,#0x5f]       ;10034
006100  f8cdc018          STR      r12,[sp,#0x18]        ;10034
006104  dd06              BLE      |L1.24852|
006106  428f              CMP      r7,r1                 ;10034
006108  dc6c              BGT      |L1.25060|
00610a  f8ddc018          LDR      r12,[sp,#0x18]        ;10034
00610e  f1bc0f1e          CMP      r12,#0x1e             ;10034
006112  d267              BCS      |L1.25060|
                  |L1.24852|
006114  f8dfc1f8          LDR      r12,|L1.25360|
006118  2802              CMP      r0,#2                 ;10036
00611a  f8dc80e0          LDR      r8,[r12,#0xe0]        ;10036
00611e  f8cd8014          STR      r8,[sp,#0x14]         ;10036
006122  f89cc0bb          LDRB     r12,[r12,#0xbb]       ;10036
006126  f8cdc010          STR      r12,[sp,#0x10]        ;10036
00612a  dd08              BLE      |L1.24894|
00612c  f8ddc014          LDR      r12,[sp,#0x14]        ;10036
006130  458c              CMP      r12,r1                ;10036
006132  dc57              BGT      |L1.25060|
006134  f8ddc010          LDR      r12,[sp,#0x10]        ;10036
006138  f1bc0f1e          CMP      r12,#0x1e             ;10036
00613c  d252              BCS      |L1.25060|
                  |L1.24894|
00613e  f8dfc1d0          LDR      r12,|L1.25360|
006142  2803              CMP      r0,#3                 ;10038
006144  f8dc813c          LDR      r8,[r12,#0x13c]       ;10038
006148  f8cd800c          STR      r8,[sp,#0xc]          ;10038
00614c  f89cc117          LDRB     r12,[r12,#0x117]      ;10038
006150  f8cdc008          STR      r12,[sp,#8]           ;10038
006154  dd0a              BLE      |L1.24940|
006156  f8ddc00c          LDR      r12,[sp,#0xc]         ;10038
00615a  458c              CMP      r12,r1                ;10038
00615c  dc42              BGT      |L1.25060|
00615e  f8ddc008          LDR      r12,[sp,#8]           ;10038
006162  e000              B        |L1.24934|
                  |L1.24932|
006164  e080              B        |L1.25192|
                  |L1.24934|
006166  f1bc0f1e          CMP      r12,#0x1e             ;10038
00616a  d23b              BCS      |L1.25060|
                  |L1.24940|
00616c  f8df81a0          LDR      r8,|L1.25360|
006170  2804              CMP      r0,#4                 ;10040
006172  f8d8c198          LDR      r12,[r8,#0x198]       ;10040
006176  f8988173          LDRB     r8,[r8,#0x173]        ;10040
00617a  f8cd8004          STR      r8,[sp,#4]            ;10040
00617e  dd06              BLE      |L1.24974|
006180  458c              CMP      r12,r1                ;10040
006182  dc2f              BGT      |L1.25060|
006184  f8dd8004          LDR      r8,[sp,#4]            ;10040
006188  f1b80f1e          CMP      r8,#0x1e              ;10040
00618c  d22a              BCS      |L1.25060|
                  |L1.24974|
00618e  f8df9180          LDR      r9,|L1.25360|
006192  2805              CMP      r0,#5                 ;10042
006194  f8d981f4          LDR      r8,[r9,#0x1f4]        ;10042
006198  f89991cf          LDRB     r9,[r9,#0x1cf]        ;10042
00619c  f8cd9000          STR      r9,[sp,#0]            ;10042
0061a0  dd06              BLE      |L1.25008|
0061a2  4588              CMP      r8,r1                 ;10042
0061a4  dc1e              BGT      |L1.25060|
0061a6  f8dd9000          LDR      r9,[sp,#0]            ;10042
0061aa  f1b90f1e          CMP      r9,#0x1e              ;10042
0061ae  d219              BCS      |L1.25060|
                  |L1.25008|
0061b0  f8dfa15c          LDR      r10,|L1.25360|
0061b4  2806              CMP      r0,#6                 ;10044
0061b6  f89ae22b          LDRB     lr,[r10,#0x22b]       ;10044
0061ba  f8da9250          LDR      r9,[r10,#0x250]       ;10044
0061be  dd04              BLE      |L1.25034|
0061c0  4589              CMP      r9,r1                 ;10044
0061c2  dc0f              BGT      |L1.25060|
0061c4  f1be0f1e          CMP      lr,#0x1e              ;10044
0061c8  d20c              BCS      |L1.25060|
                  |L1.25034|
0061ca  f8dfb144          LDR      r11,|L1.25360|
0061ce  2807              CMP      r0,#7                 ;10046
0061d0  f8dba2ac          LDR      r10,[r11,#0x2ac]      ;10046
0061d4  f89bb287          LDRB     r11,[r11,#0x287]      ;10046
0061d8  dd08              BLE      |L1.25068|
0061da  458a              CMP      r10,r1                ;10046
0061dc  dc02              BGT      |L1.25060|
0061de  f1bb0f1e          CMP      r11,#0x1e             ;10046
0061e2  d303              BCC      |L1.25068|
                  |L1.25060|
0061e4  f04f0001          MOV      r0,#1                 ;10049
0061e8  7020              STRB     r0,[r4,#0]            ;10049
                  |L1.25066|
0061ea  e73f              B        |L1.24684|
                  |L1.25068|
0061ec  2b01              CMP      r3,#1                 ;10051
0061ee  d1fc              BNE      |L1.25066|
0061f0  b118              CBZ      r0,|L1.25082|
0061f2  4295              CMP      r5,r2                 ;10054
0061f4  daf9              BGE      |L1.25066|
0061f6  2e0a              CMP      r6,#0xa               ;10054
0061f8  d2f7              BCS      |L1.25066|
                  |L1.25082|
0061fa  2802              CMP      r0,#2                 ;10056
0061fc  db04              BLT      |L1.25096|
0061fe  4297              CMP      r7,r2                 ;10056
006200  daf3              BGE      |L1.25066|
006202  9906              LDR      r1,[sp,#0x18]         ;10056
006204  290a              CMP      r1,#0xa               ;10056
006206  d2f0              BCS      |L1.25066|
                  |L1.25096|
006208  2803              CMP      r0,#3                 ;10058
00620a  db05              BLT      |L1.25112|
00620c  9905              LDR      r1,[sp,#0x14]         ;10058
00620e  4291              CMP      r1,r2                 ;10058
006210  daeb              BGE      |L1.25066|
006212  9904              LDR      r1,[sp,#0x10]         ;10058
006214  290a              CMP      r1,#0xa               ;10058
006216  d2e8              BCS      |L1.25066|
                  |L1.25112|
006218  2804              CMP      r0,#4                 ;10060
00621a  db05              BLT      |L1.25128|
00621c  9903              LDR      r1,[sp,#0xc]          ;10060
00621e  4291              CMP      r1,r2                 ;10060
006220  dae3              BGE      |L1.25066|
006222  9902              LDR      r1,[sp,#8]            ;10060
006224  290a              CMP      r1,#0xa               ;10060
006226  d2e0              BCS      |L1.25066|
                  |L1.25128|
006228  2805              CMP      r0,#5                 ;10062
00622a  db04              BLT      |L1.25142|
00622c  4594              CMP      r12,r2                ;10062
00622e  dadc              BGE      |L1.25066|
006230  9901              LDR      r1,[sp,#4]            ;10062
006232  290a              CMP      r1,#0xa               ;10062
006234  d2d9              BCS      |L1.25066|
                  |L1.25142|
006236  2806              CMP      r0,#6                 ;10064
006238  db04              BLT      |L1.25156|
00623a  4590              CMP      r8,r2                 ;10064
00623c  dad5              BGE      |L1.25066|
00623e  9900              LDR      r1,[sp,#0]            ;10064
006240  290a              CMP      r1,#0xa               ;10064
006242  d2d2              BCS      |L1.25066|
                  |L1.25156|
006244  2807              CMP      r0,#7                 ;10066
006246  db04              BLT      |L1.25170|
006248  4591              CMP      r9,r2                 ;10066
00624a  dace              BGE      |L1.25066|
00624c  f1be0f0a          CMP      lr,#0xa               ;10066
006250  d2cb              BCS      |L1.25066|
                  |L1.25170|
006252  2808              CMP      r0,#8                 ;10068
006254  db04              BLT      |L1.25184|
006256  4592              CMP      r10,r2                ;10068
006258  dac7              BGE      |L1.25066|
00625a  f1bb0f0a          CMP      r11,#0xa              ;10068
00625e  d2c4              BCS      |L1.25066|
                  |L1.25184|
006260  f04f0000          MOV      r0,#0                 ;10071
006264  7020              STRB     r0,[r4,#0]            ;10071
                  |L1.25190|
006266  e701              B        |L1.24684|
                  |L1.25192|
006268  482a              LDR      r0,|L1.25364|
00626a  4d2b              LDR      r5,|L1.25368|
00626c  4e2b              LDR      r6,|L1.25372|
00626e  f9b00000          LDRSH    r0,[r0,#0]            ;10077  ; NUMDT
006272  f9b55000          LDRSH    r5,[r5,#0]            ;10078
006276  7836              LDRB     r6,[r6,#0]            ;10078
006278  b110              CBZ      r0,|L1.25216|
00627a  428d              CMP      r5,r1                 ;10078
00627c  dc1d              BGT      |L1.25274|
00627e  b9e6              CBNZ     r6,|L1.25274|
                  |L1.25216|
006280  4f25              LDR      r7,|L1.25368|
006282  f8dfc098          LDR      r12,|L1.25372|
006286  2801              CMP      r0,#1                 ;10080
006288  f9b77002          LDRSH    r7,[r7,#2]            ;10080
00628c  f89cc001          LDRB     r12,[r12,#1]          ;10080
006290  dd04              BLE      |L1.25244|
006292  428f              CMP      r7,r1                 ;10080
006294  dc11              BGT      |L1.25274|
006296  f1bc0f00          CMP      r12,#0                ;10080
00629a  d10e              BNE      |L1.25274|
                  |L1.25244|
00629c  f8df8078          LDR      r8,|L1.25368|
0062a0  f8df9078          LDR      r9,|L1.25372|
0062a4  2802              CMP      r0,#2                 ;10082
0062a6  f9b88004          LDRSH    r8,[r8,#4]            ;10082
0062aa  f8999002          LDRB     r9,[r9,#2]            ;10082
0062ae  dd08              BLE      |L1.25282|
0062b0  4588              CMP      r8,r1                 ;10082
0062b2  dc02              BGT      |L1.25274|
0062b4  f1b90f00          CMP      r9,#0                 ;10082
0062b8  d003              BEQ      |L1.25282|
                  |L1.25274|
0062ba  f04f0001          MOV      r0,#1                 ;10085
0062be  7020              STRB     r0,[r4,#0]            ;10085
0062c0  e6d4              B        |L1.24684|
                  |L1.25282|
0062c2  2b01              CMP      r3,#1                 ;10087
0062c4  d191              BNE      |L1.25066|
0062c6  b118              CBZ      r0,|L1.25296|
0062c8  4295              CMP      r5,r2                 ;10090
0062ca  da8e              BGE      |L1.25066|
0062cc  2e00              CMP      r6,#0                 ;10090
0062ce  d18c              BNE      |L1.25066|
                  |L1.25296|
0062d0  2802              CMP      r0,#2                 ;10092
0062d2  db04              BLT      |L1.25310|
0062d4  4297              CMP      r7,r2                 ;10092
0062d6  da88              BGE      |L1.25066|
0062d8  f1bc0f00          CMP      r12,#0                ;10092
0062dc  d185              BNE      |L1.25066|
                  |L1.25310|
0062de  2803              CMP      r0,#3                 ;10094
0062e0  db04              BLT      |L1.25324|
0062e2  4590              CMP      r8,r2                 ;10094
0062e4  dabf              BGE      |L1.25190|
0062e6  f1b90f00          CMP      r9,#0                 ;10094
0062ea  d1bc              BNE      |L1.25190|
                  |L1.25324|
0062ec  f04f0000          MOV      r0,#0                 ;10097
0062f0  7020              STRB     r0,[r4,#0]            ;10097
0062f2  e6bb              B        |L1.24684|
;;;10103  
                          ENDP

                  |L1.25332|
                          DCD      RELEVENTSIGN
                  |L1.25336|
                          DCD      ||area_number.25||
                  |L1.25340|
                          DCD      TVENTON
                  |L1.25344|
                          DCD      TVENTOFF
                  |L1.25348|
                          DCD      bat
                  |L1.25352|
                          DCD      BAT_IS_ON
                  |L1.25356|
                          DCD      NUMIST
                  |L1.25360|
                          DCD      bps
                  |L1.25364|
                          DCD      NUMDT
                  |L1.25368|
                          DCD      t_ext
                  |L1.25372|
                          DCD      ND_EXT

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  samokalibr_init PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  4902              LDR      r1,|L2.12|
;;;294    {          
000002  f24060f9          MOV      r0,#0x6f9
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  f8a10048          STRH     r0,[r1,#0x48]
00000a  4770              BX       lr
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
;;;312    
;;;313    	spc_stat=spcKE;
;;;314    	__ee_spc_stat=spcKE;
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
;;;316    	
;;;317    	spc_bat=0;
;;;318    	__ee_spc_bat=0;
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
;;;326    
;;;327    	
;;;328    	spc_phase=0;
;;;329    	__ee_spc_phase=0;
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
;;;340    		gran_char(&temp,1,99);
;;;341    		*((char*)(&(ke_date[0])))=temp;
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
;;;344    		gran_char(&temp,1,12);
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
;;;348    		gran_char(&temp,1,31);
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
;;;355    		gran_char(&temp,0,23);
;;;356    		*((char*)(&(ke_date[1])))=temp;
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
;;;359    		gran_char(&temp,0,59);
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
;;;363    		gran_char(&temp,0,59);
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
;;;370    	}
;;;371    }
;;;372    #endif
                          ENDP

                  |L2.12|
                          DCD      ||area_number.25||

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  adc_drv6 PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;294    {          
000004  4c80              LDR      r4,|L3.520|
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  8860              LDRH     r0,[r4,#2]  ; adc_self_ch_buff
000008  8821              LDRH     r1,[r4,#0]  ; adc_self_ch_buff
00000a  1a40              SUBS     r0,r0,r1
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000c  b200              SXTH     r0,r0
00000e  f7fffffe          BL       abs_pal
;;;312    
;;;313    	spc_stat=spcKE;
000012  1da5              ADDS     r5,r4,#6
000014  8028              STRH     r0,[r5,#0]
000016  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
;;;314    	__ee_spc_stat=spcKE;
000018  8861              LDRH     r1,[r4,#2]  ; adc_self_ch_buff
00001a  1a40              SUBS     r0,r0,r1
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001c  b200              SXTH     r0,r0
00001e  f7fffffe          BL       abs_pal
000022  8068              STRH     r0,[r5,#2]
000024  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
;;;316    	
;;;317    	spc_bat=0;
000026  8821              LDRH     r1,[r4,#0]  ; adc_self_ch_buff
;;;318    	__ee_spc_bat=0;
000028  1a40              SUBS     r0,r0,r1
00002a  b200              SXTH     r0,r0
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  f7fffffe          BL       abs_pal
000030  80a8              STRH     r0,[r5,#4]
000032  f44f7196          MOV      r1,#0x12c
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000036  f1a406de          SUB      r6,r4,#0xde
00003a  4288              CMP      r0,r1
00003c  da02              BGE      |L3.68|
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
00003e  88a0              LDRH     r0,[r4,#4]  ; adc_self_ch_buff
000040  86b0              STRH     r0,[r6,#0x34]
000042  e00c              B        |L3.94|
                  |L3.68|
000044  f9b50002          LDRSH    r0,[r5,#2]  ; adc_self_ch_disp
000048  4288              CMP      r0,r1
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004a  da02              BGE      |L3.82|
00004c  8860              LDRH     r0,[r4,#2]  ; adc_self_ch_buff
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
00004e  86b0              STRH     r0,[r6,#0x34]
000050  e005              B        |L3.94|
                  |L3.82|
000052  f9b50000          LDRSH    r0,[r5,#0]  ; adc_self_ch_disp
000056  4288              CMP      r0,r1
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  da01              BGE      |L3.94|
;;;329    	__ee_spc_phase=0;
00005a  8820              LDRH     r0,[r4,#0]  ; adc_self_ch_buff
00005c  86b0              STRH     r0,[r6,#0x34]
                  |L3.94|
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  79f7              LDRB     r7,[r6,#7]  ; adc_ch_net
000060  2200              MOVS     r2,#0
000062  b3f7              CBZ      r7,|L3.226|
000064  7ab3              LDRB     r3,[r6,#0xa]  ; adc_window_flag
000066  4869              LDR      r0,|L3.524|
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
000068  b18b              CBZ      r3,|L3.142|
00006a  f9b61034          LDRSH    r1,[r6,#0x34]  ; adc_result
00006e  6804              LDR      r4,[r0,#0]  ; main_power_buffer
000070  eb0404a1          ADD      r4,r4,r1,ASR #2
000074  6004              STR      r4,[r0,#0]  ; main_power_buffer
000076  6844              LDR      r4,[r0,#4]  ; main_power_buffer
000078  eb0404a1          ADD      r4,r4,r1,ASR #2
00007c  6044              STR      r4,[r0,#4]  ; main_power_buffer
00007e  6884              LDR      r4,[r0,#8]  ; main_power_buffer
000080  eb0404a1          ADD      r4,r4,r1,ASR #2
000084  6084              STR      r4,[r0,#8]  ; main_power_buffer
000086  68c4              LDR      r4,[r0,#0xc]  ; main_power_buffer
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  eb0401a1          ADD      r1,r4,r1,ASR #2
00008c  60c1              STR      r1,[r0,#0xc]  ; main_power_buffer
                  |L3.142|
;;;340    		gran_char(&temp,1,99);
00008e  f9b61034          LDRSH    r1,[r6,#0x34]  ; adc_result
000092  2964              CMP      r1,#0x64
000094  da04              BGE      |L3.160|
000096  8f31              LDRH     r1,[r6,#0x38]  ; adc_zero_cnt
000098  f1010101          ADD      r1,r1,#1
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  8731              STRH     r1,[r6,#0x38]
00009e  e000              B        |L3.162|
                  |L3.160|
0000a0  8732              STRH     r2,[r6,#0x38]
                  |L3.162|
0000a2  f9b64038          LDRSH    r4,[r6,#0x38]  ; adc_zero_cnt
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  f44f61fa          MOV      r1,#0x7d0
;;;344    		gran_char(&temp,1,12);
0000aa  428c              CMP      r4,r1
0000ac  db05              BLT      |L3.186|
0000ae  8731              STRH     r1,[r6,#0x38]
0000b0  6002              STR      r2,[r0,#0]  ; main_power_buffer
0000b2  6042              STR      r2,[r0,#4]  ; main_power_buffer
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  6082              STR      r2,[r0,#8]  ; main_power_buffer
0000b6  60c2              STR      r2,[r0,#0xc]  ; main_power_buffer
0000b8  8672              STRH     r2,[r6,#0x32]
                  |L3.186|
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000ba  8f31              LDRH     r1,[r6,#0x38]  ; adc_zero_cnt
0000bc  2905              CMP      r1,#5
;;;348    		gran_char(&temp,1,31);
0000be  d14f              BNE      |L3.352|
0000c0  b1bb              CBZ      r3,|L3.242|
0000c2  8ef1              LDRH     r1,[r6,#0x36]  ; adc_gorb_cnt
0000c4  f1010101          ADD      r1,r1,#1
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000c8  b209              SXTH     r1,r1
0000ca  86f1              STRH     r1,[r6,#0x36]
0000cc  f5b17f00          CMP      r1,#0x200
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000d0  db00              BLT      |L3.212|
0000d2  86f2              STRH     r2,[r6,#0x36]
                  |L3.212|
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d4  f9b61036          LDRSH    r1,[r6,#0x36]  ; adc_gorb_cnt
0000d8  064c              LSLS     r4,r1,#25
0000da  d10a              BNE      |L3.242|
0000dc  ea4f11e1          ASR      r1,r1,#7
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000e0  e000              B        |L3.228|
                  |L3.226|
;;;355    		gran_char(&temp,0,23);
0000e2  e015              B        |L3.272|
                  |L3.228|
0000e4  f8504021          LDR      r4,[r0,r1,LSL #2]
0000e8  ea4f2424          ASR      r4,r4,#8
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ec  8674              STRH     r4,[r6,#0x32]
0000ee  f8402021          STR      r2,[r0,r1,LSL #2]
                  |L3.242|
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f2  f9b6003a          LDRSH    r0,[r6,#0x3a]  ; adc_window_cnt
;;;359    		gran_char(&temp,0,59);
0000f6  2896              CMP      r0,#0x96
0000f8  dd01              BLE      |L3.254|
0000fa  b103              CBZ      r3,|L3.254|
0000fc  72b2              STRB     r2,[r6,#0xa]
                  |L3.254|
0000fe  381f              SUBS     r0,r0,#0x1f
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  2827              CMP      r0,#0x27
000102  d22d              BCS      |L3.352|
000104  7ab0              LDRB     r0,[r6,#0xa]  ; adc_window_flag
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  bb58              CBNZ     r0,|L3.352|
000108  f04f0001          MOV      r0,#1
;;;363    		gran_char(&temp,0,59);
00010c  72b0              STRB     r0,[r6,#0xa]
00010e  e027              B        |L3.352|
                  |L3.272|
000110  483f              LDR      r0,|L3.528|
000112  7a35              LDRB     r5,[r6,#8]  ; adc_ch
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  7a73              LDRB     r3,[r6,#9]  ; adc_ch_cnt
000116  eb001485          ADD      r4,r0,r5,LSL #6
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011a  f9b61034          LDRSH    r1,[r6,#0x34]  ; adc_result
00011e  f8441023          STR      r1,[r4,r3,LSL #2]
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000122  0798              LSLS     r0,r3,#30
000124  d10f              BNE      |L3.326|
000126  4601              MOV      r1,r0
                  |L3.296|
000128  f854c020          LDR      r12,[r4,r0,LSL #2]
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
;;;370    	}
;;;371    }
00012c  4461              ADD      r1,r1,r12
00012e  f1000001          ADD      r0,r0,#1
000132  b2c0              UXTB     r0,r0
000134  2810              CMP      r0,#0x10
000136  d3f7              BCC      |L3.296|
000138  ea4f1021          ASR      r0,r1,#4
00013c  4933              LDR      r1,|L3.524|
00013e  f1a10120          SUB      r1,r1,#0x20
000142  f8210015          STRH     r0,[r1,r5,LSL #1]
                  |L3.326|
000146  1c6d              ADDS     r5,r5,#1
000148  b2e8              UXTB     r0,r5
00014a  7230              STRB     r0,[r6,#8]
00014c  2810              CMP      r0,#0x10
00014e  d307              BCC      |L3.352|
000150  7232              STRB     r2,[r6,#8]
000152  f1030301          ADD      r3,r3,#1
000156  b2d8              UXTB     r0,r3
000158  7270              STRB     r0,[r6,#9]
00015a  2810              CMP      r0,#0x10
00015c  d300              BCC      |L3.352|
00015e  7272              STRB     r2,[r6,#9]
                  |L3.352|
000160  71b2              STRB     r2,[r6,#6]
000162  f1070701          ADD      r7,r7,#1
000166  f0070001          AND      r0,r7,#1
00016a  71f0              STRB     r0,[r6,#7]
00016c  4a29              LDR      r2,|L3.532|
00016e  b130              CBZ      r0,|L3.382|
000170  6810              LDR      r0,[r2,#0]
000172  f02000ff          BIC      r0,r0,#0xff
000176  f1000004          ADD      r0,r0,#4
00017a  6010              STR      r0,[r2,#0]
00017c  e03d              B        |L3.506|
                  |L3.382|
00017e  7a31              LDRB     r1,[r6,#8]  ; adc_ch
000180  0708              LSLS     r0,r1,#28
000182  d406              BMI      |L3.402|
000184  6810              LDR      r0,[r2,#0]
000186  f02000ff          BIC      r0,r0,#0xff
00018a  f1000001          ADD      r0,r0,#1
00018e  6010              STR      r0,[r2,#0]
000190  e005              B        |L3.414|
                  |L3.402|
000192  6810              LDR      r0,[r2,#0]
000194  f02000ff          BIC      r0,r0,#0xff
000198  f1000002          ADD      r0,r0,#2
00019c  6010              STR      r0,[r2,#0]
                  |L3.414|
00019e  481e              LDR      r0,|L3.536|
0001a0  6803              LDR      r3,[r0,#0]
0001a2  f0435380          ORR      r3,r3,#0x10000000
0001a6  6003              STR      r3,[r0,#0]
0001a8  6a03              LDR      r3,[r0,#0x20]
0001aa  f0434380          ORR      r3,r3,#0x40000000
0001ae  6203              STR      r3,[r0,#0x20]
0001b0  6e03              LDR      r3,[r0,#0x60]
0001b2  f0436380          ORR      r3,r3,#0x4000000
0001b6  6603              STR      r3,[r0,#0x60]
0001b8  07cb              LSLS     r3,r1,#31
0001ba  d00a              BEQ      |L3.466|
0001bc  6943              LDR      r3,[r0,#0x14]
0001be  f0435380          ORR      r3,r3,#0x10000000
0001c2  6143              STR      r3,[r0,#0x14]
                  |L3.452|
0001c4  078b              LSLS     r3,r1,#30
0001c6  d409              BMI      |L3.476|
0001c8  6b43              LDR      r3,[r0,#0x34]
0001ca  f0234380          BIC      r3,r3,#0x40000000
0001ce  6343              STR      r3,[r0,#0x34]
0001d0  e008              B        |L3.484|
                  |L3.466|
0001d2  6943              LDR      r3,[r0,#0x14]
0001d4  f0235380          BIC      r3,r3,#0x10000000
0001d8  6143              STR      r3,[r0,#0x14]
0001da  e7f3              B        |L3.452|
                  |L3.476|
0001dc  6b43              LDR      r3,[r0,#0x34]
0001de  f0434380          ORR      r3,r3,#0x40000000
0001e2  6343              STR      r3,[r0,#0x34]
                  |L3.484|
0001e4  0749              LSLS     r1,r1,#29
0001e6  d404              BMI      |L3.498|
0001e8  6f41              LDR      r1,[r0,#0x74]
0001ea  f0216180          BIC      r1,r1,#0x4000000
0001ee  6741              STR      r1,[r0,#0x74]
0001f0  e003              B        |L3.506|
                  |L3.498|
0001f2  6f41              LDR      r1,[r0,#0x74]
0001f4  f0416180          ORR      r1,r1,#0x4000000
0001f8  6741              STR      r1,[r0,#0x74]
                  |L3.506|
0001fa  6810              LDR      r0,[r2,#0]
0001fc  f0407080          ORR      r0,r0,#0x1000000
000200  6010              STR      r0,[r2,#0]
000202  e8bd81f0          POP      {r4-r8,pc}
;;;372    #endif
                          ENDP

000206  0000              DCW      0x0000
                  |L3.520|
                          DCD      ||area_number.25||+0xde
                  |L3.524|
                          DCD      ||.bss||+0x42c
                  |L3.528|
                          DCD      ||.bss||+0xc
                  |L3.532|
                          DCD      0x40034000
                  |L3.536|
                          DCD      0x2009c000

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  ips_current_average_hndl_ PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;294    {          
000004  b085              SUB      sp,sp,#0x14
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  4c64              LDR      r4,|L4.408|
000008  4e64              LDR      r6,|L4.412|
00000a  2500              MOVS     r5,#0
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000c  7820              LDRB     r0,[r4,#0]  ; ica_timer_cnt
00000e  1c40              ADDS     r0,r0,#1
000010  b2c0              UXTB     r0,r0
;;;312    
;;;313    	spc_stat=spcKE;
000012  7020              STRB     r0,[r4,#0]
000014  280a              CMP      r0,#0xa
000016  d340              BCC      |L4.154|
;;;314    	__ee_spc_stat=spcKE;
000018  7025              STRB     r5,[r4,#0]
00001a  f8dfc184          LDR      r12,|L4.416|
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001e  f89c0000          LDRB     r0,[r12,#0]  ; ica_plazma
000022  f1000001          ADD      r0,r0,#1
;;;316    	
;;;317    	spc_bat=0;
000026  f88c0000          STRB     r0,[r12,#0]
;;;318    	__ee_spc_bat=0;
00002a  485e              LDR      r0,|L4.420|
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  495e              LDR      r1,|L4.424|
00002e  f9b00000          LDRSH    r0,[r0,#0]  ; bps_I
000032  8008              STRH     r0,[r1,#0]
000034  495d              LDR      r1,|L4.428|
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000036  f8df8178          LDR      r8,|L4.432|
00003a  4662              MOV      r2,r12
00003c  4637              MOV      r7,r6
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
00003e  f9b11000          LDRSH    r1,[r1,#0]  ; ica_your_current
000042  7852              LDRB     r2,[r2,#1]
000044  f9b83000          LDRSH    r3,[r8,#0]
000048  f9b77000          LDRSH    r7,[r7,#0]
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004c  4288              CMP      r0,r1
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
00004e  dd06              BLE      |L4.94|
000050  eba00901          SUB      r9,r0,r1
000054  f1b90f0a          CMP      r9,#0xa
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  db01              BLT      |L4.94|
;;;329    	__ee_spc_phase=0;
00005a  2f01              CMP      r7,#1
00005c  d007              BEQ      |L4.110|
                  |L4.94|
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  4288              CMP      r0,r1
000060  da16              BGE      |L4.144|
000062  1a08              SUBS     r0,r1,r0
000064  280a              CMP      r0,#0xa
000066  db13              BLT      |L4.144|
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
000068  2f01              CMP      r7,#1
00006a  d009              BEQ      |L4.128|
00006c  e010              B        |L4.144|
                  |L4.110|
00006e  f1020201          ADD      r2,r2,#1
000072  f88c2001          STRB     r2,[r12,#1]
000076  f1a30301          SUB      r3,r3,#1
00007a  f8a83000          STRH     r3,[r8,#0]
00007e  e007              B        |L4.144|
                  |L4.128|
000080  f1a20201          SUB      r2,r2,#1
000084  f88c2001          STRB     r2,[r12,#1]
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  f1030301          ADD      r3,r3,#1
00008c  f8a83000          STRH     r3,[r8,#0]
                  |L4.144|
;;;340    		gran_char(&temp,1,99);
000090  2214              MOVS     r2,#0x14
000092  4251              RSBS     r1,r2,#0
000094  4846              LDR      r0,|L4.432|
000096  f7fffffe          BL       gran
                  |L4.154|
00009a  7820              LDRB     r0,[r4,#0]  ; ica_timer_cnt
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  f8df8114          LDR      r8,|L4.436|
0000a0  4f45              LDR      r7,|L4.440|
0000a2  2808              CMP      r0,#8
0000a4  d125              BNE      |L4.242|
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  8830              LDRH     r0,[r6,#0]  ; ICA_EN
0000a8  2801              CMP      r0,#1
;;;344    		gran_char(&temp,1,12);
0000aa  d122              BNE      |L4.242|
0000ac  f8b80000          LDRH     r0,[r8,#0]  ; ICA_MODBUS_ADDRESS
0000b0  f88d0000          STRB     r0,[sp,#0]
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  f04f0004          MOV      r0,#4
0000b8  f88d0001          STRB     r0,[sp,#1]
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000bc  f88d5002          STRB     r5,[sp,#2]
;;;348    		gran_char(&temp,1,31);
0000c0  f04f0002          MOV      r0,#2
0000c4  f88d0003          STRB     r0,[sp,#3]
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000c8  f88d5004          STRB     r5,[sp,#4]
0000cc  f04f0001          MOV      r0,#1
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000d0  f88d0005          STRB     r0,[sp,#5]
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d4  f04f0106          MOV      r1,#6
0000d8  4668              MOV      r0,sp
0000da  f7fffffe          BL       CRC16_2
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000de  f88d0006          STRB     r0,[sp,#6]
;;;355    		gran_char(&temp,0,23);
0000e2  ea4f2020          ASR      r0,r0,#8
0000e6  f88d0007          STRB     r0,[sp,#7]
0000ea  f9b70000          LDRSH    r0,[r7,#0]  ; ICA_CH
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ee  b3e8              CBZ      r0,|L4.364|
0000f0  2801              CMP      r0,#1
                  |L4.242|
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f2  4832              LDR      r0,|L4.444|
0000f4  f06f0214          MVN      r2,#0x14
;;;359    		gran_char(&temp,0,59);
0000f8  f9b00000          LDRSH    r0,[r0,#0]  ; TBAT
0000fc  ebc01100          RSB      r1,r0,r0,LSL #4
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  eb020181          ADD      r1,r2,r1,LSL #2
000104  4a2e              LDR      r2,|L4.448|
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  f9b2204a          LDRSH    r2,[r2,#0x4a]  ; main_kb_cnt
;;;363    		gran_char(&temp,0,59);
00010a  4291              CMP      r1,r2
00010c  d134              BNE      |L4.376|
00010e  8831              LDRH     r1,[r6,#0]  ; ICA_EN
000110  2901              CMP      r1,#1
000112  d131              BNE      |L4.376|
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  f8b81000          LDRH     r1,[r8,#0]  ; ICA_MODBUS_ADDRESS
000118  f88d1000          STRB     r1,[sp,#0]
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011c  f04f0106          MOV      r1,#6
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000120  f88d1001          STRB     r1,[sp,#1]
000124  f88d5002          STRB     r5,[sp,#2]
000128  f04f011e          MOV      r1,#0x1e
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
;;;370    	}
;;;371    }
00012c  f88d1003          STRB     r1,[sp,#3]
000130  ea4f71e0          ASR      r1,r0,#31
000134  eb006111          ADD      r1,r0,r1,LSR #24
000138  ea4f2221          ASR      r2,r1,#8
00013c  f88d2004          STRB     r2,[sp,#4]
000140  f88d0005          STRB     r0,[sp,#5]
000144  f04f0106          MOV      r1,#6
000148  4668              MOV      r0,sp
00014a  f7fffffe          BL       CRC16_2
00014e  f88d0006          STRB     r0,[sp,#6]
000152  ea4f2020          ASR      r0,r0,#8
000156  f88d0007          STRB     r0,[sp,#7]
00015a  8838              LDRH     r0,[r7,#0]  ; ICA_CH
00015c  2800              CMP      r0,#0
00015e  d10b              BNE      |L4.376|
000160  4604              MOV      r4,r0
000162  466d              MOV      r5,sp
                  |L4.356|
000164  5d28              LDRB     r0,[r5,r4]
000166  f7fffffe          BL       putchar_sc16is700
00016a  e000              B        |L4.366|
                  |L4.364|
00016c  e007              B        |L4.382|
                  |L4.366|
00016e  f1040401          ADD      r4,r4,#1
000172  b2e4              UXTB     r4,r4
000174  2c08              CMP      r4,#8
000176  d3f5              BCC      |L4.356|
                  |L4.376|
000178  b005              ADD      sp,sp,#0x14
00017a  e8bd83f0          POP      {r4-r9,pc}
                  |L4.382|
00017e  f04f0400          MOV      r4,#0
000182  46e9              MOV      r9,sp
                  |L4.388|
000184  f8190004          LDRB     r0,[r9,r4]
000188  f7fffffe          BL       putchar_sc16is700
00018c  f1040401          ADD      r4,r4,#1
000190  b2e4              UXTB     r4,r4
000192  2c08              CMP      r4,#8
000194  d3f6              BCC      |L4.388|
000196  e7ac              B        |L4.242|
;;;372    #endif
                          ENDP

                  |L4.408|
                          DCD      ica_timer_cnt
                  |L4.412|
                          DCD      ICA_EN
                  |L4.416|
                          DCD      ica_plazma
                  |L4.420|
                          DCD      bps_I
                  |L4.424|
                          DCD      ica_my_current
                  |L4.428|
                          DCD      ica_your_current
                  |L4.432|
                          DCD      ica_u_necc
                  |L4.436|
                          DCD      ICA_MODBUS_ADDRESS
                  |L4.440|
                          DCD      ICA_CH
                  |L4.444|
                          DCD      TBAT
                  |L4.448|
                          DCD      ||area_number.25||

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  inv_drv PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  b570              PUSH     {r4-r6,lr}
;;;294    {          
000002  4604              MOV      r4,r0
000004  f04f0207          MOV      r2,#7
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000008  f04f0101          MOV      r1,#1
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000c  48a4              LDR      r0,|L5.672|
00000e  f7fffffe          BL       gran_char
;;;312    
;;;313    	spc_stat=spcKE;
000012  48a4              LDR      r0,|L5.676|
000014  eb040144          ADD      r1,r4,r4,LSL #1
;;;314    	__ee_spc_stat=spcKE;
000018  eb001541          ADD      r5,r0,r1,LSL #5
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001c  f8950047          LDRB     r0,[r5,#0x47]
000020  f8951046          LDRB     r1,[r5,#0x46]
000024  ea800001          EOR      r0,r0,r1
;;;316    	
;;;317    	spc_bat=0;
;;;318    	__ee_spc_bat=0;
000028  4a9f              LDR      r2,|L5.680|
00002a  b100              CBZ      r0,|L5.46|
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  7050              STRB     r0,[r2,#1]
                  |L5.46|
00002e  ea010100          AND      r1,r1,r0
000032  b101              CBZ      r1,|L5.54|
000034  7091              STRB     r1,[r2,#2]
                  |L5.54|
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000036  ea000301          AND      r3,r0,r1
00003a  07db              LSLS     r3,r3,#31
00003c  d027              BEQ      |L5.142|
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
00003e  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
000040  f1000001          ADD      r0,r0,#1
000044  70d0              STRB     r0,[r2,#3]
000046  b134              CBZ      r4,|L5.86|
000048  2c01              CMP      r4,#1
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004a  d00b              BEQ      |L5.100|
00004c  2c02              CMP      r4,#2
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
00004e  d010              BEQ      |L5.114|
000050  2c03              CMP      r4,#3
000052  d015              BEQ      |L5.128|
000054  e120              B        |L5.664|
                  |L5.86|
000056  2301              MOVS     r3,#1
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  461a              MOV      r2,r3
;;;329    	__ee_spc_phase=0;
00005a  210e              MOVS     r1,#0xe
00005c  a093              ADR      r0,|L5.684|
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  f7fffffe          BL       snmp_trap_send
000062  e119              B        |L5.664|
                  |L5.100|
000064  2301              MOVS     r3,#1
000066  2202              MOVS     r2,#2
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
000068  210e              MOVS     r1,#0xe
00006a  a097              ADR      r0,|L5.712|
00006c  f7fffffe          BL       snmp_trap_send
000070  e112              B        |L5.664|
                  |L5.114|
000072  2301              MOVS     r3,#1
000074  2203              MOVS     r2,#3
000076  210e              MOVS     r1,#0xe
000078  a09a              ADR      r0,|L5.740|
00007a  f7fffffe          BL       snmp_trap_send
00007e  e10b              B        |L5.664|
                  |L5.128|
000080  2301              MOVS     r3,#1
000082  2204              MOVS     r2,#4
000084  210e              MOVS     r1,#0xe
000086  a09e              ADR      r0,|L5.768|
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  f7fffffe          BL       snmp_trap_send
00008c  e104              B        |L5.664|
                  |L5.142|
;;;340    		gran_char(&temp,1,99);
00008e  0783              LSLS     r3,r0,#30
000090  d529              BPL      |L5.230|
000092  078b              LSLS     r3,r1,#30
000094  d527              BPL      |L5.230|
000096  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
000098  f1000001          ADD      r0,r0,#1
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  70d0              STRB     r0,[r2,#3]
00009e  b134              CBZ      r4,|L5.174|
0000a0  2c01              CMP      r4,#1
0000a2  d00b              BEQ      |L5.188|
0000a4  2c02              CMP      r4,#2
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  d010              BEQ      |L5.202|
0000a8  2c03              CMP      r4,#3
;;;344    		gran_char(&temp,1,12);
0000aa  d015              BEQ      |L5.216|
0000ac  e0f4              B        |L5.664|
                  |L5.174|
0000ae  2302              MOVS     r3,#2
0000b0  2201              MOVS     r2,#1
0000b2  210e              MOVS     r1,#0xe
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  a099              ADR      r0,|L5.796|
0000b6  f7fffffe          BL       snmp_trap_send
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000ba  e0ed              B        |L5.664|
                  |L5.188|
0000bc  2302              MOVS     r3,#2
;;;348    		gran_char(&temp,1,31);
0000be  461a              MOV      r2,r3
0000c0  210e              MOVS     r1,#0xe
0000c2  a09d              ADR      r0,|L5.824|
0000c4  f7fffffe          BL       snmp_trap_send
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000c8  e0e6              B        |L5.664|
                  |L5.202|
0000ca  2302              MOVS     r3,#2
0000cc  2203              MOVS     r2,#3
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000ce  210e              MOVS     r1,#0xe
0000d0  a0a0              ADR      r0,|L5.852|
0000d2  f7fffffe          BL       snmp_trap_send
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d6  e0df              B        |L5.664|
                  |L5.216|
0000d8  2302              MOVS     r3,#2
0000da  2204              MOVS     r2,#4
0000dc  210e              MOVS     r1,#0xe
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000de  a0a4              ADR      r0,|L5.880|
0000e0  f7fffffe          BL       snmp_trap_send
;;;355    		gran_char(&temp,0,23);
0000e4  e0d8              B        |L5.664|
                  |L5.230|
0000e6  0743              LSLS     r3,r0,#29
0000e8  d529              BPL      |L5.318|
0000ea  074b              LSLS     r3,r1,#29
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ec  d527              BPL      |L5.318|
0000ee  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
0000f0  f1000001          ADD      r0,r0,#1
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f4  70d0              STRB     r0,[r2,#3]
;;;359    		gran_char(&temp,0,59);
0000f6  b134              CBZ      r4,|L5.262|
0000f8  2c01              CMP      r4,#1
0000fa  d00b              BEQ      |L5.276|
0000fc  2c02              CMP      r4,#2
0000fe  d010              BEQ      |L5.290|
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  2c03              CMP      r4,#3
000102  d015              BEQ      |L5.304|
000104  e0c8              B        |L5.664|
                  |L5.262|
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  2303              MOVS     r3,#3
000108  2201              MOVS     r2,#1
;;;363    		gran_char(&temp,0,59);
00010a  210e              MOVS     r1,#0xe
00010c  a09f              ADR      r0,|L5.908|
00010e  f7fffffe          BL       snmp_trap_send
000112  e0c1              B        |L5.664|
                  |L5.276|
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  2303              MOVS     r3,#3
000116  2202              MOVS     r2,#2
000118  210e              MOVS     r1,#0xe
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011a  a0a3              ADR      r0,|L5.936|
00011c  f7fffffe          BL       snmp_trap_send
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000120  e0ba              B        |L5.664|
                  |L5.290|
000122  2303              MOVS     r3,#3
000124  461a              MOV      r2,r3
000126  210e              MOVS     r1,#0xe
000128  a0a6              ADR      r0,|L5.964|
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
00012a  f7fffffe          BL       snmp_trap_send
;;;370    	}
;;;371    }
00012e  e0b3              B        |L5.664|
                  |L5.304|
000130  2303              MOVS     r3,#3
000132  2204              MOVS     r2,#4
000134  210e              MOVS     r1,#0xe
000136  a0aa              ADR      r0,|L5.992|
000138  f7fffffe          BL       snmp_trap_send
00013c  e0ac              B        |L5.664|
                  |L5.318|
00013e  0703              LSLS     r3,r0,#28
000140  d529              BPL      |L5.406|
000142  070b              LSLS     r3,r1,#28
000144  d527              BPL      |L5.406|
000146  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
000148  f1000001          ADD      r0,r0,#1
00014c  70d0              STRB     r0,[r2,#3]
00014e  b134              CBZ      r4,|L5.350|
000150  2c01              CMP      r4,#1
000152  d00b              BEQ      |L5.364|
000154  2c02              CMP      r4,#2
000156  d010              BEQ      |L5.378|
000158  2c03              CMP      r4,#3
00015a  d015              BEQ      |L5.392|
00015c  e09c              B        |L5.664|
                  |L5.350|
00015e  2304              MOVS     r3,#4
000160  2201              MOVS     r2,#1
000162  210e              MOVS     r1,#0xe
000164  a0a5              ADR      r0,|L5.1020|
000166  f7fffffe          BL       snmp_trap_send
00016a  e095              B        |L5.664|
                  |L5.364|
00016c  2304              MOVS     r3,#4
00016e  2202              MOVS     r2,#2
000170  210e              MOVS     r1,#0xe
000172  a0ab              ADR      r0,|L5.1056|
000174  f7fffffe          BL       snmp_trap_send
000178  e08e              B        |L5.664|
                  |L5.378|
00017a  2304              MOVS     r3,#4
00017c  2203              MOVS     r2,#3
00017e  210e              MOVS     r1,#0xe
000180  a0b0              ADR      r0,|L5.1092|
000182  f7fffffe          BL       snmp_trap_send
000186  e087              B        |L5.664|
                  |L5.392|
000188  2304              MOVS     r3,#4
00018a  461a              MOV      r2,r3
00018c  210e              MOVS     r1,#0xe
00018e  a0b6              ADR      r0,|L5.1128|
000190  f7fffffe          BL       snmp_trap_send
000194  e080              B        |L5.664|
                  |L5.406|
000196  06c3              LSLS     r3,r0,#27
000198  d529              BPL      |L5.494|
00019a  06cb              LSLS     r3,r1,#27
00019c  d527              BPL      |L5.494|
00019e  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
0001a0  f1000001          ADD      r0,r0,#1
0001a4  70d0              STRB     r0,[r2,#3]
0001a6  b134              CBZ      r4,|L5.438|
0001a8  2c01              CMP      r4,#1
0001aa  d00b              BEQ      |L5.452|
0001ac  2c02              CMP      r4,#2
0001ae  d010              BEQ      |L5.466|
0001b0  2c03              CMP      r4,#3
0001b2  d015              BEQ      |L5.480|
0001b4  e070              B        |L5.664|
                  |L5.438|
0001b6  2305              MOVS     r3,#5
0001b8  2201              MOVS     r2,#1
0001ba  210e              MOVS     r1,#0xe
0001bc  a0b3              ADR      r0,|L5.1164|
0001be  f7fffffe          BL       snmp_trap_send
0001c2  e069              B        |L5.664|
                  |L5.452|
0001c4  2305              MOVS     r3,#5
0001c6  2202              MOVS     r2,#2
0001c8  210e              MOVS     r1,#0xe
0001ca  a0b9              ADR      r0,|L5.1200|
0001cc  f7fffffe          BL       snmp_trap_send
0001d0  e062              B        |L5.664|
                  |L5.466|
0001d2  2305              MOVS     r3,#5
0001d4  2203              MOVS     r2,#3
0001d6  210e              MOVS     r1,#0xe
0001d8  a0be              ADR      r0,|L5.1236|
0001da  f7fffffe          BL       snmp_trap_send
0001de  e05b              B        |L5.664|
                  |L5.480|
0001e0  2305              MOVS     r3,#5
0001e2  2204              MOVS     r2,#4
0001e4  210e              MOVS     r1,#0xe
0001e6  a0c4              ADR      r0,|L5.1272|
0001e8  f7fffffe          BL       snmp_trap_send
0001ec  e054              B        |L5.664|
                  |L5.494|
0001ee  0683              LSLS     r3,r0,#26
0001f0  d529              BPL      |L5.582|
0001f2  068b              LSLS     r3,r1,#26
0001f4  d527              BPL      |L5.582|
0001f6  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
0001f8  f1000001          ADD      r0,r0,#1
0001fc  70d0              STRB     r0,[r2,#3]
0001fe  b134              CBZ      r4,|L5.526|
000200  2c01              CMP      r4,#1
000202  d00b              BEQ      |L5.540|
000204  2c02              CMP      r4,#2
000206  d010              BEQ      |L5.554|
000208  2c03              CMP      r4,#3
00020a  d015              BEQ      |L5.568|
00020c  e044              B        |L5.664|
                  |L5.526|
00020e  2306              MOVS     r3,#6
000210  2201              MOVS     r2,#1
000212  210e              MOVS     r1,#0xe
000214  a0c1              ADR      r0,|L5.1308|
000216  f7fffffe          BL       snmp_trap_send
00021a  e03d              B        |L5.664|
                  |L5.540|
00021c  2306              MOVS     r3,#6
00021e  2202              MOVS     r2,#2
000220  210e              MOVS     r1,#0xe
000222  a0c7              ADR      r0,|L5.1344|
000224  f7fffffe          BL       snmp_trap_send
000228  e036              B        |L5.664|
                  |L5.554|
00022a  2306              MOVS     r3,#6
00022c  2203              MOVS     r2,#3
00022e  210e              MOVS     r1,#0xe
000230  a0cc              ADR      r0,|L5.1380|
000232  f7fffffe          BL       snmp_trap_send
000236  e02f              B        |L5.664|
                  |L5.568|
000238  2306              MOVS     r3,#6
00023a  2204              MOVS     r2,#4
00023c  210e              MOVS     r1,#0xe
00023e  a0d2              ADR      r0,|L5.1416|
000240  f7fffffe          BL       snmp_trap_send
000244  e028              B        |L5.664|
                  |L5.582|
000246  b300              CBZ      r0,|L5.650|
000248  b9f9              CBNZ     r1,|L5.650|
00024a  78d0              LDRB     r0,[r2,#3]  ; plazma_inv
00024c  f1000001          ADD      r0,r0,#1
000250  70d0              STRB     r0,[r2,#3]
000252  b134              CBZ      r4,|L5.610|
000254  2c01              CMP      r4,#1
000256  d00b              BEQ      |L5.624|
000258  2c02              CMP      r4,#2
00025a  d010              BEQ      |L5.638|
00025c  2c03              CMP      r4,#3
00025e  d015              BEQ      |L5.652|
000260  e01a              B        |L5.664|
                  |L5.610|
000262  2300              MOVS     r3,#0
000264  2201              MOVS     r2,#1
000266  210e              MOVS     r1,#0xe
000268  a0d0              ADR      r0,|L5.1452|
00026a  f7fffffe          BL       snmp_trap_send
00026e  e013              B        |L5.664|
                  |L5.624|
000270  2300              MOVS     r3,#0
000272  2202              MOVS     r2,#2
000274  210e              MOVS     r1,#0xe
000276  a0d2              ADR      r0,|L5.1472|
000278  f7fffffe          BL       snmp_trap_send
00027c  e00c              B        |L5.664|
                  |L5.638|
00027e  2300              MOVS     r3,#0
000280  2203              MOVS     r2,#3
000282  210e              MOVS     r1,#0xe
000284  a0d3              ADR      r0,|L5.1492|
000286  f7fffffe          BL       snmp_trap_send
                  |L5.650|
00028a  e005              B        |L5.664|
                  |L5.652|
00028c  2300              MOVS     r3,#0
00028e  2204              MOVS     r2,#4
000290  210e              MOVS     r1,#0xe
000292  a0d5              ADR      r0,|L5.1512|
000294  f7fffffe          BL       snmp_trap_send
                  |L5.664|
000298  f8150f46          LDRB     r0,[r5,#0x46]!
00029c  7068              STRB     r0,[r5,#1]
00029e  bd70              POP      {r4-r6,pc}
;;;372    #endif
                          ENDP

                  |L5.672|
                          DCD      first_inv_slot
                  |L5.676|
                          DCD      inv
                  |L5.680|
                          DCD      ||area_number.25||+0xac
                  |L5.684|
0002ac  496e7665          DCB      "Invertor #1 Alarm, overload",0
0002b0  72746f72
0002b4  20233120
0002b8  416c6172
0002bc  6d2c206f
0002c0  7665726c
0002c4  6f616400
                  |L5.712|
0002c8  496e7665          DCB      "Invertor #2 Alarm, overload",0
0002cc  72746f72
0002d0  20233220
0002d4  416c6172
0002d8  6d2c206f
0002dc  7665726c
0002e0  6f616400
                  |L5.740|
0002e4  496e7665          DCB      "Invertor #3 Alarm, overload",0
0002e8  72746f72
0002ec  20233320
0002f0  416c6172
0002f4  6d2c206f
0002f8  7665726c
0002fc  6f616400
                  |L5.768|
000300  496e7665          DCB      "Invertor #4 Alarm, overload",0
000304  72746f72
000308  20233420
00030c  416c6172
000310  6d2c206f
000314  7665726c
000318  6f616400
                  |L5.796|
00031c  496e7665          DCB      "Invertor #1 Alarm, overheat",0
000320  72746f72
000324  20233120
000328  416c6172
00032c  6d2c206f
000330  76657268
000334  65617400
                  |L5.824|
000338  496e7665          DCB      "Invertor #2 Alarm, overheat",0
00033c  72746f72
000340  20233220
000344  416c6172
000348  6d2c206f
00034c  76657268
000350  65617400
                  |L5.852|
000354  496e7665          DCB      "Invertor #3 Alarm, overheat",0
000358  72746f72
00035c  20233320
000360  416c6172
000364  6d2c206f
000368  76657268
00036c  65617400
                  |L5.880|
000370  496e7665          DCB      "Invertor #4 Alarm, overheat",0
000374  72746f72
000378  20233420
00037c  416c6172
000380  6d2c206f
000384  76657268
000388  65617400
                  |L5.908|
00038c  496e7665          DCB      "Invertor #1 Alarm, is warm",0
000390  72746f72
000394  20233120
000398  416c6172
00039c  6d2c2069
0003a0  73207761
0003a4  726d00  
0003a7  00                DCB      0
                  |L5.936|
0003a8  496e7665          DCB      "Invertor #2 Alarm, is warm",0
0003ac  72746f72
0003b0  20233220
0003b4  416c6172
0003b8  6d2c2069
0003bc  73207761
0003c0  726d00  
0003c3  00                DCB      0
                  |L5.964|
0003c4  496e7665          DCB      "Invertor #3 Alarm, is warm",0
0003c8  72746f72
0003cc  20233320
0003d0  416c6172
0003d4  6d2c2069
0003d8  73207761
0003dc  726d00  
0003df  00                DCB      0
                  |L5.992|
0003e0  496e7665          DCB      "Invertor #4 Alarm, is warm",0
0003e4  72746f72
0003e8  20233420
0003ec  416c6172
0003f0  6d2c2069
0003f4  73207761
0003f8  726d00  
0003fb  00                DCB      0
                  |L5.1020|
0003fc  496e7665          DCB      "Invertor #1 Alarm, voltage is up",0
000400  72746f72
000404  20233120
000408  416c6172
00040c  6d2c2076
000410  6f6c7461
000414  67652069
000418  73207570
00041c  00      
00041d  00                DCB      0
00041e  00                DCB      0
00041f  00                DCB      0
                  |L5.1056|
000420  496e7665          DCB      "Invertor #2 Alarm, voltage is up",0
000424  72746f72
000428  20233220
00042c  416c6172
000430  6d2c2076
000434  6f6c7461
000438  67652069
00043c  73207570
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L5.1092|
000444  496e7665          DCB      "Invertor #3 Alarm, voltage is up",0
000448  72746f72
00044c  20233320
000450  416c6172
000454  6d2c2076
000458  6f6c7461
00045c  67652069
000460  73207570
000464  00      
000465  00                DCB      0
000466  00                DCB      0
000467  00                DCB      0
                  |L5.1128|
000468  496e7665          DCB      "Invertor #4 Alarm, voltage is up",0
00046c  72746f72
000470  20233420
000474  416c6172
000478  6d2c2076
00047c  6f6c7461
000480  67652069
000484  73207570
000488  00      
000489  00                DCB      0
00048a  00                DCB      0
00048b  00                DCB      0
                  |L5.1164|
00048c  496e7665          DCB      "Invertor #1 Alarm, voltage is down",0
000490  72746f72
000494  20233120
000498  416c6172
00049c  6d2c2076
0004a0  6f6c7461
0004a4  67652069
0004a8  7320646f
0004ac  776e00  
0004af  00                DCB      0
                  |L5.1200|
0004b0  496e7665          DCB      "Invertor #2 Alarm, voltage is down",0
0004b4  72746f72
0004b8  20233220
0004bc  416c6172
0004c0  6d2c2076
0004c4  6f6c7461
0004c8  67652069
0004cc  7320646f
0004d0  776e00  
0004d3  00                DCB      0
                  |L5.1236|
0004d4  496e7665          DCB      "Invertor #3 Alarm, voltage is down",0
0004d8  72746f72
0004dc  20233320
0004e0  416c6172
0004e4  6d2c2076
0004e8  6f6c7461
0004ec  67652069
0004f0  7320646f
0004f4  776e00  
0004f7  00                DCB      0
                  |L5.1272|
0004f8  496e7665          DCB      "Invertor #4 Alarm, voltage is down",0
0004fc  72746f72
000500  20233420
000504  416c6172
000508  6d2c2076
00050c  6f6c7461
000510  67652069
000514  7320646f
000518  776e00  
00051b  00                DCB      0
                  |L5.1308|
00051c  496e7665          DCB      "Invertor #1 Alarm, output is offed",0
000520  72746f72
000524  20233120
000528  416c6172
00052c  6d2c206f
000530  75747075
000534  74206973
000538  206f6666
00053c  656400  
00053f  00                DCB      0
                  |L5.1344|
000540  496e7665          DCB      "Invertor #2 Alarm, output is offed",0
000544  72746f72
000548  20233220
00054c  416c6172
000550  6d2c206f
000554  75747075
000558  74206973
00055c  206f6666
000560  656400  
000563  00                DCB      0
                  |L5.1380|
000564  496e7665          DCB      "Invertor #3 Alarm, output is offed",0
000568  72746f72
00056c  20233320
000570  416c6172
000574  6d2c206f
000578  75747075
00057c  74206973
000580  206f6666
000584  656400  
000587  00                DCB      0
                  |L5.1416|
000588  496e7665          DCB      "Invertor #4 Alarm, output is offed",0
00058c  72746f72
000590  20233420
000594  416c6172
000598  6d2c206f
00059c  75747075
0005a0  74206973
0005a4  206f6666
0005a8  656400  
0005ab  00                DCB      0
                  |L5.1452|
0005ac  496e7665          DCB      "Invertor #1 is norm",0
0005b0  72746f72
0005b4  20233120
0005b8  6973206e
0005bc  6f726d00
                  |L5.1472|
0005c0  496e7665          DCB      "Invertor #2 is norm",0
0005c4  72746f72
0005c8  20233220
0005cc  6973206e
0005d0  6f726d00
                  |L5.1492|
0005d4  496e7665          DCB      "Invertor #3 is norm",0
0005d8  72746f72
0005dc  20233320
0005e0  6973206e
0005e4  6f726d00
                  |L5.1512|
0005e8  496e7665          DCB      "Invertor #4 is norm",0
0005ec  72746f72
0005f0  20233420
0005f4  6973206e
0005f8  6f726d00

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  klimat_hndl PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;294    {          
000004  4d66              LDR      r5,|L6.416|
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  4867              LDR      r0,|L6.420|
000008  4c67              LDR      r4,|L6.424|
00000a  f9b51000          LDRSH    r1,[r5,#0]  ; t_box
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000e  f9b02000          LDRSH    r2,[r0,#0]  ; TBOXMAX
;;;312    
;;;313    	spc_stat=spcKE;
000012  f9b40000          LDRSH    r0,[r4,#0]
000016  4291              CMP      r1,r2
;;;314    	__ee_spc_stat=spcKE;
000018  dd03              BLE      |L6.34|
00001a  f1000001          ADD      r0,r0,#1
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001e  8020              STRH     r0,[r4,#0]
000020  e003              B        |L6.42|
                  |L6.34|
000022  da02              BGE      |L6.42|
000024  f1a00001          SUB      r0,r0,#1
;;;316    	
;;;317    	spc_bat=0;
;;;318    	__ee_spc_bat=0;
000028  8020              STRH     r0,[r4,#0]
                  |L6.42|
00002a  2206              MOVS     r2,#6
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  2100              MOVS     r1,#0
00002e  485e              LDR      r0,|L6.424|
000030  f7fffffe          BL       gran
000034  f9b40000          LDRSH    r0,[r4,#0]  ; av_tbox_cnt
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000038  495c              LDR      r1,|L6.428|
00003a  2601              MOVS     r6,#1
00003c  2805              CMP      r0,#5
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
00003e  dd00              BLE      |L6.66|
000040  700e              STRB     r6,[r1,#0]
                  |L6.66|
000042  2400              MOVS     r4,#0
000044  2801              CMP      r0,#1
000046  da00              BGE      |L6.74|
000048  700c              STRB     r4,[r1,#0]
                  |L6.74|
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004a  4959              LDR      r1,|L6.432|
00004c  f9b50000          LDRSH    r0,[r5,#0]  ; t_box
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
000050  4a58              LDR      r2,|L6.436|
000052  f9b11000          LDRSH    r1,[r1,#0]  ; TBOXREG
000056  4f58              LDR      r7,|L6.440|
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  1e8b              SUBS     r3,r1,#2
;;;329    	__ee_spc_phase=0;
00005a  4298              CMP      r0,r3
00005c  da0f              BGE      |L6.126|
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  f9921000          LDRSB    r1,[r2,#0]  ; t_box_cnt
000062  291e              CMP      r1,#0x1e
000064  da1e              BGE      |L6.164|
000066  f1010101          ADD      r1,r1,#1
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
00006a  b249              SXTB     r1,r1
00006c  7011              STRB     r1,[r2,#0]
00006e  291e              CMP      r1,#0x1e
000070  db18              BLT      |L6.164|
000072  8839              LDRH     r1,[r7,#0]  ; main_vent_pos
000074  f1a10101          SUB      r1,r1,#1
000078  8039              STRH     r1,[r7,#0]
00007a  7014              STRB     r4,[r2,#0]
00007c  e012              B        |L6.164|
                  |L6.126|
00007e  4288              CMP      r0,r1
000080  dd0f              BLE      |L6.162|
000082  f9921000          LDRSB    r1,[r2,#0]  ; t_box_cnt
000086  291e              CMP      r1,#0x1e
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  da0c              BGE      |L6.164|
00008a  f1010101          ADD      r1,r1,#1
;;;340    		gran_char(&temp,1,99);
00008e  b249              SXTB     r1,r1
000090  7011              STRB     r1,[r2,#0]
000092  291e              CMP      r1,#0x1e
000094  db06              BLT      |L6.164|
000096  8839              LDRH     r1,[r7,#0]  ; main_vent_pos
000098  f1010101          ADD      r1,r1,#1
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  8039              STRH     r1,[r7,#0]
00009e  7014              STRB     r4,[r2,#0]
0000a0  e000              B        |L6.164|
                  |L6.162|
0000a2  7014              STRB     r4,[r2,#0]
                  |L6.164|
0000a4  4945              LDR      r1,|L6.444|
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  f9b11000          LDRSH    r1,[r1,#0]  ; TBOXVENTMAX
;;;344    		gran_char(&temp,1,12);
0000aa  4288              CMP      r0,r1
0000ac  dd05              BLE      |L6.186|
0000ae  2214              MOVS     r2,#0x14
0000b0  2100              MOVS     r1,#0
0000b2  4841              LDR      r0,|L6.440|
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  f7fffffe          BL       gran
0000b8  e007              B        |L6.202|
                  |L6.186|
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000ba  4841              LDR      r0,|L6.448|
0000bc  2100              MOVS     r1,#0
;;;348    		gran_char(&temp,1,31);
0000be  8800              LDRH     r0,[r0,#0]  ; pos_vent
0000c0  3009              ADDS     r0,r0,#9
0000c2  b202              SXTH     r2,r0
0000c4  483c              LDR      r0,|L6.440|
0000c6  f7fffffe          BL       gran
                  |L6.202|
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000ca  20f0              MOVS     r0,#0xf0
0000cc  f7fffffe          BL       mess_find_unvol
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000d0  b128              CBZ      r0,|L6.222|
0000d2  483c              LDR      r0,|L6.452|
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d4  6801              LDR      r1,[r0,#0]  ; mess_data
0000d6  29f1              CMP      r1,#0xf1
0000d8  d101              BNE      |L6.222|
0000da  6840              LDR      r0,[r0,#4]  ; mess_data
0000dc  8038              STRH     r0,[r7,#0]
                  |L6.222|
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000de  f9b71000          LDRSH    r1,[r7,#0]  ; main_vent_pos
;;;355    		gran_char(&temp,0,23);
0000e2  4839              LDR      r0,|L6.456|
0000e4  2901              CMP      r1,#1
0000e6  dc01              BGT      |L6.236|
0000e8  7006              STRB     r6,[r0,#0]
0000ea  e000              B        |L6.238|
                  |L6.236|
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ec  7004              STRB     r4,[r0,#0]
                  |L6.238|
0000ee  4837              LDR      r0,|L6.460|
0000f0  f8df80dc          LDR      r8,|L6.464|
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f4  f9b00000          LDRSH    r0,[r0,#0]  ; TBATDISABLE
;;;359    		gran_char(&temp,0,59);
0000f8  f1a00132          SUB      r1,r0,#0x32
0000fc  2928              CMP      r1,#0x28
0000fe  d821              BHI      |L6.324|
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  f9b51000          LDRSH    r1,[r5,#0]  ; t_box
000104  4f33              LDR      r7,|L6.468|
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  4281              CMP      r1,r0
000108  dd03              BLE      |L6.274|
;;;363    		gran_char(&temp,0,59);
00010a  8838              LDRH     r0,[r7,#0]  ; tbatdisable_cnt
00010c  f1000001          ADD      r0,r0,#1
000110  8038              STRH     r0,[r7,#0]
                  |L6.274|
000112  4831              LDR      r0,|L6.472|
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  f9b00000          LDRSH    r0,[r0,#0]  ; TBATENABLE
000118  4281              CMP      r1,r0
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011a  da03              BGE      |L6.292|
00011c  8838              LDRH     r0,[r7,#0]  ; tbatdisable_cnt
00011e  f1a00001          SUB      r0,r0,#1
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000122  8038              STRH     r0,[r7,#0]
                  |L6.292|
000124  2206              MOVS     r2,#6
000126  2100              MOVS     r1,#0
000128  482a              LDR      r0,|L6.468|
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
00012a  f7fffffe          BL       gran
;;;370    	}
;;;371    }
00012e  f9b70000          LDRSH    r0,[r7,#0]  ; tbatdisable_cnt
000132  2805              CMP      r0,#5
000134  dd01              BLE      |L6.314|
000136  f8886000          STRB     r6,[r8,#0]
                  |L6.314|
00013a  2801              CMP      r0,#1
00013c  da04              BGE      |L6.328|
00013e  f8884000          STRB     r4,[r8,#0]
000142  e001              B        |L6.328|
                  |L6.324|
000144  f8884000          STRB     r4,[r8,#0]
                  |L6.328|
000148  4824              LDR      r0,|L6.476|
00014a  4f25              LDR      r7,|L6.480|
00014c  f9b00000          LDRSH    r0,[r0,#0]  ; TLOADDISABLE
000150  f1a00132          SUB      r1,r0,#0x32
000154  291e              CMP      r1,#0x1e
000156  d820              BHI      |L6.410|
000158  f9b51000          LDRSH    r1,[r5,#0]  ; t_box
00015c  4d21              LDR      r5,|L6.484|
00015e  4281              CMP      r1,r0
000160  dd03              BLE      |L6.362|
000162  8828              LDRH     r0,[r5,#0]  ; tloaddisable_cnt
000164  f1000001          ADD      r0,r0,#1
000168  8028              STRH     r0,[r5,#0]
                  |L6.362|
00016a  481f              LDR      r0,|L6.488|
00016c  f9b00000          LDRSH    r0,[r0,#0]  ; TLOADENABLE
000170  4281              CMP      r1,r0
000172  da03              BGE      |L6.380|
000174  8828              LDRH     r0,[r5,#0]  ; tloaddisable_cnt
000176  f1a00001          SUB      r0,r0,#1
00017a  8028              STRH     r0,[r5,#0]
                  |L6.380|
00017c  2206              MOVS     r2,#6
00017e  2100              MOVS     r1,#0
000180  4818              LDR      r0,|L6.484|
000182  f7fffffe          BL       gran
000186  f9b50000          LDRSH    r0,[r5,#0]  ; tloaddisable_cnt
00018a  2805              CMP      r0,#5
00018c  dd00              BLE      |L6.400|
00018e  703e              STRB     r6,[r7,#0]
                  |L6.400|
000190  2801              CMP      r0,#1
000192  da00              BGE      |L6.406|
000194  703c              STRB     r4,[r7,#0]
                  |L6.406|
000196  e8bd81f0          POP      {r4-r8,pc}
                  |L6.410|
00019a  703c              STRB     r4,[r7,#0]
00019c  e7fb              B        |L6.406|
;;;372    #endif
                          ENDP

00019e  0000              DCW      0x0000
                  |L6.416|
                          DCD      t_box
                  |L6.420|
                          DCD      TBOXMAX
                  |L6.424|
                          DCD      av_tbox_cnt
                  |L6.428|
                          DCD      av_tbox_stat
                  |L6.432|
                          DCD      TBOXREG
                  |L6.436|
                          DCD      t_box_cnt
                  |L6.440|
                          DCD      main_vent_pos
                  |L6.444|
                          DCD      TBOXVENTMAX
                  |L6.448|
                          DCD      pos_vent
                  |L6.452|
                          DCD      mess_data
                  |L6.456|
                          DCD      mixer_vent_stat
                  |L6.460|
                          DCD      TBATDISABLE
                  |L6.464|
                          DCD      tbatdisable_stat
                  |L6.468|
                          DCD      tbatdisable_cnt
                  |L6.472|
                          DCD      TBATENABLE
                  |L6.476|
                          DCD      TLOADDISABLE
                  |L6.480|
                          DCD      tloaddisable_stat
                  |L6.484|
                          DCD      tloaddisable_cnt
                  |L6.488|
                          DCD      TLOADENABLE

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  u_avt_set_hndl1 PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;294    {          
000004  484e              LDR      r0,|L7.320|
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  2165              MOVS     r1,#0x65
000008  2564              MOVS     r5,#0x64
00000a  f9b00000          LDRSH    r0,[r0,#0]
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000e  4c4b              LDR      r4,|L7.316|
000010  4341              MULS     r1,r0,r1
;;;312    
;;;313    	spc_stat=spcKE;
000012  eb001040          ADD      r0,r0,r0,LSL #5
000016  fbb1f1f5          UDIV     r1,r1,r5
;;;314    	__ee_spc_stat=spcKE;
00001a  eb000040          ADD      r0,r0,r0,LSL #1
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001e  fbb0f0f5          UDIV     r0,r0,r5
000022  f8dfb120          LDR      r11,|L7.324|
;;;316    	
;;;317    	spc_bat=0;
000026  b20a              SXTH     r2,r1
;;;318    	__ee_spc_bat=0;
000028  7823              LDRB     r3,[r4,#0]  ; uavt_set_stat
00002a  b201              SXTH     r1,r0
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
00002c  f89b0000          LDRB     r0,[r11,#0]
000030  4e45              LDR      r6,|L7.328|
000032  4f46              LDR      r7,|L7.332|
000034  f8df8118          LDR      r8,|L7.336|
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
000038  f8df9118          LDR      r9,|L7.340|
00003c  f8dfa118          LDR      r10,|L7.344|
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
000040  2500              MOVS     r5,#0
000042  2b01              CMP      r3,#1
000044  d002              BEQ      |L7.76|
000046  2b02              CMP      r3,#2
000048  d031              BEQ      |L7.174|
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
00004a  e071              B        |L7.304|
                  |L7.76|
00004c  803a              STRH     r2,[r7,#0]
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
00004e  f8a81000          STRH     r1,[r8,#0]
000052  2801              CMP      r0,#1
000054  d000              BEQ      |L7.88|
000056  7035              STRB     r5,[r6,#0]
                  |L7.88|
;;;326    
;;;327    	
;;;328    	spc_phase=0;
000058  230a              MOVS     r3,#0xa
;;;329    	__ee_spc_phase=0;
00005a  2200              MOVS     r2,#0
00005c  21e6              MOVS     r1,#0xe6
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
00005e  20e1              MOVS     r0,#0xe1
000060  f7fffffe          BL       mess_send
000064  f04f0201          MOV      r2,#1
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
000068  f04f0000          MOV      r0,#0
00006c  f9b73000          LDRSH    r3,[r7,#0]
000070  f9b85000          LDRSH    r5,[r8,#0]
000074  f9ba6000          LDRSH    r6,[r10,#0]
000078  e00d              B        |L7.150|
                  |L7.122|
00007a  ebc001c0          RSB      r1,r0,r0,LSL #3
00007e  eb011100          ADD      r1,r1,r0,LSL #4
000082  eb090181          ADD      r1,r9,r1,LSL #2
000086  69c9              LDR      r1,[r1,#0x1c]
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
000088  4299              CMP      r1,r3
00008a  da09              BGE      |L7.160|
00008c  42a9              CMP      r1,r5
;;;340    		gran_char(&temp,1,99);
00008e  dd07              BLE      |L7.160|
000090  f1000001          ADD      r0,r0,#1
000094  b2c0              UXTB     r0,r0
                  |L7.150|
000096  42b0              CMP      r0,r6
000098  dbef              BLT      |L7.122|
                  |L7.154|
00009a  2a01              CMP      r2,#1
;;;341    		*((char*)(&(ke_date[0])))=temp;
00009c  d003              BEQ      |L7.166|
00009e  e047              B        |L7.304|
                  |L7.160|
0000a0  f04f0200          MOV      r2,#0
0000a4  e7f9              B        |L7.154|
                  |L7.166|
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
0000a6  f04f0002          MOV      r0,#2
;;;344    		gran_char(&temp,1,12);
0000aa  7020              STRB     r0,[r4,#0]
0000ac  e040              B        |L7.304|
                  |L7.174|
0000ae  803a              STRH     r2,[r7,#0]
0000b0  f8a81000          STRH     r1,[r8,#0]
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
0000b4  2802              CMP      r0,#2
0000b6  d000              BEQ      |L7.186|
0000b8  7035              STRB     r5,[r6,#0]
                  |L7.186|
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
0000ba  230a              MOVS     r3,#0xa
0000bc  2200              MOVS     r2,#0
;;;348    		gran_char(&temp,1,31);
0000be  21e6              MOVS     r1,#0xe6
0000c0  20e1              MOVS     r0,#0xe1
0000c2  f7fffffe          BL       mess_send
0000c6  f04f0201          MOV      r2,#1
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
0000ca  f04f0000          MOV      r0,#0
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
0000ce  f9b73000          LDRSH    r3,[r7,#0]
0000d2  f9b87000          LDRSH    r7,[r8,#0]
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
0000d6  f9bac000          LDRSH    r12,[r10,#0]
0000da  e00d              B        |L7.248|
                  |L7.220|
0000dc  ebc001c0          RSB      r1,r0,r0,LSL #3
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
0000e0  eb011100          ADD      r1,r1,r0,LSL #4
;;;355    		gran_char(&temp,0,23);
0000e4  eb090181          ADD      r1,r9,r1,LSL #2
0000e8  69c9              LDR      r1,[r1,#0x1c]
0000ea  4299              CMP      r1,r3
;;;356    		*((char*)(&(ke_date[1])))=temp;
0000ec  da09              BGE      |L7.258|
0000ee  42b9              CMP      r1,r7
0000f0  dd07              BLE      |L7.258|
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
0000f2  f1000001          ADD      r0,r0,#1
;;;359    		gran_char(&temp,0,59);
0000f6  b2c0              UXTB     r0,r0
                  |L7.248|
0000f8  4560              CMP      r0,r12
0000fa  dbef              BLT      |L7.220|
                  |L7.252|
0000fc  2a01              CMP      r2,#1
0000fe  d003              BEQ      |L7.264|
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
000100  e016              B        |L7.304|
                  |L7.258|
000102  f04f0200          MOV      r2,#0
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
000106  e7f9              B        |L7.252|
                  |L7.264|
000108  20ee              MOVS     r0,#0xee
;;;363    		gran_char(&temp,0,59);
00010a  e9cd0500          STRD     r0,r5,[sp,#0]
00010e  9502              STR      r5,[sp,#8]
000110  9503              STR      r5,[sp,#0xc]
000112  7831              LDRB     r1,[r6,#0]  ; uavt_bps_pntr
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
000114  4603              MOV      r3,r0
000116  2216              MOVS     r2,#0x16
000118  4608              MOV      r0,r1
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
00011a  f7fffffe          BL       mcp2515_transmit
00011e  7830              LDRB     r0,[r6,#0]  ; uavt_bps_pntr
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
000120  1c40              ADDS     r0,r0,#1
000122  b2c0              UXTB     r0,r0
000124  7030              STRB     r0,[r6,#0]
000126  f9ba1000          LDRSH    r1,[r10,#0]  ; NUMIST
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
00012a  4288              CMP      r0,r1
;;;370    	}
;;;371    }
00012c  db00              BLT      |L7.304|
00012e  7025              STRB     r5,[r4,#0]
                  |L7.304|
000130  7820              LDRB     r0,[r4,#0]  ; uavt_set_stat
000132  f88b0000          STRB     r0,[r11,#0]
000136  e8bd9fff          POP      {r0-r12,pc}
;;;372    #endif
                          ENDP

00013a  0000              DCW      0x0000
                  |L7.316|
                          DCD      uavt_set_stat
                  |L7.320|
                          DCD      U_AVT
                  |L7.324|
                          DCD      uavt_set_stat_old
                  |L7.328|
                          DCD      uavt_bps_pntr
                  |L7.332|
                          DCD      u_max_temp
                  |L7.336|
                          DCD      u_min_temp
                  |L7.340|
                          DCD      bps
                  |L7.344|
                          DCD      NUMIST

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  averageChargeStartStop PROC
;;;292    //-----------------------------------------------
;;;293    void ke_start(char in)
000000  4908              LDR      r1,|L8.36|
;;;294    {          
000002  f44f70b4          MOV      r0,#0x168
;;;295    ke_start_stat=(enum_ke_start_stat)0;		 
000006  780a              LDRB     r2,[r1,#0]  ; hv_vz_stat
000008  b132              CBZ      r2,|L8.24|
00000a  f04f0200          MOV      r2,#0
;;;296    /*
;;;297    if(spc_stat==spcVZ)ke_start_stat=kssNOT_VZ;
;;;298    #ifndef UKU_220_IPS_TERMOKOMPENSAT
;;;299    else if(BAT_IS_ON[in]!=bisON)ke_start_stat=kssNOT_BAT;
;;;300    #endif
;;;301    else if(bat[in]._av&(1<<0))ke_start_stat=kssNOT_BAT_AV;
;;;302    else if(bat[in]._temper_stat&(1<<1))ke_start_stat=kssNOT_BAT_AV_T;
;;;303    else if(bat[in]._av&(1<<1))ke_start_stat=kssNOT_BAT_AV_ASS;
;;;304    else if(bat[in]._Ib>IKB)ke_start_stat=kssNOT_BAT_ZAR;
;;;305    else if(bat[in]._Ib<-IKB)ke_start_stat=kssNOT_BAT_RAZR;
;;;306    else if((spc_stat==spcKE)&&(spc_bat==0))ke_start_stat=kssNOT_KE1;
;;;307    else if((spc_stat==spcKE)&&(spc_bat==1))ke_start_stat=kssNOT_KE2;
;;;308    else */
;;;309    	{
;;;310    
;;;311    	ke_start_stat=kssYES;
00000e  700a              STRB     r2,[r1,#0]
000010  f04f0100          MOV      r1,#0
;;;312    
;;;313    	spc_stat=spcKE;
000014  f7ffbffe          B.W      lc640_write
                  |L8.24|
;;;314    	__ee_spc_stat=spcKE;
000018  f04f0201          MOV      r2,#1
;;;315    	lc640_write_int(EE_SPC_STAT,__ee_spc_stat);
00001c  700a              STRB     r2,[r1,#0]
00001e  4611              MOV      r1,r2
000020  f7ffbffe          B.W      lc640_write
;;;316    	
;;;317    	spc_bat=0;
;;;318    	__ee_spc_bat=0;
;;;319    	lc640_write_int(EE_SPC_BAT,__ee_spc_bat);
;;;320    
;;;321    	bat[0]._zar_cnt_ke=0;
;;;322    	lc640_write_int(ADR_EE_BAT_ZAR_CNT_KE[0],0);
;;;323    
;;;324    	bat[0]._time_min_cnt_ke=0;
;;;325    	lc640_write_int(EE_ZVU_BAT_MIN_CNT_KE,0);
;;;326    
;;;327    	
;;;328    	spc_phase=0;
;;;329    	__ee_spc_phase=0;
;;;330    	lc640_write_int(EE_SPC_PHASE,__ee_spc_phase);
;;;331    
;;;332    	//ke_mem_hndl(in,lc640_read_int(ADR_EE_BAT_ZAR_CNT_KE[spc_bat]));
;;;333    
;;;334    		{					
;;;335    		signed short temp_temp;
;;;336    		signed char temp;
;;;337    		temp_temp=bat[in]._u_old[((bat_u_old_cnt+1)&0x07)]; 
;;;338    		    
;;;339    		temp=LPC_RTC->YEAR;
;;;340    		gran_char(&temp,1,99);
;;;341    		*((char*)(&(ke_date[0])))=temp;
;;;342    			
;;;343    		temp=LPC_RTC->MONTH;
;;;344    		gran_char(&temp,1,12);
;;;345    		*(((char*)(&(ke_date[0])))+1)=temp;
;;;346    		
;;;347    		temp=LPC_RTC->DOM;
;;;348    		gran_char(&temp,1,31);
;;;349    		*(((char*)(&(ke_date[0])))+2)=temp;			
;;;350    				
;;;351    		*(((char*)(&(ke_date[0])))+3)=*((char*)&temp_temp);
;;;352    		lc640_write_long(EE_SPC_KE_DATE0,ke_date[0]);
;;;353    
;;;354    		temp=LPC_RTC->HOUR;
;;;355    		gran_char(&temp,0,23);
;;;356    		*((char*)(&(ke_date[1])))=temp;
;;;357                   
;;;358    		temp=LPC_RTC->MIN;
;;;359    		gran_char(&temp,0,59);
;;;360    		*(((char*)(&(ke_date[1])))+1)=temp;
;;;361    	          
;;;362    		temp=LPC_RTC->SEC;
;;;363    		gran_char(&temp,0,59);
;;;364    		*(((char*)(&(ke_date[1])))+2)=temp;
;;;365    			
;;;366    		*(((char*)(&(ke_date[1])))+3)=*(((char*)&temp_temp)+1);
;;;367    		lc640_write_long(EE_SPC_KE_DATE1,ke_date[1]);
;;;368    		}
;;;369    	bat_hndl_zvu_ke_init=1;
;;;370    	}
;;;371    }
;;;372    #endif
                          ENDP

                  |L8.36|
                          DCD      hv_vz_stat

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  i_bat_buff
                          %        12
                  adc_buff
                          %        1024
                  adc_buff_
                          %        32
                  main_power_buffer
                          %        32
                  I_from_t_table
                          %        14
                  U_end_from_i_table
                          %        14
                  bat_hndl_plazma
                          %        20

                          AREA ||area_number.11||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.bss||
                  adc_buff_max
                          %        24

                          AREA ||area_number.12||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.bss||
                  net_buff
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  sk_buff_KONTUR
000000  0d0b0f0e          DCB      0x0d,0x0b,0x0f,0x0e

                          AREA ||area_number.15||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.constdata||
                  sk_buff_RSTKM
000000  0d0b0f0e          DCB      0x0d,0x0b,0x0f,0x0e

                          AREA ||area_number.16||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.constdata||
                  sk_buff_GLONASS
000000  0b0d0f0e          DCB      0x0b,0x0d,0x0f,0x0e

                          AREA ||area_number.17||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.constdata||
                  sk_buff_3U
000000  0b0d0f0e          DCB      0x0b,0x0d,0x0f,0x0e

                          AREA ||area_number.18||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.constdata||
                  sk_buff_6U
000000  0b0d0f0e          DCB      0x0b,0x0d,0x0f,0x0e

                          AREA ||area_number.19||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.constdata||
                  sk_buff_220
000000  0b0d0f0e          DCB      0x0b,0x0d,0x0f,0x0e
                          DCD      0x00000258
                          DCD      0x00000708
                          DCD      0x00000e10
                          DCD      0x00002a30
                          DCD      0x00004650
                          DCD      0x00008ca0
                          DCD      0x00011940
                          DCD      0x00000258
                          DCD      0x00000708
                          DCD      0x00000e10
                          DCD      0x00002a30
                          DCD      0x00004650
                          DCD      0x00008ca0
                          DCD      0x00011940

                          AREA ||area_number.20||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.20||, ||.constdata||
                  sk_buff_TELECORE2015
000000  0b0d0f0e          DCB      0x0b,0x0d,0x0f,0x0e

                          AREA ||.data||, DATA, ALIGN=1

                  adc_buff_min
000000  13881388          DCW      0x1388,0x1388
000004  13881388          DCW      0x1388,0x1388
000008  13881388          DCW      0x1388,0x1388
00000c  13881388          DCW      0x1388,0x1388
000010  13881388          DCW      0x1388,0x1388
                          DCDU     0x00000000

                          AREA ||area_number.22||, DATA, ALIGN=1

                          EXPORTAS ||area_number.22||, ||.data||
                  unet_buff_min
000000  1388              DCW      0x1388

                          AREA ||area_number.23||, DATA, ALIGN=0

                          EXPORTAS ||area_number.23||, ||.data||
                  adc_stat
000000  01                DCB      0x01

                          AREA ||area_number.24||, DATA, ALIGN=1

                          EXPORTAS ||area_number.24||, ||.data||
                  bat_ver_cnt
000000  0096              DCW      0x0096

                          AREA ||area_number.25||, DATA, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.data||
                  vent_stat
000000  00                DCB      0x00
                  bat_hndl_zvu_init
000001  00                DCB      0x00
                  bat_hndl_zvu_ke_init
000002  00                DCB      0x00
                  ke_drv_cnt_10s
000003  00                DCB      0x00
                  i_bat_buff_cnt
000004  00                DCB      0x00
                  cntrlStatIsDownCnt
000005  00                DCB      0x00
                  adc_self_ch_cnt
000006  00                DCB      0x00
                  adc_ch_net
000007  00                DCB      0x00
                  adc_ch
000008  00                DCB      0x00
                  adc_ch_cnt
000009  00                DCB      0x00
                  adc_window_flag
00000a  00                DCB      0x00
                  ch_cnt0
00000b  00                DCB      0x00
                  b1Hz_ch
00000c  00                DCB      0x00
                  i
00000d  00                DCB      0x00
                  iiii
00000e  00                DCB      0x00
                  bAVG
00000f  00                DCB      0x00
                  avg_num
000010  00                DCB      0x00
                  kb_full_ver
000011  00                DCB      0x00
                  kb_start_ips
000012  00                DCB      0x00
                  num_of_wrks_bps
000013  00                DCB      0x00
                  num_necc_up
000014  00                DCB      0x00
                  num_necc_down
000015  00                DCB      0x00
                  sh_cnt0
000016  00                DCB      0x00
                  b1Hz_sh
000017  00                DCB      0x00
                  spc_stat
000018  00                DCB      0x00
                  spc_bat
000019  00                DCB      0x00
                  spc_phase
00001a  00                DCB      0x00
                  bAVZ
00001b  00                DCB      0x00
                  ke_start_stat
00001c  00                DCB      0x00
                  numOfForvardBps
00001d  00                DCB      0x00
                  numOfForvardBps_old
00001e  00                DCB      0x00
                  numOfForvardBps_minCnt
00001f  00                DCB      0x00
                  bPARALLEL_NOT_ENOUG
000020  00                DCB      0x00
                  bPARALLEL_ENOUG
000021  00                DCB      0x00
                  bPARALLEL
000022  00                DCB      0x00
                  cntrl_hndl_plazma
000023  00                DCB      0x00
                  vz1_stat
000024  00                DCB      0x00
                  vz1_stat_old
000025  00                DCB      0x00
                  volt_region
000026  00                DCB      0x00
                  vz2_stat
000027  00                DCB      0x00
                  vz2_stat_old
000028  00                DCB      0x00
                  bat_hndl_zvu_Q_cnt
000029  00                DCB      0x00
                  cntrl_stat
00002a  0258              DCW      0x0258
                  cntrl_stat_old
00002c  0258              DCW      0x0258
                  avg_main_cnt
00002e  0014              DCW      0x0014
                  num_necc_block_cnt
000030  0000              DCB      0x00,0x00
                  net_buff_
000032  0000              DCB      0x00,0x00
                  adc_result
000034  0000              DCB      0x00,0x00
                  adc_gorb_cnt
000036  0000              DCB      0x00,0x00
                  adc_zero_cnt
000038  0000              DCB      0x00,0x00
                  adc_window_cnt
00003a  0000              DCB      0x00,0x00
                  adc_net_buff_cnt
00003c  0000              DCB      0x00,0x00
                  plazma_sk
00003e  0000              DCB      0x00,0x00
                  cntrl_stat_new
000040  0000              DCB      0x00,0x00
                  Ibmax
000042  0000              DCB      0x00,0x00
                  IZMAX_
000044  0000              DCB      0x00,0x00
                  Ubpsmax
000046  0000              DCB      0x00,0x00
                  samokalibr_cnt
000048  0000              DCB      0x00,0x00
                  main_kb_cnt
00004a  0000              DCB      0x00,0x00
                  kb_cnt_1lev
00004c  0000              DCB      0x00,0x00
                  kb_cnt_2lev
00004e  0000              DCB      0x00,0x00
                  kb_start
000050  0000              DCB      0x00,0x00
                  ibat_ips
000052  0000              DCB      0x00,0x00
                  ibat_ips_
000054  0000              DCB      0x00,0x00
                  bps_on_mask
000056  0000              DCB      0x00,0x00
                  bps_off_mask
000058  0000              DCB      0x00,0x00
                  vz_cnt_s
00005a  0000              DCB      0x00,0x00
                  vz_cnt_s_
00005c  0000              DCB      0x00,0x00
                  vz_cnt_h
00005e  0000              DCB      0x00,0x00
                  vz_cnt_h_
000060  0000              DCB      0x00,0x00
                  cnt_end_ke
000062  0000              DCB      0x00,0x00
                  __ee_vz_cnt
000064  0000              DCB      0x00,0x00
                  __ee_spc_stat
000066  0000              DCB      0x00,0x00
                  __ee_spc_bat
000068  0000              DCB      0x00,0x00
                  __ee_spc_phase
00006a  0000              DCB      0x00,0x00
                  cntrl_stat_blok_cnt
00006c  0000              DCB      0x00,0x00
                  cntrl_stat_blok_cnt_
00006e  0000              DCB      0x00,0x00
                  numOfForvardBps_hourCnt
000070  0000              DCB      0x00,0x00
                  vz1_stat_cnt
000072  0000              DCB      0x00,0x00
                  volt_region_cnt
000074  0000              DCB      0x00,0x00
                  vz2_stat_cnt
000076  0000              DCB      0x00,0x00
                  vz2_stat_ph2_cnt
000078  0000              DCB      0x00,0x00
                  plazma_ica1
00007a  0000              DCB      0x00,0x00
                  bat_hndl_i
00007c  0000              DCB      0x00,0x00
                  bat_hndl_t_razr_hour
00007e  0000              DCB      0x00,0x00
                  bat_hndl_t_razr_min
000080  0000              DCB      0x00,0x00
                  bat_hndl_t_razr_mininhour
000082  0000              DCB      0x00,0x00
                  bat_hndl_i_temp
000084  0000              DCB      0x00,0x00
                  bat_hndl_u_end
000086  0000              DCB      0x00,0x00
                  ibat
                          DCD      0x00000000
                  ibat_
                          DCD      0x00000000
                  i_avg_max
                          DCD      0x00000000
                  i_avg_min
                          DCD      0x00000000
                  i_avg_summ
                          DCD      0x00000000
                  i_avg
                          DCD      0x00000000
                  avg
                          DCD      0x00000000
                  cntrl_stat_blok_cnt_plus
                          DCD      0x00000000
                  cntrl_stat_blok_cnt_minus
                          DCD      0x00000000
                  plazma_inv
                          DCD      0x00000000
                  vz1_wrk_cnt
                          DCD      0x00000000
                  vz1_up_cnt
                          DCD      0x00000000
                  vz2_wrk_cnt
                          DCD      0x00000000
                  vz2_up_cnt
                          DCD      0x00000000
                  bat_hndl_t_razr
                          DCD      0x00000000
                  bat_hndl_t_razr_ke
                          DCD      0x00000000
                  bat_hndl_zvu_Q
                          DCD      0x00000000
                  bat_hndl_proc_razr
                          DCD      0x00000000
                  bat_hndl_remain_time
                          DCD      0x00000000
                  amper_chas_cnt_drv_summ
                          DCD      0x00000000
                  net_metr_buff_
                          DCD      0x00000000
0000dc  0000              DCB      0x00,0x00
                  adc_self_ch_buff
0000de  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  adc_self_ch_disp
                          DCD      0x00000000
0000e8  00000000          DCB      0x00,0x00,0x00,0x00
                  ke_date
                          %        8

                          AREA ||area_number.26||, DATA, ALIGN=0

                          EXPORTAS ||area_number.26||, ||.data||
                  rx_read_power_cnt_phase
000000  0f                DCB      0x0f

                          AREA ||area_number.27||, DATA, ALIGN=1

                          EXPORTAS ||area_number.27||, ||.data||
                  read_power_cnt_main_cnt
000000  0064              DCW      0x0064

                          AREA ||area_number.28||, DATA, ALIGN=0

                          EXPORTAS ||area_number.28||, ||.data||
                  rx_read_power_cnt_plazma
000000  00                DCB      0x00

                          AREA ||area_number.29||, DATA, ALIGN=0

                          EXPORTAS ||area_number.29||, ||.data||
                  rx_read_power_cnt_flag
000000  00                DCB      0x00

                          AREA ||area_number.30||, DATA, ALIGN=0

                          EXPORTAS ||area_number.30||, ||.data||
                  bENERGOMETR_UIP
000000  00                DCB      0x00

                          AREA ||area_number.31||, DATA, ALIGN=1

                          EXPORTAS ||area_number.31||, ||.data||
                  unet_buff_max
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.32||, DATA, ALIGN=0

                          EXPORTAS ||area_number.32||, ||.data||
                  adc_cnt
000000  00                DCB      0x00

                          AREA ||area_number.33||, DATA, ALIGN=0

                          EXPORTAS ||area_number.33||, ||.data||
                  adc_cnt1
000000  00                DCB      0x00

                          AREA ||area_number.34||, DATA, ALIGN=1

                          EXPORTAS ||area_number.34||, ||.data||
                  zero_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.35||, DATA, ALIGN=0

                          EXPORTAS ||area_number.35||, ||.data||
                  net_buff_cnt
000000  00                DCB      0x00

                          AREA ||area_number.36||, DATA, ALIGN=1

                          EXPORTAS ||area_number.36||, ||.data||
                  ADWR
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.37||, DATA, ALIGN=1

                          EXPORTAS ||area_number.37||, ||.data||
                  period_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.38||, DATA, ALIGN=1

                          EXPORTAS ||area_number.38||, ||.data||
                  non_zero_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.39||, DATA, ALIGN=0

                          EXPORTAS ||area_number.39||, ||.data||
                  rele_stat
000000  00                DCB      0x00

                          AREA ||area_number.40||, DATA, ALIGN=0

                          EXPORTAS ||area_number.40||, ||.data||
                  bRELE_OUT
000000  00                DCB      0x00

                          AREA ||area_number.41||, DATA, ALIGN=2

                          EXPORTAS ||area_number.41||, ||.data||
                  main_power_buffer_
                          DCD      0x00000000

                          AREA ||area_number.42||, DATA, ALIGN=1

                          EXPORTAS ||area_number.42||, ||.data||
                  main_power_buffer_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.43||, DATA, ALIGN=1

                          EXPORTAS ||area_number.43||, ||.data||
                  adc_buff_out_
                          DCDU     0x00000000
000004  0000              DCB      0x00,0x00

                          AREA ||area_number.44||, DATA, ALIGN=1

                          EXPORTAS ||area_number.44||, ||.data||
                  plazma_adc_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.45||, DATA, ALIGN=0

                          EXPORTAS ||area_number.45||, ||.data||
                  unh_cnt0
000000  00                DCB      0x00

                          AREA ||area_number.46||, DATA, ALIGN=0

                          EXPORTAS ||area_number.46||, ||.data||
                  unh_cnt1
000000  00                DCB      0x00

                          AREA ||area_number.47||, DATA, ALIGN=0

                          EXPORTAS ||area_number.47||, ||.data||
                  b1Hz_unh
000000  00                DCB      0x00

                          AREA ||area_number.48||, DATA, ALIGN=0

                          EXPORTAS ||area_number.48||, ||.data||
                  ch_cnt1
000000  00                DCB      0x00

                          AREA ||area_number.49||, DATA, ALIGN=0

                          EXPORTAS ||area_number.49||, ||.data||
                  b1_30Hz_ch
000000  00                DCB      0x00

                          AREA ||area_number.50||, DATA, ALIGN=0

                          EXPORTAS ||area_number.50||, ||.data||
                  ch_cnt2
000000  00                DCB      0x00

                          AREA ||area_number.51||, DATA, ALIGN=0

                          EXPORTAS ||area_number.51||, ||.data||
                  b1_10Hz_ch
000000  00                DCB      0x00

                          AREA ||area_number.52||, DATA, ALIGN=1

                          EXPORTAS ||area_number.52||, ||.data||
                  IZMAX_70
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.53||, DATA, ALIGN=1

                          EXPORTAS ||area_number.53||, ||.data||
                  IZMAX_130
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.54||, DATA, ALIGN=1

                          EXPORTAS ||area_number.54||, ||.data||
                  cntrl_stat_blck_cnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.55||, DATA, ALIGN=0

                          EXPORTAS ||area_number.55||, ||.data||
                  avg_cnt
000000  00                DCB      0x00

                          AREA ||area_number.56||, DATA, ALIGN=0

                          EXPORTAS ||area_number.56||, ||.data||
                  bps_all_off_cnt
000000  00                DCB      0x00

                          AREA ||area_number.57||, DATA, ALIGN=0

                          EXPORTAS ||area_number.57||, ||.data||
                  bps_mask_off_cnt
000000  00                DCB      0x00

                          AREA ||area_number.58||, DATA, ALIGN=0

                          EXPORTAS ||area_number.58||, ||.data||
                  bps_mask_on_off_cnt
000000  00                DCB      0x00

                          AREA ||area_number.59||, DATA, ALIGN=0

                          EXPORTAS ||area_number.59||, ||.data||
                  bps_hndl_2sec_cnt
000000  00                DCB      0x00

                          AREA ||area_number.60||, DATA, ALIGN=0

                          EXPORTAS ||area_number.60||, ||.data||
                  plazma_bat
000000  00                DCB      0x00

                          AREA ||area_number.61||, DATA, ALIGN=0

                          EXPORTAS ||area_number.61||, ||.data||
                  plazma_cntrl_stat
000000  00                DCB      0x00

                          AREA ||area_number.62||, DATA, ALIGN=1

                          EXPORTAS ||area_number.62||, ||.data||
                  ce102m_delayCnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.63||, DATA, ALIGN=1

                          EXPORTAS ||area_number.63||, ||.data||
                  volta_short
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.64||, DATA, ALIGN=1

                          EXPORTAS ||area_number.64||, ||.data||
                  curr_short
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.65||, DATA, ALIGN=2

                          EXPORTAS ||area_number.65||, ||.data||
                  power_int
                          DCD      0x00000000

                          AREA ||area_number.66||, DATA, ALIGN=1

                          EXPORTAS ||area_number.66||, ||.data||
                  plazma_ica2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.67||, DATA, ALIGN=0

                          EXPORTAS ||area_number.67||, ||.data||
                  rele_hndl_plazma
000000  000000            DCB      0x00,0x00,0x00
