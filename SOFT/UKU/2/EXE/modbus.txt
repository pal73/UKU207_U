; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\EXE\modbus.o --depend=.\EXE\modbus.d --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DAPSENERGIA --omf_browse=.\EXE\modbus.crf modbus.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC16_2 PROC
;;;233    //-----------------------------------------------
;;;234    unsigned short CRC16_2(char* buf, short len)
000000  b570              PUSH     {r4-r6,lr}
;;;235    {
000002  4605              MOV      r5,r0
;;;236    unsigned short crc = 0xFFFF;
000004  f64f70ff          MOV      r0,#0xffff
;;;237    short pos;
;;;238    short i;
;;;239    
;;;240    for (pos = 0; pos < len; pos++)
000008  2300              MOVS     r3,#0
;;;241      	{
;;;242        	crc ^= (unsigned short)buf[pos];          // XOR byte into least sig. byte of crc
;;;243    
;;;244        	for ( i = 8; i != 0; i--) 
;;;245    		{    // Loop over each bit
;;;246          	if ((crc & 0x0001) != 0) 
;;;247    			{      // If the LSB is set
;;;248            		crc >>= 1;                    // Shift right and XOR 0xA001
;;;249            		crc ^= 0xA001;
00000a  f24a0401          MOV      r4,#0xa001
00000e  e00e              B        |L1.46|
                  |L1.16|
000010  5cea              LDRB     r2,[r5,r3]            ;242
000012  4050              EORS     r0,r0,r2              ;242
000014  2208              MOVS     r2,#8                 ;244
                  |L1.22|
000016  07c6              LSLS     r6,r0,#31             ;246
000018  d002              BEQ      |L1.32|
00001a  0840              LSRS     r0,r0,#1              ;248
00001c  4060              EORS     r0,r0,r4
00001e  e000              B        |L1.34|
                  |L1.32|
;;;250          		}
;;;251          	else  crc >>= 1;                    // Just shift right
000020  0840              LSRS     r0,r0,#1
                  |L1.34|
000022  1e52              SUBS     r2,r2,#1              ;244
000024  b212              SXTH     r2,r2                 ;244
000026  2a00              CMP      r2,#0                 ;244
000028  d1f5              BNE      |L1.22|
00002a  1c5b              ADDS     r3,r3,#1              ;240
00002c  b21b              SXTH     r3,r3                 ;240
                  |L1.46|
00002e  428b              CMP      r3,r1                 ;240
000030  dbee              BLT      |L1.16|
;;;252        		}
;;;253      	}
;;;254      // Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
;;;255    return crc;
;;;256    }
000032  bd70              POP      {r4-r6,pc}
;;;257    
                          ENDP

                  modbus_hold_registers_transmit PROC
;;;1058   //-----------------------------------------------
;;;1059   void modbus_hold_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
000034  b5f0              PUSH     {r4-r7,lr}
;;;1060   {
000036  b0a7              SUB      sp,sp,#0x9c
000038  461d              MOV      r5,r3
00003a  9b2c              LDR      r3,[sp,#0xb0]
00003c  4604              MOV      r4,r0
00003e  460f              MOV      r7,r1
;;;1061   signed char modbus_registers[150];
;;;1062   //char modbus_tx_buff[150];
;;;1063   unsigned short crc_temp;
;;;1064   char i;
;;;1065   
;;;1066   modbus_registers[20]=(char)((LPC_RTC->YEAR)>>8);			//Рег11  Время, год
000040  48ff              LDR      r0,|L1.1088|
000042  8b81              LDRH     r1,[r0,#0x1c]
000044  ea4f2111          LSR      r1,r1,#8
000048  f88d1018          STRB     r1,[sp,#0x18]
;;;1067   modbus_registers[21]=(char)((LPC_RTC->YEAR));
00004c  8b81              LDRH     r1,[r0,#0x1c]
00004e  f88d1019          STRB     r1,[sp,#0x19]
;;;1068   modbus_registers[22]=(char)((LPC_RTC->MONTH)>>8);		//Рег12  Время, месяц
000052  7e01              LDRB     r1,[r0,#0x18]
000054  f04f0100          MOV      r1,#0
000058  f88d101a          STRB     r1,[sp,#0x1a]
;;;1069   modbus_registers[23]=(char)((LPC_RTC->MONTH));
00005c  7e06              LDRB     r6,[r0,#0x18]
00005e  f88d601b          STRB     r6,[sp,#0x1b]
;;;1070   modbus_registers[24]=(char)((LPC_RTC->DOM)>>8);			//Рег13  Время, день месяца
000062  7b06              LDRB     r6,[r0,#0xc]
000064  f88d101c          STRB     r1,[sp,#0x1c]
;;;1071   modbus_registers[25]=(char)((LPC_RTC->DOM));
000068  7b06              LDRB     r6,[r0,#0xc]
00006a  f88d601d          STRB     r6,[sp,#0x1d]
;;;1072   modbus_registers[26]=(char)((LPC_RTC->HOUR)>>8);			//Рег14  Время, час
00006e  7a06              LDRB     r6,[r0,#8]
000070  f88d101e          STRB     r1,[sp,#0x1e]
;;;1073   modbus_registers[27]=(char)((LPC_RTC->HOUR));
000074  7a06              LDRB     r6,[r0,#8]
000076  f88d601f          STRB     r6,[sp,#0x1f]
;;;1074   modbus_registers[28]=(char)((LPC_RTC->MIN)>>8);			//Рег15  Время, минуты
00007a  7906              LDRB     r6,[r0,#4]
00007c  f88d1020          STRB     r1,[sp,#0x20]
;;;1075   modbus_registers[29]=(char)((LPC_RTC->MIN));
000080  7906              LDRB     r6,[r0,#4]
000082  f88d6021          STRB     r6,[sp,#0x21]
;;;1076   modbus_registers[30]=(char)((LPC_RTC->SEC)>>8);			//Рег16  Время, секунды
000086  7806              LDRB     r6,[r0,#0]
000088  f88d1022          STRB     r1,[sp,#0x22]
;;;1077   modbus_registers[31]=(char)((LPC_RTC->SEC));
00008c  7800              LDRB     r0,[r0,#0]
00008e  f88d0023          STRB     r0,[sp,#0x23]
;;;1078   modbus_registers[38]=(char)(NUMIST>>8);				//Рег20  Количество выпрямителей в структуре
000092  48ec              LDR      r0,|L1.1092|
000094  8800              LDRH     r0,[r0,#0]  ; NUMIST
000096  ea4f2120          ASR      r1,r0,#8
00009a  f88d102a          STRB     r1,[sp,#0x2a]
;;;1079   modbus_registers[39]=(char)(NUMIST);
00009e  f88d002b          STRB     r0,[sp,#0x2b]
;;;1080   modbus_registers[40]=(char)(PAR>>8);					//Рег21  Параллельная работа выпрямителей вкл./выкл.
0000a2  48e9              LDR      r0,|L1.1096|
0000a4  8800              LDRH     r0,[r0,#0]  ; PAR
0000a6  ea4f2120          ASR      r1,r0,#8
0000aa  f88d102c          STRB     r1,[sp,#0x2c]
;;;1081   modbus_registers[41]=(char)(PAR);
0000ae  f88d002d          STRB     r0,[sp,#0x2d]
;;;1082   modbus_registers[42]=(char)(ZV_ON>>8);					//Рег22  Звуковая аварийная сигнализация вкл./выкл.
0000b2  48e6              LDR      r0,|L1.1100|
0000b4  8800              LDRH     r0,[r0,#0]  ; ZV_ON
0000b6  ea4f2120          ASR      r1,r0,#8
0000ba  f88d102e          STRB     r1,[sp,#0x2e]
;;;1083   modbus_registers[43]=(char)(ZV_ON);
0000be  f88d002f          STRB     r0,[sp,#0x2f]
;;;1084   modbus_registers[46]=(char)(UBM_AV>>8);				//Рег24  Аварийный уровень отклонения напряжения средней точки батареи, %
0000c2  48e3              LDR      r0,|L1.1104|
0000c4  8800              LDRH     r0,[r0,#0]  ; UBM_AV
0000c6  ea4f2120          ASR      r1,r0,#8
0000ca  f88d1032          STRB     r1,[sp,#0x32]
;;;1085   modbus_registers[47]=(char)(UBM_AV);
0000ce  f88d0033          STRB     r0,[sp,#0x33]
;;;1086   modbus_registers[58]=(char)(TBAT>>8);					//Рег30  Период проверки цепи батареи, минут.
0000d2  48e0              LDR      r0,|L1.1108|
0000d4  8800              LDRH     r0,[r0,#0]  ; TBAT
0000d6  ea4f2120          ASR      r1,r0,#8
0000da  f88d103e          STRB     r1,[sp,#0x3e]
;;;1087   modbus_registers[59]=(char)(TBAT);
0000de  f88d003f          STRB     r0,[sp,#0x3f]
;;;1088   modbus_registers[60]=(char)(UMAX>>8);					//Рег31  Максимальное (аварийное) напряжение выпрямителей, 0.1В
0000e2  48dd              LDR      r0,|L1.1112|
0000e4  8800              LDRH     r0,[r0,#0]  ; UMAX
0000e6  ea4f2120          ASR      r1,r0,#8
0000ea  f88d1040          STRB     r1,[sp,#0x40]
;;;1089   modbus_registers[61]=(char)(UMAX);
0000ee  f88d0041          STRB     r0,[sp,#0x41]
;;;1090   modbus_registers[62]=(char)((UB20-DU)>>8);				//Рег32  Минимальное (аварийное) напряжение выпрямителей, 0.1В
0000f2  48da              LDR      r0,|L1.1116|
0000f4  49da              LDR      r1,|L1.1120|
0000f6  8800              LDRH     r0,[r0,#0]  ; UB20
0000f8  8809              LDRH     r1,[r1,#0]  ; DU
0000fa  eba00101          SUB      r1,r0,r1
0000fe  ea4f2621          ASR      r6,r1,#8
000102  f88d6042          STRB     r6,[sp,#0x42]
;;;1091   modbus_registers[63]=(char)((UB20-DU));
000106  f88d1043          STRB     r1,[sp,#0x43]
;;;1092   modbus_registers[64]=(char)(UB0>>8);					//Рег33  Напряжение содержания батареи при 0гЦ, 0.1В
00010a  49d6              LDR      r1,|L1.1124|
00010c  8809              LDRH     r1,[r1,#0]  ; UB0
00010e  ea4f2621          ASR      r6,r1,#8
000112  f88d6044          STRB     r6,[sp,#0x44]
;;;1093   modbus_registers[65]=(char)(UB0);
000116  f88d1045          STRB     r1,[sp,#0x45]
;;;1094   modbus_registers[66]=(char)(UB20>>8);					//Рег34  Напряжение содержания батареи при 20гЦ, 0.1В
00011a  ea4f2120          ASR      r1,r0,#8
00011e  f88d1046          STRB     r1,[sp,#0x46]
;;;1095   modbus_registers[67]=(char)(UB20);
000122  f88d0047          STRB     r0,[sp,#0x47]
;;;1096   modbus_registers[68]=(char)(USIGN>>8);					//Рег35  Минимальное (сигнальное) напряжение батареи, 1В
000126  48d0              LDR      r0,|L1.1128|
000128  8800              LDRH     r0,[r0,#0]  ; USIGN
00012a  ea4f2120          ASR      r1,r0,#8
00012e  f88d1048          STRB     r1,[sp,#0x48]
;;;1097   modbus_registers[69]=(char)(USIGN);
000132  f88d0049          STRB     r0,[sp,#0x49]
;;;1098   modbus_registers[70]=(char)(UMN>>8);					//Рег36  Минимальное (аварийное) напряжение питающей сети, 1В
000136  48cd              LDR      r0,|L1.1132|
000138  8800              LDRH     r0,[r0,#0]  ; UMN
00013a  ea4f2120          ASR      r1,r0,#8
00013e  f88d104a          STRB     r1,[sp,#0x4a]
;;;1099   modbus_registers[71]=(char)(UMN);
000142  f88d004b          STRB     r0,[sp,#0x4b]
;;;1100   modbus_registers[72]=(char)(U0B>>8);					//Рег37  Рабочее напряжение при невведенных батареях, 0.1В
000146  48ca              LDR      r0,|L1.1136|
000148  8800              LDRH     r0,[r0,#0]  ; U0B
00014a  ea4f2120          ASR      r1,r0,#8
00014e  f88d104c          STRB     r1,[sp,#0x4c]
;;;1101   modbus_registers[73]=(char)(U0B);
000152  f88d004d          STRB     r0,[sp,#0x4d]
;;;1102   modbus_registers[74]=(char)(IKB>>8);					//Рег38  Ток контроля наличия батареи, 0.1а
000156  48c7              LDR      r0,|L1.1140|
000158  8800              LDRH     r0,[r0,#0]  ; IKB
00015a  ea4f2120          ASR      r1,r0,#8
00015e  f88d104e          STRB     r1,[sp,#0x4e]
;;;1103   modbus_registers[75]=(char)(IKB);
000162  f88d004f          STRB     r0,[sp,#0x4f]
;;;1104   modbus_registers[76]=(char)(IZMAX>>8);					//Рег39  Ток заряда батареи максимальный, 0.1А
000166  48c4              LDR      r0,|L1.1144|
000168  8800              LDRH     r0,[r0,#0]  ; IZMAX
00016a  ea4f2120          ASR      r1,r0,#8
00016e  f88d1050          STRB     r1,[sp,#0x50]
;;;1105   modbus_registers[77]=(char)(IZMAX);
000172  f88d0051          STRB     r0,[sp,#0x51]
;;;1106   modbus_registers[78]=(char)(IMAX>>8);					//Рег40  Ток переключения на большее кол-во выпрямителей, 0.1А
000176  48c1              LDR      r0,|L1.1148|
000178  8800              LDRH     r0,[r0,#0]  ; IMAX
00017a  ea4f2120          ASR      r1,r0,#8
00017e  f88d1052          STRB     r1,[sp,#0x52]
;;;1107   modbus_registers[79]=(char)(IMAX);
000182  f88d0053          STRB     r0,[sp,#0x53]
;;;1108   modbus_registers[80]=(char)(IMIN>>8);					//Рег41  Ток переключения на меньшее кол-во выпрямителей, 0.1А
000186  48be              LDR      r0,|L1.1152|
000188  8800              LDRH     r0,[r0,#0]  ; IMIN
00018a  ea4f2120          ASR      r1,r0,#8
00018e  f88d1054          STRB     r1,[sp,#0x54]
;;;1109   modbus_registers[81]=(char)(IMIN);
000192  f88d0055          STRB     r0,[sp,#0x55]
;;;1110   modbus_registers[82]=(char)(UVZ>>8);					//Рег42  Напряжение выравнивающего заряда, 0.1В
000196  48bb              LDR      r0,|L1.1156|
000198  8800              LDRH     r0,[r0,#0]  ; UVZ
00019a  ea4f2120          ASR      r1,r0,#8
00019e  f88d1056          STRB     r1,[sp,#0x56]
;;;1111   modbus_registers[83]=(char)(UVZ);
0001a2  f88d0057          STRB     r0,[sp,#0x57]
;;;1112   modbus_registers[84]=(char)(TZAS>>8);					//Рег43  Время задержки включения выпрямителей, сек
0001a6  48b8              LDR      r0,|L1.1160|
0001a8  8800              LDRH     r0,[r0,#0]  ; TZAS
0001aa  ea4f2120          ASR      r1,r0,#8
0001ae  f88d1058          STRB     r1,[sp,#0x58]
;;;1113   modbus_registers[85]=(char)(TZAS);
0001b2  f88d0059          STRB     r0,[sp,#0x59]
;;;1114   modbus_registers[86]=(char)(TMAX>>8);					//Рег44  Температура выпрямителей аварийная, 1гЦ
0001b6  48b5              LDR      r0,|L1.1164|
0001b8  8800              LDRH     r0,[r0,#0]  ; TMAX
0001ba  ea4f2120          ASR      r1,r0,#8
0001be  f88d105a          STRB     r1,[sp,#0x5a]
;;;1115   modbus_registers[87]=(char)(TMAX);
0001c2  f88d005b          STRB     r0,[sp,#0x5b]
;;;1116   modbus_registers[88]=(char)(TSIGN>>8);					//Рег45  Температура выпрямителей сигнальная, 1гЦ
0001c6  48b2              LDR      r0,|L1.1168|
0001c8  8800              LDRH     r0,[r0,#0]  ; TSIGN
0001ca  ea4f2120          ASR      r1,r0,#8
0001ce  f88d105c          STRB     r1,[sp,#0x5c]
;;;1117   modbus_registers[89]=(char)(TSIGN);
0001d2  f88d005d          STRB     r0,[sp,#0x5d]
;;;1118   modbus_registers[90]=(char)(TBATMAX>>8);				//Рег46  Температура батареи аварийная, 1гЦ
0001d6  48af              LDR      r0,|L1.1172|
0001d8  8800              LDRH     r0,[r0,#0]  ; TBATMAX
0001da  ea4f2120          ASR      r1,r0,#8
0001de  f88d105e          STRB     r1,[sp,#0x5e]
;;;1119   modbus_registers[91]=(char)(TBATMAX);
0001e2  f88d005f          STRB     r0,[sp,#0x5f]
;;;1120   modbus_registers[92]=(char)(TBATSIGN>>8);				//Рег47  Температура батареи сигнальная, 1гЦ
0001e6  48ac              LDR      r0,|L1.1176|
0001e8  8800              LDRH     r0,[r0,#0]  ; TBATSIGN
0001ea  ea4f2120          ASR      r1,r0,#8
0001ee  f88d1060          STRB     r1,[sp,#0x60]
;;;1121   modbus_registers[93]=(char)(TBATSIGN);
0001f2  f88d0061          STRB     r0,[sp,#0x61]
;;;1122   modbus_registers[94]=(char)(speedChrgCurr>>8);					//Рег48  Ток ускоренного заряда, 0.1А
0001f6  48a9              LDR      r0,|L1.1180|
0001f8  8800              LDRH     r0,[r0,#0]  ; speedChrgCurr
0001fa  ea4f2120          ASR      r1,r0,#8
0001fe  f88d1062          STRB     r1,[sp,#0x62]
;;;1123   modbus_registers[95]=(char)(speedChrgCurr);
000202  f88d0063          STRB     r0,[sp,#0x63]
;;;1124   modbus_registers[96]=(char)(speedChrgVolt>>8);				//Рег49	 Напряжение ускоренного заряда, 0.1В 
000206  48a6              LDR      r0,|L1.1184|
000208  8800              LDRH     r0,[r0,#0]  ; speedChrgVolt
00020a  ea4f2120          ASR      r1,r0,#8
00020e  f88d1064          STRB     r1,[sp,#0x64]
;;;1125   modbus_registers[97]=(char)(speedChrgVolt);
000212  f88d0065          STRB     r0,[sp,#0x65]
;;;1126   modbus_registers[98]=(char)(speedChrgTimeInHour>>8);				//Рег50	 Время ускоренного заряда, 1ч
000216  48a3              LDR      r0,|L1.1188|
000218  8800              LDRH     r0,[r0,#0]  ; speedChrgTimeInHour
00021a  ea4f2120          ASR      r1,r0,#8
00021e  f88d1066          STRB     r1,[sp,#0x66]
;;;1127   modbus_registers[99]=(char)(speedChrgTimeInHour);
000222  f88d0067          STRB     r0,[sp,#0x67]
;;;1128   modbus_registers[100]=(char)(U_OUT_KONTR_MAX>>8);					//Рег51	 Контроль выходного напряжения, Umax, 0.1В
000226  48a0              LDR      r0,|L1.1192|
000228  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MAX
00022a  ea4f2120          ASR      r1,r0,#8
00022e  f88d1068          STRB     r1,[sp,#0x68]
;;;1129   modbus_registers[101]=(char)(U_OUT_KONTR_MAX);
000232  f88d0069          STRB     r0,[sp,#0x69]
;;;1130   modbus_registers[102]=(char)(U_OUT_KONTR_MIN>>8);					//Рег52	 Контроль выходного напряжения, Umin, 0.1В
000236  489d              LDR      r0,|L1.1196|
000238  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MIN
00023a  ea4f2120          ASR      r1,r0,#8
00023e  f88d106a          STRB     r1,[sp,#0x6a]
;;;1131   modbus_registers[103]=(char)(U_OUT_KONTR_MIN);
000242  f88d006b          STRB     r0,[sp,#0x6b]
;;;1132   modbus_registers[104]=(char)(U_OUT_KONTR_DELAY>>8);				//Рег53	 Контроль выходного напряжения, Tзадержки, 1сек.
000246  489a              LDR      r0,|L1.1200|
000248  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_DELAY
00024a  ea4f2120          ASR      r1,r0,#8
00024e  f88d106c          STRB     r1,[sp,#0x6c]
;;;1133   modbus_registers[105]=(char)(U_OUT_KONTR_DELAY);
000252  f88d006d          STRB     r0,[sp,#0x6d]
;;;1134   
;;;1135   
;;;1136   
;;;1137   
;;;1138   if(prot==MODBUS_RTU_PROT)
;;;1139   	{
;;;1140   	modbus_tx_buff[0]=adr;
;;;1141   	modbus_tx_buff[1]=func;
;;;1142   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1143   	mem_copy((char*)&modbus_tx_buff[3],(char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000256  f1a20201          SUB      r2,r2,#1
00025a  a801              ADD      r0,sp,#4              ;1061
00025c  eb000142          ADD      r1,r0,r2,LSL #1
000260  b12b              CBZ      r3,|L1.622|
;;;1144   	
;;;1145   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1146   
;;;1147   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1148   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1149   
;;;1150   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1151   		{
;;;1152   		putchar0(modbus_tx_buff[i]);
;;;1153   		}
;;;1154   
;;;1155   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1156   		{
;;;1157   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1158   		}
;;;1159   	}
;;;1160   else if(prot==MODBUS_TCP_PROT)
000262  2b01              CMP      r3,#1
000264  d101              BNE      |L1.618|
;;;1161   	{
;;;1162   	modbus_tcp_out_ptr=(char*)&modbus_registers[(reg_adr-1)*2];
000266  4893              LDR      r0,|L1.1204|
000268  6001              STR      r1,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.618|
;;;1163   	}
;;;1164   }
00026a  b027              ADD      sp,sp,#0x9c
00026c  bdf0              POP      {r4-r7,pc}
                  |L1.622|
00026e  4e92              LDR      r6,|L1.1208|
000270  7034              STRB     r4,[r6,#0]            ;1140
000272  7077              STRB     r7,[r6,#1]            ;1141
000274  006a              LSLS     r2,r5,#1              ;1142
000276  70b2              STRB     r2,[r6,#2]            ;1142
000278  1cf0              ADDS     r0,r6,#3              ;1143
00027a  f7fffffe          BL       mem_copy
00027e  2003              MOVS     r0,#3                 ;1145
000280  eb000045          ADD      r0,r0,r5,LSL #1       ;1145
000284  b201              SXTH     r1,r0                 ;1145
000286  4630              MOV      r0,r6                 ;1145
000288  f7fffffe          BL       CRC16_2
00028c  eb060145          ADD      r1,r6,r5,LSL #1       ;1147
000290  70c8              STRB     r0,[r1,#3]            ;1147
000292  0a00              LSRS     r0,r0,#8              ;1148
000294  7108              STRB     r0,[r1,#4]            ;1148
000296  2400              MOVS     r4,#0                 ;1150
000298  2005              MOVS     r0,#5                 ;1150
00029a  eb000545          ADD      r5,r0,r5,LSL #1       ;1150
00029e  e004              B        |L1.682|
                  |L1.672|
0002a0  5d30              LDRB     r0,[r6,r4]            ;1152
0002a2  f7fffffe          BL       putchar0
0002a6  1c64              ADDS     r4,r4,#1              ;1150
0002a8  b2e4              UXTB     r4,r4                 ;1150
                  |L1.682|
0002aa  42a5              CMP      r5,r4                 ;1150
0002ac  d8f8              BHI      |L1.672|
0002ae  2400              MOVS     r4,#0                 ;1155
0002b0  e004              B        |L1.700|
                  |L1.690|
0002b2  5d30              LDRB     r0,[r6,r4]            ;1157
0002b4  f7fffffe          BL       putchar_sc16is700
0002b8  1c64              ADDS     r4,r4,#1              ;1155
0002ba  b2e4              UXTB     r4,r4                 ;1155
                  |L1.700|
0002bc  42a5              CMP      r5,r4                 ;1155
0002be  d8f8              BHI      |L1.690|
0002c0  e7d3              B        |L1.618|
;;;1165   
                          ENDP

                  modbus_input_registers_transmit PROC
;;;1166   //-----------------------------------------------
;;;1167   void modbus_input_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
0002c2  e92d41f0          PUSH     {r4-r8,lr}
;;;1168   {
0002c6  b0fe              SUB      sp,sp,#0x1f8
0002c8  461d              MOV      r5,r3
0002ca  9e84              LDR      r6,[sp,#0x210]
;;;1169   signed char modbus_registers[500];
;;;1170   //char modbus_tx_buff[200];
;;;1171   unsigned short crc_temp;
;;;1172   char i;
;;;1173   short tempS;
;;;1174   
;;;1175   //tempS=(MODBUS_INPUT_REGS[0]);
;;;1176   
;;;1177   modbus_registers[0]=(signed char)(out_U>>8);					//Рег1   	напряжение выходной шины, 0.1В
0002cc  4b7b              LDR      r3,|L1.1212|
0002ce  881b              LDRH     r3,[r3,#0]  ; out_U
0002d0  121c              ASRS     r4,r3,#8
0002d2  f88d4004          STRB     r4,[sp,#4]
;;;1178   modbus_registers[1]=(signed char)(out_U);
0002d6  f88d3005          STRB     r3,[sp,#5]
;;;1179   modbus_registers[2]=(signed char)(bps_I>>8);					//Рег2   	ток выпрямителей, 0.1А
0002da  4b79              LDR      r3,|L1.1216|
0002dc  881b              LDRH     r3,[r3,#0]  ; bps_I
0002de  121c              ASRS     r4,r3,#8
0002e0  f88d4006          STRB     r4,[sp,#6]
;;;1180   modbus_registers[3]=(signed char)(bps_I);
0002e4  f88d3007          STRB     r3,[sp,#7]
;;;1181   modbus_registers[4]=(signed char)(net_U>>8);					//Рег3   	напряжение сети питания, 1В
0002e8  4b76              LDR      r3,|L1.1220|
0002ea  881b              LDRH     r3,[r3,#0]  ; net_U
0002ec  121c              ASRS     r4,r3,#8
0002ee  f88d4008          STRB     r4,[sp,#8]
;;;1182   modbus_registers[5]=(signed char)(net_U);
0002f2  f88d3009          STRB     r3,[sp,#9]
;;;1183   modbus_registers[6]=(signed char)(net_F>>8);					//Рег4   	частота сети питания, 0.1Гц
0002f6  4b74              LDR      r3,|L1.1224|
0002f8  881b              LDRH     r3,[r3,#0]  ; net_F
0002fa  121c              ASRS     r4,r3,#8
0002fc  f88d400a          STRB     r4,[sp,#0xa]
;;;1184   modbus_registers[7]=(signed char)(net_F);
000300  f88d300b          STRB     r3,[sp,#0xb]
;;;1185   modbus_registers[8]=(signed char)(net_Ua>>8);					//Рег5	напряжение сети питания фаза A, 1В	
000304  4b71              LDR      r3,|L1.1228|
000306  881b              LDRH     r3,[r3,#0]  ; net_Ua
000308  121c              ASRS     r4,r3,#8
00030a  f88d400c          STRB     r4,[sp,#0xc]
;;;1186   modbus_registers[9]=(signed char)(net_Ua);		 	
00030e  f88d300d          STRB     r3,[sp,#0xd]
;;;1187   modbus_registers[10]=(signed char)(net_Ub>>8);				//Рег6	напряжение сети питания фаза B, 1В
000312  4b6f              LDR      r3,|L1.1232|
000314  881b              LDRH     r3,[r3,#0]  ; net_Ub
000316  121c              ASRS     r4,r3,#8
000318  f88d400e          STRB     r4,[sp,#0xe]
;;;1188   modbus_registers[11]=(signed char)(net_Ub);
00031c  f88d300f          STRB     r3,[sp,#0xf]
;;;1189   modbus_registers[12]=(signed char)(net_Uc>>8);				//Рег7	напряжение сети питания фаза C, 1В
000320  4b6c              LDR      r3,|L1.1236|
000322  881b              LDRH     r3,[r3,#0]  ; net_Uc
000324  121c              ASRS     r4,r3,#8
000326  f88d4010          STRB     r4,[sp,#0x10]
;;;1190   modbus_registers[13]=(signed char)(net_Uc);
00032a  f88d3011          STRB     r3,[sp,#0x11]
;;;1191   modbus_registers[14]=(signed char)(bat[0]._Ub>>8);				//Рег8	напряжение батареи №1, 0.1В
00032e  4c6a              LDR      r4,|L1.1240|
000330  8863              LDRH     r3,[r4,#2]  ; bat
000332  121f              ASRS     r7,r3,#8
000334  f88d7012          STRB     r7,[sp,#0x12]
;;;1192   modbus_registers[15]=(signed char)(bat[0]._Ub);
000338  f88d3013          STRB     r3,[sp,#0x13]
;;;1193   modbus_registers[16]=(signed char)(bat[0]._Ib>>8);				//Рег9   	ток батареи №1, 0.01А
00033c  8923              LDRH     r3,[r4,#8]  ; bat
00033e  121f              ASRS     r7,r3,#8
000340  f88d7014          STRB     r7,[sp,#0x14]
;;;1194   modbus_registers[17]=(signed char)(bat[0]._Ib);
000344  f88d3015          STRB     r3,[sp,#0x15]
;;;1195   modbus_registers[18]=(signed char)(bat[0]._Tb>>8);				//Рег10	температура батареи №1, 1Гц
000348  8963              LDRH     r3,[r4,#0xa]  ; bat
00034a  121f              ASRS     r7,r3,#8
00034c  f88d7016          STRB     r7,[sp,#0x16]
;;;1196   modbus_registers[19]=(signed char)(bat[0]._Tb);
000350  f88d3017          STRB     r3,[sp,#0x17]
;;;1197   modbus_registers[20]=(signed char)(bat[0]._zar>>8);			//Рег11	заряд батареи №1, %
000354  8a23              LDRH     r3,[r4,#0x10]  ; bat
000356  0a1f              LSRS     r7,r3,#8
000358  f88d7018          STRB     r7,[sp,#0x18]
;;;1198   modbus_registers[21]=(signed char)(bat[0]._zar);
00035c  f88d3019          STRB     r3,[sp,#0x19]
;;;1199   modbus_registers[22]=(signed char)(bat[0]._Ubm>>8);			//Рег12	напряжение средней точки батареи №1, 0.1В
000360  88a3              LDRH     r3,[r4,#4]  ; bat
000362  121f              ASRS     r7,r3,#8
000364  f88d701a          STRB     r7,[sp,#0x1a]
;;;1200   modbus_registers[23]=(signed char)(bat[0]._Ubm);
000368  f88d301b          STRB     r3,[sp,#0x1b]
;;;1201   modbus_registers[24]=(signed char)(bat[0]._dUbm>>8);			//Рег13	ошибка средней точки батареи №1, %
00036c  88e3              LDRH     r3,[r4,#6]  ; bat
00036e  121f              ASRS     r7,r3,#8
000370  f88d701c          STRB     r7,[sp,#0x1c]
;;;1202   modbus_registers[25]=(signed char)(bat[0]._dUbm);
000374  f88d301d          STRB     r3,[sp,#0x1d]
;;;1203   modbus_registers[26]=(signed char)(BAT_C_REAL[0]>>8);			//Рег14	Реальная емкость батареи №1, 0.1А*ч, если 0x5555 то не измерялась
000378  4f58              LDR      r7,|L1.1244|
00037a  883b              LDRH     r3,[r7,#0]  ; BAT_C_REAL
00037c  ea4f2c23          ASR      r12,r3,#8
000380  f88dc01e          STRB     r12,[sp,#0x1e]
;;;1204   modbus_registers[27]=(signed char)(BAT_C_REAL[0]);
000384  f88d301f          STRB     r3,[sp,#0x1f]
;;;1205   modbus_registers[28]=(signed char)(bat[1]._Ub>>8);				//Рег15	напряжение батареи №1, 0.1В
000388  f8b4304e          LDRH     r3,[r4,#0x4e]  ; bat
00038c  ea4f2c23          ASR      r12,r3,#8
000390  f88dc020          STRB     r12,[sp,#0x20]
;;;1206   modbus_registers[29]=(signed char)(bat[1]._Ub);
000394  f88d3021          STRB     r3,[sp,#0x21]
;;;1207   modbus_registers[30]=(signed char)(bat[1]._Ib>>8);				//Рег16   	ток батареи №1, 0.01А
000398  f8b43054          LDRH     r3,[r4,#0x54]  ; bat
00039c  ea4f2c23          ASR      r12,r3,#8
0003a0  f88dc022          STRB     r12,[sp,#0x22]
;;;1208   modbus_registers[31]=(signed char)(bat[1]._Ib);
0003a4  f88d3023          STRB     r3,[sp,#0x23]
;;;1209   modbus_registers[32]=(signed char)(bat[1]._Tb>>8);				//Рег17	температура батареи №1, 1Гц
0003a8  f8b43056          LDRH     r3,[r4,#0x56]  ; bat
0003ac  ea4f2c23          ASR      r12,r3,#8
0003b0  f88dc024          STRB     r12,[sp,#0x24]
;;;1210   modbus_registers[33]=(signed char)(bat[1]._Tb);
0003b4  f88d3025          STRB     r3,[sp,#0x25]
;;;1211   modbus_registers[34]=(signed char)(bat[1]._zar>>8);			//Рег18	заряд батареи №1, %
0003b8  f8b4305c          LDRH     r3,[r4,#0x5c]  ; bat
0003bc  ea4f2c13          LSR      r12,r3,#8
0003c0  f88dc026          STRB     r12,[sp,#0x26]
;;;1212   modbus_registers[35]=(signed char)(bat[1]._zar);
0003c4  f88d3027          STRB     r3,[sp,#0x27]
;;;1213   modbus_registers[36]=(signed char)(bat[1]._Ubm>>8);			//Рег19	напряжение средней точки батареи №1, 0.1В
0003c8  f8b43050          LDRH     r3,[r4,#0x50]  ; bat
0003cc  ea4f2c23          ASR      r12,r3,#8
0003d0  f88dc028          STRB     r12,[sp,#0x28]
;;;1214   modbus_registers[37]=(signed char)(bat[1]._Ubm);
0003d4  f88d3029          STRB     r3,[sp,#0x29]
;;;1215   modbus_registers[38]=(signed char)(bat[1]._dUbm>>8);			//Рег20	ошибка средней точки батареи №1, %
0003d8  f8b43052          LDRH     r3,[r4,#0x52]  ; bat
0003dc  121c              ASRS     r4,r3,#8
0003de  f88d402a          STRB     r4,[sp,#0x2a]
;;;1216   modbus_registers[39]=(signed char)(bat[1]._dUbm);
0003e2  f88d302b          STRB     r3,[sp,#0x2b]
;;;1217   modbus_registers[40]=(signed char)(BAT_C_REAL[1]>>8);			//Рег21	Реальная емкость батареи №1, 0.1А*ч, если 0x5555 то не измерялась
0003e6  887b              LDRH     r3,[r7,#2]  ; BAT_C_REAL
0003e8  121c              ASRS     r4,r3,#8
0003ea  f88d402c          STRB     r4,[sp,#0x2c]
;;;1218   modbus_registers[41]=(signed char)(BAT_C_REAL[1]);
0003ee  f88d302d          STRB     r3,[sp,#0x2d]
;;;1219   modbus_registers[42]=(signed char)(bps[0]._Uii>>8);			//Рег22	Выходное напряжение выпрямителя №1, 0.1В
0003f2  4c3b              LDR      r4,|L1.1248|
0003f4  69e3              LDR      r3,[r4,#0x1c]  ; bps
0003f6  121f              ASRS     r7,r3,#8
0003f8  f88d702e          STRB     r7,[sp,#0x2e]
;;;1220   modbus_registers[43]=(signed char)(bps[0]._Uii);
0003fc  f88d302f          STRB     r3,[sp,#0x2f]
;;;1221   modbus_registers[44]=(signed char)(bps[0]._Ii>>8);				//Рег23	Выходной ток выпрямителя №1, 0.1А
000400  6a63              LDR      r3,[r4,#0x24]  ; bps
000402  121f              ASRS     r7,r3,#8
000404  f88d7030          STRB     r7,[sp,#0x30]
;;;1222   modbus_registers[45]=(signed char)(bps[0]._Ii);
000408  f88d3031          STRB     r3,[sp,#0x31]
;;;1223   modbus_registers[46]=(signed char)(bps[0]._Ti>>8);				//Рег24	Температура радиатора выпрямителя №1, 1гЦ
00040c  6aa3              LDR      r3,[r4,#0x28]  ; bps
00040e  121f              ASRS     r7,r3,#8
000410  f88d7032          STRB     r7,[sp,#0x32]
;;;1224   modbus_registers[47]=(signed char)(bps[0]._Ti);
000414  f88d3033          STRB     r3,[sp,#0x33]
;;;1225   modbus_registers[48]=(signed char)(bps[0]._av>>8);				//Рег25	Байт флагов выпрямителя №1, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000418  2700              MOVS     r7,#0
00041a  f88d7034          STRB     r7,[sp,#0x34]
;;;1226   modbus_registers[49]=(signed char)(bps[0]._av);
00041e  7863              LDRB     r3,[r4,#1]  ; bps
000420  f88d3035          STRB     r3,[sp,#0x35]
;;;1227   modbus_registers[50]=(signed char)(bps[1]._Uii>>8);			//Рег26	Выходное напряжение выпрямителя №2, 0.1В
000424  6fa3              LDR      r3,[r4,#0x78]  ; bps
000426  ea4f2c23          ASR      r12,r3,#8
00042a  f88dc036          STRB     r12,[sp,#0x36]
;;;1228   modbus_registers[51]=(signed char)(bps[1]._Uii);
00042e  f88d3037          STRB     r3,[sp,#0x37]
;;;1229   modbus_registers[52]=(signed char)(bps[1]._Ii>>8);				//Рег27	Выходной ток выпрямителя №2, 0.1А
000432  f8d43080          LDR      r3,[r4,#0x80]  ; bps
000436  ea4f2c23          ASR      r12,r3,#8
00043a  f88dc038          STRB     r12,[sp,#0x38]
;;;1230   modbus_registers[53]=(signed char)(bps[1]._Ii);
00043e  e051              B        |L1.1252|
                  |L1.1088|
                          DCD      0x40024020
                  |L1.1092|
                          DCD      NUMIST
                  |L1.1096|
                          DCD      PAR
                  |L1.1100|
                          DCD      ZV_ON
                  |L1.1104|
                          DCD      UBM_AV
                  |L1.1108|
                          DCD      TBAT
                  |L1.1112|
                          DCD      UMAX
                  |L1.1116|
                          DCD      UB20
                  |L1.1120|
                          DCD      ||DU||
                  |L1.1124|
                          DCD      UB0
                  |L1.1128|
                          DCD      USIGN
                  |L1.1132|
                          DCD      UMN
                  |L1.1136|
                          DCD      U0B
                  |L1.1140|
                          DCD      IKB
                  |L1.1144|
                          DCD      IZMAX
                  |L1.1148|
                          DCD      IMAX
                  |L1.1152|
                          DCD      IMIN
                  |L1.1156|
                          DCD      UVZ
                  |L1.1160|
                          DCD      TZAS
                  |L1.1164|
                          DCD      TMAX
                  |L1.1168|
                          DCD      TSIGN
                  |L1.1172|
                          DCD      TBATMAX
                  |L1.1176|
                          DCD      TBATSIGN
                  |L1.1180|
                          DCD      speedChrgCurr
                  |L1.1184|
                          DCD      speedChrgVolt
                  |L1.1188|
                          DCD      speedChrgTimeInHour
                  |L1.1192|
                          DCD      U_OUT_KONTR_MAX
                  |L1.1196|
                          DCD      U_OUT_KONTR_MIN
                  |L1.1200|
                          DCD      U_OUT_KONTR_DELAY
                  |L1.1204|
                          DCD      modbus_tcp_out_ptr
                  |L1.1208|
                          DCD      ||area_number.4||+0x3c
                  |L1.1212|
                          DCD      out_U
                  |L1.1216|
                          DCD      bps_I
                  |L1.1220|
                          DCD      net_U
                  |L1.1224|
                          DCD      net_F
                  |L1.1228|
                          DCD      net_Ua
                  |L1.1232|
                          DCD      net_Ub
                  |L1.1236|
                          DCD      net_Uc
                  |L1.1240|
                          DCD      bat
                  |L1.1244|
                          DCD      BAT_C_REAL
                  |L1.1248|
                          DCD      bps
                  |L1.1252|
0004e4  f88d3039          STRB     r3,[sp,#0x39]
;;;1231   modbus_registers[54]=(signed char)(bps[1]._Ti>>8);				//Рег28	Температура радиатора выпрямителя №2, 1гЦ
0004e8  f8d43084          LDR      r3,[r4,#0x84]  ; bps
0004ec  ea4f2c23          ASR      r12,r3,#8
0004f0  f88dc03a          STRB     r12,[sp,#0x3a]
;;;1232   modbus_registers[55]=(signed char)(bps[1]._Ti);
0004f4  f88d303b          STRB     r3,[sp,#0x3b]
;;;1233   modbus_registers[56]=(signed char)(bps[1]._av>>8);				//Рег29	Байт флагов выпрямителя №2, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0004f8  f88d703c          STRB     r7,[sp,#0x3c]
;;;1234   modbus_registers[57]=(signed char)(bps[1]._av);
0004fc  f894305d          LDRB     r3,[r4,#0x5d]  ; bps
000500  f88d303d          STRB     r3,[sp,#0x3d]
;;;1235   modbus_registers[58]=(signed char)(bps[2]._Uii>>8);			//Рег30	Выходное напряжение выпрямителя №3, 0.1В
000504  f8d430d4          LDR      r3,[r4,#0xd4]  ; bps
000508  ea4f2c23          ASR      r12,r3,#8
00050c  f88dc03e          STRB     r12,[sp,#0x3e]
;;;1236   modbus_registers[59]=(signed char)(bps[2]._Uii);
000510  f88d303f          STRB     r3,[sp,#0x3f]
;;;1237   modbus_registers[60]=(signed char)(bps[2]._Ii>>8);				//Рег31	Выходной ток выпрямителя №3, 0.1А
000514  f8d430dc          LDR      r3,[r4,#0xdc]  ; bps
000518  ea4f2c23          ASR      r12,r3,#8
00051c  f88dc040          STRB     r12,[sp,#0x40]
;;;1238   modbus_registers[61]=(signed char)(bps[2]._Ii);
000520  f88d3041          STRB     r3,[sp,#0x41]
;;;1239   modbus_registers[62]=(signed char)(bps[2]._Ti>>8);				//Рег32	Температура радиатора выпрямителя №3, 1гЦ
000524  f8d430e0          LDR      r3,[r4,#0xe0]  ; bps
000528  ea4f2c23          ASR      r12,r3,#8
00052c  f88dc042          STRB     r12,[sp,#0x42]
;;;1240   modbus_registers[63]=(signed char)(bps[2]._Ti);
000530  f88d3043          STRB     r3,[sp,#0x43]
;;;1241   modbus_registers[64]=(signed char)(bps[2]._av>>8);				//Рег33	Байт флагов выпрямителя №3, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000534  f88d7044          STRB     r7,[sp,#0x44]
;;;1242   modbus_registers[65]=(signed char)(bps[2]._av);
000538  f89430b9          LDRB     r3,[r4,#0xb9]  ; bps
00053c  f88d3045          STRB     r3,[sp,#0x45]
;;;1243   modbus_registers[66]=(signed char)(bps[3]._Uii>>8);			//Рег34	Выходное напряжение выпрямителя №4, 0.1В
000540  f8d43130          LDR      r3,[r4,#0x130]  ; bps
000544  ea4f2c23          ASR      r12,r3,#8
000548  f88dc046          STRB     r12,[sp,#0x46]
;;;1244   modbus_registers[67]=(signed char)(bps[3]._Uii);
00054c  f88d3047          STRB     r3,[sp,#0x47]
;;;1245   modbus_registers[68]=(signed char)(bps[3]._Ii>>8);				//Рег35	Выходной ток выпрямителя №4, 0.1А
000550  f8d43138          LDR      r3,[r4,#0x138]  ; bps
000554  ea4f2c23          ASR      r12,r3,#8
000558  f88dc048          STRB     r12,[sp,#0x48]
;;;1246   modbus_registers[69]=(signed char)(bps[3]._Ii);
00055c  f88d3049          STRB     r3,[sp,#0x49]
;;;1247   modbus_registers[70]=(signed char)(bps[3]._Ti>>8);				//Рег36	Температура радиатора выпрямителя №4, 1гЦ
000560  f8d4313c          LDR      r3,[r4,#0x13c]  ; bps
000564  ea4f2c23          ASR      r12,r3,#8
000568  f88dc04a          STRB     r12,[sp,#0x4a]
;;;1248   modbus_registers[71]=(signed char)(bps[3]._Ti);
00056c  f88d304b          STRB     r3,[sp,#0x4b]
;;;1249   modbus_registers[72]=(signed char)(bps[3]._av>>8);				//Рег37	Байт флагов выпрямителя №4, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000570  f88d704c          STRB     r7,[sp,#0x4c]
;;;1250   modbus_registers[73]=(signed char)(bps[3]._av);
000574  f8943115          LDRB     r3,[r4,#0x115]  ; bps
000578  f88d304d          STRB     r3,[sp,#0x4d]
;;;1251   modbus_registers[74]=(signed char)(bps[4]._Uii>>8);			//Рег38	Выходное напряжение выпрямителя №5, 0.1В
00057c  f8d4318c          LDR      r3,[r4,#0x18c]  ; bps
000580  ea4f2c23          ASR      r12,r3,#8
000584  f88dc04e          STRB     r12,[sp,#0x4e]
;;;1252   modbus_registers[75]=(signed char)(bps[4]._Uii);
000588  f88d304f          STRB     r3,[sp,#0x4f]
;;;1253   modbus_registers[76]=(signed char)(bps[4]._Ii>>8);				//Рег39	Выходной ток выпрямителя №5, 0.1А
00058c  f8d43194          LDR      r3,[r4,#0x194]  ; bps
000590  ea4f2c23          ASR      r12,r3,#8
000594  f88dc050          STRB     r12,[sp,#0x50]
;;;1254   modbus_registers[77]=(signed char)(bps[4]._Ii);
000598  f88d3051          STRB     r3,[sp,#0x51]
;;;1255   modbus_registers[78]=(signed char)(bps[4]._Ti>>8);				//Рег40	Температура радиатора выпрямителя №5, 1гЦ
00059c  f8d43198          LDR      r3,[r4,#0x198]  ; bps
0005a0  ea4f2c23          ASR      r12,r3,#8
0005a4  f88dc052          STRB     r12,[sp,#0x52]
;;;1256   modbus_registers[79]=(signed char)(bps[4]._Ti);
0005a8  f88d3053          STRB     r3,[sp,#0x53]
;;;1257   modbus_registers[80]=(signed char)(bps[4]._av>>8);				//Рег41	Байт флагов выпрямителя №5, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0005ac  f88d7054          STRB     r7,[sp,#0x54]
;;;1258   modbus_registers[81]=(signed char)(bps[4]._av);
0005b0  f8943171          LDRB     r3,[r4,#0x171]  ; bps
0005b4  f88d3055          STRB     r3,[sp,#0x55]
;;;1259   modbus_registers[82]=(signed char)(bps[5]._Uii>>8);			//Рег42	Выходное напряжение выпрямителя №6, 0.1В
0005b8  f8d431e8          LDR      r3,[r4,#0x1e8]  ; bps
0005bc  ea4f2c23          ASR      r12,r3,#8
0005c0  f88dc056          STRB     r12,[sp,#0x56]
;;;1260   modbus_registers[83]=(signed char)(bps[5]._Uii);
0005c4  f88d3057          STRB     r3,[sp,#0x57]
;;;1261   modbus_registers[84]=(signed char)(bps[5]._Ii>>8);				//Рег43	Выходной ток выпрямителя №6, 0.1А
0005c8  f8d431f0          LDR      r3,[r4,#0x1f0]  ; bps
0005cc  ea4f2c23          ASR      r12,r3,#8
0005d0  f88dc058          STRB     r12,[sp,#0x58]
;;;1262   modbus_registers[85]=(signed char)(bps[5]._Ii);
0005d4  f88d3059          STRB     r3,[sp,#0x59]
;;;1263   modbus_registers[86]=(signed char)(bps[5]._Ti>>8);				//Рег44	Температура радиатора выпрямителя №6, 1гЦ
0005d8  f504740c          ADD      r4,r4,#0x230
0005dc  f8543c3c          LDR      r3,[r4,#-0x3c]  ; bps
0005e0  ea4f2c23          ASR      r12,r3,#8
0005e4  f88dc05a          STRB     r12,[sp,#0x5a]
;;;1264   modbus_registers[87]=(signed char)(bps[5]._Ti);
0005e8  f88d305b          STRB     r3,[sp,#0x5b]
;;;1265   modbus_registers[88]=(signed char)(bps[5]._av>>8);				//Рег45	Байт флагов выпрямителя №6, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0005ec  f88d705c          STRB     r7,[sp,#0x5c]
;;;1266   modbus_registers[89]=(signed char)(bps[5]._av);
0005f0  f8143c63          LDRB     r3,[r4,#-0x63]  ; bps
0005f4  f88d305d          STRB     r3,[sp,#0x5d]
;;;1267   modbus_registers[90]=(signed char)(bps[6]._Uii>>8);			//Рег46	Выходное напряжение выпрямителя №7, 0.1В
0005f8  6963              LDR      r3,[r4,#0x14]  ; bps
0005fa  ea4f2c23          ASR      r12,r3,#8
0005fe  f88dc05e          STRB     r12,[sp,#0x5e]
;;;1268   modbus_registers[91]=(signed char)(bps[6]._Uii);
000602  f88d305f          STRB     r3,[sp,#0x5f]
;;;1269   modbus_registers[92]=(signed char)(bps[6]._Ii>>8);				//Рег47	Выходной ток выпрямителя №7, 0.1А
000606  69e3              LDR      r3,[r4,#0x1c]  ; bps
000608  ea4f2c23          ASR      r12,r3,#8
00060c  f88dc060          STRB     r12,[sp,#0x60]
;;;1270   modbus_registers[93]=(signed char)(bps[6]._Ii);
000610  f88d3061          STRB     r3,[sp,#0x61]
;;;1271   modbus_registers[94]=(signed char)(bps[6]._Ti>>8);				//Рег48	Температура радиатора выпрямителя №7, 1гЦ
000614  6a23              LDR      r3,[r4,#0x20]  ; bps
000616  ea4f2c23          ASR      r12,r3,#8
00061a  f88dc062          STRB     r12,[sp,#0x62]
;;;1272   modbus_registers[95]=(signed char)(bps[6]._Ti);
00061e  f88d3063          STRB     r3,[sp,#0x63]
;;;1273   modbus_registers[96]=(signed char)(bps[6]._av>>8);				//Рег49	Байт флагов выпрямителя №7, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000622  f88d7064          STRB     r7,[sp,#0x64]
;;;1274   modbus_registers[97]=(signed char)(bps[6]._av);
000626  f8143c07          LDRB     r3,[r4,#-7]  ; bps
00062a  f88d3065          STRB     r3,[sp,#0x65]
;;;1275   modbus_registers[98]=(signed char)(bps[7]._Uii>>8);			//Рег50	Выходное напряжение выпрямителя №8, 0.1В
00062e  6f23              LDR      r3,[r4,#0x70]  ; bps
000630  ea4f2c23          ASR      r12,r3,#8
000634  f88dc066          STRB     r12,[sp,#0x66]
;;;1276   modbus_registers[99]=(signed char)(bps[7]._Uii);
000638  f88d3067          STRB     r3,[sp,#0x67]
;;;1277   modbus_registers[100]=(signed char)(bps[7]._Ii>>8);			//Рег51	Выходной ток выпрямителя №8, 0.1А
00063c  6fa3              LDR      r3,[r4,#0x78]  ; bps
00063e  ea4f2c23          ASR      r12,r3,#8
000642  f88dc068          STRB     r12,[sp,#0x68]
;;;1278   modbus_registers[101]=(signed char)(bps[7]._Ii);
000646  f88d3069          STRB     r3,[sp,#0x69]
;;;1279   modbus_registers[102]=(signed char)(bps[7]._Ti>>8);			//Рег52	Температура радиатора выпрямителя №8, 1гЦ
00064a  6fe3              LDR      r3,[r4,#0x7c]  ; bps
00064c  ea4f2c23          ASR      r12,r3,#8
000650  f88dc06a          STRB     r12,[sp,#0x6a]
;;;1280   modbus_registers[103]=(signed char)(bps[7]._Ti);
000654  f88d306b          STRB     r3,[sp,#0x6b]
;;;1281   modbus_registers[104]=(signed char)(bps[7]._av>>8);			//Рег53	Байт флагов выпрямителя №8, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000658  f88d706c          STRB     r7,[sp,#0x6c]
;;;1282   modbus_registers[105]=(signed char)(bps[7]._av);
00065c  f8943055          LDRB     r3,[r4,#0x55]  ; bps
000660  f88d306d          STRB     r3,[sp,#0x6d]
;;;1283   modbus_registers[106]=(signed char)(bps_U>>8);					//Рег54   	напряжение выпрямителей, 0.1В
000664  4bff              LDR      r3,|L1.2660|
000666  881b              LDRH     r3,[r3,#0]  ; bps_U
000668  ea4f2423          ASR      r4,r3,#8
00066c  f88d406e          STRB     r4,[sp,#0x6e]
;;;1284   modbus_registers[107]=(signed char)(bps_U);
000670  f88d306f          STRB     r3,[sp,#0x6f]
;;;1285   tempS=0;
000674  463b              MOV      r3,r7
;;;1286   if(speedChIsOn) tempS=1;
000676  4cfc              LDR      r4,|L1.2664|
000678  8824              LDRH     r4,[r4,#0]  ; speedChIsOn
00067a  b104              CBZ      r4,|L1.1662|
00067c  2301              MOVS     r3,#1
                  |L1.1662|
;;;1287   modbus_registers[108]=(signed char)(tempS>>8);					//Рег55   	Ускоренный заряд включенность, (1 - вкл, 0 - Выкл)
00067e  121c              ASRS     r4,r3,#8
000680  f88d4070          STRB     r4,[sp,#0x70]
;;;1288   modbus_registers[109]=(signed char)(tempS);
000684  f88d3071          STRB     r3,[sp,#0x71]
;;;1289   tempS=0;
000688  2300              MOVS     r3,#0
;;;1290   if(spc_stat==spcVZ) tempS=1;
00068a  4cf8              LDR      r4,|L1.2668|
00068c  7824              LDRB     r4,[r4,#0]  ; spc_stat
00068e  2c02              CMP      r4,#2
000690  d100              BNE      |L1.1684|
000692  2301              MOVS     r3,#1
                  |L1.1684|
;;;1291   modbus_registers[110]=(signed char)(tempS>>8);					//Рег56   	Выравнивающий заряд включенность, (1 - вкл, 0 - Выкл)
000694  121c              ASRS     r4,r3,#8
000696  f88d4072          STRB     r4,[sp,#0x72]
;;;1292   modbus_registers[111]=(signed char)(tempS);
00069a  f88d3073          STRB     r3,[sp,#0x73]
;;;1293   modbus_registers[112]=(signed char)(uout_av>>8);					//Рег57   Контроль выходного напряжения, (0 - норма, 1 - завышено, 2 - занижено)
00069e  f88d7074          STRB     r7,[sp,#0x74]
;;;1294   modbus_registers[113]=(signed char)(uout_av);
0006a2  4bf3              LDR      r3,|L1.2672|
0006a4  781b              LDRB     r3,[r3,#0]  ; uout_av
0006a6  f88d3075          STRB     r3,[sp,#0x75]
;;;1295   
;;;1296   tempS=0;													 //Рег60	Регистр флагов состояния системы
0006aa  2400              MOVS     r4,#0
;;;1297   if(bat_ips._av)			tempS|=(1<<0);						 // Бит 0	Авария батареи
0006ac  4bf1              LDR      r3,|L1.2676|
0006ae  f893303d          LDRB     r3,[r3,#0x3d]  ; bat_ips
0006b2  b103              CBZ      r3,|L1.1718|
0006b4  2401              MOVS     r4,#1
                  |L1.1718|
;;;1298   if(avar_stat&0x0001)   	tempS|=(1<<1);						 //	Бит 1	Авария питающей сети 
0006b6  4bf0              LDR      r3,|L1.2680|
0006b8  681b              LDR      r3,[r3,#0]  ; avar_stat
0006ba  07df              LSLS     r7,r3,#31
0006bc  d001              BEQ      |L1.1730|
0006be  f0440402          ORR      r4,r4,#2
                  |L1.1730|
;;;1299   if(avar_stat&(1<<(3+0)))tempS|=(1<<2);						 //	Бит 2	Авария выпрямителя №1
0006c2  071f              LSLS     r7,r3,#28
0006c4  d501              BPL      |L1.1738|
0006c6  f0440404          ORR      r4,r4,#4
                  |L1.1738|
;;;1300   if(avar_stat&(1<<(3+1)))tempS|=(1<<3);						 //	Бит 3	Авария выпрямителя №2
0006ca  06df              LSLS     r7,r3,#27
0006cc  d501              BPL      |L1.1746|
0006ce  f0440408          ORR      r4,r4,#8
                  |L1.1746|
;;;1301   if(avar_stat&(1<<(3+2)))tempS|=(1<<4);						 //	Бит 4	Авария выпрямителя №2
0006d2  069b              LSLS     r3,r3,#26
0006d4  d501              BPL      |L1.1754|
0006d6  f0440410          ORR      r4,r4,#0x10
                  |L1.1754|
;;;1302   modbus_registers[118]=(signed char)(tempS>>8);
0006da  1223              ASRS     r3,r4,#8
0006dc  f88d307a          STRB     r3,[sp,#0x7a]
;;;1303   modbus_registers[119]=(signed char)(tempS);
0006e0  f88d407b          STRB     r4,[sp,#0x7b]
;;;1304   
;;;1305   tempS=cntrl_stat_old;
0006e4  4be5              LDR      r3,|L1.2684|
0006e6  f9b33000          LDRSH    r3,[r3,#0]  ; cntrl_stat_old
;;;1306   if(	(main_kb_cnt==(TBAT*60)-21) || (main_kb_cnt==(TBAT*60)-20) || (main_kb_cnt==(TBAT*60)-19)) tempS=((short)TBAT)|0x4000;
0006ea  4ce5              LDR      r4,|L1.2688|
0006ec  f06f0c14          MVN      r12,#0x14
0006f0  f9b44000          LDRSH    r4,[r4,#0]  ; TBAT
0006f4  ebc41704          RSB      r7,r4,r4,LSL #4
0006f8  eb0c0887          ADD      r8,r12,r7,LSL #2
0006fc  f8dfc384          LDR      r12,|L1.2692|
000700  f9bcc000          LDRSH    r12,[r12,#0]  ; main_kb_cnt
000704  45e0              CMP      r8,r12
000706  d00b              BEQ      |L1.1824|
000708  f06f0813          MVN      r8,#0x13
00070c  eb080887          ADD      r8,r8,r7,LSL #2
000710  45e0              CMP      r8,r12
000712  d005              BEQ      |L1.1824|
000714  f06f0812          MVN      r8,#0x12
000718  eb080787          ADD      r7,r8,r7,LSL #2
00071c  4567              CMP      r7,r12
00071e  d101              BNE      |L1.1828|
                  |L1.1824|
000720  f4444380          ORR      r3,r4,#0x4000
                  |L1.1828|
;;;1307   //tempS=0x800f;
;;;1308   modbus_registers[198]=(signed char)(tempS>>8);				//Рег100	состояние шим
000724  121c              ASRS     r4,r3,#8
000726  f88d40ca          STRB     r4,[sp,#0xca]
;;;1309   modbus_registers[199]=(signed char)(tempS);
00072a  f88d30cb          STRB     r3,[sp,#0xcb]
;;;1310   
;;;1311   tempS=t_ext[0];
00072e  4fd6              LDR      r7,|L1.2696|
000730  f9b73000          LDRSH    r3,[r7,#0]  ; t_ext
;;;1312   if(ND_EXT[0])tempS=-1000;
000734  f8df8354          LDR      r8,|L1.2700|
000738  f8dfc354          LDR      r12,|L1.2704|
00073c  f8984000          LDRB     r4,[r8,#0]  ; ND_EXT
000740  b104              CBZ      r4,|L1.1860|
000742  4663              MOV      r3,r12
                  |L1.1860|
;;;1313   modbus_registers[400]=(signed char)(tempS>>8);				//Рег201	Внешний датчик температуры №1
000744  121c              ASRS     r4,r3,#8
000746  f88d4194          STRB     r4,[sp,#0x194]
;;;1314   modbus_registers[401]=(signed char)(tempS);
00074a  f88d3195          STRB     r3,[sp,#0x195]
;;;1315   tempS=t_ext[1];
00074e  f9b74002          LDRSH    r4,[r7,#2]  ; t_ext
;;;1316   if(ND_EXT[1])tempS=-1000;
000752  f8983001          LDRB     r3,[r8,#1]  ; ND_EXT
000756  b103              CBZ      r3,|L1.1882|
000758  4664              MOV      r4,r12
                  |L1.1882|
;;;1317   modbus_registers[402]=(signed char)(tempS>>8);				//Рег202	Внешний датчик температуры №2
00075a  1223              ASRS     r3,r4,#8
00075c  f88d3196          STRB     r3,[sp,#0x196]
;;;1318   modbus_registers[403]=(signed char)(tempS);
000760  f88d4197          STRB     r4,[sp,#0x197]
;;;1319   tempS=t_ext[2];
000764  f9b77004          LDRSH    r7,[r7,#4]  ; t_ext
;;;1320   if(ND_EXT[2])tempS=-1000;
000768  f8983002          LDRB     r3,[r8,#2]  ; ND_EXT
00076c  b103              CBZ      r3,|L1.1904|
00076e  4667              MOV      r7,r12
                  |L1.1904|
;;;1321   modbus_registers[404]=(signed char)(tempS>>8);				//Рег203	Внешний датчик температуры №3
000770  123b              ASRS     r3,r7,#8
000772  f88d3198          STRB     r3,[sp,#0x198]
;;;1322   modbus_registers[405]=(signed char)(tempS);
000776  f88d7199          STRB     r7,[sp,#0x199]
;;;1323   /*tempS=t_ext[3];
;;;1324   if(ND_EXT[3])tempS=-1000;
;;;1325   modbus_registers[406]=(signed char)(tempS>>8);				//Рег204	Внешний датчик температуры №4
;;;1326   modbus_registers[407]=(signed char)(tempS);   */
;;;1327   
;;;1328   tempS=0;
00077a  2400              MOVS     r4,#0
;;;1329   if(sk_stat[0]==ssON) tempS|=0x0001;
00077c  4fc5              LDR      r7,|L1.2708|
00077e  783b              LDRB     r3,[r7,#0]  ; sk_stat
000780  2b01              CMP      r3,#1
000782  d100              BNE      |L1.1926|
000784  2401              MOVS     r4,#1
                  |L1.1926|
;;;1330   if(sk_av_stat[0]==sasON) tempS|=0x0002;
000786  f8dfc310          LDR      r12,|L1.2712|
00078a  f89c3000          LDRB     r3,[r12,#0]  ; sk_av_stat
00078e  2b01              CMP      r3,#1
000790  d101              BNE      |L1.1942|
000792  f0440402          ORR      r4,r4,#2
                  |L1.1942|
;;;1331   modbus_registers[420]=(signed char)(tempS>>8);				//Рег211	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
000796  1223              ASRS     r3,r4,#8
000798  f88d31a8          STRB     r3,[sp,#0x1a8]
;;;1332   modbus_registers[421]=(signed char)(tempS);
00079c  f88d41a9          STRB     r4,[sp,#0x1a9]
;;;1333   tempS=0;
0007a0  2400              MOVS     r4,#0
;;;1334   if(sk_stat[1]==ssON) tempS|=0x0001;
0007a2  787b              LDRB     r3,[r7,#1]  ; sk_stat
0007a4  2b01              CMP      r3,#1
0007a6  d100              BNE      |L1.1962|
0007a8  2401              MOVS     r4,#1
                  |L1.1962|
;;;1335   if(sk_av_stat[1]==sasON) tempS|=0x0002;
0007aa  f89c3001          LDRB     r3,[r12,#1]  ; sk_av_stat
0007ae  2b01              CMP      r3,#1
0007b0  d101              BNE      |L1.1974|
0007b2  f0440402          ORR      r4,r4,#2
                  |L1.1974|
;;;1336   modbus_registers[422]=(signed char)(tempS>>8);				//Рег212	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
0007b6  1223              ASRS     r3,r4,#8
0007b8  f88d31aa          STRB     r3,[sp,#0x1aa]
;;;1337   modbus_registers[423]=(signed char)(tempS);
0007bc  f88d41ab          STRB     r4,[sp,#0x1ab]
;;;1338   tempS=0;
0007c0  2400              MOVS     r4,#0
;;;1339   if(sk_stat[2]==ssON) tempS|=0x0001;
0007c2  78bb              LDRB     r3,[r7,#2]  ; sk_stat
0007c4  2b01              CMP      r3,#1
0007c6  d100              BNE      |L1.1994|
0007c8  2401              MOVS     r4,#1
                  |L1.1994|
;;;1340   if(sk_av_stat[2]==sasON) tempS|=0x0002;
0007ca  f89c3002          LDRB     r3,[r12,#2]  ; sk_av_stat
0007ce  2b01              CMP      r3,#1
0007d0  d101              BNE      |L1.2006|
0007d2  f0440402          ORR      r4,r4,#2
                  |L1.2006|
;;;1341   modbus_registers[424]=(signed char)(tempS>>8);				//Рег213	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
0007d6  1223              ASRS     r3,r4,#8
0007d8  f88d31ac          STRB     r3,[sp,#0x1ac]
;;;1342   modbus_registers[425]=(signed char)(tempS);
0007dc  f88d41ad          STRB     r4,[sp,#0x1ad]
;;;1343   tempS=0;
0007e0  2300              MOVS     r3,#0
;;;1344   if(sk_stat[3]==ssON) tempS|=0x0001;
0007e2  78fc              LDRB     r4,[r7,#3]  ; sk_stat
0007e4  2c01              CMP      r4,#1
0007e6  d100              BNE      |L1.2026|
0007e8  2301              MOVS     r3,#1
                  |L1.2026|
;;;1345   if(sk_av_stat[3]==sasON) tempS|=0x0002;
0007ea  f89c4003          LDRB     r4,[r12,#3]  ; sk_av_stat
0007ee  2c01              CMP      r4,#1
0007f0  d101              BNE      |L1.2038|
0007f2  f0430302          ORR      r3,r3,#2
                  |L1.2038|
;;;1346   modbus_registers[426]=(signed char)(tempS>>8);				//Рег214	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
0007f6  121c              ASRS     r4,r3,#8
0007f8  f88d41ae          STRB     r4,[sp,#0x1ae]
;;;1347   modbus_registers[427]=(signed char)(tempS);
0007fc  f88d31af          STRB     r3,[sp,#0x1af]
000800  ab01              ADD      r3,sp,#4              ;1169
;;;1348   
;;;1349   //modbus_registers[
;;;1350   
;;;1351   
;;;1352   if(prot==MODBUS_RTU_PROT)
;;;1353   	{
;;;1354   	modbus_tx_buff[0]=adr;
;;;1355   	modbus_tx_buff[1]=func;
;;;1356   
;;;1357   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1358   
;;;1359   	mem_copy((signed char*)&modbus_tx_buff[3],(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000802  1e52              SUBS     r2,r2,#1
000804  4fa5              LDR      r7,|L1.2716|
000806  eb030342          ADD      r3,r3,r2,LSL #1
00080a  006a              LSLS     r2,r5,#1              ;1357
00080c  b156              CBZ      r6,|L1.2084|
;;;1360   
;;;1361   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1362   
;;;1363   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1364   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1365   
;;;1366   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1367   		{
;;;1368   		putchar0(modbus_tx_buff[i]);
;;;1369   		}
;;;1370   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1371   		{
;;;1372   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1373   		}
;;;1374   	}
;;;1375   else if(prot==MODBUS_TCP_PROT)
00080e  2e01              CMP      r6,#1
000810  d105              BNE      |L1.2078|
;;;1376   	{
;;;1377   	mem_copy((signed char*)modbus_tx_buff,(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000812  4619              MOV      r1,r3
000814  4638              MOV      r0,r7
000816  f7fffffe          BL       mem_copy
;;;1378   	modbus_tcp_out_ptr=(signed char*)modbus_tx_buff;
00081a  48a1              LDR      r0,|L1.2720|
00081c  6007              STR      r7,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.2078|
;;;1379   	}
;;;1380   }
00081e  b07e              ADD      sp,sp,#0x1f8
000820  e8bd81f0          POP      {r4-r8,pc}
                  |L1.2084|
000824  7038              STRB     r0,[r7,#0]            ;1354
000826  7079              STRB     r1,[r7,#1]            ;1355
000828  70ba              STRB     r2,[r7,#2]            ;1357
00082a  4619              MOV      r1,r3                 ;1359
00082c  1cf8              ADDS     r0,r7,#3              ;1359
00082e  f7fffffe          BL       mem_copy
000832  2003              MOVS     r0,#3                 ;1361
000834  eb000045          ADD      r0,r0,r5,LSL #1       ;1361
000838  b201              SXTH     r1,r0                 ;1361
00083a  4898              LDR      r0,|L1.2716|
00083c  f7fffffe          BL       CRC16_2
000840  eb070145          ADD      r1,r7,r5,LSL #1       ;1363
000844  70c8              STRB     r0,[r1,#3]            ;1363
000846  0a00              LSRS     r0,r0,#8              ;1364
000848  7108              STRB     r0,[r1,#4]            ;1364
00084a  2400              MOVS     r4,#0                 ;1366
00084c  2005              MOVS     r0,#5                 ;1366
00084e  eb000545          ADD      r5,r0,r5,LSL #1       ;1366
000852  e004              B        |L1.2142|
                  |L1.2132|
000854  5d38              LDRB     r0,[r7,r4]            ;1368
000856  f7fffffe          BL       putchar0
00085a  1c64              ADDS     r4,r4,#1              ;1366
00085c  b2e4              UXTB     r4,r4                 ;1366
                  |L1.2142|
00085e  42a5              CMP      r5,r4                 ;1366
000860  d8f8              BHI      |L1.2132|
000862  2400              MOVS     r4,#0                 ;1370
000864  e004              B        |L1.2160|
                  |L1.2150|
000866  5d38              LDRB     r0,[r7,r4]            ;1372
000868  f7fffffe          BL       putchar_sc16is700
00086c  1c64              ADDS     r4,r4,#1              ;1370
00086e  b2e4              UXTB     r4,r4                 ;1370
                  |L1.2160|
000870  42a5              CMP      r5,r4                 ;1370
000872  d8f8              BHI      |L1.2150|
000874  e7d3              B        |L1.2078|
;;;1381   
                          ENDP

                  modbus_in PROC
;;;258    //-----------------------------------------------
;;;259    void modbus_in(void)
000876  e92d4ff0          PUSH     {r4-r11,lr}
;;;260    {
00087a  b089              SUB      sp,sp,#0x24
;;;261    short crc16_calculated;		//вычисляемая из принятых данных CRC
;;;262    short crc16_incapsulated;	//встроеннная в посылку CRC
;;;263    unsigned short modbus_rx_arg0;		//встроенный в посылку первый аргумент
;;;264    unsigned short modbus_rx_arg1;		//встроенный в посылку второй аргумент
;;;265    //unsigned short modbus_rx_arg2;		//встроенный в посылку третий аргумент
;;;266    //unsigned short modbus_rx_arg3;		//встроенный в посылку четвертый аргумент
;;;267    unsigned char modbus_func;			//встроенный в посылку код функции
;;;268    
;;;269    
;;;270    
;;;271    mem_copy(modbus_an_buffer,modbus_rx_buffer,modbus_rx_buffer_ptr);
00087c  4c89              LDR      r4,|L1.2724|
00087e  4987              LDR      r1,|L1.2716|
000880  393c              SUBS     r1,r1,#0x3c
000882  7862              LDRB     r2,[r4,#1]  ; modbus_rx_buffer_ptr
000884  f101001e          ADD      r0,r1,#0x1e
000888  f7fffffe          BL       mem_copy
;;;272    modbus_rx_counter=modbus_rx_buffer_ptr;
00088c  7861              LDRB     r1,[r4,#1]  ; modbus_rx_buffer_ptr
00088e  70a1              STRB     r1,[r4,#2]
;;;273    modbus_rx_buffer_ptr=0;
000890  2000              MOVS     r0,#0
000892  7060              STRB     r0,[r4,#1]
;;;274    bMODBUS_TIMEOUT=0;
000894  7020              STRB     r0,[r4,#0]
;;;275    	
;;;276    crc16_calculated  = CRC16_2((char*)modbus_an_buffer, modbus_rx_counter-2);
000896  4881              LDR      r0,|L1.2716|
000898  1e89              SUBS     r1,r1,#2
00089a  381e              SUBS     r0,r0,#0x1e
00089c  f7fffffe          BL       CRC16_2
0008a0  b207              SXTH     r7,r0
;;;277    crc16_incapsulated = *((short*)&modbus_an_buffer[modbus_rx_counter-2]);
0008a2  f8df91f8          LDR      r9,|L1.2716|
0008a6  78a0              LDRB     r0,[r4,#2]  ; modbus_rx_counter
0008a8  f1a9091e          SUB      r9,r9,#0x1e
0008ac  eb090100          ADD      r1,r9,r0
0008b0  f9318c02          LDRSH    r8,[r1,#-2]
;;;278    
;;;279    modbus_plazma1=modbus_rx_counter;
0008b4  80e0              STRH     r0,[r4,#6]
;;;280    modbus_plazma2=crc16_calculated;
0008b6  8127              STRH     r7,[r4,#8]
;;;281    modbus_plazma3=crc16_incapsulated;
0008b8  f8a4800a          STRH     r8,[r4,#0xa]
;;;282    
;;;283    modbus_func=modbus_an_buffer[1];
0008bc  f8996001          LDRB     r6,[r9,#1]  ; modbus_an_buffer
;;;284    modbus_rx_arg0=(((unsigned short)modbus_an_buffer[2])*((unsigned short)256))+((unsigned short)modbus_an_buffer[3]);
0008c0  f8990003          LDRB     r0,[r9,#3]  ; modbus_an_buffer
0008c4  f8991002          LDRB     r1,[r9,#2]  ; modbus_an_buffer
0008c8  eb002201          ADD      r2,r0,r1,LSL #8
0008cc  b295              UXTH     r5,r2
;;;285    modbus_rx_arg1=(((unsigned short)modbus_an_buffer[4])*((unsigned short)256))+((unsigned short)modbus_an_buffer[5]);
0008ce  f8992005          LDRB     r2,[r9,#5]  ; modbus_an_buffer
0008d2  f8993004          LDRB     r3,[r9,#4]  ; modbus_an_buffer
0008d6  eb022203          ADD      r2,r2,r3,LSL #8
0008da  b294              UXTH     r4,r2
;;;286    //modbus_rx_arg2=(((unsigned short)modbus_an_buffer[6])*((unsigned short)256))+((unsigned short)modbus_an_buffer[7]);
;;;287    //modbus_rx_arg3=(((unsigned short)modbus_an_buffer[8])*((unsigned short)256))+((unsigned short)modbus_an_buffer[9]);
;;;288    
;;;289    //#define IPS_CURR_AVG_MODBUS_ADRESS	1
;;;290    
;;;291    
;;;292    if(modbus_an_buffer[0]=='r')
0008dc  f8992000          LDRB     r2,[r9,#0]  ; modbus_an_buffer
;;;293    	{
;;;294    	pvlk=1;
;;;295    	if(modbus_an_buffer[1]=='e')
;;;296    		{
;;;297    		pvlk=2;
;;;298    		if(modbus_an_buffer[2]=='a')
;;;299    			{
;;;300    			pvlk=3;
;;;301    			if(modbus_an_buffer[3]=='d')
;;;302    				{
;;;303    				pvlk=4;
;;;304    				if(modbus_an_buffer[6]==crc_87(modbus_an_buffer,6))
;;;305    					{
;;;306    					pvlk=5;
;;;307    					if(modbus_an_buffer[7]==crc_95(modbus_an_buffer,6))
;;;308    						{
;;;309    						pvlk=6;	
;;;310    
;;;311    							{
;;;312    							unsigned short ptr;
;;;313    							unsigned long data1,data2;
;;;314    							char temp_out[20];
;;;315    							pvlk++;
;;;316    							ptr=modbus_an_buffer[4]+(modbus_an_buffer[5]*256U);
;;;317    							data1=lc640_read_long(ptr);
;;;318    							data2=lc640_read_long(ptr+4);
;;;319    							temp_out[0]='r';
;;;320    							temp_out[1]='e';
;;;321    							temp_out[2]='a';
;;;322    							temp_out[3]='d';
;;;323    							temp_out[4]=*((char*)&ptr);
;;;324    							temp_out[5]=*(((char*)&ptr)+1);	
;;;325    							temp_out[6]=*((char*)&data1);
;;;326    							temp_out[7]=*(((char*)&data1)+1);		
;;;327    							temp_out[8]=*(((char*)&data1)+2);	
;;;328    							temp_out[9]=*(((char*)&data1)+3);		
;;;329    							temp_out[10]=*((char*)&data2);
;;;330    							temp_out[11]=*(((char*)&data2)+1);		
;;;331    							temp_out[12]=*(((char*)&data2)+2);	
;;;332    							temp_out[13]=*(((char*)&data2)+3);	
;;;333    							temp_out[14]=crc_87(temp_out,14);	
;;;334    							temp_out[15]=crc_95(temp_out,14);			
;;;335    							
;;;336    							temp_out[17]=0;
;;;337    							for (i=0;i<16;i++)
0008e0  f8dfa1c4          LDR      r10,|L1.2728|
0008e4  2a72              CMP      r2,#0x72              ;292
0008e6  d17d              BNE      |L1.2532|
0008e8  f8dfb1c0          LDR      r11,|L1.2732|
0008ec  2201              MOVS     r2,#1                 ;294
0008ee  f8ab2000          STRH     r2,[r11,#0]           ;294
0008f2  2e65              CMP      r6,#0x65              ;295
0008f4  d176              BNE      |L1.2532|
0008f6  2202              MOVS     r2,#2                 ;297
0008f8  f8ab2000          STRH     r2,[r11,#0]           ;297
0008fc  2961              CMP      r1,#0x61              ;298
0008fe  d171              BNE      |L1.2532|
000900  2103              MOVS     r1,#3                 ;300
000902  f8ab1000          STRH     r1,[r11,#0]           ;300
000906  2864              CMP      r0,#0x64              ;301
000908  d16c              BNE      |L1.2532|
00090a  2004              MOVS     r0,#4                 ;303
00090c  f8ab0000          STRH     r0,[r11,#0]           ;303
000910  2106              MOVS     r1,#6                 ;304
000912  4648              MOV      r0,r9                 ;304
000914  f7fffffe          BL       crc_87
000918  f8991006          LDRB     r1,[r9,#6]            ;304  ; modbus_an_buffer
00091c  4288              CMP      r0,r1                 ;304
00091e  d161              BNE      |L1.2532|
000920  2005              MOVS     r0,#5                 ;306
000922  f8ab0000          STRH     r0,[r11,#0]           ;306
000926  2106              MOVS     r1,#6                 ;307
000928  4648              MOV      r0,r9                 ;307
00092a  f7fffffe          BL       crc_95
00092e  f8991007          LDRB     r1,[r9,#7]            ;307  ; modbus_an_buffer
000932  4288              CMP      r0,r1                 ;307
000934  d17e              BNE      |L1.2612|
000936  2007              MOVS     r0,#7                 ;315
000938  f8ab0000          STRH     r0,[r11,#0]           ;315
00093c  f8990004          LDRB     r0,[r9,#4]            ;316  ; modbus_an_buffer
000940  f8991005          LDRB     r1,[r9,#5]            ;316  ; modbus_an_buffer
000944  eb002001          ADD      r0,r0,r1,LSL #8       ;316
000948  b280              UXTH     r0,r0                 ;316
00094a  4683              MOV      r11,r0                ;316
00094c  9008              STR      r0,[sp,#0x20]         ;316
00094e  4658              MOV      r0,r11                ;317
000950  f7fffffe          BL       lc640_read_long
000954  9007              STR      r0,[sp,#0x1c]         ;317
000956  f10b0004          ADD      r0,r11,#4             ;318
00095a  f7fffffe          BL       lc640_read_long
00095e  9006              STR      r0,[sp,#0x18]         ;318
000960  2072              MOVS     r0,#0x72              ;319
000962  f88d0004          STRB     r0,[sp,#4]            ;319
000966  2065              MOVS     r0,#0x65              ;320
000968  f88d0005          STRB     r0,[sp,#5]            ;320
00096c  2061              MOVS     r0,#0x61              ;321
00096e  f88d0006          STRB     r0,[sp,#6]            ;321
000972  2064              MOVS     r0,#0x64              ;322
000974  f88d0007          STRB     r0,[sp,#7]            ;322
000978  f89d0020          LDRB     r0,[sp,#0x20]         ;323
00097c  f88d0008          STRB     r0,[sp,#8]            ;323
000980  f89d0021          LDRB     r0,[sp,#0x21]         ;324
000984  f88d0009          STRB     r0,[sp,#9]            ;324
000988  f89d001c          LDRB     r0,[sp,#0x1c]         ;325
00098c  f88d000a          STRB     r0,[sp,#0xa]          ;325
000990  f89d001d          LDRB     r0,[sp,#0x1d]         ;326
000994  f88d000b          STRB     r0,[sp,#0xb]          ;326
000998  f89d001e          LDRB     r0,[sp,#0x1e]         ;327
00099c  f88d000c          STRB     r0,[sp,#0xc]          ;327
0009a0  f89d001f          LDRB     r0,[sp,#0x1f]         ;328
0009a4  f88d000d          STRB     r0,[sp,#0xd]          ;328
0009a8  f89d0018          LDRB     r0,[sp,#0x18]         ;329
0009ac  f88d000e          STRB     r0,[sp,#0xe]          ;329
0009b0  f89d0019          LDRB     r0,[sp,#0x19]         ;330
0009b4  f88d000f          STRB     r0,[sp,#0xf]          ;330
0009b8  f89d001a          LDRB     r0,[sp,#0x1a]         ;331
0009bc  f88d0010          STRB     r0,[sp,#0x10]         ;331
0009c0  f89d001b          LDRB     r0,[sp,#0x1b]         ;332
0009c4  f88d0011          STRB     r0,[sp,#0x11]         ;332
0009c8  210e              MOVS     r1,#0xe               ;333
0009ca  a801              ADD      r0,sp,#4              ;333
0009cc  f7fffffe          BL       crc_87
0009d0  f88d0012          STRB     r0,[sp,#0x12]         ;333
0009d4  210e              MOVS     r1,#0xe               ;334
0009d6  a801              ADD      r0,sp,#4              ;334
0009d8  f7fffffe          BL       crc_95
0009dc  f88d0013          STRB     r0,[sp,#0x13]         ;334
0009e0  2000              MOVS     r0,#0                 ;336
0009e2  e000              B        |L1.2534|
                  |L1.2532|
0009e4  e026              B        |L1.2612|
                  |L1.2534|
0009e6  f88d0015          STRB     r0,[sp,#0x15]         ;336
0009ea  f88a0000          STRB     r0,[r10,#0]
0009ee  f10d0b04          ADD      r11,sp,#4             ;314
                  |L1.2546|
;;;338    								{
;;;339    								putchar_sc16is700(temp_out[i]);
0009f2  f89a0000          LDRB     r0,[r10,#0]  ; i
0009f6  f81b0000          LDRB     r0,[r11,r0]
0009fa  f7fffffe          BL       putchar_sc16is700
;;;340    								temp_out[17]^=temp_out[i];
0009fe  f89a0000          LDRB     r0,[r10,#0]  ; i
000a02  f89d1015          LDRB     r1,[sp,#0x15]
000a06  f81b2000          LDRB     r2,[r11,r0]
000a0a  4051              EORS     r1,r1,r2
000a0c  f88d1015          STRB     r1,[sp,#0x15]
000a10  1c40              ADDS     r0,r0,#1              ;337
000a12  b2c0              UXTB     r0,r0                 ;337
000a14  f88a0000          STRB     r0,[r10,#0]           ;337
000a18  2810              CMP      r0,#0x10              ;337
000a1a  d3ea              BCC      |L1.2546|
;;;341    								}
;;;342    							putchar_sc16is700(16);
000a1c  2010              MOVS     r0,#0x10
000a1e  f7fffffe          BL       putchar_sc16is700
;;;343    							putchar_sc16is700(temp_out[17]^16);
000a22  f89d0015          LDRB     r0,[sp,#0x15]
000a26  f0800010          EOR      r0,r0,#0x10
000a2a  f7fffffe          BL       putchar_sc16is700
;;;344    							putchar_sc16is700(0x0a);
000a2e  200a              MOVS     r0,#0xa
000a30  f7fffffe          BL       putchar_sc16is700
                  |L1.2612|
;;;345    							}
;;;346    						}
;;;347    					}
;;;348    				}
;;;349    			} 
;;;350    		}	 
;;;351    	} 
;;;352    
;;;353    if(modbus_an_buffer[0]=='w')
000a34  f8990000          LDRB     r0,[r9,#0]  ; modbus_an_buffer
000a38  2877              CMP      r0,#0x77
000a3a  d17e              BNE      |L1.2874|
;;;354    	{
;;;355    //	pvlk=1;
;;;356    	if(modbus_an_buffer[1]=='r')
000a3c  f8990001          LDRB     r0,[r9,#1]  ; modbus_an_buffer
000a40  2872              CMP      r0,#0x72
000a42  d17a              BNE      |L1.2874|
;;;357    		{
;;;358    //		pvlk=2;
;;;359    		if(modbus_an_buffer[2]=='i')
000a44  f8990002          LDRB     r0,[r9,#2]  ; modbus_an_buffer
000a48  2869              CMP      r0,#0x69
000a4a  d176              BNE      |L1.2874|
;;;360    			{
;;;361    //			pvlk=3;
;;;362    			if(modbus_an_buffer[3]=='t')
000a4c  f8990003          LDRB     r0,[r9,#3]  ; modbus_an_buffer
000a50  2874              CMP      r0,#0x74
000a52  d172              BNE      |L1.2874|
;;;363    				{
;;;364    //				pvlk=4;
;;;365    				if(modbus_an_buffer[4]=='e')
000a54  f8990004          LDRB     r0,[r9,#4]  ; modbus_an_buffer
000a58  2865              CMP      r0,#0x65
000a5a  d16e              BNE      |L1.2874|
;;;366    					{
;;;367    //					pvlk=5;
;;;368    					if(modbus_an_buffer[15]==crc_87(modbus_an_buffer,15))
000a5c  480f              LDR      r0,|L1.2716|
000a5e  210f              MOVS     r1,#0xf
000a60  381e              SUBS     r0,r0,#0x1e
000a62  e025              B        |L1.2736|
                  |L1.2660|
                          DCD      bps_U
                  |L1.2664|
                          DCD      speedChIsOn
                  |L1.2668|
                          DCD      spc_stat
                  |L1.2672|
                          DCD      uout_av
                  |L1.2676|
                          DCD      bat_ips
                  |L1.2680|
                          DCD      avar_stat
                  |L1.2684|
                          DCD      cntrl_stat_old
                  |L1.2688|
                          DCD      TBAT
                  |L1.2692|
                          DCD      main_kb_cnt
                  |L1.2696|
                          DCD      t_ext
                  |L1.2700|
                          DCD      ND_EXT
                  |L1.2704|
                          DCD      0xfffffc18
                  |L1.2708|
                          DCD      sk_stat
                  |L1.2712|
                          DCD      sk_av_stat
                  |L1.2716|
                          DCD      ||area_number.4||+0x3c
                  |L1.2720|
                          DCD      modbus_tcp_out_ptr
                  |L1.2724|
                          DCD      ||area_number.8||
                  |L1.2728|
                          DCD      i
                  |L1.2732|
                          DCD      pvlk
                  |L1.2736|
000ab0  f7fffffe          BL       crc_87
000ab4  f899100f          LDRB     r1,[r9,#0xf]  ; modbus_an_buffer
000ab8  4288              CMP      r0,r1
000aba  d13e              BNE      |L1.2874|
;;;369    						{
;;;370    //						pvlk=6;
;;;371    						if(modbus_an_buffer[16]==crc_95(modbus_an_buffer,15))
000abc  210f              MOVS     r1,#0xf
000abe  48fe              LDR      r0,|L1.3768|
000ac0  f7fffffe          BL       crc_95
000ac4  f8991010          LDRB     r1,[r9,#0x10]  ; modbus_an_buffer
000ac8  4288              CMP      r0,r1
000aca  d17f              BNE      |L1.3020|
;;;372    
;;;373    							{
;;;374    							unsigned short ptr;
;;;375    							unsigned long data1,data2;
;;;376    							char temp_out[20];
;;;377    //							pvlk=7;
;;;378    							ptr=modbus_an_buffer[5]+(modbus_an_buffer[6]*256U);
000acc  f8990005          LDRB     r0,[r9,#5]  ; modbus_an_buffer
000ad0  f8991006          LDRB     r1,[r9,#6]  ; modbus_an_buffer
000ad4  eb002001          ADD      r0,r0,r1,LSL #8
000ad8  fa1ffb80          UXTH     r11,r0
000adc  f8cdb020          STR      r11,[sp,#0x20]
;;;379    							*((char*)&data1)=modbus_an_buffer[7];
000ae0  f8990007          LDRB     r0,[r9,#7]  ; modbus_an_buffer
000ae4  f88d001c          STRB     r0,[sp,#0x1c]
;;;380    							*(((char*)&data1)+1)=modbus_an_buffer[8];
000ae8  f8990008          LDRB     r0,[r9,#8]  ; modbus_an_buffer
000aec  f88d001d          STRB     r0,[sp,#0x1d]
;;;381    							*(((char*)&data1)+2)=modbus_an_buffer[9];
000af0  f8990009          LDRB     r0,[r9,#9]  ; modbus_an_buffer
000af4  f88d001e          STRB     r0,[sp,#0x1e]
;;;382    							*(((char*)&data1)+3)=modbus_an_buffer[10];
000af8  f899000a          LDRB     r0,[r9,#0xa]  ; modbus_an_buffer
000afc  f88d001f          STRB     r0,[sp,#0x1f]
;;;383    							*((char*)&data2)=modbus_an_buffer[11];
000b00  f899000b          LDRB     r0,[r9,#0xb]  ; modbus_an_buffer
000b04  f88d0018          STRB     r0,[sp,#0x18]
;;;384    							*(((char*)&data2)+1)=modbus_an_buffer[12];
000b08  f899000c          LDRB     r0,[r9,#0xc]  ; modbus_an_buffer
000b0c  f88d0019          STRB     r0,[sp,#0x19]
;;;385    							*(((char*)&data2)+2)=modbus_an_buffer[13];
000b10  f899000d          LDRB     r0,[r9,#0xd]  ; modbus_an_buffer
000b14  f88d001a          STRB     r0,[sp,#0x1a]
;;;386    							*(((char*)&data2)+3)=modbus_an_buffer[14];	
000b18  f899000e          LDRB     r0,[r9,#0xe]  ; modbus_an_buffer
000b1c  f88d001b          STRB     r0,[sp,#0x1b]
;;;387    							lc640_write_long(ptr,data1);
000b20  4658              MOV      r0,r11
000b22  9907              LDR      r1,[sp,#0x1c]
000b24  f7fffffe          BL       lc640_write_long
;;;388    							lc640_write_long(ptr+4,data2);
000b28  f10b0004          ADD      r0,r11,#4
000b2c  9906              LDR      r1,[sp,#0x18]
000b2e  f7fffffe          BL       lc640_write_long
;;;389    							
;;;390    							//data1=lc640_read_long(ptr);
;;;391    							//data2=lc640_read_long(ptr+4);
;;;392    							temp_out[0]='w';
000b32  2077              MOVS     r0,#0x77
000b34  f88d0004          STRB     r0,[sp,#4]
;;;393    							temp_out[1]='r';
000b38  e000              B        |L1.2876|
                  |L1.2874|
000b3a  e047              B        |L1.3020|
                  |L1.2876|
000b3c  2072              MOVS     r0,#0x72
000b3e  f88d0005          STRB     r0,[sp,#5]
;;;394    							temp_out[2]='i';
000b42  2069              MOVS     r0,#0x69
000b44  f88d0006          STRB     r0,[sp,#6]
;;;395    							temp_out[3]='t';
000b48  2074              MOVS     r0,#0x74
000b4a  f88d0007          STRB     r0,[sp,#7]
;;;396    							temp_out[4]='e';
000b4e  2065              MOVS     r0,#0x65
000b50  f88d0008          STRB     r0,[sp,#8]
;;;397    							temp_out[5]=*((char*)&ptr);
000b54  f89d0020          LDRB     r0,[sp,#0x20]
000b58  f88d0009          STRB     r0,[sp,#9]
;;;398    							temp_out[6]=*(((char*)&ptr)+1);	
000b5c  f89d0021          LDRB     r0,[sp,#0x21]
000b60  f88d000a          STRB     r0,[sp,#0xa]
;;;399    						
;;;400    							temp_out[7]=crc_87(temp_out,7);	
000b64  2107              MOVS     r1,#7
000b66  a801              ADD      r0,sp,#4
000b68  f7fffffe          BL       crc_87
000b6c  f88d000b          STRB     r0,[sp,#0xb]
;;;401    							temp_out[8]=crc_95(temp_out,7);			
000b70  2107              MOVS     r1,#7
000b72  a801              ADD      r0,sp,#4
000b74  f7fffffe          BL       crc_95
000b78  f88d000c          STRB     r0,[sp,#0xc]
;;;402    							
;;;403    							temp_out[10]=0;
000b7c  2000              MOVS     r0,#0
000b7e  f88d000e          STRB     r0,[sp,#0xe]
;;;404    							for (i=0;i<9;i++)
000b82  f88a0000          STRB     r0,[r10,#0]
000b86  f10d0b04          ADD      r11,sp,#4             ;376
                  |L1.2954|
;;;405    								{
;;;406    								putchar_sc16is700(temp_out[i]);
000b8a  f89a0000          LDRB     r0,[r10,#0]  ; i
000b8e  f81b0000          LDRB     r0,[r11,r0]
000b92  f7fffffe          BL       putchar_sc16is700
;;;407    								temp_out[10]^=temp_out[i];
000b96  f89a0000          LDRB     r0,[r10,#0]  ; i
000b9a  f89d100e          LDRB     r1,[sp,#0xe]
000b9e  f81b2000          LDRB     r2,[r11,r0]
000ba2  4051              EORS     r1,r1,r2
000ba4  f88d100e          STRB     r1,[sp,#0xe]
000ba8  1c40              ADDS     r0,r0,#1              ;404
000baa  b2c0              UXTB     r0,r0                 ;404
000bac  f88a0000          STRB     r0,[r10,#0]           ;404
000bb0  2809              CMP      r0,#9                 ;404
000bb2  d3ea              BCC      |L1.2954|
;;;408    								}
;;;409    							putchar_sc16is700(9);
000bb4  2009              MOVS     r0,#9
000bb6  f7fffffe          BL       putchar_sc16is700
;;;410    							putchar_sc16is700(temp_out[10]^9);
000bba  f89d000e          LDRB     r0,[sp,#0xe]
000bbe  f0800009          EOR      r0,r0,#9
000bc2  f7fffffe          BL       putchar_sc16is700
;;;411    							putchar_sc16is700(0x0a);
000bc6  200a              MOVS     r0,#0xa
000bc8  f7fffffe          BL       putchar_sc16is700
                  |L1.3020|
;;;412    							}
;;;413    						}
;;;414    					}
;;;415    				}
;;;416    		   	}
;;;417    		}
;;;418    	}
;;;419    
;;;420    if(crc16_calculated==crc16_incapsulated)
000bcc  4547              CMP      r7,r8
000bce  d12b              BNE      |L1.3112|
;;;421    	{
;;;422    	ica_plazma[4]++; //plazma1000[4]++;
000bd0  49ba              LDR      r1,|L1.3772|
000bd2  7908              LDRB     r0,[r1,#4]  ; ica_plazma
000bd4  1c40              ADDS     r0,r0,#1
000bd6  7108              STRB     r0,[r1,#4]
;;;423    	//plazma1000[7]=modbus_an_buffer[0];
;;;424     	if(modbus_an_buffer[0]==MODBUS_ADRESS)
000bd8  f8df82e4          LDR      r8,|L1.3776|
000bdc  f8990000          LDRB     r0,[r9,#0]  ; modbus_an_buffer
000be0  f9b87000          LDRSH    r7,[r8,#0]  ; MODBUS_ADRESS
000be4  42b8              CMP      r0,r7
000be6  d173              BNE      |L1.3280|
;;;425    		{
;;;426    		 //plazma1000[5]++;
;;;427    		if(modbus_func==3)		//чтение произвольного кол-ва регистров хранения
000be8  2e03              CMP      r6,#3
000bea  d10b              BNE      |L1.3076|
;;;428    			{
;;;429    			modbus_plazma++;
000bec  48b5              LDR      r0,|L1.3780|
000bee  8881              LDRH     r1,[r0,#4]  ; modbus_plazma
000bf0  1c49              ADDS     r1,r1,#1
000bf2  8081              STRH     r1,[r0,#4]
;;;430    			modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
000bf4  2300              MOVS     r3,#0
000bf6  9300              STR      r3,[sp,#0]
000bf8  4623              MOV      r3,r4
000bfa  462a              MOV      r2,r5
000bfc  4631              MOV      r1,r6
000bfe  b2f8              UXTB     r0,r7
000c00  f7fffffe          BL       modbus_hold_registers_transmit
                  |L1.3076|
;;;431    			}
;;;432    
;;;433    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
000c04  2e04              CMP      r6,#4
000c06  d005              BEQ      |L1.3092|
;;;434    			{
;;;435    			
;;;436    			modbus_input_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
;;;437    			//plazma1000[0]++;
;;;438    			}
;;;439    
;;;440    		else if(modbus_func==6) 	//запись регистров хранения
000c08  2e06              CMP      r6,#6
000c0a  d10d              BNE      |L1.3112|
;;;441    			{
;;;442    			//plazma1000[6]++;
;;;443    			if(modbus_rx_arg0==11)		//Установка времени 
;;;444    				{
;;;445    				LPC_RTC->YEAR=(uint16_t)modbus_rx_arg1;
000c0c  48ae              LDR      r0,|L1.3784|
000c0e  2d0b              CMP      r5,#0xb               ;443
000c10  d00d              BEQ      |L1.3118|
000c12  e00d              B        |L1.3120|
                  |L1.3092|
000c14  2300              MOVS     r3,#0                 ;436
000c16  9300              STR      r3,[sp,#0]            ;436
000c18  f8b80000          LDRH     r0,[r8,#0]            ;436  ; MODBUS_ADRESS
000c1c  4623              MOV      r3,r4                 ;436
000c1e  462a              MOV      r2,r5                 ;436
000c20  4631              MOV      r1,r6                 ;436
000c22  b2c0              UXTB     r0,r0                 ;436
000c24  f7fffffe          BL       modbus_input_registers_transmit
                  |L1.3112|
;;;446    				}
;;;447    			if(modbus_rx_arg0==12)		//Установка времени 
;;;448    				{
;;;449    				LPC_RTC->MONTH=(uint16_t)modbus_rx_arg1;
;;;450    				}
;;;451    			if(modbus_rx_arg0==13)		//Установка времени 
;;;452    				{
;;;453    				LPC_RTC->DOM=(uint16_t)modbus_rx_arg1;
;;;454    				}
;;;455    			if(modbus_rx_arg0==14)		//Установка времени 
;;;456    				{
;;;457    				LPC_RTC->HOUR=(uint16_t)modbus_rx_arg1;
;;;458    				}
;;;459    			if(modbus_rx_arg0==15)		//Установка времени 
;;;460    				{
;;;461    				LPC_RTC->MIN=(uint16_t)modbus_rx_arg1;
;;;462    				}
;;;463    			if(modbus_rx_arg0==16)		//Установка времени 
;;;464    				{
;;;465    				LPC_RTC->SEC=(uint16_t)modbus_rx_arg1;
;;;466    				}
;;;467    			if(modbus_rx_arg0==20)		//ток стабилизации для режима стабилизации тока
;;;468    				{
;;;469    				if((modbus_rx_arg1>0)&&(modbus_rx_arg1<=18))
;;;470    				lc640_write_int(EE_NUMIST,modbus_rx_arg1);  
;;;471    				}
;;;472    			if(modbus_rx_arg0==21)		//ток стабилизации для режима стабилизации тока
;;;473    				{
;;;474    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;475    				lc640_write_int(EE_PAR,modbus_rx_arg1);  
;;;476    				}
;;;477    			if(modbus_rx_arg0==22)		//ток стабилизации для режима стабилизации тока
;;;478    				{
;;;479    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;480    				lc640_write_int(EE_ZV_ON,modbus_rx_arg1);  
;;;481    				}
;;;482    			if(modbus_rx_arg0==23)		//ток стабилизации для режима стабилизации тока
;;;483    				{
;;;484    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;485    				lc640_write_int(EE_TERMOKOMP,modbus_rx_arg1);  
;;;486    				}
;;;487    			if(modbus_rx_arg0==24)		//ток стабилизации для режима стабилизации тока
;;;488    				{
;;;489    				if(/*(modbus_rx_arg1>=0)||*/(modbus_rx_arg1<=20))
;;;490    				lc640_write_int(EE_UBM_AV,modbus_rx_arg1);  
;;;491    				}
;;;492    
;;;493    
;;;494    			if(modbus_rx_arg0==30)		//напряжение стабилизации для режима стабилизации напряжения
;;;495    				{
;;;496    				/*if(modbus_rx_arg1<0)TBAT=0;
;;;497    				else */if((modbus_rx_arg1>0)&&(modbus_rx_arg1<=5))modbus_rx_arg1=0;
;;;498    				else if(modbus_rx_arg1>=60)TBAT=60;
;;;499    				else TBAT=modbus_rx_arg1;
;;;500    				lc640_write_int(EE_TBAT,TBAT);
;;;501    
;;;502    				main_kb_cnt=(TBAT*60)-20;
;;;503    	     		}
;;;504    			if(modbus_rx_arg0==31)		//
;;;505    				{
;;;506    				lc640_write_int(EE_UMAX,modbus_rx_arg1);
;;;507    	     		}
;;;508    			if(modbus_rx_arg0==32)		//
;;;509    				{
;;;510    				lc640_write_int(EE_DU,UB20-modbus_rx_arg1);
;;;511    	     		}
;;;512    			if(modbus_rx_arg0==33)		//
;;;513    				{
;;;514    				lc640_write_int(EE_UB0,modbus_rx_arg1);
;;;515    	     		}
;;;516    			if(modbus_rx_arg0==34)		//
;;;517    				{
;;;518    				lc640_write_int(EE_UB20,modbus_rx_arg1);
;;;519    	     		}
;;;520    			if(modbus_rx_arg0==35)		//
;;;521    				{
;;;522    				lc640_write_int(EE_USIGN,modbus_rx_arg1);
;;;523    	     		}
;;;524    			if(modbus_rx_arg0==36)		//
;;;525    				{
;;;526    				lc640_write_int(EE_UMN,modbus_rx_arg1);
;;;527    	     		}
;;;528    			if(modbus_rx_arg0==37)		//
;;;529    				{
;;;530    				lc640_write_int(EE_U0B,modbus_rx_arg1);
;;;531    	     		}
;;;532    			if(modbus_rx_arg0==38)		//
;;;533    				{
;;;534    				lc640_write_int(EE_IKB,modbus_rx_arg1);
;;;535    	     		}
;;;536    			if(modbus_rx_arg0==39)		//
;;;537    				{
;;;538    				lc640_write_int(EE_IZMAX,modbus_rx_arg1);
;;;539    	     		}
;;;540    			if(modbus_rx_arg0==40)		//
;;;541    				{
;;;542    				lc640_write_int(EE_IMAX,modbus_rx_arg1);
;;;543    	     		}
;;;544    			if(modbus_rx_arg0==41)		//
;;;545    				{
;;;546    				lc640_write_int(EE_IMIN,modbus_rx_arg1);
;;;547    	     		}
;;;548    			if(modbus_rx_arg0==42)		//
;;;549    				{
;;;550    				lc640_write_int(EE_UVZ,modbus_rx_arg1);
;;;551    	     		}
;;;552    			if(modbus_rx_arg0==43)		//
;;;553    				{
;;;554    				lc640_write_int(EE_TZAS,modbus_rx_arg1);
;;;555    	     		}
;;;556    			if(modbus_rx_arg0==44)		//
;;;557    				{
;;;558    				lc640_write_int(EE_TMAX,modbus_rx_arg1);
;;;559    	     		}
;;;560    			if(modbus_rx_arg0==45)		//
;;;561    				{
;;;562    				lc640_write_int(EE_TSIGN,modbus_rx_arg1);
;;;563    	     		}
;;;564    			if(modbus_rx_arg0==46)		//
;;;565    				{
;;;566    				lc640_write_int(EE_TBATMAX,modbus_rx_arg1);
;;;567    	     		}
;;;568    			if(modbus_rx_arg0==47)		//
;;;569    				{
;;;570    				lc640_write_int(EE_TBATSIGN,modbus_rx_arg1);
;;;571    	     		}
;;;572    			if(modbus_rx_arg0==48)		//
;;;573    				{
;;;574    				lc640_write_int(EE_SPEED_CHRG_CURR,modbus_rx_arg1);
;;;575    	     		}
;;;576    			if(modbus_rx_arg0==49)		//
;;;577    				{
;;;578    				lc640_write_int(EE_SPEED_CHRG_VOLT,modbus_rx_arg1);
;;;579    	     		}
;;;580    			if(modbus_rx_arg0==50)		//
;;;581    				{
;;;582    				lc640_write_int(EE_SPEED_CHRG_TIME,modbus_rx_arg1);
;;;583    	     		}
;;;584    			if(modbus_rx_arg0==51)		//
;;;585    				{
;;;586    				lc640_write_int(EE_U_OUT_KONTR_MAX,modbus_rx_arg1);
;;;587    	     		}
;;;588    			if(modbus_rx_arg0==52)		//
;;;589    				{
;;;590    				lc640_write_int(EE_U_OUT_KONTR_MIN,modbus_rx_arg1);
;;;591    	     		}
;;;592    			if(modbus_rx_arg0==53)		//
;;;593    				{
;;;594    				lc640_write_int(EE_U_OUT_KONTR_DELAY,modbus_rx_arg1);
;;;595    	     		}
;;;596    
;;;597    			if(modbus_rx_arg0==19)		//вкл/выкл источника напр.
;;;598    				{
;;;599    	/*			if(modbus_rx_arg1==1)
;;;600    					{
;;;601    					if(work_stat!=wsPS)
;;;602    						{
;;;603    						work_stat=wsPS;
;;;604    						time_proc=0;
;;;605    						time_proc_remain=T_PROC_PS;
;;;606    						restart_on_PS();
;;;607    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIN);
;;;608    						}
;;;609    					}
;;;610    				if(modbus_rx_arg1==0)
;;;611    					{
;;;612    					if(work_stat==wsPS)
;;;613    						{
;;;614    						work_stat=wsOFF;
;;;615    						restart_off();
;;;616    						}
;;;617    					} */
;;;618    				}
;;;619    			if(modbus_rx_arg0==20)		//вкл/выкл источника тока
;;;620    				{
;;;621    /*				if(modbus_rx_arg1==1)
;;;622    					{
;;;623    					if(work_stat!=wsGS)
;;;624    						{
;;;625    						work_stat=wsGS;
;;;626    						time_proc=0;
;;;627    						time_proc_remain=T_PROC_GS;
;;;628    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIT);
;;;629    						}
;;;630    					}
;;;631    				if(modbus_rx_arg1==0)
;;;632    					{
;;;633    					if(work_stat==wsGS)
;;;634    						{
;;;635    						work_stat=wsOFF;
;;;636    						restart_off();
;;;637    						}
;;;638    					}*/
;;;639    				}
;;;640    			if(modbus_rx_arg0==100)		//Передача шима для управления от ведущего ИПС
;;;641    				{
;;;642    				plazma1000[2]=modbus_rx_arg1;
;;;643    				if(modbus_rx_arg1&0x4000)
;;;644    					{
;;;645    					short tempSSSS;
;;;646    					
;;;647    					tempSSSS=modbus_rx_arg1&0x3fff;
;;;648    					plazma1000[3]=tempSSSS;
;;;649    					if((tempSSSS>0)&&(tempSSSS<5))tempSSSS=0;
;;;650    					else if(tempSSSS>=60)tempSSSS=60;
;;;651    				//	else tempSSSS=modbus_rx_arg1;
;;;652    					if(TBAT!=tempSSSS)lc640_write_int(EE_TBAT,tempSSSS);
;;;653    
;;;654    					main_kb_cnt=(tempSSSS*60)-20;
;;;655    					}
;;;656    				else ica_cntrl_hndl=modbus_rx_arg1;
;;;657    				ica_cntrl_hndl_cnt=200;
;;;658    
;;;659    				//plazma1000[1]++;
;;;660    				}
;;;661    			if(modbus_rx_arg0==101)		//Значение тока в ведомом ИПСе (прочитанное мастером в ведомом и переданное ведущему)
;;;662    				{
;;;663    				ica_your_current==modbus_rx_arg1;
;;;664    				ica_cntrl_hndl_cnt=200;
;;;665    				//plazma1000[2]++;
;;;666    				}
;;;667    			//modbus_hold_register_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0);
;;;668    			modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,1,MODBUS_RTU_PROT);
;;;669    			}
;;;670    		} 
;;;671    	else if(modbus_an_buffer[0]==ICA_MODBUS_ADDRESS)
;;;672    		{
;;;673    		ica_plazma[3]++;
;;;674    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
;;;675    			{
;;;676    			ica_plazma[2]++;
;;;677    			if(modbus_an_buffer[2]==2)
;;;678    				{
;;;679    				ica_your_current=(((unsigned short)modbus_an_buffer[3])*((unsigned short)256))+((unsigned short)modbus_an_buffer[4]);
;;;680    				}
;;;681    			}
;;;682    		}
;;;683    	
;;;684    	}
;;;685    
;;;686    
;;;687    }
000c28  b009              ADD      sp,sp,#0x24
000c2a  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3118|
000c2e  8784              STRH     r4,[r0,#0x3c]         ;445
                  |L1.3120|
000c30  2d0c              CMP      r5,#0xc               ;447
000c32  d101              BNE      |L1.3128|
000c34  f8804038          STRB     r4,[r0,#0x38]         ;449
                  |L1.3128|
000c38  2d0d              CMP      r5,#0xd               ;451
000c3a  d101              BNE      |L1.3136|
000c3c  f880402c          STRB     r4,[r0,#0x2c]         ;453
                  |L1.3136|
000c40  2d0e              CMP      r5,#0xe               ;455
000c42  d101              BNE      |L1.3144|
000c44  f8804028          STRB     r4,[r0,#0x28]         ;457
                  |L1.3144|
000c48  2d0f              CMP      r5,#0xf               ;459
000c4a  d101              BNE      |L1.3152|
000c4c  f8804024          STRB     r4,[r0,#0x24]         ;461
                  |L1.3152|
000c50  2d10              CMP      r5,#0x10              ;463
000c52  d101              BNE      |L1.3160|
000c54  f8804020          STRB     r4,[r0,#0x20]         ;465
                  |L1.3160|
000c58  2d14              CMP      r5,#0x14              ;467
000c5a  d106              BNE      |L1.3178|
000c5c  1e60              SUBS     r0,r4,#1              ;469
000c5e  2811              CMP      r0,#0x11              ;469
000c60  d803              BHI      |L1.3178|
000c62  b221              SXTH     r1,r4                 ;470
000c64  2098              MOVS     r0,#0x98              ;470
000c66  f7fffffe          BL       lc640_write_int
                  |L1.3178|
000c6a  2d15              CMP      r5,#0x15              ;472
000c6c  d106              BNE      |L1.3196|
000c6e  b10c              CBZ      r4,|L1.3188|
000c70  2c01              CMP      r4,#1                 ;474
000c72  d103              BNE      |L1.3196|
                  |L1.3188|
000c74  b221              SXTH     r1,r4                 ;475
000c76  20ca              MOVS     r0,#0xca              ;475
000c78  f7fffffe          BL       lc640_write_int
                  |L1.3196|
000c7c  2d16              CMP      r5,#0x16              ;477
000c7e  d106              BNE      |L1.3214|
000c80  b10c              CBZ      r4,|L1.3206|
000c82  2c01              CMP      r4,#1                 ;479
000c84  d103              BNE      |L1.3214|
                  |L1.3206|
000c86  b221              SXTH     r1,r4                 ;480
000c88  2086              MOVS     r0,#0x86              ;480
000c8a  f7fffffe          BL       lc640_write_int
                  |L1.3214|
000c8e  2d17              CMP      r5,#0x17              ;482
000c90  d106              BNE      |L1.3232|
000c92  b10c              CBZ      r4,|L1.3224|
000c94  2c01              CMP      r4,#1                 ;484
000c96  d103              BNE      |L1.3232|
                  |L1.3224|
000c98  b221              SXTH     r1,r4                 ;485
000c9a  20f2              MOVS     r0,#0xf2              ;485
000c9c  f7fffffe          BL       lc640_write_int
                  |L1.3232|
000ca0  2d18              CMP      r5,#0x18              ;487
000ca2  d106              BNE      |L1.3250|
000ca4  2c14              CMP      r4,#0x14              ;489
000ca6  d804              BHI      |L1.3250|
000ca8  b221              SXTH     r1,r4                 ;490
000caa  f44f7019          MOV      r0,#0x264             ;490
000cae  f7fffffe          BL       lc640_write_int
                  |L1.3250|
000cb2  4f86              LDR      r7,|L1.3788|
000cb4  f06f0913          MVN      r9,#0x13              ;502
000cb8  2d1e              CMP      r5,#0x1e              ;494
000cba  d117              BNE      |L1.3308|
000cbc  1e60              SUBS     r0,r4,#1              ;497
000cbe  2804              CMP      r0,#4                 ;497
000cc0  d801              BHI      |L1.3270|
000cc2  2400              MOVS     r4,#0                 ;497
000cc4  e006              B        |L1.3284|
                  |L1.3270|
000cc6  2c3c              CMP      r4,#0x3c              ;498
000cc8  d303              BCC      |L1.3282|
000cca  203c              MOVS     r0,#0x3c              ;498
000ccc  8038              STRH     r0,[r7,#0]            ;498
000cce  e001              B        |L1.3284|
                  |L1.3280|
000cd0  e0d7              B        |L1.3714|
                  |L1.3282|
000cd2  803c              STRH     r4,[r7,#0]            ;499
                  |L1.3284|
000cd4  f9b71000          LDRSH    r1,[r7,#0]            ;500  ; TBAT
000cd8  20c2              MOVS     r0,#0xc2              ;500
000cda  f7fffffe          BL       lc640_write_int
000cde  8838              LDRH     r0,[r7,#0]            ;502  ; TBAT
000ce0  497b              LDR      r1,|L1.3792|
000ce2  ebc01000          RSB      r0,r0,r0,LSL #4       ;502
000ce6  eb090080          ADD      r0,r9,r0,LSL #2       ;502
000cea  8008              STRH     r0,[r1,#0]            ;502
                  |L1.3308|
000cec  2d1f              CMP      r5,#0x1f              ;504
000cee  d103              BNE      |L1.3320|
000cf0  b221              SXTH     r1,r4                 ;506
000cf2  2078              MOVS     r0,#0x78              ;506
000cf4  f7fffffe          BL       lc640_write_int
                  |L1.3320|
000cf8  2d20              CMP      r5,#0x20              ;508
000cfa  d106              BNE      |L1.3338|
000cfc  4875              LDR      r0,|L1.3796|
000cfe  8800              LDRH     r0,[r0,#0]            ;510  ; UB20
000d00  1b00              SUBS     r0,r0,r4              ;510
000d02  b201              SXTH     r1,r0                 ;510
000d04  20c8              MOVS     r0,#0xc8              ;510
000d06  f7fffffe          BL       lc640_write_int
                  |L1.3338|
000d0a  2d21              CMP      r5,#0x21              ;512
000d0c  d103              BNE      |L1.3350|
000d0e  b221              SXTH     r1,r4                 ;514
000d10  207a              MOVS     r0,#0x7a              ;514
000d12  f7fffffe          BL       lc640_write_int
                  |L1.3350|
000d16  2d22              CMP      r5,#0x22              ;516
000d18  d103              BNE      |L1.3362|
000d1a  b221              SXTH     r1,r4                 ;518
000d1c  207c              MOVS     r0,#0x7c              ;518
000d1e  f7fffffe          BL       lc640_write_int
                  |L1.3362|
000d22  2d23              CMP      r5,#0x23              ;520
000d24  d103              BNE      |L1.3374|
000d26  b221              SXTH     r1,r4                 ;522
000d28  2082              MOVS     r0,#0x82              ;522
000d2a  f7fffffe          BL       lc640_write_int
                  |L1.3374|
000d2e  2d24              CMP      r5,#0x24              ;524
000d30  d103              BNE      |L1.3386|
000d32  b221              SXTH     r1,r4                 ;526
000d34  2084              MOVS     r0,#0x84              ;526
000d36  f7fffffe          BL       lc640_write_int
                  |L1.3386|
000d3a  2d25              CMP      r5,#0x25              ;528
000d3c  d103              BNE      |L1.3398|
000d3e  b221              SXTH     r1,r4                 ;530
000d40  2094              MOVS     r0,#0x94              ;530
000d42  f7fffffe          BL       lc640_write_int
                  |L1.3398|
000d46  2d26              CMP      r5,#0x26              ;532
000d48  d103              BNE      |L1.3410|
000d4a  b221              SXTH     r1,r4                 ;534
000d4c  2088              MOVS     r0,#0x88              ;534
000d4e  f7fffffe          BL       lc640_write_int
                  |L1.3410|
000d52  2d27              CMP      r5,#0x27              ;536
000d54  d103              BNE      |L1.3422|
000d56  b221              SXTH     r1,r4                 ;538
000d58  2092              MOVS     r0,#0x92              ;538
000d5a  f7fffffe          BL       lc640_write_int
                  |L1.3422|
000d5e  2d28              CMP      r5,#0x28              ;540
000d60  d103              BNE      |L1.3434|
000d62  b221              SXTH     r1,r4                 ;542
000d64  208c              MOVS     r0,#0x8c              ;542
000d66  f7fffffe          BL       lc640_write_int
                  |L1.3434|
000d6a  2d29              CMP      r5,#0x29              ;544
000d6c  d103              BNE      |L1.3446|
000d6e  b221              SXTH     r1,r4                 ;546
000d70  208e              MOVS     r0,#0x8e              ;546
000d72  f7fffffe          BL       lc640_write_int
                  |L1.3446|
000d76  2d2a              CMP      r5,#0x2a              ;548
000d78  d103              BNE      |L1.3458|
000d7a  b221              SXTH     r1,r4                 ;550
000d7c  20de              MOVS     r0,#0xde              ;550
000d7e  f7fffffe          BL       lc640_write_int
                  |L1.3458|
000d82  2d2b              CMP      r5,#0x2b              ;552
000d84  d103              BNE      |L1.3470|
000d86  b221              SXTH     r1,r4                 ;554
000d88  2096              MOVS     r0,#0x96              ;554
000d8a  f7fffffe          BL       lc640_write_int
                  |L1.3470|
000d8e  2d2c              CMP      r5,#0x2c              ;556
000d90  d103              BNE      |L1.3482|
000d92  b221              SXTH     r1,r4                 ;558
000d94  207e              MOVS     r0,#0x7e              ;558
000d96  f7fffffe          BL       lc640_write_int
                  |L1.3482|
000d9a  2d2d              CMP      r5,#0x2d              ;560
000d9c  d103              BNE      |L1.3494|
000d9e  b221              SXTH     r1,r4                 ;562
000da0  20c6              MOVS     r0,#0xc6              ;562
000da2  f7fffffe          BL       lc640_write_int
                  |L1.3494|
000da6  2d2e              CMP      r5,#0x2e              ;564
000da8  d103              BNE      |L1.3506|
000daa  b221              SXTH     r1,r4                 ;566
000dac  20cc              MOVS     r0,#0xcc              ;566
000dae  f7fffffe          BL       lc640_write_int
                  |L1.3506|
000db2  2d2f              CMP      r5,#0x2f              ;568
000db4  d103              BNE      |L1.3518|
000db6  b221              SXTH     r1,r4                 ;570
000db8  20ce              MOVS     r0,#0xce              ;570
000dba  f7fffffe          BL       lc640_write_int
                  |L1.3518|
000dbe  2d30              CMP      r5,#0x30              ;572
000dc0  d104              BNE      |L1.3532|
000dc2  b221              SXTH     r1,r4                 ;574
000dc4  f44f708b          MOV      r0,#0x116             ;574
000dc8  f7fffffe          BL       lc640_write_int
                  |L1.3532|
000dcc  2d31              CMP      r5,#0x31              ;576
000dce  d104              BNE      |L1.3546|
000dd0  b221              SXTH     r1,r4                 ;578
000dd2  f44f708c          MOV      r0,#0x118             ;578
000dd6  f7fffffe          BL       lc640_write_int
                  |L1.3546|
000dda  2d32              CMP      r5,#0x32              ;580
000ddc  d104              BNE      |L1.3560|
000dde  b221              SXTH     r1,r4                 ;582
000de0  f44f708d          MOV      r0,#0x11a             ;582
000de4  f7fffffe          BL       lc640_write_int
                  |L1.3560|
000de8  2d33              CMP      r5,#0x33              ;584
000dea  d104              BNE      |L1.3574|
000dec  b221              SXTH     r1,r4                 ;586
000dee  f44f7095          MOV      r0,#0x12a             ;586
000df2  f7fffffe          BL       lc640_write_int
                  |L1.3574|
000df6  2d34              CMP      r5,#0x34              ;588
000df8  d104              BNE      |L1.3588|
000dfa  b221              SXTH     r1,r4                 ;590
000dfc  f44f7096          MOV      r0,#0x12c             ;590
000e00  f7fffffe          BL       lc640_write_int
                  |L1.3588|
000e04  2d35              CMP      r5,#0x35              ;592
000e06  d104              BNE      |L1.3602|
000e08  b221              SXTH     r1,r4                 ;594
000e0a  f44f7097          MOV      r0,#0x12e             ;594
000e0e  f7fffffe          BL       lc640_write_int
                  |L1.3602|
000e12  f8dfb0c4          LDR      r11,|L1.3800|
000e16  f04f0ac8          MOV      r10,#0xc8             ;510
000e1a  2d64              CMP      r5,#0x64              ;640
000e1c  d122              BNE      |L1.3684|
000e1e  492f              LDR      r1,|L1.3804|
000e20  b220              SXTH     r0,r4                 ;642
000e22  8088              STRH     r0,[r1,#4]            ;642
000e24  0462              LSLS     r2,r4,#17             ;643
000e26  d519              BPL      |L1.3676|
000e28  f3c4040d          UBFX     r4,r4,#0,#14          ;647
000e2c  80cc              STRH     r4,[r1,#6]            ;648
000e2e  1e60              SUBS     r0,r4,#1              ;649
000e30  2804              CMP      r0,#4                 ;649
000e32  d201              BCS      |L1.3640|
000e34  2400              MOVS     r4,#0                 ;649
000e36  e002              B        |L1.3646|
                  |L1.3640|
000e38  2c3c              CMP      r4,#0x3c              ;650
000e3a  db00              BLT      |L1.3646|
000e3c  243c              MOVS     r4,#0x3c              ;650
                  |L1.3646|
000e3e  f9b70000          LDRSH    r0,[r7,#0]            ;652  ; TBAT
000e42  42a0              CMP      r0,r4                 ;652
000e44  d003              BEQ      |L1.3662|
000e46  4621              MOV      r1,r4                 ;652
000e48  20c2              MOVS     r0,#0xc2              ;652
000e4a  f7fffffe          BL       lc640_write_int
                  |L1.3662|
000e4e  4920              LDR      r1,|L1.3792|
000e50  ebc41004          RSB      r0,r4,r4,LSL #4       ;654
000e54  eb090080          ADD      r0,r9,r0,LSL #2       ;654
000e58  8008              STRH     r0,[r1,#0]            ;654
000e5a  e001              B        |L1.3680|
                  |L1.3676|
000e5c  4920              LDR      r1,|L1.3808|
000e5e  8008              STRH     r0,[r1,#0]            ;656
                  |L1.3680|
000e60  f8aba000          STRH     r10,[r11,#0]          ;657
                  |L1.3684|
000e64  2d65              CMP      r5,#0x65              ;661
000e66  d101              BNE      |L1.3692|
000e68  f8aba000          STRH     r10,[r11,#0]          ;664
                  |L1.3692|
000e6c  2300              MOVS     r3,#0                 ;668
000e6e  9300              STR      r3,[sp,#0]            ;668
000e70  f8b80000          LDRH     r0,[r8,#0]            ;668  ; MODBUS_ADRESS
000e74  2301              MOVS     r3,#1                 ;668
000e76  462a              MOV      r2,r5                 ;668
000e78  4631              MOV      r1,r6                 ;668
000e7a  b2c0              UXTB     r0,r0                 ;668
000e7c  f7fffffe          BL       modbus_hold_registers_transmit
                  |L1.3712|
000e80  e6d2              B        |L1.3112|
                  |L1.3714|
000e82  4a18              LDR      r2,|L1.3812|
000e84  f9b22000          LDRSH    r2,[r2,#0]            ;671  ; ICA_MODBUS_ADDRESS
000e88  4290              CMP      r0,r2                 ;671
000e8a  d1f9              BNE      |L1.3712|
000e8c  78c8              LDRB     r0,[r1,#3]            ;673  ; ica_plazma
000e8e  1c40              ADDS     r0,r0,#1              ;673
000e90  70c8              STRB     r0,[r1,#3]            ;673
000e92  2e04              CMP      r6,#4                 ;674
000e94  d1f4              BNE      |L1.3712|
000e96  7888              LDRB     r0,[r1,#2]            ;676  ; ica_plazma
000e98  1c40              ADDS     r0,r0,#1              ;676
000e9a  7088              STRB     r0,[r1,#2]            ;676
000e9c  f8990002          LDRB     r0,[r9,#2]            ;677  ; modbus_an_buffer
000ea0  2802              CMP      r0,#2                 ;677
000ea2  d1ed              BNE      |L1.3712|
000ea4  f8990004          LDRB     r0,[r9,#4]            ;679  ; modbus_an_buffer
000ea8  f8991003          LDRB     r1,[r9,#3]            ;679  ; modbus_an_buffer
000eac  eb002001          ADD      r0,r0,r1,LSL #8       ;679
000eb0  490d              LDR      r1,|L1.3816|
000eb2  8008              STRH     r0,[r1,#0]            ;679
000eb4  e6b8              B        |L1.3112|
000eb6  0000              DCW      0x0000
                  |L1.3768|
                          DCD      ||area_number.4||+0x1e
                  |L1.3772|
                          DCD      ica_plazma
                  |L1.3776|
                          DCD      MODBUS_ADRESS
                  |L1.3780|
                          DCD      ||area_number.8||
                  |L1.3784|
                          DCD      0x40024000
                  |L1.3788|
                          DCD      TBAT
                  |L1.3792|
                          DCD      main_kb_cnt
                  |L1.3796|
                          DCD      UB20
                  |L1.3800|
                          DCD      ica_cntrl_hndl_cnt
                  |L1.3804|
                          DCD      plazma1000
                  |L1.3808|
                          DCD      ica_cntrl_hndl
                  |L1.3812|
                          DCD      ICA_MODBUS_ADDRESS
                  |L1.3816|
                          DCD      ica_your_current
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  modbus_buf
                          %        20

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  modbus_rx_buffer
                          %        30
                  modbus_an_buffer
                          %        30
                  modbus_tx_buff
                          %        100

                          AREA ||.data||, DATA, ALIGN=1

                  modbus_crc16
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  modbus_timeout_cnt
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  bMODBUS_TIMEOUT
000000  00                DCB      0x00
                  modbus_rx_buffer_ptr
000001  00                DCB      0x00
                  modbus_rx_counter
000002  0000              DCB      0x00,0x00
                  modbus_plazma
000004  0000              DCB      0x00,0x00
                  modbus_plazma1
000006  0000              DCB      0x00,0x00
                  modbus_plazma2
000008  0000              DCB      0x00,0x00
                  modbus_plazma3
00000a  0000              DCB      0x00,0x00

                          AREA ||area_number.9||, DATA, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.data||
                  modbus_rx_arg0
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.10||, DATA, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.data||
                  modbus_rx_arg1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.11||, DATA, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.data||
                  modbus_rx_arg2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.12||, DATA, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.data||
                  modbus_rx_arg3
000000  0000              DCB      0x00,0x00
