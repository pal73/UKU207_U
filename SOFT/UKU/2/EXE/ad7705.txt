; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\EXE\ad7705.o --depend=.\EXE\ad7705.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DAPSENERGIA --omf_browse=.\EXE\ad7705.crf ad7705.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1_ad7705_config PROC
;;;16     //настройка SPI1
;;;17     void spi1_ad7705_config(void)
000000  4882              LDR      r0,|L1.524|
;;;18     {
;;;19     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000002  6801              LDR      r1,[r0,#0]
000004  f0414140          ORR      r1,r1,#0xc0000000
000008  6001              STR      r1,[r0,#0]
;;;20     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00000a  6841              LDR      r1,[r0,#4]
00000c  f0210103          BIC      r1,r1,#3
000010  6041              STR      r1,[r0,#4]
;;;21     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000012  6841              LDR      r1,[r0,#4]
000014  f041010c          ORR      r1,r1,#0xc
000018  6041              STR      r1,[r0,#4]
;;;22     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00001a  6841              LDR      r1,[r0,#4]
00001c  f0410130          ORR      r1,r1,#0x30
000020  6041              STR      r1,[r0,#4]
;;;23     /*
;;;24     S1SPCCR=100;
;;;25     S1SPCR=0x3f; */
;;;26     
;;;27     
;;;28     LPC_SPI->SPCCR=20;
000022  487b              LDR      r0,|L1.528|
000024  2114              MOVS     r1,#0x14
000026  60c1              STR      r1,[r0,#0xc]
;;;29     LPC_SPI->SPCR=0x38;
000028  2138              MOVS     r1,#0x38
00002a  6001              STR      r1,[r0,#0]
;;;30     }
00002c  4770              BX       lr
;;;31     //-----------------------------------------------
                          ENDP

                  ad7705_reset PROC
;;;32     void ad7705_reset(void)
00002e  4979              LDR      r1,|L1.532|
;;;33     {
;;;34     //short i;
;;;35     ///IO1DIR|=(1UL<<23);
;;;36     LPC_GPIO2->FIODIR|=(1<<13);
000030  6c08              LDR      r0,[r1,#0x40]
000032  f4405000          ORR      r0,r0,#0x2000
000036  6408              STR      r0,[r1,#0x40]
;;;37     ///IO1CLR|=(1UL<<23);
;;;38     LPC_GPIO2->FIOCLR|=(1<<13);
000038  6dc8              LDR      r0,[r1,#0x5c]
00003a  f4405000          ORR      r0,r0,#0x2000
00003e  65c8              STR      r0,[r1,#0x5c]
;;;39     delay_ms(10);
000040  4875              LDR      r0,|L1.536|
                  |L1.66|
000042  1e40              SUBS     r0,r0,#1
000044  2800              CMP      r0,#0
000046  d1fc              BNE      |L1.66|
;;;40     ///IO1SET|=(1UL<<23);
;;;41     LPC_GPIO2->FIOPIN|=(1<<13);
000048  6d48              LDR      r0,[r1,#0x54]
00004a  f4405000          ORR      r0,r0,#0x2000
00004e  6548              STR      r0,[r1,#0x54]
;;;42     }
000050  4770              BX       lr
;;;43     
                          ENDP

                  ad7705_write PROC
;;;44     //-----------------------------------------------
;;;45     void ad7705_write(char in)
000052  b510              PUSH     {r4,lr}
;;;46     {
000054  4603              MOV      r3,r0
;;;47     char i;
;;;48     ///IO0DIR|=(1UL<<11);
;;;49     LPC_GPIO0->FIODIR|=(1UL<<11);
000056  4c6f              LDR      r4,|L1.532|
000058  6820              LDR      r0,[r4,#0]
00005a  f4406000          ORR      r0,r0,#0x800
00005e  6020              STR      r0,[r4,#0]
;;;50     //IO0SET|=(1UL<<11);
;;;51     LPC_GPIO0->FIOPIN|=(1UL<<11);
000060  6960              LDR      r0,[r4,#0x14]
000062  f4406000          ORR      r0,r0,#0x800
000066  6160              STR      r0,[r4,#0x14]
;;;52     spi1_ad7705_config();
000068  f7fffffe          BL       spi1_ad7705_config
;;;53     ///IO0CLR|=(1UL<<11);
;;;54     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN&=~(1UL<<11);
00006c  2100              MOVS     r1,#0
                  |L1.110|
00006e  6962              LDR      r2,[r4,#0x14]
000070  f4226000          BIC      r0,r2,#0x800
000074  6160              STR      r0,[r4,#0x14]
000076  1c49              ADDS     r1,r1,#1
000078  b2c9              UXTB     r1,r1
00007a  2905              CMP      r1,#5
00007c  d3f7              BCC      |L1.110|
;;;55     spi1(in);
00007e  4618              MOV      r0,r3
000080  f7fffffe          BL       spi1
;;;56     ///for(i=0;i<5;i++)IO0CLR|=(1UL<<11);
;;;57     ///IO0SET|=(1UL<<11);
;;;58     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN&=~(1UL<<11);
000084  2000              MOVS     r0,#0
                  |L1.134|
000086  6961              LDR      r1,[r4,#0x14]
000088  f4216100          BIC      r1,r1,#0x800
00008c  6161              STR      r1,[r4,#0x14]
00008e  1c40              ADDS     r0,r0,#1
000090  b2c0              UXTB     r0,r0
000092  2805              CMP      r0,#5
000094  d3f7              BCC      |L1.134|
;;;59     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN|=(1UL<<11);
000096  2000              MOVS     r0,#0
                  |L1.152|
000098  6961              LDR      r1,[r4,#0x14]
00009a  f4416100          ORR      r1,r1,#0x800
00009e  6161              STR      r1,[r4,#0x14]
0000a0  1c40              ADDS     r0,r0,#1
0000a2  b2c0              UXTB     r0,r0
0000a4  2805              CMP      r0,#5
0000a6  d3f7              BCC      |L1.152|
;;;60     spi1_unconfig();                   
0000a8  e8bd4010          POP      {r4,lr}
0000ac  f7ffbffe          B.W      spi1_unconfig
;;;61     }
;;;62     
                          ENDP

                  ad7705_read PROC
;;;64     //-----------------------------------------------
;;;65     void ad7705_read(char num)
0000b0  b570              PUSH     {r4-r6,lr}
;;;66     {
0000b2  4603              MOV      r3,r0
;;;67     //char temp;
;;;68     char i;
;;;69      
;;;70     LPC_GPIO0->FIODIR|=(1UL<<11);
0000b4  4c57              LDR      r4,|L1.532|
0000b6  6820              LDR      r0,[r4,#0]
0000b8  f4406000          ORR      r0,r0,#0x800
0000bc  6020              STR      r0,[r4,#0]
;;;71     
;;;72     LPC_GPIO0->FIOPIN|=(1UL<<11);
0000be  6960              LDR      r0,[r4,#0x14]
0000c0  f4406000          ORR      r0,r0,#0x800
0000c4  6160              STR      r0,[r4,#0x14]
;;;73     spi1_ad7705_config();
0000c6  f7fffffe          BL       spi1_ad7705_config
;;;74     
;;;75     ///IO0CLR|=(1UL<<11);
;;;76     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN&=~(1UL<<11);
0000ca  2100              MOVS     r1,#0
                  |L1.204|
0000cc  6960              LDR      r0,[r4,#0x14]
0000ce  f4206200          BIC      r2,r0,#0x800
0000d2  6162              STR      r2,[r4,#0x14]
0000d4  1c49              ADDS     r1,r1,#1
0000d6  b2c9              UXTB     r1,r1
0000d8  2905              CMP      r1,#5
0000da  d3f7              BCC      |L1.204|
;;;77     ad7705_res=0;
0000dc  4d4f              LDR      r5,|L1.540|
0000de  2000              MOVS     r0,#0
0000e0  80e8              STRH     r0,[r5,#6]
;;;78     if(num==1) 
0000e2  2b01              CMP      r3,#1
0000e4  d002              BEQ      |L1.236|
;;;79     	{
;;;80     	ad7705_res=spi1(0);
;;;81     	}
;;;82     else if(num==2)
0000e6  2b02              CMP      r3,#2
0000e8  d005              BEQ      |L1.246|
0000ea  e00e              B        |L1.266|
                  |L1.236|
0000ec  2000              MOVS     r0,#0                 ;80
0000ee  f7fffffe          BL       spi1
0000f2  80e8              STRH     r0,[r5,#6]            ;80
0000f4  e009              B        |L1.266|
                  |L1.246|
;;;83     	{
;;;84     	*(((char*)(&ad7705_res))+1)=spi1(0); 
0000f6  2000              MOVS     r0,#0
0000f8  f7fffffe          BL       spi1
0000fc  4d47              LDR      r5,|L1.540|
0000fe  1dad              ADDS     r5,r5,#6
000100  7068              STRB     r0,[r5,#1]
;;;85     	*(((char*)(&ad7705_res)))=spi1(0);
000102  2000              MOVS     r0,#0
000104  f7fffffe          BL       spi1
000108  7028              STRB     r0,[r5,#0]
                  |L1.266|
;;;86     	}	   
;;;87     
;;;88     ///IO0CLR|=(1UL<<11);
;;;89     
;;;90     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN&=~(1UL<<11);
00010a  2000              MOVS     r0,#0
                  |L1.268|
00010c  6961              LDR      r1,[r4,#0x14]
00010e  f4216100          BIC      r1,r1,#0x800
000112  6161              STR      r1,[r4,#0x14]
000114  1c40              ADDS     r0,r0,#1
000116  b2c0              UXTB     r0,r0
000118  2805              CMP      r0,#5
00011a  d3f7              BCC      |L1.268|
;;;91     for(i=0;i<5;i++)LPC_GPIO0->FIOPIN|=(1UL<<11);
00011c  2000              MOVS     r0,#0
                  |L1.286|
00011e  6961              LDR      r1,[r4,#0x14]
000120  f4416100          ORR      r1,r1,#0x800
000124  6161              STR      r1,[r4,#0x14]
000126  1c40              ADDS     r0,r0,#1
000128  b2c0              UXTB     r0,r0
00012a  2805              CMP      r0,#5
00012c  d3f7              BCC      |L1.286|
;;;92     
;;;93     spi1_unconfig();                                            
00012e  e8bd4070          POP      {r4-r6,lr}
000132  f7ffbffe          B.W      spi1_unconfig
;;;94     }
;;;95     
                          ENDP

                  ad7705_drv PROC
;;;96     //-----------------------------------------------
;;;97     void ad7705_drv(void)
000136  e92d41f0          PUSH     {r4-r8,lr}
;;;98     {
;;;99     //__disable_irq();
;;;100    
;;;101    
;;;102    	ad7705_write(0x08);
00013a  2008              MOVS     r0,#8
00013c  f7fffffe          BL       ad7705_write
;;;103    	ad7705_read(1);
000140  2001              MOVS     r0,#1
000142  f7fffffe          BL       ad7705_read
;;;104    
;;;105    
;;;106    ///IO0DIR|=(1UL<<11);
;;;107    ///IO0DIR&=~(1UL<<10);
;;;108    
;;;109    if(!(ad7705_res&0x0001))
000146  4c35              LDR      r4,|L1.540|
000148  88e0              LDRH     r0,[r4,#6]  ; ad7705_res
00014a  07c0              LSLS     r0,r0,#31
00014c  d15b              BNE      |L1.518|
;;;110    	{
;;;111    	ad7705_write(0x38+b7705ch);
00014e  7820              LDRB     r0,[r4,#0]  ; b7705ch
000150  3038              ADDS     r0,r0,#0x38
000152  b2c0              UXTB     r0,r0
000154  f7fffffe          BL       ad7705_write
;;;112    	ad7705_read(2);
000158  2002              MOVS     r0,#2
00015a  f7fffffe          BL       ad7705_read
;;;113    	//ad7705_buff[0][0]=ad7705_res;
;;;114    
;;;115    	ad7705_plazma++;
00015e  8920              LDRH     r0,[r4,#8]  ; ad7705_plazma
000160  1c40              ADDS     r0,r0,#1
000162  8120              STRH     r0,[r4,#8]
;;;116    	
;;;117    
;;;118    	if(!b7705ch)
000164  7820              LDRB     r0,[r4,#0]  ; b7705ch
;;;119    		{
;;;120    		ad7705_buff[0][ad7705_wrk_cnt]=ad7705_res;
000166  4d2e              LDR      r5,|L1.544|
000168  2800              CMP      r0,#0                 ;118
00016a  d015              BEQ      |L1.408|
;;;121    		ad7705_res1=ad7705_res;
;;;122    		}
;;;123    	else if(b7705ch) 
;;;124    		{
;;;125    		ad7705_buff[1][ad7705_wrk_cnt]=ad7705_res;
00016c  7861              LDRB     r1,[r4,#1]  ; ad7705_wrk_cnt
00016e  88e0              LDRH     r0,[r4,#6]  ; ad7705_res
000170  eb050141          ADD      r1,r5,r1,LSL #1
000174  8408              STRH     r0,[r1,#0x20]
;;;126    		ad7705_res2=ad7705_res;
000176  80a0              STRH     r0,[r4,#4]
                  |L1.376|
;;;127    		} 
;;;128    
;;;129    	if(b7705ch)
000178  d02a              BEQ      |L1.464|
;;;130    		{
;;;131    		b7705ch=0;
00017a  f04f0100          MOV      r1,#0
00017e  7021              STRB     r1,[r4,#0]
;;;132    		ad7705_wrk_cnt++;
000180  7860              LDRB     r0,[r4,#1]  ; ad7705_wrk_cnt
000182  f1000001          ADD      r0,r0,#1
000186  b2c0              UXTB     r0,r0
000188  7060              STRB     r0,[r4,#1]
;;;133    		if(ad7705_wrk_cnt>=16)ad7705_wrk_cnt=0;
00018a  2810              CMP      r0,#0x10
00018c  d300              BCC      |L1.400|
00018e  7061              STRB     r1,[r4,#1]
                  |L1.400|
;;;134    		
;;;135    		if((ad7705_wrk_cnt&0x01)==0)
000190  7860              LDRB     r0,[r4,#1]  ; ad7705_wrk_cnt
000192  07c0              LSLS     r0,r0,#31
000194  d006              BEQ      |L1.420|
000196  e01d              B        |L1.468|
                  |L1.408|
000198  7861              LDRB     r1,[r4,#1]            ;120  ; ad7705_wrk_cnt
00019a  88e0              LDRH     r0,[r4,#6]            ;120  ; ad7705_res
00019c  f8250011          STRH     r0,[r5,r1,LSL #1]     ;120
0001a0  8060              STRH     r0,[r4,#2]            ;121
0001a2  e7e9              B        |L1.376|
                  |L1.420|
;;;136    			{
;;;137    			unsigned temp_U;
;;;138    			char i,ii;
;;;139    
;;;140    			for(i=0;i<2;i++)
0001a4  2100              MOVS     r1,#0
;;;141    				{
;;;142    				temp_U=0;
;;;143    				for(ii=0;ii<16;ii++)
;;;144    					{
;;;145    					temp_U+=(unsigned long)ad7705_buff[i][ii];
;;;146    					}
;;;147    				ad7705_buff_[i]=(unsigned short)(temp_U>>4);
0001a6  4e1d              LDR      r6,|L1.540|
0001a8  360a              ADDS     r6,r6,#0xa
                  |L1.426|
0001aa  2200              MOVS     r2,#0                 ;142
0001ac  2000              MOVS     r0,#0                 ;143
0001ae  eb051341          ADD      r3,r5,r1,LSL #5       ;145
                  |L1.434|
0001b2  f8337010          LDRH     r7,[r3,r0,LSL #1]     ;145
0001b6  443a              ADD      r2,r2,r7              ;145
0001b8  1c40              ADDS     r0,r0,#1              ;143
0001ba  b2c0              UXTB     r0,r0                 ;143
0001bc  2810              CMP      r0,#0x10              ;143
0001be  d3f8              BCC      |L1.434|
0001c0  0910              LSRS     r0,r2,#4
0001c2  f8260011          STRH     r0,[r6,r1,LSL #1]
0001c6  1c49              ADDS     r1,r1,#1              ;140
0001c8  b2c9              UXTB     r1,r1                 ;140
0001ca  2902              CMP      r1,#2                 ;140
0001cc  d3ed              BCC      |L1.426|
0001ce  e001              B        |L1.468|
                  |L1.464|
;;;148    				}	
;;;149    			} 
;;;150    		}	
;;;151    		
;;;152    		
;;;153    	else b7705ch=1;
0001d0  2001              MOVS     r0,#1
0001d2  7020              STRB     r0,[r4,#0]
                  |L1.468|
;;;154    	
;;;155    	//b7705ch=1;
;;;156        
;;;157    	if(!b7705ch) ad7705_write(0x20);
0001d4  7820              LDRB     r0,[r4,#0]  ; b7705ch
0001d6  b170              CBZ      r0,|L1.502|
;;;158    	else if(b7705ch) ad7705_write(0x21);
0001d8  2021              MOVS     r0,#0x21
0001da  f7fffffe          BL       ad7705_write
                  |L1.478|
;;;159    
;;;160    	ad7705_write(BIN8(1101)); 
0001de  200d              MOVS     r0,#0xd
0001e0  f7fffffe          BL       ad7705_write
;;;161    
;;;162    	if(!b7705ch) ad7705_write(0x10);
0001e4  7820              LDRB     r0,[r4,#0]  ; b7705ch
0001e6  b150              CBZ      r0,|L1.510|
;;;163    	else if(b7705ch) ad7705_write(0x11);
0001e8  2011              MOVS     r0,#0x11
0001ea  f7fffffe          BL       ad7705_write
                  |L1.494|
;;;164    
;;;165    	ad7705_write(0x44);	
0001ee  e8bd41f0          POP      {r4-r8,lr}
0001f2  2044              MOVS     r0,#0x44
0001f4  e7fe              B        ad7705_write
                  |L1.502|
0001f6  2020              MOVS     r0,#0x20              ;157
0001f8  f7fffffe          BL       ad7705_write
0001fc  e7ef              B        |L1.478|
                  |L1.510|
0001fe  2010              MOVS     r0,#0x10              ;162
000200  f7fffffe          BL       ad7705_write
000204  e7f3              B        |L1.494|
                  |L1.518|
;;;166    	
;;;167    	}
;;;168    /*
;;;169    ad7705_write(0x20);
;;;170    ad7705_write(BIN8(1101));
;;;171    ad7705_write(0x10);
;;;172    ad7705_write(0x44);
;;;173    */
;;;174    //	__enable_irq();
;;;175    
;;;176    
;;;177    /*
;;;178    if(((ad7705_res1&0x0fff)==0x0000)||((ad7705_res1&0x0fff)==0x0fff)||((ad7705_res2&0x0fff)==0x0000)||((ad7705_res2&0x0fff)==0x0fff))
;;;179    {
;;;180    if(cnt_ad7705_vis<50)
;;;181    	{
;;;182    	cnt_ad7705_vis++;
;;;183    	if(cnt_ad7705_vis>=50) cnt_ad7705_vis_wrk=50;
;;;184    		
;;;185    	}
;;;186    }
;;;187    else cnt_ad7705_vis=0;
;;;188    
;;;189    if(cnt_ad7705_vis_wrk)
;;;190    	{
;;;191    	cnt_ad7705_vis_wrk--;
;;;192    
;;;193    	if(cnt_ad7705_vis_wrk==30)
;;;194    		{
;;;195    		ad7705_reset();
;;;196    		ad7705_write(0x20);
;;;197    		ad7705_write(BIN8(1101)); 
;;;198    		ad7705_write(0x10);
;;;199    		ad7705_write(0x44); 
;;;200    	     }
;;;201    	else if(cnt_ad7705_vis_wrk==20)
;;;202    		{              
;;;203    		ad7705_reset();
;;;204    		ad7705_write(0x20);
;;;205    		ad7705_write(BIN8(1101)); 
;;;206    		ad7705_write(0x10);
;;;207    		ad7705_write(0x44); 
;;;208    	     }	
;;;209    	else if(cnt_ad7705_vis_wrk==10)
;;;210    		{              
;;;211    		ad7705_reset();
;;;212    		ad7705_write(0x20);
;;;213    		ad7705_write(BIN8(1101)); 
;;;214    		ad7705_write(0x10);
;;;215    		ad7705_write(0x44); 
;;;216    	     }
;;;217    	else if(cnt_ad7705_vis_wrk==2)
;;;218    		{
;;;219    
;;;220    	     }		        		          
;;;221    	}         
;;;222    else 
;;;223    	{
;;;224    
;;;225    	}*/	
;;;226    	
;;;227    }
000206  e8bd81f0          POP      {r4-r8,pc}
;;;228    
                          ENDP

00020a  0000              DCW      0x0000
                  |L1.524|
                          DCD      0x4002c000
                  |L1.528|
                          DCD      0x40020000
                  |L1.532|
                          DCD      0x2009c000
                  |L1.536|
                          DCD      0x0001d4c0
                  |L1.540|
                          DCD      ||.data||
                  |L1.544|
                          DCD      ||.bss||

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  ad7705_drv_ PROC
;;;229    //-----------------------------------------------
;;;230    void ad7705_drv_(void)
000000  b510              PUSH     {r4,lr}
;;;231    {
;;;232    b7705ch++;
000002  4c14              LDR      r4,|L2.84|
000004  7820              LDRB     r0,[r4,#0]  ; b7705ch
000006  1c40              ADDS     r0,r0,#1
;;;233    b7705ch&=0x0001;
000008  f0000001          AND      r0,r0,#1
00000c  7020              STRB     r0,[r4,#0]
;;;234    
;;;235    ad7705_write(0x20+b7705ch);
00000e  3020              ADDS     r0,r0,#0x20
000010  f7fffffe          BL       ad7705_write
;;;236    ad7705_write(BIN8(1101));
000014  200d              MOVS     r0,#0xd
000016  f7fffffe          BL       ad7705_write
;;;237    ad7705_write(0x10+b7705ch);
00001a  7820              LDRB     r0,[r4,#0]  ; b7705ch
00001c  3010              ADDS     r0,r0,#0x10
00001e  b2c0              UXTB     r0,r0
000020  f7fffffe          BL       ad7705_write
;;;238    ad7705_write(0x44);
000024  2044              MOVS     r0,#0x44
000026  f7fffffe          BL       ad7705_write
                  |L2.42|
;;;239    
;;;240    
;;;241    ad7705_drv_loop:
;;;242    
;;;243    ad7705_write(0x08);
00002a  2008              MOVS     r0,#8
00002c  f7fffffe          BL       ad7705_write
;;;244    ad7705_read(1);
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       ad7705_read
;;;245    
;;;246    if(ad7705_res&0x0001)  goto ad7705_drv_loop;
000036  88e0              LDRH     r0,[r4,#6]  ; ad7705_res
000038  07c0              LSLS     r0,r0,#31
00003a  d1f6              BNE      |L2.42|
;;;247    else 
;;;248    	{
;;;249    	ad7705_write(0x38+b7705ch);
00003c  7820              LDRB     r0,[r4,#0]  ; b7705ch
00003e  3038              ADDS     r0,r0,#0x38
000040  b2c0              UXTB     r0,r0
000042  f7fffffe          BL       ad7705_write
;;;250    	ad7705_read(2);
000046  2002              MOVS     r0,#2
000048  f7fffffe          BL       ad7705_read
;;;251    	ad7705_plazma++;
00004c  8920              LDRH     r0,[r4,#8]  ; ad7705_plazma
00004e  1c40              ADDS     r0,r0,#1
000050  8120              STRH     r0,[r4,#8]
;;;252    	}
;;;253    	
;;;254    }
000052  bd10              POP      {r4,pc}
;;;255    
                          ENDP

                  |L2.84|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  ad7705_buff
                          %        64

                          AREA ||.data||, DATA, ALIGN=1

                  b7705ch
000000  00                DCB      0x00
                  ad7705_wrk_cnt
000001  00                DCB      0x00
                  ad7705_res1
000002  0000              DCB      0x00,0x00
                  ad7705_res2
000004  0000              DCB      0x00,0x00
                  ad7705_res
000006  0000              DCB      0x00,0x00
                  ad7705_plazma
000008  0000              DCB      0x00,0x00
                  ad7705_buff_
00000a  0000              DCB      0x00,0x00
00000c  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=1

                          EXPORTAS ||area_number.7||, ||.data||
                  cnt_ad7705_vis
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  cnt_ad7705_vis_wrk
000000  0000              DCB      0x00,0x00
