; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\modbus.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\modbus.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\modbus.crf modbus.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC16_2 PROC
;;;236    //-----------------------------------------------
;;;237    unsigned short CRC16_2(char* buf, short len)
000000  b570              PUSH     {r4-r6,lr}
;;;238    {
000002  4605              MOV      r5,r0
;;;239    unsigned short crc = 0xFFFF;
000004  f64f70ff          MOV      r0,#0xffff
;;;240    short pos;
;;;241    short i;
;;;242    
;;;243    for (pos = 0; pos < len; pos++)
000008  f04f0300          MOV      r3,#0
;;;244      	{
;;;245        	crc ^= (unsigned short)buf[pos];          // XOR byte into least sig. byte of crc
;;;246    
;;;247        	for ( i = 8; i != 0; i--) 
;;;248    		{    // Loop over each bit
;;;249          	if ((crc & 0x0001) != 0) 
;;;250    			{      // If the LSB is set
;;;251            		crc >>= 1;                    // Shift right and XOR 0xA001
;;;252            		crc ^= 0xA001;
00000c  f24a0401          MOV      r4,#0xa001
000010  e015              B        |L1.62|
                  |L1.18|
000012  5cea              LDRB     r2,[r5,r3]            ;245
000014  ea820000          EOR      r0,r2,r0              ;245
000018  f04f0208          MOV      r2,#8                 ;247
                  |L1.28|
00001c  07c6              LSLS     r6,r0,#31             ;249
00001e  d004              BEQ      |L1.42|
000020  ea4f0050          LSR      r0,r0,#1              ;251
000024  ea800004          EOR      r0,r0,r4
000028  e001              B        |L1.46|
                  |L1.42|
;;;253          		}
;;;254          	else  crc >>= 1;                    // Just shift right
00002a  ea4f0050          LSR      r0,r0,#1
                  |L1.46|
00002e  f1a20201          SUB      r2,r2,#1              ;247
000032  b212              SXTH     r2,r2                 ;247
000034  2a00              CMP      r2,#0                 ;247
000036  d1f1              BNE      |L1.28|
000038  f1030301          ADD      r3,r3,#1              ;243
00003c  b21b              SXTH     r3,r3                 ;243
                  |L1.62|
00003e  428b              CMP      r3,r1                 ;243
000040  dbe7              BLT      |L1.18|
;;;255        		}
;;;256      	}
;;;257      // Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
;;;258    return crc;
;;;259    }
000042  bd70              POP      {r4-r6,pc}
;;;260    
                          ENDP

                  modbus_zapros_ENMV PROC
;;;261    //-----------------------------------------------
;;;262    void modbus_zapros_ENMV (void){	 //o_2_s
000044  b570              PUSH     {r4-r6,lr}
;;;263    unsigned short crc_temp;
;;;264    unsigned char i_cnt;
;;;265    	modbus_tx_buff[0]=MODBUS_ADRESS;
000046  48ff              LDR      r0,|L1.1092|
000048  4dff              LDR      r5,|L1.1096|
00004a  8800              LDRH     r0,[r0,#0]  ; MODBUS_ADRESS
00004c  7028              STRB     r0,[r5,#0]
;;;266    	modbus_tx_buff[1]=1;
00004e  f04f0001          MOV      r0,#1
000052  7068              STRB     r0,[r5,#1]
;;;267    	modbus_tx_buff[2]=0;
000054  f04f0600          MOV      r6,#0
000058  70ae              STRB     r6,[r5,#2]
;;;268    	modbus_tx_buff[3]=0;
00005a  70ee              STRB     r6,[r5,#3]
;;;269    	modbus_tx_buff[4]=0;
00005c  712e              STRB     r6,[r5,#4]
;;;270    	modbus_tx_buff[5]=64;
00005e  f04f0040          MOV      r0,#0x40
000062  7168              STRB     r0,[r5,#5]
;;;271    	crc_temp=CRC16_2(modbus_tx_buff,6);
000064  f04f0106          MOV      r1,#6
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       CRC16_2
;;;272    	modbus_tx_buff[6]=(char)crc_temp;
00006e  71a8              STRB     r0,[r5,#6]
;;;273    	modbus_tx_buff[7]=crc_temp>>8;
000070  ea4f2010          LSR      r0,r0,#8
000074  71e8              STRB     r0,[r5,#7]
;;;274    	for (i_cnt=0;i_cnt<8;i_cnt++)	putchar_sc16is700(modbus_tx_buff[i_cnt]);
000076  4634              MOV      r4,r6
                  |L1.120|
000078  5d28              LDRB     r0,[r5,r4]
00007a  f7fffffe          BL       putchar_sc16is700
00007e  f1040401          ADD      r4,r4,#1
000082  b2e4              UXTB     r4,r4
000084  2c08              CMP      r4,#8
000086  d3f7              BCC      |L1.120|
;;;275    	if(enmv_on<5)enmv_on++;
000088  49f0              LDR      r1,|L1.1100|
00008a  7808              LDRB     r0,[r1,#0]  ; enmv_on
00008c  2805              CMP      r0,#5
00008e  d203              BCS      |L1.152|
000090  f1000001          ADD      r0,r0,#1
000094  7008              STRB     r0,[r1,#0]
;;;276       	else {
;;;277    		for (i_cnt=0;i_cnt<64;i_cnt++) snmp_enmv_data[i_cnt]=0xFF;
;;;278    		for (i_cnt=0;i_cnt<7;i_cnt++) {enmv_data[i_cnt]=0; enmv_data_pred[i_cnt]=0;}	 //o_7
;;;279    		enmv_puts_en=0;				 //o_7
;;;280    	}
;;;281    } //o_2_e
000096  bd70              POP      {r4-r6,pc}
                  |L1.152|
000098  f04f0000          MOV      r0,#0                 ;277
00009c  4aec              LDR      r2,|L1.1104|
00009e  f04f01ff          MOV      r1,#0xff              ;277
                  |L1.162|
0000a2  5411              STRB     r1,[r2,r0]            ;277
0000a4  f1000001          ADD      r0,r0,#1              ;277
0000a8  b2c0              UXTB     r0,r0                 ;277
0000aa  2840              CMP      r0,#0x40              ;277
0000ac  d3f9              BCC      |L1.162|
0000ae  f04f0000          MOV      r0,#0                 ;278
0000b2  49e8              LDR      r1,|L1.1108|
0000b4  4ae8              LDR      r2,|L1.1112|
                  |L1.182|
0000b6  540e              STRB     r6,[r1,r0]            ;278
0000b8  5416              STRB     r6,[r2,r0]            ;278
0000ba  f1000001          ADD      r0,r0,#1              ;278
0000be  b2c0              UXTB     r0,r0                 ;278
0000c0  2807              CMP      r0,#7                 ;278
0000c2  d3f8              BCC      |L1.182|
0000c4  48e5              LDR      r0,|L1.1116|
0000c6  7006              STRB     r6,[r0,#0]            ;279
0000c8  bd70              POP      {r4-r6,pc}
;;;282    
                          ENDP

                  modbus_input_registers_transmit PROC
;;;1236   //-----------------------------------------------
;;;1237   void modbus_input_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
0000ca  e92d4ff0          PUSH     {r4-r11,lr}
;;;1238   {
0000ce  b0fd              SUB      sp,sp,#0x1f4
0000d0  461e              MOV      r6,r3
0000d2  9f86              LDR      r7,[sp,#0x218]
;;;1239   signed char modbus_registers[500];
;;;1240   //char modbus_tx_buff[200];
;;;1241   unsigned short crc_temp;
;;;1242   char i;
;;;1243   short tempS;
;;;1244   
;;;1245   //tempS=(MODBUS_INPUT_REGS[0]);
;;;1246   //bps_I=bps_I_phantom;
;;;1247   
;;;1248   #if defined(UKU_6U) || defined(UKU_220_V2)
;;;1249   modbus_registers[0]=(signed char)(load_U>>8);					//Рег1   	напряжение выходной шины, 0.1В
;;;1250   modbus_registers[1]=(signed char)(load_U);
;;;1251   modbus_registers[2]=(signed char)(load_I>>8);					//Рег2   	ток выпрямителей, 0.1А
;;;1252   modbus_registers[3]=(signed char)(load_I);
;;;1253   #else
;;;1254   modbus_registers[0]=(signed char)(out_U>>8);					//Рег1   	напряжение выходной шины, 0.1В
0000d4  4be2              LDR      r3,|L1.1120|
0000d6  881b              LDRH     r3,[r3,#0]  ; out_U
0000d8  ea4f2423          ASR      r4,r3,#8
0000dc  f88d4000          STRB     r4,[sp,#0]
;;;1255   modbus_registers[1]=(signed char)(out_U);
0000e0  f88d3001          STRB     r3,[sp,#1]
;;;1256   modbus_registers[2]=(signed char)(bps_I>>8);					//Рег2   	ток выпрямителей, 0.1А
0000e4  4bdf              LDR      r3,|L1.1124|
0000e6  881b              LDRH     r3,[r3,#0]  ; bps_I
0000e8  ea4f2423          ASR      r4,r3,#8
0000ec  f88d4002          STRB     r4,[sp,#2]
;;;1257   modbus_registers[3]=(signed char)(bps_I);
0000f0  f88d3003          STRB     r3,[sp,#3]
;;;1258   #endif
;;;1259   /*
;;;1260   modbus_registers[0]=(signed char)(out_U>>8);					//Рег1   	напряжение выходной шины, 0.1В
;;;1261   modbus_registers[1]=(signed char)(out_U);
;;;1262   modbus_registers[2]=(signed char)(bps_I>>8);					//Рег2   	ток выпрямителей, 0.1А
;;;1263   modbus_registers[3]=(signed char)(bps_I);
;;;1264   */
;;;1265   modbus_registers[4]=(signed char)(net_U>>8);					//Рег3   	напряжение сети питания, 1В
0000f4  4bdc              LDR      r3,|L1.1128|
0000f6  881b              LDRH     r3,[r3,#0]  ; net_U
0000f8  ea4f2423          ASR      r4,r3,#8
0000fc  f88d4004          STRB     r4,[sp,#4]
;;;1266   modbus_registers[5]=(signed char)(net_U);
000100  f88d3005          STRB     r3,[sp,#5]
;;;1267   modbus_registers[6]=(signed char)(net_F>>8);					//Рег4   	частота сети питания, 0.1Гц
000104  4bd9              LDR      r3,|L1.1132|
000106  881b              LDRH     r3,[r3,#0]  ; net_F
000108  ea4f2423          ASR      r4,r3,#8
00010c  f88d4006          STRB     r4,[sp,#6]
;;;1268   modbus_registers[7]=(signed char)(net_F);
000110  f88d3007          STRB     r3,[sp,#7]
;;;1269   modbus_registers[8]=(signed char)(net_Ua>>8);					//Рег5	напряжение сети питания фаза A, 1В	
000114  4bd6              LDR      r3,|L1.1136|
000116  881b              LDRH     r3,[r3,#0]  ; net_Ua
000118  ea4f2423          ASR      r4,r3,#8
00011c  f88d4008          STRB     r4,[sp,#8]
;;;1270   modbus_registers[9]=(signed char)(net_Ua);		 	
000120  f88d3009          STRB     r3,[sp,#9]
;;;1271   modbus_registers[10]=(signed char)(net_Ub>>8);				//Рег6	напряжение сети питания фаза B, 1В
000124  4bd3              LDR      r3,|L1.1140|
000126  881b              LDRH     r3,[r3,#0]  ; net_Ub
000128  ea4f2423          ASR      r4,r3,#8
00012c  f88d400a          STRB     r4,[sp,#0xa]
;;;1272   modbus_registers[11]=(signed char)(net_Ub);
000130  f88d300b          STRB     r3,[sp,#0xb]
;;;1273   modbus_registers[12]=(signed char)(net_Uc>>8);				//Рег7	напряжение сети питания фаза C, 1В
000134  4bd0              LDR      r3,|L1.1144|
000136  881b              LDRH     r3,[r3,#0]  ; net_Uc
000138  ea4f2423          ASR      r4,r3,#8
00013c  f88d400c          STRB     r4,[sp,#0xc]
;;;1274   modbus_registers[13]=(signed char)(net_Uc);
000140  f88d300d          STRB     r3,[sp,#0xd]
;;;1275   modbus_registers[14]=(signed char)(bat[0]._Ub>>8);				//Рег8	напряжение батареи №1, 0.1В
000144  4dcd              LDR      r5,|L1.1148|
000146  886b              LDRH     r3,[r5,#2]  ; bat
000148  ea4f2423          ASR      r4,r3,#8
00014c  f88d400e          STRB     r4,[sp,#0xe]
;;;1276   modbus_registers[15]=(signed char)(bat[0]._Ub);
000150  f88d300f          STRB     r3,[sp,#0xf]
;;;1277   modbus_registers[16]=(signed char)(bat[0]._Ib>>8);				//Рег9   	ток батареи №1, 0.01А
000154  892b              LDRH     r3,[r5,#8]  ; bat
000156  ea4f2423          ASR      r4,r3,#8
00015a  f88d4010          STRB     r4,[sp,#0x10]
;;;1278   modbus_registers[17]=(signed char)(bat[0]._Ib);
00015e  f88d3011          STRB     r3,[sp,#0x11]
;;;1279   #ifdef UKU_ZVU
;;;1280   modbus_registers[18]=(signed char)(t_ext[0]>>8);				//Рег10	температура батареи №1, 1Гц
000162  f8df831c          LDR      r8,|L1.1152|
000166  f9b83000          LDRSH    r3,[r8,#0]  ; t_ext
00016a  ea4f2423          ASR      r4,r3,#8
00016e  f88d4012          STRB     r4,[sp,#0x12]
;;;1281   modbus_registers[19]=(signed char)(t_ext[0]);
000172  f88d3013          STRB     r3,[sp,#0x13]
;;;1282   #else
;;;1283   modbus_registers[18]=(signed char)(bat[0]._Tb>>8);				//Рег10	температура батареи №1, 1Гц
;;;1284   modbus_registers[19]=(signed char)(bat[0]._Tb);
;;;1285   #endif
;;;1286   #ifdef UKU_ZVU
;;;1287   modbus_registers[20]=(signed char)(((short)(bat_hndl_zvu_Q/10000L))>>8);			//Рег11	заряд батареи №1, %
000176  4cc3              LDR      r4,|L1.1156|
000178  f8d4c000          LDR      r12,[r4,#0]  ; bat_hndl_zvu_Q
00017c  f2427410          MOV      r4,#0x2710
000180  fb9cf4f4          SDIV     r4,r12,r4
000184  ea4f2c24          ASR      r12,r4,#8
000188  f88dc014          STRB     r12,[sp,#0x14]
;;;1288   modbus_registers[21]=(signed char)(((short)(bat_hndl_zvu_Q/10000L)));
00018c  f88d4015          STRB     r4,[sp,#0x15]
;;;1289   #else
;;;1290   modbus_registers[20]=(signed char)(bat[0]._zar>>8);			//Рег11	заряд батареи №1, %
;;;1291   modbus_registers[21]=(signed char)(bat[0]._zar);
;;;1292   #endif
;;;1293   modbus_registers[22]=(signed char)(bat[0]._Ubm>>8);			//Рег12	напряжение средней точки батареи №1, 0.1В
000190  88ac              LDRH     r4,[r5,#4]  ; bat
000192  ea4f2c24          ASR      r12,r4,#8
000196  f88dc016          STRB     r12,[sp,#0x16]
;;;1294   modbus_registers[23]=(signed char)(bat[0]._Ubm);
00019a  f88d4017          STRB     r4,[sp,#0x17]
;;;1295   modbus_registers[24]=(signed char)(bat[0]._dUbm>>8);			//Рег13	ошибка средней точки батареи №1, %
00019e  88ec              LDRH     r4,[r5,#6]  ; bat
0001a0  ea4f2c24          ASR      r12,r4,#8
0001a4  f88dc018          STRB     r12,[sp,#0x18]
;;;1296   modbus_registers[25]=(signed char)(bat[0]._dUbm);
0001a8  f88d4019          STRB     r4,[sp,#0x19]
;;;1297   modbus_registers[26]=(signed char)(BAT_C_REAL[0]>>8);			//Рег14	Реальная емкость батареи №1, 0.1А*ч, если 0x5555 то не измерялась
0001ac  f8dfc2d8          LDR      r12,|L1.1160|
0001b0  f8bc4000          LDRH     r4,[r12,#0]  ; BAT_C_REAL
0001b4  ea4f2924          ASR      r9,r4,#8
0001b8  f88d901a          STRB     r9,[sp,#0x1a]
;;;1298   modbus_registers[27]=(signed char)(BAT_C_REAL[0]);
0001bc  f88d401b          STRB     r4,[sp,#0x1b]
;;;1299   modbus_registers[28]=(signed char)(bat[1]._Ub>>8);				//Рег15	напряжение батареи №1, 0.1В
0001c0  f8b5404e          LDRH     r4,[r5,#0x4e]  ; bat
0001c4  ea4f2924          ASR      r9,r4,#8
0001c8  f88d901c          STRB     r9,[sp,#0x1c]
;;;1300   modbus_registers[29]=(signed char)(bat[1]._Ub);
0001cc  f88d401d          STRB     r4,[sp,#0x1d]
;;;1301   modbus_registers[30]=(signed char)(bat[1]._Ib>>8);				//Рег16   	ток батареи №1, 0.01А
0001d0  f8b54054          LDRH     r4,[r5,#0x54]  ; bat
0001d4  ea4f2924          ASR      r9,r4,#8
0001d8  f88d901e          STRB     r9,[sp,#0x1e]
;;;1302   modbus_registers[31]=(signed char)(bat[1]._Ib);
0001dc  f88d401f          STRB     r4,[sp,#0x1f]
;;;1303   modbus_registers[32]=(signed char)(bat[1]._Tb>>8);				//Рег17	температура батареи №1, 1Гц
0001e0  f8b54056          LDRH     r4,[r5,#0x56]  ; bat
0001e4  ea4f2924          ASR      r9,r4,#8
0001e8  f88d9020          STRB     r9,[sp,#0x20]
;;;1304   modbus_registers[33]=(signed char)(bat[1]._Tb);
0001ec  f88d4021          STRB     r4,[sp,#0x21]
;;;1305   modbus_registers[34]=(signed char)(bat[1]._zar>>8);			//Рег18	заряд батареи №1, %
0001f0  f8b5405c          LDRH     r4,[r5,#0x5c]  ; bat
0001f4  ea4f2914          LSR      r9,r4,#8
0001f8  f88d9022          STRB     r9,[sp,#0x22]
;;;1306   modbus_registers[35]=(signed char)(bat[1]._zar);
0001fc  f88d4023          STRB     r4,[sp,#0x23]
;;;1307   modbus_registers[36]=(signed char)(bat[1]._Ubm>>8);			//Рег19	напряжение средней точки батареи №1, 0.1В
000200  f8b54050          LDRH     r4,[r5,#0x50]  ; bat
000204  ea4f2924          ASR      r9,r4,#8
000208  f88d9024          STRB     r9,[sp,#0x24]
;;;1308   modbus_registers[37]=(signed char)(bat[1]._Ubm);
00020c  f88d4025          STRB     r4,[sp,#0x25]
;;;1309   modbus_registers[38]=(signed char)(bat[1]._dUbm>>8);			//Рег20	ошибка средней точки батареи №1, %
000210  f8b54052          LDRH     r4,[r5,#0x52]  ; bat
000214  ea4f2924          ASR      r9,r4,#8
000218  f88d9026          STRB     r9,[sp,#0x26]
;;;1310   modbus_registers[39]=(signed char)(bat[1]._dUbm);
00021c  f88d4027          STRB     r4,[sp,#0x27]
;;;1311   modbus_registers[40]=(signed char)(BAT_C_REAL[1]>>8);			//Рег21	Реальная емкость батареи №1, 0.1А*ч, если 0x5555 то не измерялась
000220  f8bc4002          LDRH     r4,[r12,#2]  ; BAT_C_REAL
000224  ea4f2c24          ASR      r12,r4,#8
000228  f88dc028          STRB     r12,[sp,#0x28]
;;;1312   modbus_registers[41]=(signed char)(BAT_C_REAL[1]);
00022c  f88d4029          STRB     r4,[sp,#0x29]
;;;1313   modbus_registers[42]=(signed char)(bps[0]._Uii>>8);			//Рег22	Выходное напряжение выпрямителя №1, 0.1В
000230  4c96              LDR      r4,|L1.1164|
000232  f8d4c01c          LDR      r12,[r4,#0x1c]  ; bps
000236  ea4f292c          ASR      r9,r12,#8
00023a  f88d902a          STRB     r9,[sp,#0x2a]
;;;1314   modbus_registers[43]=(signed char)(bps[0]._Uii);
00023e  f88dc02b          STRB     r12,[sp,#0x2b]
;;;1315   modbus_registers[44]=(signed char)(bps[0]._Ii>>8);				//Рег23	Выходной ток выпрямителя №1, 0.1А
000242  f8d4c024          LDR      r12,[r4,#0x24]  ; bps
000246  ea4f292c          ASR      r9,r12,#8
00024a  f88d902c          STRB     r9,[sp,#0x2c]
;;;1316   modbus_registers[45]=(signed char)(bps[0]._Ii);
00024e  f88dc02d          STRB     r12,[sp,#0x2d]
;;;1317   modbus_registers[46]=(signed char)(bps[0]._Ti>>8);				//Рег24	Температура радиатора выпрямителя №1, 1гЦ
000252  f8d4c028          LDR      r12,[r4,#0x28]  ; bps
000256  ea4f292c          ASR      r9,r12,#8
00025a  f88d902e          STRB     r9,[sp,#0x2e]
;;;1318   modbus_registers[47]=(signed char)(bps[0]._Ti);
00025e  f88dc02f          STRB     r12,[sp,#0x2f]
;;;1319   modbus_registers[48]=(signed char)(bps[0]._av>>8);				//Рег25	Байт флагов выпрямителя №1, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000262  f04f0c00          MOV      r12,#0
000266  f88dc030          STRB     r12,[sp,#0x30]
;;;1320   modbus_registers[49]=(signed char)(bps[0]._av);
00026a  f8949001          LDRB     r9,[r4,#1]  ; bps
00026e  f88d9031          STRB     r9,[sp,#0x31]
;;;1321   modbus_registers[50]=(signed char)(bps[1]._Uii>>8);			//Рег26	Выходное напряжение выпрямителя №2, 0.1В
000272  f8d49080          LDR      r9,[r4,#0x80]  ; bps
000276  ea4f2a29          ASR      r10,r9,#8
00027a  f88da032          STRB     r10,[sp,#0x32]
;;;1322   modbus_registers[51]=(signed char)(bps[1]._Uii);
00027e  f88d9033          STRB     r9,[sp,#0x33]
;;;1323   modbus_registers[52]=(signed char)(bps[1]._Ii>>8);				//Рег27	Выходной ток выпрямителя №2, 0.1А
000282  f8d49088          LDR      r9,[r4,#0x88]  ; bps
000286  ea4f2a29          ASR      r10,r9,#8
00028a  f88da034          STRB     r10,[sp,#0x34]
;;;1324   modbus_registers[53]=(signed char)(bps[1]._Ii);
00028e  f88d9035          STRB     r9,[sp,#0x35]
;;;1325   modbus_registers[54]=(signed char)(bps[1]._Ti>>8);				//Рег28	Температура радиатора выпрямителя №2, 1гЦ
000292  f8d4908c          LDR      r9,[r4,#0x8c]  ; bps
000296  ea4f2a29          ASR      r10,r9,#8
00029a  f88da036          STRB     r10,[sp,#0x36]
;;;1326   modbus_registers[55]=(signed char)(bps[1]._Ti);
00029e  f88d9037          STRB     r9,[sp,#0x37]
;;;1327   modbus_registers[56]=(signed char)(bps[1]._av>>8);				//Рег29	Байт флагов выпрямителя №2, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0002a2  f88dc038          STRB     r12,[sp,#0x38]
;;;1328   modbus_registers[57]=(signed char)(bps[1]._av);
0002a6  f8949065          LDRB     r9,[r4,#0x65]  ; bps
0002aa  f88d9039          STRB     r9,[sp,#0x39]
;;;1329   modbus_registers[58]=(signed char)(bps[2]._Uii>>8);			//Рег30	Выходное напряжение выпрямителя №3, 0.1В
0002ae  f8d490e4          LDR      r9,[r4,#0xe4]  ; bps
0002b2  ea4f2a29          ASR      r10,r9,#8
0002b6  f88da03a          STRB     r10,[sp,#0x3a]
;;;1330   modbus_registers[59]=(signed char)(bps[2]._Uii);
0002ba  f88d903b          STRB     r9,[sp,#0x3b]
;;;1331   modbus_registers[60]=(signed char)(bps[2]._Ii>>8);				//Рег31	Выходной ток выпрямителя №3, 0.1А
0002be  f8d490ec          LDR      r9,[r4,#0xec]  ; bps
0002c2  ea4f2a29          ASR      r10,r9,#8
0002c6  f88da03c          STRB     r10,[sp,#0x3c]
;;;1332   modbus_registers[61]=(signed char)(bps[2]._Ii);
0002ca  f88d903d          STRB     r9,[sp,#0x3d]
;;;1333   modbus_registers[62]=(signed char)(bps[2]._Ti>>8);				//Рег32	Температура радиатора выпрямителя №3, 1гЦ
0002ce  f8d490f0          LDR      r9,[r4,#0xf0]  ; bps
0002d2  ea4f2a29          ASR      r10,r9,#8
0002d6  f88da03e          STRB     r10,[sp,#0x3e]
;;;1334   modbus_registers[63]=(signed char)(bps[2]._Ti);
0002da  f88d903f          STRB     r9,[sp,#0x3f]
;;;1335   modbus_registers[64]=(signed char)(bps[2]._av>>8);				//Рег33	Байт флагов выпрямителя №3, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0002de  f88dc040          STRB     r12,[sp,#0x40]
;;;1336   modbus_registers[65]=(signed char)(bps[2]._av);
0002e2  f89490c9          LDRB     r9,[r4,#0xc9]  ; bps
0002e6  f88d9041          STRB     r9,[sp,#0x41]
;;;1337   modbus_registers[66]=(signed char)(bps[3]._Uii>>8);			//Рег34	Выходное напряжение выпрямителя №4, 0.1В
0002ea  f8d49148          LDR      r9,[r4,#0x148]  ; bps
0002ee  ea4f2a29          ASR      r10,r9,#8
0002f2  f88da042          STRB     r10,[sp,#0x42]
;;;1338   modbus_registers[67]=(signed char)(bps[3]._Uii);
0002f6  f88d9043          STRB     r9,[sp,#0x43]
;;;1339   modbus_registers[68]=(signed char)(bps[3]._Ii>>8);				//Рег35	Выходной ток выпрямителя №4, 0.1А
0002fa  f8d49150          LDR      r9,[r4,#0x150]  ; bps
0002fe  ea4f2a29          ASR      r10,r9,#8
000302  f88da044          STRB     r10,[sp,#0x44]
;;;1340   modbus_registers[69]=(signed char)(bps[3]._Ii);
000306  f88d9045          STRB     r9,[sp,#0x45]
;;;1341   modbus_registers[70]=(signed char)(bps[3]._Ti>>8);				//Рег36	Температура радиатора выпрямителя №4, 1гЦ
00030a  f8d49154          LDR      r9,[r4,#0x154]  ; bps
00030e  ea4f2a29          ASR      r10,r9,#8
000312  f88da046          STRB     r10,[sp,#0x46]
;;;1342   modbus_registers[71]=(signed char)(bps[3]._Ti);
000316  f88d9047          STRB     r9,[sp,#0x47]
;;;1343   modbus_registers[72]=(signed char)(bps[3]._av>>8);				//Рег37	Байт флагов выпрямителя №4, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
00031a  f88dc048          STRB     r12,[sp,#0x48]
;;;1344   modbus_registers[73]=(signed char)(bps[3]._av);
00031e  f894912d          LDRB     r9,[r4,#0x12d]  ; bps
000322  f88d9049          STRB     r9,[sp,#0x49]
;;;1345   modbus_registers[74]=(signed char)(bps[4]._Uii>>8);			//Рег38	Выходное напряжение выпрямителя №5, 0.1В
000326  f8d491ac          LDR      r9,[r4,#0x1ac]  ; bps
00032a  ea4f2a29          ASR      r10,r9,#8
00032e  f88da04a          STRB     r10,[sp,#0x4a]
;;;1346   modbus_registers[75]=(signed char)(bps[4]._Uii);
000332  f88d904b          STRB     r9,[sp,#0x4b]
;;;1347   modbus_registers[76]=(signed char)(bps[4]._Ii>>8);				//Рег39	Выходной ток выпрямителя №5, 0.1А
000336  f8d491b4          LDR      r9,[r4,#0x1b4]  ; bps
00033a  ea4f2a29          ASR      r10,r9,#8
00033e  f88da04c          STRB     r10,[sp,#0x4c]
;;;1348   modbus_registers[77]=(signed char)(bps[4]._Ii);
000342  f88d904d          STRB     r9,[sp,#0x4d]
;;;1349   modbus_registers[78]=(signed char)(bps[4]._Ti>>8);				//Рег40	Температура радиатора выпрямителя №5, 1гЦ
000346  f8d491b8          LDR      r9,[r4,#0x1b8]  ; bps
00034a  ea4f2a29          ASR      r10,r9,#8
00034e  f88da04e          STRB     r10,[sp,#0x4e]
;;;1350   modbus_registers[79]=(signed char)(bps[4]._Ti);
000352  f88d904f          STRB     r9,[sp,#0x4f]
;;;1351   modbus_registers[80]=(signed char)(bps[4]._av>>8);				//Рег41	Байт флагов выпрямителя №5, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000356  f88dc050          STRB     r12,[sp,#0x50]
;;;1352   modbus_registers[81]=(signed char)(bps[4]._av);
00035a  f8949191          LDRB     r9,[r4,#0x191]  ; bps
00035e  f88d9051          STRB     r9,[sp,#0x51]
;;;1353   modbus_registers[82]=(signed char)(bps[5]._Uii>>8);			//Рег42	Выходное напряжение выпрямителя №6, 0.1В
000362  f8d49210          LDR      r9,[r4,#0x210]  ; bps
000366  ea4f2a29          ASR      r10,r9,#8
00036a  f88da052          STRB     r10,[sp,#0x52]
;;;1354   modbus_registers[83]=(signed char)(bps[5]._Uii);
00036e  f88d9053          STRB     r9,[sp,#0x53]
;;;1355   modbus_registers[84]=(signed char)(bps[5]._Ii>>8);				//Рег43	Выходной ток выпрямителя №6, 0.1А
000372  f8d49218          LDR      r9,[r4,#0x218]  ; bps
000376  ea4f2a29          ASR      r10,r9,#8
00037a  f88da054          STRB     r10,[sp,#0x54]
;;;1356   modbus_registers[85]=(signed char)(bps[5]._Ii);
00037e  f88d9055          STRB     r9,[sp,#0x55]
;;;1357   modbus_registers[86]=(signed char)(bps[5]._Ti>>8);				//Рег44	Температура радиатора выпрямителя №6, 1гЦ
000382  f8d4921c          LDR      r9,[r4,#0x21c]  ; bps
000386  ea4f2a29          ASR      r10,r9,#8
00038a  f88da056          STRB     r10,[sp,#0x56]
;;;1358   modbus_registers[87]=(signed char)(bps[5]._Ti);
00038e  f88d9057          STRB     r9,[sp,#0x57]
;;;1359   modbus_registers[88]=(signed char)(bps[5]._av>>8);				//Рег45	Байт флагов выпрямителя №6, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000392  f88dc058          STRB     r12,[sp,#0x58]
;;;1360   modbus_registers[89]=(signed char)(bps[5]._av);
000396  f89491f5          LDRB     r9,[r4,#0x1f5]  ; bps
00039a  f88d9059          STRB     r9,[sp,#0x59]
;;;1361   modbus_registers[90]=(signed char)(bps[6]._Uii>>8);			//Рег46	Выходное напряжение выпрямителя №7, 0.1В
00039e  f8d49274          LDR      r9,[r4,#0x274]  ; bps
0003a2  ea4f2a29          ASR      r10,r9,#8
0003a6  f88da05a          STRB     r10,[sp,#0x5a]
;;;1362   modbus_registers[91]=(signed char)(bps[6]._Uii);
0003aa  f88d905b          STRB     r9,[sp,#0x5b]
;;;1363   modbus_registers[92]=(signed char)(bps[6]._Ii>>8);				//Рег47	Выходной ток выпрямителя №7, 0.1А
0003ae  f8d4927c          LDR      r9,[r4,#0x27c]  ; bps
0003b2  ea4f2a29          ASR      r10,r9,#8
0003b6  f88da05c          STRB     r10,[sp,#0x5c]
;;;1364   modbus_registers[93]=(signed char)(bps[6]._Ii);
0003ba  f88d905d          STRB     r9,[sp,#0x5d]
;;;1365   modbus_registers[94]=(signed char)(bps[6]._Ti>>8);				//Рег48	Температура радиатора выпрямителя №7, 1гЦ
0003be  f8d49280          LDR      r9,[r4,#0x280]  ; bps
0003c2  ea4f2a29          ASR      r10,r9,#8
0003c6  f88da05e          STRB     r10,[sp,#0x5e]
;;;1366   modbus_registers[95]=(signed char)(bps[6]._Ti);
0003ca  f88d905f          STRB     r9,[sp,#0x5f]
;;;1367   modbus_registers[96]=(signed char)(bps[6]._av>>8);				//Рег49	Байт флагов выпрямителя №7, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0003ce  f88dc060          STRB     r12,[sp,#0x60]
;;;1368   modbus_registers[97]=(signed char)(bps[6]._av);
0003d2  f8949259          LDRB     r9,[r4,#0x259]  ; bps
0003d6  f88d9061          STRB     r9,[sp,#0x61]
;;;1369   modbus_registers[98]=(signed char)(bps[7]._Uii>>8);			//Рег50	Выходное напряжение выпрямителя №8, 0.1В
0003da  f8d492d8          LDR      r9,[r4,#0x2d8]  ; bps
0003de  ea4f2a29          ASR      r10,r9,#8
0003e2  f88da062          STRB     r10,[sp,#0x62]
;;;1370   modbus_registers[99]=(signed char)(bps[7]._Uii);
0003e6  f88d9063          STRB     r9,[sp,#0x63]
;;;1371   modbus_registers[100]=(signed char)(bps[7]._Ii>>8);			//Рег51	Выходной ток выпрямителя №8, 0.1А
0003ea  f8d492e0          LDR      r9,[r4,#0x2e0]  ; bps
0003ee  ea4f2a29          ASR      r10,r9,#8
0003f2  f88da064          STRB     r10,[sp,#0x64]
;;;1372   modbus_registers[101]=(signed char)(bps[7]._Ii);
0003f6  f88d9065          STRB     r9,[sp,#0x65]
;;;1373   modbus_registers[102]=(signed char)(bps[7]._Ti>>8);			//Рег52	Температура радиатора выпрямителя №8, 1гЦ
0003fa  f8d492e4          LDR      r9,[r4,#0x2e4]  ; bps
0003fe  ea4f2a29          ASR      r10,r9,#8
000402  f88da066          STRB     r10,[sp,#0x66]
;;;1374   modbus_registers[103]=(signed char)(bps[7]._Ti);
000406  f88d9067          STRB     r9,[sp,#0x67]
;;;1375   modbus_registers[104]=(signed char)(bps[7]._av>>8);			//Рег53	Байт флагов выпрямителя №8, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
00040a  f88dc068          STRB     r12,[sp,#0x68]
;;;1376   modbus_registers[105]=(signed char)(bps[7]._av);
00040e  f89442bd          LDRB     r4,[r4,#0x2bd]  ; bps
000412  f88d4069          STRB     r4,[sp,#0x69]
;;;1377   modbus_registers[106]=(signed char)(bps_U>>8);					//Рег54   	напряжение выпрямителей, 0.1В
000416  4c1e              LDR      r4,|L1.1168|
000418  8824              LDRH     r4,[r4,#0]  ; bps_U
00041a  ea4f2924          ASR      r9,r4,#8
00041e  f88d906a          STRB     r9,[sp,#0x6a]
;;;1378   modbus_registers[107]=(signed char)(bps_U);
000422  f88d406b          STRB     r4,[sp,#0x6b]
;;;1379   tempS=0;
000426  4664              MOV      r4,r12
;;;1380   if((speedChIsOn)||(sp_ch_stat==scsWRK)) tempS=1;
000428  f8df9068          LDR      r9,|L1.1172|
00042c  f8b99000          LDRH     r9,[r9,#0]  ; speedChIsOn
000430  f1b90f00          CMP      r9,#0
000434  d133              BNE      |L1.1182|
000436  f8df9060          LDR      r9,|L1.1176|
00043a  f8999000          LDRB     r9,[r9,#0]  ; sp_ch_stat
00043e  f1b90f02          CMP      r9,#2
000442  e02b              B        |L1.1180|
                  |L1.1092|
                          DCD      MODBUS_ADRESS
                  |L1.1096|
                          DCD      ||area_number.4||+0x3c
                  |L1.1100|
                          DCD      enmv_on
                  |L1.1104|
                          DCD      snmp_enmv_data
                  |L1.1108|
                          DCD      enmv_data
                  |L1.1112|
                          DCD      enmv_data_pred
                  |L1.1116|
                          DCD      enmv_puts_en
                  |L1.1120|
                          DCD      out_U
                  |L1.1124|
                          DCD      bps_I
                  |L1.1128|
                          DCD      net_U
                  |L1.1132|
                          DCD      net_F
                  |L1.1136|
                          DCD      net_Ua
                  |L1.1140|
                          DCD      net_Ub
                  |L1.1144|
                          DCD      net_Uc
                  |L1.1148|
                          DCD      bat
                  |L1.1152|
                          DCD      t_ext
                  |L1.1156|
                          DCD      bat_hndl_zvu_Q
                  |L1.1160|
                          DCD      BAT_C_REAL
                  |L1.1164|
                          DCD      bps
                  |L1.1168|
                          DCD      bps_U
                  |L1.1172|
                          DCD      speedChIsOn
                  |L1.1176|
                          DCD      sp_ch_stat
                  |L1.1180|
00049c  d101              BNE      |L1.1186|
                  |L1.1182|
00049e  f04f0401          MOV      r4,#1
                  |L1.1186|
;;;1381   modbus_registers[108]=(signed char)(tempS>>8);					//Рег55   	Ускоренный заряд включенность, (1 - вкл, 0 - Выкл)
0004a2  ea4f2924          ASR      r9,r4,#8
0004a6  f88d906c          STRB     r9,[sp,#0x6c]
;;;1382   modbus_registers[109]=(signed char)(tempS);
0004aa  f88d406d          STRB     r4,[sp,#0x6d]
;;;1383   tempS=0;
0004ae  f04f0400          MOV      r4,#0
;;;1384   if(spc_stat==spcVZ) tempS=1;
0004b2  f8df941c          LDR      r9,|L1.2256|
0004b6  f8999000          LDRB     r9,[r9,#0]  ; spc_stat
0004ba  f1b90f02          CMP      r9,#2
0004be  d101              BNE      |L1.1220|
0004c0  f04f0401          MOV      r4,#1
                  |L1.1220|
;;;1385   modbus_registers[110]=(signed char)(tempS>>8);					//Рег56   	Выравнивающий заряд включенность, (1 - вкл, 0 - Выкл)
0004c4  ea4f2924          ASR      r9,r4,#8
0004c8  f88d906e          STRB     r9,[sp,#0x6e]
;;;1386   modbus_registers[111]=(signed char)(tempS);
0004cc  f88d406f          STRB     r4,[sp,#0x6f]
;;;1387   modbus_registers[112]=(signed char)(uout_av>>8);					//Рег57   Контроль выходного напряжения, (0 - норма, 1 - завышено, 2 - занижено)
0004d0  f88dc070          STRB     r12,[sp,#0x70]
;;;1388   modbus_registers[113]=(signed char)(uout_av);
0004d4  4cff              LDR      r4,|L1.2260|
0004d6  7824              LDRB     r4,[r4,#0]  ; uout_av
0004d8  f88d4071          STRB     r4,[sp,#0x71]
;;;1389   /*
;;;1390   tempS=0;													 //Рег60	Регистр флагов состояния системы
;;;1391   if(bat_ips._av)			tempS|=(1<<0);						 // Бит 0	Авария батареи
;;;1392   if(avar_stat&0x0001)   	tempS|=(1<<1);						 //	Бит 1	Авария питающей сети 
;;;1393   if(avar_stat&(1<<(3+0)))tempS|=(1<<2);						 //	Бит 2	Авария выпрямителя №1
;;;1394   if(avar_stat&(1<<(3+1)))tempS|=(1<<3);						 //	Бит 3	Авария выпрямителя №2
;;;1395   if(avar_stat&(1<<(3+2)))tempS|=(1<<4);						 //	Бит 4	Авария выпрямителя №3
;;;1396   if(avar_stat&(1<<(3+3)))tempS|=(1<<5);						 	//	Бит 5	Авария выпрямителя №4
;;;1397   if(avar_stat&(1<<(3+4)))tempS|=(1<<6);						 	//	Бит 6	Авария выпрямителя №5
;;;1398   if(avar_stat&(1<<(3+5)))tempS|=(1<<7);						 	//	Бит 7	Авария выпрямителя №6
;;;1399   if(avar_stat&(1<<(3+6)))tempS|=(1<<8);						 	//	Бит 8	Авария выпрямителя №7
;;;1400   if(avar_stat&(1<<(3+6)))tempS|=(1<<9);						 	//	Бит 8	Авария выпрямителя №8
;;;1401   */
;;;1402   tempS=0;
;;;1403   tempS=avar_stat;
0004dc  4cfe              LDR      r4,|L1.2264|
0004de  6824              LDR      r4,[r4,#0]  ; avar_stat
0004e0  b224              SXTH     r4,r4
;;;1404   #ifdef UKU_ZVU
;;;1405   if(bat_ips._av)			tempS|=(1<<1);
0004e2  f8dfc3f8          LDR      r12,|L1.2268|
0004e6  f89cc03d          LDRB     r12,[r12,#0x3d]  ; bat_ips
0004ea  f1bc0f00          CMP      r12,#0
0004ee  d002              BEQ      |L1.1270|
0004f0  f0440402          ORR      r4,r4,#2
0004f4  e001              B        |L1.1274|
                  |L1.1270|
;;;1406   else 					tempS&=~(1<<1);
0004f6  f0240402          BIC      r4,r4,#2
                  |L1.1274|
;;;1407   #endif
;;;1408   //Рег60	Регистр флагов состояния системы
;;;1409   // 	Бит 0	Авария питающей сети 
;;;1410   //	Бит 1	Авария батареи №1(Авария батареи для ЗВУ)
;;;1411   //	Бит 2	Авария батареи №2
;;;1412   //	Бит 3	Авария выпрямителя №1
;;;1413   //	Бит 4	Авария выпрямителя №2
;;;1414   //	Бит 5	Авария выпрямителя №3
;;;1415   //	Бит 6	Авария выпрямителя №4
;;;1416   //	Бит 7	Авария выпрямителя №5
;;;1417   //	Бит 8	Авария выпрямителя №6
;;;1418   //	Бит 9	Авария выпрямителя №7
;;;1419   //	Бит 10	Авария выпрямителя №8
;;;1420   
;;;1421   modbus_registers[118]=(signed char)(tempS>>8);
0004fa  ea4f2c24          ASR      r12,r4,#8
0004fe  f88dc076          STRB     r12,[sp,#0x76]
;;;1422   modbus_registers[119]=(signed char)(tempS);
000502  f88d4077          STRB     r4,[sp,#0x77]
;;;1423   
;;;1424   modbus_registers[120]=(signed char)(volta_short>>8);		//Рег61   	напряжение счетчика, 0.1В
000506  4cf6              LDR      r4,|L1.2272|
000508  8824              LDRH     r4,[r4,#0]  ; volta_short
00050a  ea4f2c24          ASR      r12,r4,#8
00050e  f88dc078          STRB     r12,[sp,#0x78]
;;;1425   modbus_registers[121]=(signed char)(volta_short);
000512  f88d4079          STRB     r4,[sp,#0x79]
;;;1426   modbus_registers[122]=(signed char)(curr_short>>8);			//Рег62  	ток счетчика, 0.01А
000516  4cf3              LDR      r4,|L1.2276|
000518  8824              LDRH     r4,[r4,#0]  ; curr_short
00051a  ea4f2c24          ASR      r12,r4,#8
00051e  f88dc07a          STRB     r12,[sp,#0x7a]
;;;1427   modbus_registers[123]=(signed char)(curr_short);
000522  f88d407b          STRB     r4,[sp,#0x7b]
;;;1428   modbus_registers[124]=(signed char)(power_int>>8);			//Рег63   	мощность счетчика, 1Вт
000526  4cf0              LDR      r4,|L1.2280|
000528  6824              LDR      r4,[r4,#0]  ; power_int
00052a  ea4f2c24          ASR      r12,r4,#8
00052e  f88dc07c          STRB     r12,[sp,#0x7c]
;;;1429   modbus_registers[125]=(signed char)(power_int);
000532  f88d407d          STRB     r4,[sp,#0x7d]
;;;1430   
;;;1431   
;;;1432   tempS=cntrl_stat_old;
000536  4ced              LDR      r4,|L1.2284|
000538  f9b44000          LDRSH    r4,[r4,#0]  ; cntrl_stat_old
;;;1433   if(	(main_kb_cnt==(TBAT*60)-21) || (main_kb_cnt==(TBAT*60)-20) || (main_kb_cnt==(TBAT*60)-19)) tempS=((short)TBAT)|0x4000;
00053c  f8dfc3b0          LDR      r12,|L1.2288|
000540  f06f0a14          MVN      r10,#0x14
000544  f9bcc000          LDRSH    r12,[r12,#0]  ; TBAT
000548  ebcc190c          RSB      r9,r12,r12,LSL #4
00054c  eb0a0b89          ADD      r11,r10,r9,LSL #2
000550  f8dfa3a0          LDR      r10,|L1.2292|
000554  f9baa000          LDRSH    r10,[r10,#0]  ; main_kb_cnt
000558  45d3              CMP      r11,r10
00055a  d00b              BEQ      |L1.1396|
00055c  f06f0b13          MVN      r11,#0x13
000560  eb0b0b89          ADD      r11,r11,r9,LSL #2
000564  45d3              CMP      r11,r10
000566  d005              BEQ      |L1.1396|
000568  f06f0b12          MVN      r11,#0x12
00056c  eb0b0989          ADD      r9,r11,r9,LSL #2
000570  45d1              CMP      r9,r10
000572  d101              BNE      |L1.1400|
                  |L1.1396|
000574  f44c4480          ORR      r4,r12,#0x4000
                  |L1.1400|
;;;1434   //tempS=0x800f;
;;;1435   modbus_registers[198]=(signed char)(tempS>>8);				//???100	????????? ???
000578  ea4f2c24          ASR      r12,r4,#8
00057c  f88dc0c6          STRB     r12,[sp,#0xc6]
;;;1436   modbus_registers[199]=(signed char)(tempS);
000580  f88d40c7          STRB     r4,[sp,#0xc7]
;;;1437   
;;;1438   tempS=t_ext[0];
;;;1439   if(ND_EXT[0])tempS=-1000;
000584  f8dfa370          LDR      r10,|L1.2296|
000588  f8df9370          LDR      r9,|L1.2300|
00058c  f89a4000          LDRB     r4,[r10,#0]  ; ND_EXT
000590  b104              CBZ      r4,|L1.1428|
000592  464b              MOV      r3,r9
                  |L1.1428|
;;;1440   modbus_registers[400]=(signed char)(tempS>>8);				//Рег201	Внешний датчик температуры №1
000594  ea4f2423          ASR      r4,r3,#8
000598  f88d4190          STRB     r4,[sp,#0x190]
;;;1441   modbus_registers[401]=(signed char)(tempS);
00059c  f88d3191          STRB     r3,[sp,#0x191]
;;;1442   tempS=t_ext[1];
0005a0  f9b84002          LDRSH    r4,[r8,#2]  ; t_ext
;;;1443   if(ND_EXT[1])tempS=-1000;
0005a4  f89a3001          LDRB     r3,[r10,#1]  ; ND_EXT
0005a8  b103              CBZ      r3,|L1.1452|
0005aa  464c              MOV      r4,r9
                  |L1.1452|
;;;1444   modbus_registers[402]=(signed char)(tempS>>8);				//Рег202	Внешний датчик температуры №2
0005ac  ea4f2324          ASR      r3,r4,#8
0005b0  f88d3192          STRB     r3,[sp,#0x192]
;;;1445   modbus_registers[403]=(signed char)(tempS);
0005b4  f88d4193          STRB     r4,[sp,#0x193]
;;;1446   tempS=t_ext[2];
0005b8  f9b8c004          LDRSH    r12,[r8,#4]  ; t_ext
;;;1447   if(ND_EXT[2])tempS=-1000;
0005bc  f89a3002          LDRB     r3,[r10,#2]  ; ND_EXT
0005c0  b103              CBZ      r3,|L1.1476|
0005c2  46cc              MOV      r12,r9
                  |L1.1476|
;;;1448   modbus_registers[404]=(signed char)(tempS>>8);				//Рег203	Внешний датчик температуры №3
0005c4  ea4f232c          ASR      r3,r12,#8
0005c8  f88d3194          STRB     r3,[sp,#0x194]
;;;1449   modbus_registers[405]=(signed char)(tempS);
0005cc  f88dc195          STRB     r12,[sp,#0x195]
;;;1450   /*tempS=t_ext[3];
;;;1451   if(ND_EXT[3])tempS=-1000;
;;;1452   modbus_registers[406]=(signed char)(tempS>>8);				//Рег204	Внешний датчик температуры №4
;;;1453   modbus_registers[407]=(signed char)(tempS);   */
;;;1454   
;;;1455   modbus_registers[406]=(signed char)(bat_hndl_t_razr_min>>8);
0005d0  4bcb              LDR      r3,|L1.2304|
0005d2  f9b33000          LDRSH    r3,[r3,#0]  ; bat_hndl_t_razr_min
0005d6  ea4f2823          ASR      r8,r3,#8
0005da  f88d8196          STRB     r8,[sp,#0x196]
;;;1456   modbus_registers[407]=(signed char)(bat_hndl_t_razr_min);
0005de  fa4ffc83          SXTB     r12,r3
0005e2  f88dc197          STRB     r12,[sp,#0x197]
;;;1457   
;;;1458   tempS=0;
0005e6  f04f0400          MOV      r4,#0
;;;1459   if(sk_stat[0]==ssON) tempS|=0x0001;
0005ea  4bc6              LDR      r3,|L1.2308|
0005ec  f8939000          LDRB     r9,[r3,#0]  ; sk_stat
0005f0  f1b90f01          CMP      r9,#1
0005f4  d101              BNE      |L1.1530|
0005f6  f04f0401          MOV      r4,#1
                  |L1.1530|
;;;1460   if(sk_av_stat[0]==sasON) tempS|=0x0002;
0005fa  f8df930c          LDR      r9,|L1.2312|
0005fe  f899a000          LDRB     r10,[r9,#0]  ; sk_av_stat
000602  f1ba0f01          CMP      r10,#1
000606  d101              BNE      |L1.1548|
000608  f0440402          ORR      r4,r4,#2
                  |L1.1548|
;;;1461   modbus_registers[420]=(signed char)(tempS>>8);				//Рег211	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
00060c  ea4f2a24          ASR      r10,r4,#8
000610  f88da1a4          STRB     r10,[sp,#0x1a4]
;;;1462   modbus_registers[421]=(signed char)(tempS);
000614  f88d41a5          STRB     r4,[sp,#0x1a5]
;;;1463   tempS=0;
000618  f04f0400          MOV      r4,#0
;;;1464   if(sk_stat[1]==ssON) tempS|=0x0001;
00061c  f893a001          LDRB     r10,[r3,#1]  ; sk_stat
000620  f1ba0f01          CMP      r10,#1
000624  d101              BNE      |L1.1578|
000626  f04f0401          MOV      r4,#1
                  |L1.1578|
;;;1465   if(sk_av_stat[1]==sasON) tempS|=0x0002;
00062a  f899a001          LDRB     r10,[r9,#1]  ; sk_av_stat
00062e  f1ba0f01          CMP      r10,#1
000632  d101              BNE      |L1.1592|
000634  f0440402          ORR      r4,r4,#2
                  |L1.1592|
;;;1466   modbus_registers[422]=(signed char)(tempS>>8);				//Рег212	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
000638  ea4f2a24          ASR      r10,r4,#8
00063c  f88da1a6          STRB     r10,[sp,#0x1a6]
;;;1467   modbus_registers[423]=(signed char)(tempS);
000640  f88d41a7          STRB     r4,[sp,#0x1a7]
;;;1468   tempS=0;
000644  f04f0400          MOV      r4,#0
;;;1469   if(sk_stat[2]==ssON) tempS|=0x0001;
000648  f893a002          LDRB     r10,[r3,#2]  ; sk_stat
00064c  f1ba0f01          CMP      r10,#1
000650  d101              BNE      |L1.1622|
000652  f04f0401          MOV      r4,#1
                  |L1.1622|
;;;1470   if(sk_av_stat[2]==sasON) tempS|=0x0002;
000656  f899a002          LDRB     r10,[r9,#2]  ; sk_av_stat
00065a  f1ba0f01          CMP      r10,#1
00065e  d101              BNE      |L1.1636|
000660  f0440402          ORR      r4,r4,#2
                  |L1.1636|
;;;1471   modbus_registers[424]=(signed char)(tempS>>8);				//Рег213	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
000664  ea4f2a24          ASR      r10,r4,#8
000668  f88da1a8          STRB     r10,[sp,#0x1a8]
;;;1472   modbus_registers[425]=(signed char)(tempS);
00066c  f88d41a9          STRB     r4,[sp,#0x1a9]
;;;1473   tempS=0;
000670  f04f0400          MOV      r4,#0
;;;1474   if(sk_stat[3]==ssON) tempS|=0x0001;
000674  78db              LDRB     r3,[r3,#3]  ; sk_stat
000676  2b01              CMP      r3,#1
000678  d100              BNE      |L1.1660|
00067a  461c              MOV      r4,r3
                  |L1.1660|
;;;1475   if(sk_av_stat[3]==sasON) tempS|=0x0002;
00067c  f8993003          LDRB     r3,[r9,#3]  ; sk_av_stat
000680  2b01              CMP      r3,#1
000682  d101              BNE      |L1.1672|
000684  f0440402          ORR      r4,r4,#2
                  |L1.1672|
;;;1476   modbus_registers[426]=(signed char)(tempS>>8);				//Рег214	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
000688  ea4f2324          ASR      r3,r4,#8
00068c  f88d31aa          STRB     r3,[sp,#0x1aa]
;;;1477   modbus_registers[427]=(signed char)(tempS);
000690  f88d41ab          STRB     r4,[sp,#0x1ab]
;;;1478   
;;;1479   tempS=bat[0]._av;
;;;1480   #ifdef UKU_220_IPS_TERMOKOMPENSAT 
;;;1481   tempS=ips_bat_av_stat;
000694  4b9d              LDR      r3,|L1.2316|
000696  781b              LDRB     r3,[r3,#0]  ; ips_bat_av_stat
;;;1482   #endif
;;;1483   
;;;1484   modbus_registers[428]=(signed char)(tempS>>8);				//Рег215	Байт статуса батареи №1(0x01 - авария цепи батареи, 0x02 - авария средней точки батареи)
000698  ea4f2413          LSR      r4,r3,#8
00069c  f88d41ac          STRB     r4,[sp,#0x1ac]
;;;1485   modbus_registers[429]=(signed char)(tempS);
0006a0  f88d31ad          STRB     r3,[sp,#0x1ad]
;;;1486   
;;;1487   tempS=bat[1]._av;
0006a4  f8953089          LDRB     r3,[r5,#0x89]  ; bat
;;;1488   modbus_registers[430]=(signed char)(tempS>>8);				//Рег216	Байт статуса батареи №2(0x01 - авария цепи батареи, 0x02 - авария средней точки батареи)
0006a8  ea4f2413          LSR      r4,r3,#8
0006ac  f88d41ae          STRB     r4,[sp,#0x1ae]
;;;1489   modbus_registers[431]=(signed char)(tempS);
0006b0  f88d31af          STRB     r3,[sp,#0x1af]
;;;1490   
;;;1491   tempS=bat_hndl_t_razr_min;
;;;1492   modbus_registers[432]=(signed char)(tempS>>8);				//Рег217	Остаточное время работы батареи в минутах
0006b4  f88d81b0          STRB     r8,[sp,#0x1b0]
;;;1493   modbus_registers[433]=(signed char)(tempS);
0006b8  f88dc1b1          STRB     r12,[sp,#0x1b1]
;;;1494   
;;;1495   modbus_registers[434]=(signed char)(snmp_bat_flag[0]>>8);	//Рег218 //  //флаги АКБ №1
0006bc  4c94              LDR      r4,|L1.2320|
0006be  8823              LDRH     r3,[r4,#0]  ; snmp_bat_flag
0006c0  ea4f2523          ASR      r5,r3,#8
0006c4  f88d51b2          STRB     r5,[sp,#0x1b2]
;;;1496   modbus_registers[435]=(signed char)(snmp_bat_flag[0]);	
0006c8  f88d31b3          STRB     r3,[sp,#0x1b3]
;;;1497   modbus_registers[436]=(signed char)(snmp_bat_flag[1]>>8);	//Рег219 //  //флаги АКБ №2
0006cc  8863              LDRH     r3,[r4,#2]  ; snmp_bat_flag
0006ce  ea4f2423          ASR      r4,r3,#8
0006d2  f88d41b4          STRB     r4,[sp,#0x1b4]
;;;1498   modbus_registers[437]=(signed char)(snmp_bat_flag[1]);
0006d6  f88d31b5          STRB     r3,[sp,#0x1b5]
0006da  466b              MOV      r3,sp                 ;1239
;;;1499   /*
;;;1500   Бит 0- равен 1, если напряжение на АКБ ниже уставки Uсигн., иначе равен нулю.
;;;1501   Бит 1- равен 1, если показание датчика температуры АКБ выше уставки t бат.сигн., иначе равен нулю. 
;;;1502   Бит 2- равен 1, если показание датчика температуры АКБ выше уставки t бат.мах., иначе равен нулю.
;;;1503   Бит 3- равен 1, если ток АКБ меньше нуля (АКБ разряжается), иначе равен нулю.
;;;1504   Бит 4- равен 1, если включена функция контроля емкости АКБ, иначе равен нулю.
;;;1505   Бит 5- равен 1, если включен выравнивающий заряд АКБ, иначе равен нулю.
;;;1506   Бит 6- равен 1, если режим выравнивающего заряда заблокирован.
;;;1507   Бит 7- равен 1, если включен ускоренный заряд АКБ, иначе равен нулю.
;;;1508   Бит 8- равен 1, если режим ускоренного заряда заблокирован.
;;;1509   Бит 9- равен 1, если включен уравнительный заряд АКБ, иначе равен нулю.
;;;1510   Бит 10- равен 1, если режим уравнительного заряда заблокирован.
;;;1511   Бит 11- равен 1, если включен формовочный заряд АКБ, иначе равен нулю.
;;;1512   Бит 12- равен 1, если режим формовочного заряда заблокирован.
;;;1513   */
;;;1514   
;;;1515   if(prot==MODBUS_RTU_PROT)
;;;1516   	{
;;;1517   	modbus_tx_buff[0]=adr;
;;;1518   	modbus_tx_buff[1]=func;
;;;1519   
;;;1520   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1521   
;;;1522   	mem_copy((signed char*)&modbus_tx_buff[3],(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
0006dc  f1a20201          SUB      r2,r2,#1
0006e0  f8df8230          LDR      r8,|L1.2324|
0006e4  eb030342          ADD      r3,r3,r2,LSL #1
0006e8  ea4f0246          LSL      r2,r6,#1              ;1520
0006ec  b15f              CBZ      r7,|L1.1798|
;;;1523   
;;;1524   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1525   
;;;1526   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1527   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1528   
;;;1529   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1530   		{
;;;1531   		putchar0(modbus_tx_buff[i]);
;;;1532   		}
;;;1533   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1534   		{
;;;1535   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1536   		}
;;;1537   	}
;;;1538   else if(prot==MODBUS_TCP_PROT)
0006ee  2f01              CMP      r7,#1
0006f0  d106              BNE      |L1.1792|
;;;1539   	{
;;;1540   	mem_copy((signed char*)modbus_tx_buff,(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
0006f2  4619              MOV      r1,r3
0006f4  4640              MOV      r0,r8
0006f6  f7fffffe          BL       mem_copy
;;;1541   	modbus_tcp_out_ptr=(signed char*)modbus_tx_buff;
0006fa  4887              LDR      r0,|L1.2328|
0006fc  f8c08000          STR      r8,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.1792|
;;;1542   	}
;;;1543   }
000700  b07d              ADD      sp,sp,#0x1f4
                  |L1.1794|
000702  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1798|
000706  f8880000          STRB     r0,[r8,#0]            ;1517
00070a  f8881001          STRB     r1,[r8,#1]            ;1518
00070e  f8882002          STRB     r2,[r8,#2]            ;1520
000712  4619              MOV      r1,r3                 ;1522
000714  f1080003          ADD      r0,r8,#3              ;1522
000718  f7fffffe          BL       mem_copy
00071c  2003              MOVS     r0,#3                 ;1524
00071e  eb000046          ADD      r0,r0,r6,LSL #1       ;1524
000722  b201              SXTH     r1,r0                 ;1524
000724  487b              LDR      r0,|L1.2324|
000726  f7fffffe          BL       CRC16_2
00072a  eb080146          ADD      r1,r8,r6,LSL #1       ;1526
00072e  70c8              STRB     r0,[r1,#3]            ;1526
000730  ea4f2010          LSR      r0,r0,#8              ;1527
000734  7108              STRB     r0,[r1,#4]            ;1527
000736  f04f0400          MOV      r4,#0                 ;1529
00073a  f04f0005          MOV      r0,#5                 ;1529
00073e  eb000546          ADD      r5,r0,r6,LSL #1       ;1529
000742  e006              B        |L1.1874|
                  |L1.1860|
000744  f8180004          LDRB     r0,[r8,r4]            ;1531
000748  f7fffffe          BL       putchar0
00074c  f1040401          ADD      r4,r4,#1              ;1529
000750  b2e4              UXTB     r4,r4                 ;1529
                  |L1.1874|
000752  42a5              CMP      r5,r4                 ;1529
000754  d8f6              BHI      |L1.1860|
000756  f04f0400          MOV      r4,#0                 ;1533
00075a  e006              B        |L1.1898|
                  |L1.1884|
00075c  f8180004          LDRB     r0,[r8,r4]            ;1535
000760  f7fffffe          BL       putchar_sc16is700
000764  f1040401          ADD      r4,r4,#1              ;1533
000768  b2e4              UXTB     r4,r4                 ;1533
                  |L1.1898|
00076a  42a5              CMP      r5,r4                 ;1533
00076c  d8f6              BHI      |L1.1884|
00076e  e7c7              B        |L1.1792|
;;;1544   
                          ENDP

                  modbus_hold_registers_transmit PROC
;;;1122   //-----------------------------------------------
;;;1123   void modbus_hold_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
000770  b5f0              PUSH     {r4-r7,lr}
;;;1124   {
000772  b0bf              SUB      sp,sp,#0xfc
000774  4604              MOV      r4,r0
000776  9e44              LDR      r6,[sp,#0x110]
000778  460f              MOV      r7,r1
00077a  461d              MOV      r5,r3
;;;1125   signed char modbus_registers[250];
;;;1126   //char modbus_tx_buff[150];
;;;1127   unsigned short crc_temp;
;;;1128   char i;
;;;1129   
;;;1130   modbus_registers[20]=(char)((LPC_RTC->YEAR)>>8);			//Рег11  Время, год
00077c  4867              LDR      r0,|L1.2332|
00077e  8b81              LDRH     r1,[r0,#0x1c]
000780  ea4f2111          LSR      r1,r1,#8
000784  f88d1014          STRB     r1,[sp,#0x14]
;;;1131   modbus_registers[21]=(char)((LPC_RTC->YEAR));
000788  8b81              LDRH     r1,[r0,#0x1c]
00078a  f88d1015          STRB     r1,[sp,#0x15]
;;;1132   modbus_registers[22]=(char)((LPC_RTC->MONTH)>>8);		//Рег12  Время, месяц
00078e  7e01              LDRB     r1,[r0,#0x18]
000790  f04f0100          MOV      r1,#0
000794  f88d1016          STRB     r1,[sp,#0x16]
;;;1133   modbus_registers[23]=(char)((LPC_RTC->MONTH));
000798  7e03              LDRB     r3,[r0,#0x18]
00079a  f88d3017          STRB     r3,[sp,#0x17]
;;;1134   modbus_registers[24]=(char)((LPC_RTC->DOM)>>8);			//Рег13  Время, день месяца
00079e  7b03              LDRB     r3,[r0,#0xc]
0007a0  f88d1018          STRB     r1,[sp,#0x18]
;;;1135   modbus_registers[25]=(char)((LPC_RTC->DOM));
0007a4  7b03              LDRB     r3,[r0,#0xc]
0007a6  f88d3019          STRB     r3,[sp,#0x19]
;;;1136   modbus_registers[26]=(char)((LPC_RTC->HOUR)>>8);			//Рег14  Время, час
0007aa  7a03              LDRB     r3,[r0,#8]
0007ac  f88d101a          STRB     r1,[sp,#0x1a]
;;;1137   modbus_registers[27]=(char)((LPC_RTC->HOUR));
0007b0  7a03              LDRB     r3,[r0,#8]
0007b2  f88d301b          STRB     r3,[sp,#0x1b]
;;;1138   modbus_registers[28]=(char)((LPC_RTC->MIN)>>8);			//Рег15  Время, минуты
0007b6  7903              LDRB     r3,[r0,#4]
0007b8  f88d101c          STRB     r1,[sp,#0x1c]
;;;1139   modbus_registers[29]=(char)((LPC_RTC->MIN));
0007bc  7903              LDRB     r3,[r0,#4]
0007be  f88d301d          STRB     r3,[sp,#0x1d]
;;;1140   modbus_registers[30]=(char)((LPC_RTC->SEC)>>8);			//Рег16  Время, секунды
0007c2  7803              LDRB     r3,[r0,#0]
0007c4  f88d101e          STRB     r1,[sp,#0x1e]
;;;1141   modbus_registers[31]=(char)((LPC_RTC->SEC));
0007c8  7800              LDRB     r0,[r0,#0]
0007ca  f88d001f          STRB     r0,[sp,#0x1f]
;;;1142   modbus_registers[38]=(char)(NUMIST>>8);				//Рег20  Количество выпрямителей в структуре
0007ce  4854              LDR      r0,|L1.2336|
0007d0  8800              LDRH     r0,[r0,#0]  ; NUMIST
0007d2  ea4f2120          ASR      r1,r0,#8
0007d6  f88d1026          STRB     r1,[sp,#0x26]
;;;1143   modbus_registers[39]=(char)(NUMIST);
0007da  f88d0027          STRB     r0,[sp,#0x27]
;;;1144   modbus_registers[40]=(char)(PAR>>8);					//Рег21  Параллельная работа выпрямителей вкл./выкл.
0007de  4851              LDR      r0,|L1.2340|
0007e0  8800              LDRH     r0,[r0,#0]  ; PAR
0007e2  ea4f2120          ASR      r1,r0,#8
0007e6  f88d1028          STRB     r1,[sp,#0x28]
;;;1145   modbus_registers[41]=(char)(PAR);
0007ea  f88d0029          STRB     r0,[sp,#0x29]
;;;1146   modbus_registers[42]=(char)(ZV_ON>>8);					//Рег22  Звуковая аварийная сигнализация вкл./выкл.
0007ee  484e              LDR      r0,|L1.2344|
0007f0  8800              LDRH     r0,[r0,#0]  ; ZV_ON
0007f2  ea4f2120          ASR      r1,r0,#8
0007f6  f88d102a          STRB     r1,[sp,#0x2a]
;;;1147   modbus_registers[43]=(char)(ZV_ON);
0007fa  f88d002b          STRB     r0,[sp,#0x2b]
;;;1148   modbus_registers[46]=(char)(UBM_AV>>8);				//Рег24  Аварийный уровень отклонения напряжения средней точки батареи, %
0007fe  484b              LDR      r0,|L1.2348|
000800  8800              LDRH     r0,[r0,#0]  ; UBM_AV
000802  ea4f2120          ASR      r1,r0,#8
000806  f88d102e          STRB     r1,[sp,#0x2e]
;;;1149   modbus_registers[47]=(char)(UBM_AV);
00080a  f88d002f          STRB     r0,[sp,#0x2f]
;;;1150   modbus_registers[58]=(char)(TBAT>>8);					//Рег30  Период проверки цепи батареи, минут.
00080e  4838              LDR      r0,|L1.2288|
000810  8800              LDRH     r0,[r0,#0]  ; TBAT
000812  ea4f2120          ASR      r1,r0,#8
000816  f88d103a          STRB     r1,[sp,#0x3a]
;;;1151   modbus_registers[59]=(char)(TBAT);
00081a  f88d003b          STRB     r0,[sp,#0x3b]
;;;1152   modbus_registers[60]=(char)(UMAX>>8);					//Рег31  Максимальное (аварийное) напряжение выпрямителей, 0.1В
00081e  4844              LDR      r0,|L1.2352|
000820  8800              LDRH     r0,[r0,#0]  ; UMAX
000822  ea4f2120          ASR      r1,r0,#8
000826  f88d103c          STRB     r1,[sp,#0x3c]
;;;1153   modbus_registers[61]=(char)(UMAX);
00082a  f88d003d          STRB     r0,[sp,#0x3d]
;;;1154   modbus_registers[62]=(char)((UB20-DU)>>8);				//Рег32  Минимальное (аварийное) напряжение выпрямителей, 0.1В
00082e  4841              LDR      r0,|L1.2356|
000830  4941              LDR      r1,|L1.2360|
000832  8800              LDRH     r0,[r0,#0]  ; UB20
000834  8809              LDRH     r1,[r1,#0]  ; DU
000836  eba00101          SUB      r1,r0,r1
00083a  ea4f2321          ASR      r3,r1,#8
00083e  f88d303e          STRB     r3,[sp,#0x3e]
;;;1155   modbus_registers[63]=(char)((UB20-DU));
000842  f88d103f          STRB     r1,[sp,#0x3f]
;;;1156   modbus_registers[64]=(char)(UB0>>8);					//Рег33  Напряжение содержания батареи при 0гЦ, 0.1В
000846  493d              LDR      r1,|L1.2364|
000848  8809              LDRH     r1,[r1,#0]  ; UB0
00084a  ea4f2321          ASR      r3,r1,#8
00084e  f88d3040          STRB     r3,[sp,#0x40]
;;;1157   modbus_registers[65]=(char)(UB0);
000852  f88d1041          STRB     r1,[sp,#0x41]
;;;1158   modbus_registers[66]=(char)(UB20>>8);					//Рег34  Напряжение содержания батареи при 20гЦ, 0.1В
000856  ea4f2c20          ASR      r12,r0,#8
00085a  f88dc042          STRB     r12,[sp,#0x42]
;;;1159   modbus_registers[67]=(char)(UB20);
00085e  f88d0043          STRB     r0,[sp,#0x43]
;;;1160   modbus_registers[68]=(char)(USIGN>>8);					//Рег35  Минимальное (сигнальное) напряжение батареи, 1В
000862  4837              LDR      r0,|L1.2368|
000864  8800              LDRH     r0,[r0,#0]  ; USIGN
000866  ea4f2c20          ASR      r12,r0,#8
00086a  f88dc044          STRB     r12,[sp,#0x44]
;;;1161   modbus_registers[69]=(char)(USIGN);
00086e  f88d0045          STRB     r0,[sp,#0x45]
;;;1162   modbus_registers[70]=(char)(UMN>>8);					//Рег36  Минимальное (аварийное) напряжение питающей сети, 1В
000872  4834              LDR      r0,|L1.2372|
000874  8800              LDRH     r0,[r0,#0]  ; UMN
000876  ea4f2c20          ASR      r12,r0,#8
00087a  f88dc046          STRB     r12,[sp,#0x46]
;;;1163   modbus_registers[71]=(char)(UMN);
00087e  f88d0047          STRB     r0,[sp,#0x47]
;;;1164   modbus_registers[72]=(char)(U0B>>8);					//Рег37  Рабочее напряжение при невведенных батареях, 0.1В
000882  4831              LDR      r0,|L1.2376|
000884  8800              LDRH     r0,[r0,#0]  ; U0B
000886  ea4f2c20          ASR      r12,r0,#8
00088a  f88dc048          STRB     r12,[sp,#0x48]
;;;1165   modbus_registers[73]=(char)(U0B);
00088e  f88d0049          STRB     r0,[sp,#0x49]
;;;1166   modbus_registers[74]=(char)(IKB>>8);					//Рег38  Ток контроля наличия батареи, 0.1а
000892  482e              LDR      r0,|L1.2380|
000894  8800              LDRH     r0,[r0,#0]  ; IKB
000896  ea4f2c20          ASR      r12,r0,#8
00089a  f88dc04a          STRB     r12,[sp,#0x4a]
;;;1167   modbus_registers[75]=(char)(IKB);
00089e  f88d004b          STRB     r0,[sp,#0x4b]
;;;1168   modbus_registers[76]=(char)(IZMAX>>8);					//Рег39  Ток заряда батареи максимальный, 0.1А
0008a2  482b              LDR      r0,|L1.2384|
0008a4  8800              LDRH     r0,[r0,#0]  ; IZMAX
0008a6  ea4f2c20          ASR      r12,r0,#8
0008aa  f88dc04c          STRB     r12,[sp,#0x4c]
;;;1169   modbus_registers[77]=(char)(IZMAX);
0008ae  f88d004d          STRB     r0,[sp,#0x4d]
;;;1170   modbus_registers[78]=(char)(IMAX>>8);					//Рег40  Ток переключения на большее кол-во выпрямителей, 0.1А
0008b2  4828              LDR      r0,|L1.2388|
0008b4  8800              LDRH     r0,[r0,#0]  ; IMAX
0008b6  ea4f2c20          ASR      r12,r0,#8
0008ba  f88dc04e          STRB     r12,[sp,#0x4e]
;;;1171   modbus_registers[79]=(char)(IMAX);
0008be  f88d004f          STRB     r0,[sp,#0x4f]
;;;1172   modbus_registers[80]=(char)(IMIN>>8);					//Рег41  Ток переключения на меньшее кол-во выпрямителей, 0.1А
0008c2  4825              LDR      r0,|L1.2392|
0008c4  8800              LDRH     r0,[r0,#0]  ; IMIN
0008c6  ea4f2c20          ASR      r12,r0,#8
0008ca  f88dc050          STRB     r12,[sp,#0x50]
;;;1173   modbus_registers[81]=(char)(IMIN);
0008ce  e045              B        |L1.2396|
                  |L1.2256|
                          DCD      spc_stat
                  |L1.2260|
                          DCD      uout_av
                  |L1.2264|
                          DCD      avar_stat
                  |L1.2268|
                          DCD      bat_ips
                  |L1.2272|
                          DCD      volta_short
                  |L1.2276|
                          DCD      curr_short
                  |L1.2280|
                          DCD      power_int
                  |L1.2284|
                          DCD      cntrl_stat_old
                  |L1.2288|
                          DCD      TBAT
                  |L1.2292|
                          DCD      main_kb_cnt
                  |L1.2296|
                          DCD      ND_EXT
                  |L1.2300|
                          DCD      0xfffffc18
                  |L1.2304|
                          DCD      bat_hndl_t_razr_min
                  |L1.2308|
                          DCD      sk_stat
                  |L1.2312|
                          DCD      sk_av_stat
                  |L1.2316|
                          DCD      ips_bat_av_stat
                  |L1.2320|
                          DCD      snmp_bat_flag
                  |L1.2324|
                          DCD      ||area_number.4||+0x3c
                  |L1.2328|
                          DCD      modbus_tcp_out_ptr
                  |L1.2332|
                          DCD      0x40024020
                  |L1.2336|
                          DCD      NUMIST
                  |L1.2340|
                          DCD      PAR
                  |L1.2344|
                          DCD      ZV_ON
                  |L1.2348|
                          DCD      UBM_AV
                  |L1.2352|
                          DCD      UMAX
                  |L1.2356|
                          DCD      UB20
                  |L1.2360|
                          DCD      ||DU||
                  |L1.2364|
                          DCD      UB0
                  |L1.2368|
                          DCD      USIGN
                  |L1.2372|
                          DCD      UMN
                  |L1.2376|
                          DCD      U0B
                  |L1.2380|
                          DCD      IKB
                  |L1.2384|
                          DCD      IZMAX
                  |L1.2388|
                          DCD      IMAX
                  |L1.2392|
                          DCD      IMIN
                  |L1.2396|
00095c  f88d0051          STRB     r0,[sp,#0x51]
;;;1174   modbus_registers[82]=(char)(UVZ>>8);					//Рег42  Напряжение выравнивающего заряда, 0.1В
000960  48ff              LDR      r0,|L1.3424|
000962  8800              LDRH     r0,[r0,#0]  ; UVZ
000964  ea4f2c20          ASR      r12,r0,#8
000968  f88dc052          STRB     r12,[sp,#0x52]
;;;1175   modbus_registers[83]=(char)(UVZ);
00096c  f88d0053          STRB     r0,[sp,#0x53]
;;;1176   modbus_registers[84]=(char)(TZAS>>8);					//Рег43  Время задержки включения выпрямителей, сек
000970  48fc              LDR      r0,|L1.3428|
000972  8800              LDRH     r0,[r0,#0]  ; TZAS
000974  ea4f2c20          ASR      r12,r0,#8
000978  f88dc054          STRB     r12,[sp,#0x54]
;;;1177   modbus_registers[85]=(char)(TZAS);
00097c  f88d0055          STRB     r0,[sp,#0x55]
;;;1178   modbus_registers[86]=(char)(TMAX>>8);					//Рег44  Температура выпрямителей аварийная, 1гЦ
000980  48f9              LDR      r0,|L1.3432|
000982  8800              LDRH     r0,[r0,#0]  ; TMAX
000984  ea4f2c20          ASR      r12,r0,#8
000988  f88dc056          STRB     r12,[sp,#0x56]
;;;1179   modbus_registers[87]=(char)(TMAX);
00098c  f88d0057          STRB     r0,[sp,#0x57]
;;;1180   modbus_registers[88]=(char)(TSIGN>>8);					//Рег45  Температура выпрямителей сигнальная, 1гЦ
000990  48f6              LDR      r0,|L1.3436|
000992  8800              LDRH     r0,[r0,#0]  ; TSIGN
000994  ea4f2c20          ASR      r12,r0,#8
000998  f88dc058          STRB     r12,[sp,#0x58]
;;;1181   modbus_registers[89]=(char)(TSIGN);
00099c  f88d0059          STRB     r0,[sp,#0x59]
;;;1182   modbus_registers[90]=(char)(TBATMAX>>8);				//Рег46  Температура батареи аварийная, 1гЦ
0009a0  48f3              LDR      r0,|L1.3440|
0009a2  8800              LDRH     r0,[r0,#0]  ; TBATMAX
0009a4  ea4f2c20          ASR      r12,r0,#8
0009a8  f88dc05a          STRB     r12,[sp,#0x5a]
;;;1183   modbus_registers[91]=(char)(TBATMAX);
0009ac  f88d005b          STRB     r0,[sp,#0x5b]
;;;1184   modbus_registers[92]=(char)(TBATSIGN>>8);				//Рег47  Температура батареи сигнальная, 1гЦ
0009b0  48f0              LDR      r0,|L1.3444|
0009b2  8800              LDRH     r0,[r0,#0]  ; TBATSIGN
0009b4  ea4f2c20          ASR      r12,r0,#8
0009b8  f88dc05c          STRB     r12,[sp,#0x5c]
;;;1185   modbus_registers[93]=(char)(TBATSIGN);
0009bc  f88d005d          STRB     r0,[sp,#0x5d]
;;;1186   modbus_registers[94]=(char)(speedChrgCurr>>8);			//Рег48  Ток ускоренного заряда, 0.1А
0009c0  48ed              LDR      r0,|L1.3448|
0009c2  8800              LDRH     r0,[r0,#0]  ; speedChrgCurr
0009c4  ea4f2c20          ASR      r12,r0,#8
0009c8  f88dc05e          STRB     r12,[sp,#0x5e]
;;;1187   modbus_registers[95]=(char)(speedChrgCurr);
0009cc  f88d005f          STRB     r0,[sp,#0x5f]
;;;1188   modbus_registers[96]=(char)(speedChrgVolt>>8);			//Рег49	 Напряжение ускоренного заряда, 0.1В 
0009d0  48ea              LDR      r0,|L1.3452|
0009d2  8800              LDRH     r0,[r0,#0]  ; speedChrgVolt
0009d4  ea4f2c20          ASR      r12,r0,#8
0009d8  f88dc060          STRB     r12,[sp,#0x60]
;;;1189   modbus_registers[97]=(char)(speedChrgVolt);
0009dc  f88d0061          STRB     r0,[sp,#0x61]
;;;1190   modbus_registers[98]=(char)(speedChrgTimeInHour>>8);	//Рег50	 Время ускоренного заряда, 1ч
0009e0  48e7              LDR      r0,|L1.3456|
0009e2  8800              LDRH     r0,[r0,#0]  ; speedChrgTimeInHour
0009e4  ea4f2c20          ASR      r12,r0,#8
0009e8  f88dc062          STRB     r12,[sp,#0x62]
;;;1191   modbus_registers[99]=(char)(speedChrgTimeInHour);
0009ec  f88d0063          STRB     r0,[sp,#0x63]
;;;1192   modbus_registers[100]=(char)(U_OUT_KONTR_MAX>>8);		//Рег51	 Контроль выходного напряжения, Umax, 0.1В
0009f0  48e4              LDR      r0,|L1.3460|
0009f2  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MAX
0009f4  ea4f2c20          ASR      r12,r0,#8
0009f8  f88dc064          STRB     r12,[sp,#0x64]
;;;1193   modbus_registers[101]=(char)(U_OUT_KONTR_MAX);
0009fc  f88d0065          STRB     r0,[sp,#0x65]
;;;1194   modbus_registers[102]=(char)(U_OUT_KONTR_MIN>>8);		//Рег52	 Контроль выходного напряжения, Umin, 0.1В
000a00  48e1              LDR      r0,|L1.3464|
000a02  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MIN
000a04  ea4f2c20          ASR      r12,r0,#8
000a08  f88dc066          STRB     r12,[sp,#0x66]
;;;1195   modbus_registers[103]=(char)(U_OUT_KONTR_MIN);
000a0c  f88d0067          STRB     r0,[sp,#0x67]
;;;1196   modbus_registers[104]=(char)(U_OUT_KONTR_DELAY>>8);		//Рег53	 Контроль выходного напряжения, Tзадержки, 1сек.
000a10  48de              LDR      r0,|L1.3468|
000a12  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_DELAY
000a14  ea4f2c20          ASR      r12,r0,#8
000a18  f88dc068          STRB     r12,[sp,#0x68]
;;;1197   modbus_registers[105]=(char)(U_OUT_KONTR_DELAY);
000a1c  f88d0069          STRB     r0,[sp,#0x69]
;;;1198   modbus_registers[106]=(char)(UB0>>8);					//Рег54	 Установка выходного напряжения для ИПС без батареи(СГЕП-ГАЗПРОМ)
000a20  f88d306a          STRB     r3,[sp,#0x6a]
;;;1199   modbus_registers[107]=(char)(UB0);
000a24  f88d106b          STRB     r1,[sp,#0x6b]
;;;1200   modbus_registers[108]=(char)(UMAXN>>8);					//Рег55  Максимальное (аварийное) напряжение питающей сети, 1В
000a28  48d9              LDR      r0,|L1.3472|
000a2a  f9b00000          LDRSH    r0,[r0,#0]  ; UMAXN
000a2e  ea4f2120          ASR      r1,r0,#8
000a32  f88d106c          STRB     r1,[sp,#0x6c]
;;;1201   modbus_registers[109]=(char)(UMAXN);
000a36  f88d006d          STRB     r0,[sp,#0x6d]
000a3a  4668              MOV      r0,sp                 ;1125
;;;1202   
;;;1203   
;;;1204   
;;;1205   
;;;1206   
;;;1207   
;;;1208   if(prot==MODBUS_RTU_PROT)
;;;1209   	{
;;;1210   	modbus_tx_buff[0]=adr;
;;;1211   	modbus_tx_buff[1]=func;
;;;1212   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1213   	mem_copy((char*)&modbus_tx_buff[3],(char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000a3c  f1a20201          SUB      r2,r2,#1
000a40  eb000142          ADD      r1,r0,r2,LSL #1
000a44  b12e              CBZ      r6,|L1.2642|
;;;1214   	
;;;1215   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1216   
;;;1217   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1218   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1219   
;;;1220   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1221   		{
;;;1222   		putchar0(modbus_tx_buff[i]);
;;;1223   		}
;;;1224   
;;;1225   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1226   		{
;;;1227   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1228   		}
;;;1229   	}
;;;1230   else if(prot==MODBUS_TCP_PROT)
000a46  2e01              CMP      r6,#1
000a48  d101              BNE      |L1.2638|
;;;1231   	{
;;;1232   	modbus_tcp_out_ptr=(char*)&modbus_registers[(reg_adr-1)*2];
000a4a  48d2              LDR      r0,|L1.3476|
000a4c  6001              STR      r1,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.2638|
;;;1233   	}
;;;1234   }
000a4e  b03f              ADD      sp,sp,#0xfc
000a50  bdf0              POP      {r4-r7,pc}
                  |L1.2642|
000a52  4ed1              LDR      r6,|L1.3480|
000a54  7034              STRB     r4,[r6,#0]            ;1210
000a56  7077              STRB     r7,[r6,#1]            ;1211
000a58  ea4f0245          LSL      r2,r5,#1              ;1212
000a5c  70b2              STRB     r2,[r6,#2]            ;1212
000a5e  f1060003          ADD      r0,r6,#3              ;1213
000a62  f7fffffe          BL       mem_copy
000a66  2003              MOVS     r0,#3                 ;1215
000a68  eb000045          ADD      r0,r0,r5,LSL #1       ;1215
000a6c  b201              SXTH     r1,r0                 ;1215
000a6e  4630              MOV      r0,r6                 ;1215
000a70  f7fffffe          BL       CRC16_2
000a74  eb060145          ADD      r1,r6,r5,LSL #1       ;1217
000a78  70c8              STRB     r0,[r1,#3]            ;1217
000a7a  ea4f2010          LSR      r0,r0,#8              ;1218
000a7e  7108              STRB     r0,[r1,#4]            ;1218
000a80  f04f0400          MOV      r4,#0                 ;1220
000a84  f04f0005          MOV      r0,#5                 ;1220
000a88  eb000545          ADD      r5,r0,r5,LSL #1       ;1220
000a8c  e005              B        |L1.2714|
                  |L1.2702|
000a8e  5d30              LDRB     r0,[r6,r4]            ;1222
000a90  f7fffffe          BL       putchar0
000a94  f1040401          ADD      r4,r4,#1              ;1220
000a98  b2e4              UXTB     r4,r4                 ;1220
                  |L1.2714|
000a9a  42a5              CMP      r5,r4                 ;1220
000a9c  d8f7              BHI      |L1.2702|
000a9e  f04f0400          MOV      r4,#0                 ;1225
000aa2  e005              B        |L1.2736|
                  |L1.2724|
000aa4  5d30              LDRB     r0,[r6,r4]            ;1227
000aa6  f7fffffe          BL       putchar_sc16is700
000aaa  f1040401          ADD      r4,r4,#1              ;1225
000aae  b2e4              UXTB     r4,r4                 ;1225
                  |L1.2736|
000ab0  42a5              CMP      r5,r4                 ;1225
000ab2  d8f7              BHI      |L1.2724|
000ab4  e7cb              B        |L1.2638|
;;;1235   
                          ENDP

                  modbus_in PROC
;;;283    //-----------------------------------------------
;;;284    void modbus_in(void)
000ab6  e92d4ff0          PUSH     {r4-r11,lr}
;;;285    {
000aba  b089              SUB      sp,sp,#0x24
;;;286    short crc16_calculated;		//вычисляемая из принятых данных CRC
;;;287    short crc16_incapsulated;	//встроеннная в посылку CRC
;;;288    unsigned short modbus_rx_arg0;		//встроенный в посылку первый аргумент
;;;289    unsigned short modbus_rx_arg1;		//встроенный в посылку второй аргумент
;;;290    //unsigned short modbus_rx_arg2;		//встроенный в посылку третий аргумент
;;;291    //unsigned short modbus_rx_arg3;		//встроенный в посылку четвертый аргумент
;;;292    unsigned char modbus_func;			//встроенный в посылку код функции
;;;293    char i_cnt, j_cnt; //o_2
;;;294    
;;;295    
;;;296    mem_copy(modbus_an_buffer,modbus_rx_buffer,modbus_rx_buffer_ptr);
000abc  4cb7              LDR      r4,|L1.3484|
000abe  49b6              LDR      r1,|L1.3480|
000ac0  393c              SUBS     r1,r1,#0x3c
000ac2  7862              LDRB     r2,[r4,#1]  ; modbus_rx_buffer_ptr
000ac4  f101001e          ADD      r0,r1,#0x1e
000ac8  f7fffffe          BL       mem_copy
;;;297    modbus_rx_counter=modbus_rx_buffer_ptr;
000acc  7861              LDRB     r1,[r4,#1]  ; modbus_rx_buffer_ptr
000ace  70a1              STRB     r1,[r4,#2]
;;;298    modbus_rx_buffer_ptr=0;
000ad0  f04f0800          MOV      r8,#0
000ad4  f8848001          STRB     r8,[r4,#1]
;;;299    bMODBUS_TIMEOUT=0;
000ad8  f8848000          STRB     r8,[r4,#0]
;;;300    	
;;;301    crc16_calculated  = CRC16_2((char*)modbus_an_buffer, modbus_rx_counter-2);
000adc  48ae              LDR      r0,|L1.3480|
000ade  f1a10102          SUB      r1,r1,#2
000ae2  f1a0001e          SUB      r0,r0,#0x1e
000ae6  f7fffffe          BL       CRC16_2
000aea  fa0ffa80          SXTH     r10,r0
;;;302    crc16_incapsulated = *((short*)&modbus_an_buffer[modbus_rx_counter-2]);
000aee  48aa              LDR      r0,|L1.3480|
000af0  78a1              LDRB     r1,[r4,#2]  ; modbus_rx_counter
000af2  381e              SUBS     r0,r0,#0x1e
000af4  eb000201          ADD      r2,r0,r1
000af8  f932bc02          LDRSH    r11,[r2,#-2]
;;;303    
;;;304    modbus_plazma1=modbus_rx_counter;
000afc  80e1              STRH     r1,[r4,#6]
;;;305    modbus_plazma2=crc16_calculated;
000afe  f8a4a008          STRH     r10,[r4,#8]
;;;306    modbus_plazma3=crc16_incapsulated;
000b02  f8a4b00a          STRH     r11,[r4,#0xa]
;;;307    
;;;308    modbus_func=modbus_an_buffer[1];
000b06  7846              LDRB     r6,[r0,#1]  ; modbus_an_buffer
;;;309    modbus_rx_arg0=(((unsigned short)modbus_an_buffer[2])*((unsigned short)256))+((unsigned short)modbus_an_buffer[3]);
000b08  78c1              LDRB     r1,[r0,#3]  ; modbus_an_buffer
000b0a  7882              LDRB     r2,[r0,#2]  ; modbus_an_buffer
000b0c  eb012302          ADD      r3,r1,r2,LSL #8
000b10  b29d              UXTH     r5,r3
;;;310    modbus_rx_arg1=(((unsigned short)modbus_an_buffer[4])*((unsigned short)256))+((unsigned short)modbus_an_buffer[5]);
000b12  7943              LDRB     r3,[r0,#5]  ; modbus_an_buffer
000b14  7904              LDRB     r4,[r0,#4]  ; modbus_an_buffer
000b16  eb032304          ADD      r3,r3,r4,LSL #8
000b1a  b29c              UXTH     r4,r3
;;;311    //modbus_rx_arg2=(((unsigned short)modbus_an_buffer[6])*((unsigned short)256))+((unsigned short)modbus_an_buffer[7]);
;;;312    //modbus_rx_arg3=(((unsigned short)modbus_an_buffer[8])*((unsigned short)256))+((unsigned short)modbus_an_buffer[9]);
;;;313    
;;;314    //#define IPS_CURR_AVG_MODBUS_ADRESS	1
;;;315    
;;;316    
;;;317    if(modbus_an_buffer[0]=='r')
000b1c  7800              LDRB     r0,[r0,#0]  ; modbus_an_buffer
;;;318    	{
;;;319    	pvlk=1;
;;;320    	if(modbus_an_buffer[1]=='e')
;;;321    		{
;;;322    		pvlk=2;
;;;323    		if(modbus_an_buffer[2]=='a')
;;;324    			{
;;;325    			pvlk=3;
;;;326    			if(modbus_an_buffer[3]=='d')
;;;327    				{
;;;328    				pvlk=4;
;;;329    				if(modbus_an_buffer[6]==crc_87(modbus_an_buffer,6))
;;;330    					{
;;;331    					pvlk=5;
;;;332    					if(modbus_an_buffer[7]==crc_95(modbus_an_buffer,6))
;;;333    						{
;;;334    						pvlk=6;	
;;;335    
;;;336    							{
;;;337    							unsigned short ptr;
;;;338    							unsigned long data1,data2;
;;;339    							char temp_out[20];
;;;340    							pvlk++;
;;;341    							ptr=modbus_an_buffer[4]+(modbus_an_buffer[5]*256U);
;;;342    							data1=lc640_read_long(ptr);
;;;343    							data2=lc640_read_long(ptr+4);
;;;344    							temp_out[0]='r';
;;;345    							temp_out[1]='e';
;;;346    							temp_out[2]='a';
;;;347    							temp_out[3]='d';
;;;348    							temp_out[4]=*((char*)&ptr);
;;;349    							temp_out[5]=*(((char*)&ptr)+1);	
;;;350    							temp_out[6]=*((char*)&data1);
;;;351    							temp_out[7]=*(((char*)&data1)+1);		
;;;352    							temp_out[8]=*(((char*)&data1)+2);	
;;;353    							temp_out[9]=*(((char*)&data1)+3);		
;;;354    							temp_out[10]=*((char*)&data2);
;;;355    							temp_out[11]=*(((char*)&data2)+1);		
;;;356    							temp_out[12]=*(((char*)&data2)+2);	
;;;357    							temp_out[13]=*(((char*)&data2)+3);	
;;;358    							temp_out[14]=crc_87(temp_out,14);	
;;;359    							temp_out[15]=crc_95(temp_out,14);			
;;;360    							
;;;361    							temp_out[17]=0;
;;;362    							for (i=0;i<16;i++)
000b1e  4fa0              LDR      r7,|L1.3488|
000b20  2872              CMP      r0,#0x72              ;317
000b22  d17d              BNE      |L1.3104|
000b24  489f              LDR      r0,|L1.3492|
000b26  f04f0301          MOV      r3,#1                 ;319
000b2a  8003              STRH     r3,[r0,#0]            ;319
000b2c  f8df9268          LDR      r9,|L1.3480|
000b30  2e65              CMP      r6,#0x65              ;320
000b32  f1a9091e          SUB      r9,r9,#0x1e           ;320
000b36  d173              BNE      |L1.3104|
000b38  f04f0302          MOV      r3,#2                 ;322
000b3c  8003              STRH     r3,[r0,#0]            ;322
000b3e  2a61              CMP      r2,#0x61              ;323
000b40  d16e              BNE      |L1.3104|
000b42  f04f0203          MOV      r2,#3                 ;325
000b46  8002              STRH     r2,[r0,#0]            ;325
000b48  2964              CMP      r1,#0x64              ;326
000b4a  d169              BNE      |L1.3104|
000b4c  f04f0104          MOV      r1,#4                 ;328
000b50  8001              STRH     r1,[r0,#0]            ;328
000b52  f04f0106          MOV      r1,#6                 ;329
000b56  4648              MOV      r0,r9                 ;329
000b58  f7fffffe          BL       crc_87
000b5c  f8991006          LDRB     r1,[r9,#6]            ;329  ; modbus_an_buffer
000b60  4288              CMP      r0,r1                 ;329
000b62  d15d              BNE      |L1.3104|
000b64  488f              LDR      r0,|L1.3492|
000b66  f04f0105          MOV      r1,#5                 ;331
000b6a  8001              STRH     r1,[r0,#0]            ;331
000b6c  f04f0106          MOV      r1,#6                 ;332
000b70  4648              MOV      r0,r9                 ;332
000b72  f7fffffe          BL       crc_95
000b76  f8991007          LDRB     r1,[r9,#7]            ;332  ; modbus_an_buffer
000b7a  4288              CMP      r0,r1                 ;332
000b7c  d150              BNE      |L1.3104|
000b7e  4889              LDR      r0,|L1.3492|
000b80  f04f0107          MOV      r1,#7                 ;340
000b84  8001              STRH     r1,[r0,#0]            ;340
000b86  f8990004          LDRB     r0,[r9,#4]            ;341  ; modbus_an_buffer
000b8a  f8991005          LDRB     r1,[r9,#5]            ;341  ; modbus_an_buffer
000b8e  eb002001          ADD      r0,r0,r1,LSL #8       ;341
000b92  b280              UXTH     r0,r0                 ;341
000b94  4681              MOV      r9,r0                 ;341
000b96  9008              STR      r0,[sp,#0x20]         ;341
000b98  4648              MOV      r0,r9                 ;342
000b9a  f7fffffe          BL       lc640_read_long
000b9e  9007              STR      r0,[sp,#0x1c]         ;342
000ba0  f1090004          ADD      r0,r9,#4              ;343
000ba4  f7fffffe          BL       lc640_read_long
000ba8  9006              STR      r0,[sp,#0x18]         ;343
000baa  f04f0072          MOV      r0,#0x72              ;344
000bae  f88d0004          STRB     r0,[sp,#4]            ;344
000bb2  4630              MOV      r0,r6                 ;345
000bb4  f88d0005          STRB     r0,[sp,#5]            ;345
000bb8  f04f0061          MOV      r0,#0x61              ;346
000bbc  f88d0006          STRB     r0,[sp,#6]            ;346
000bc0  f04f0064          MOV      r0,#0x64              ;347
000bc4  f88d0007          STRB     r0,[sp,#7]            ;347
000bc8  f89d0020          LDRB     r0,[sp,#0x20]         ;348
000bcc  f88d0008          STRB     r0,[sp,#8]            ;348
000bd0  f89d0021          LDRB     r0,[sp,#0x21]         ;349
000bd4  f88d0009          STRB     r0,[sp,#9]            ;349
000bd8  f89d001c          LDRB     r0,[sp,#0x1c]         ;350
000bdc  f88d000a          STRB     r0,[sp,#0xa]          ;350
000be0  f89d001d          LDRB     r0,[sp,#0x1d]         ;351
000be4  f88d000b          STRB     r0,[sp,#0xb]          ;351
000be8  f89d001e          LDRB     r0,[sp,#0x1e]         ;352
000bec  f88d000c          STRB     r0,[sp,#0xc]          ;352
000bf0  f89d001f          LDRB     r0,[sp,#0x1f]         ;353
000bf4  f88d000d          STRB     r0,[sp,#0xd]          ;353
000bf8  f89d0018          LDRB     r0,[sp,#0x18]         ;354
000bfc  f88d000e          STRB     r0,[sp,#0xe]          ;354
000c00  f89d0019          LDRB     r0,[sp,#0x19]         ;355
000c04  f88d000f          STRB     r0,[sp,#0xf]          ;355
000c08  f89d001a          LDRB     r0,[sp,#0x1a]         ;356
000c0c  f88d0010          STRB     r0,[sp,#0x10]         ;356
000c10  f89d001b          LDRB     r0,[sp,#0x1b]         ;357
000c14  f88d0011          STRB     r0,[sp,#0x11]         ;357
000c18  f04f010e          MOV      r1,#0xe               ;358
000c1c  a801              ADD      r0,sp,#4              ;358
000c1e  e000              B        |L1.3106|
                  |L1.3104|
000c20  e02f              B        |L1.3202|
                  |L1.3106|
000c22  f7fffffe          BL       crc_87
000c26  f88d0012          STRB     r0,[sp,#0x12]         ;358
000c2a  210e              MOVS     r1,#0xe               ;359
000c2c  a801              ADD      r0,sp,#4              ;359
000c2e  f7fffffe          BL       crc_95
000c32  f88d0013          STRB     r0,[sp,#0x13]         ;359
000c36  f88d8015          STRB     r8,[sp,#0x15]         ;361
000c3a  f8878000          STRB     r8,[r7,#0]
000c3e  f10d0904          ADD      r9,sp,#4              ;339
                  |L1.3138|
;;;363    								{
;;;364    								putchar_sc16is700(temp_out[i]);
000c42  7838              LDRB     r0,[r7,#0]  ; i
000c44  f8190000          LDRB     r0,[r9,r0]
000c48  f7fffffe          BL       putchar_sc16is700
;;;365    								temp_out[17]^=temp_out[i];
000c4c  7838              LDRB     r0,[r7,#0]  ; i
000c4e  f89d1015          LDRB     r1,[sp,#0x15]
000c52  f8192000          LDRB     r2,[r9,r0]
000c56  ea810102          EOR      r1,r1,r2
000c5a  f88d1015          STRB     r1,[sp,#0x15]
000c5e  f1000001          ADD      r0,r0,#1              ;362
000c62  b2c0              UXTB     r0,r0                 ;362
000c64  7038              STRB     r0,[r7,#0]            ;362
000c66  2810              CMP      r0,#0x10              ;362
000c68  d3eb              BCC      |L1.3138|
;;;366    								}
;;;367    							putchar_sc16is700(16);
000c6a  2010              MOVS     r0,#0x10
000c6c  f7fffffe          BL       putchar_sc16is700
;;;368    							putchar_sc16is700(temp_out[17]^16);
000c70  f89d0015          LDRB     r0,[sp,#0x15]
000c74  f0800010          EOR      r0,r0,#0x10
000c78  f7fffffe          BL       putchar_sc16is700
;;;369    							putchar_sc16is700(0x0a);
000c7c  200a              MOVS     r0,#0xa
000c7e  f7fffffe          BL       putchar_sc16is700
                  |L1.3202|
;;;370    							}
;;;371    						}
;;;372    					}
;;;373    				}
;;;374    			} 
;;;375    		}	 
;;;376    	} 
;;;377    
;;;378    if(modbus_an_buffer[0]=='w')
000c82  4845              LDR      r0,|L1.3480|
000c84  381e              SUBS     r0,r0,#0x1e
000c86  7800              LDRB     r0,[r0,#0]  ; modbus_an_buffer
000c88  2877              CMP      r0,#0x77
000c8a  d168              BNE      |L1.3422|
;;;379    	{
;;;380    //	pvlk=1;
;;;381    	if(modbus_an_buffer[1]=='r')
000c8c  f8df9108          LDR      r9,|L1.3480|
000c90  f1a9091e          SUB      r9,r9,#0x1e
000c94  f8990001          LDRB     r0,[r9,#1]  ; modbus_an_buffer
000c98  2872              CMP      r0,#0x72
000c9a  d160              BNE      |L1.3422|
;;;382    		{
;;;383    //		pvlk=2;
;;;384    		if(modbus_an_buffer[2]=='i')
000c9c  f8990002          LDRB     r0,[r9,#2]  ; modbus_an_buffer
000ca0  2869              CMP      r0,#0x69
000ca2  d15c              BNE      |L1.3422|
;;;385    			{
;;;386    //			pvlk=3;
;;;387    			if(modbus_an_buffer[3]=='t')
000ca4  f8990003          LDRB     r0,[r9,#3]  ; modbus_an_buffer
000ca8  2874              CMP      r0,#0x74
000caa  d158              BNE      |L1.3422|
;;;388    				{
;;;389    //				pvlk=4;
;;;390    				if(modbus_an_buffer[4]=='e')
000cac  f8990004          LDRB     r0,[r9,#4]  ; modbus_an_buffer
000cb0  2865              CMP      r0,#0x65
000cb2  d154              BNE      |L1.3422|
;;;391    					{
;;;392    //					pvlk=5;
;;;393    					if(modbus_an_buffer[15]==crc_87(modbus_an_buffer,15))
000cb4  210f              MOVS     r1,#0xf
000cb6  4648              MOV      r0,r9
000cb8  f7fffffe          BL       crc_87
000cbc  f899100f          LDRB     r1,[r9,#0xf]  ; modbus_an_buffer
000cc0  4288              CMP      r0,r1
000cc2  d14c              BNE      |L1.3422|
;;;394    						{
;;;395    //						pvlk=6;
;;;396    						if(modbus_an_buffer[16]==crc_95(modbus_an_buffer,15))
000cc4  210f              MOVS     r1,#0xf
000cc6  4648              MOV      r0,r9
000cc8  f7fffffe          BL       crc_95
000ccc  f8992010          LDRB     r2,[r9,#0x10]  ; modbus_an_buffer
000cd0  4290              CMP      r0,r2
000cd2  d144              BNE      |L1.3422|
;;;397    
;;;398    							{
;;;399    							unsigned short ptr;
;;;400    							unsigned long data1,data2;
;;;401    							char temp_out[20];
;;;402    //							pvlk=7;
;;;403    							ptr=modbus_an_buffer[5]+(modbus_an_buffer[6]*256U);
000cd4  f8991005          LDRB     r1,[r9,#5]  ; modbus_an_buffer
000cd8  f8992006          LDRB     r2,[r9,#6]  ; modbus_an_buffer
000cdc  4648              MOV      r0,r9
000cde  eb012102          ADD      r1,r1,r2,LSL #8
000ce2  fa1ff981          UXTH     r9,r1
000ce6  f8cd9020          STR      r9,[sp,#0x20]
;;;404    							*((char*)&data1)=modbus_an_buffer[7];
000cea  79c1              LDRB     r1,[r0,#7]  ; modbus_an_buffer
000cec  f88d101c          STRB     r1,[sp,#0x1c]
;;;405    							*(((char*)&data1)+1)=modbus_an_buffer[8];
000cf0  7a01              LDRB     r1,[r0,#8]  ; modbus_an_buffer
000cf2  f88d101d          STRB     r1,[sp,#0x1d]
;;;406    							*(((char*)&data1)+2)=modbus_an_buffer[9];
000cf6  7a41              LDRB     r1,[r0,#9]  ; modbus_an_buffer
000cf8  f88d101e          STRB     r1,[sp,#0x1e]
;;;407    							*(((char*)&data1)+3)=modbus_an_buffer[10];
000cfc  7a81              LDRB     r1,[r0,#0xa]  ; modbus_an_buffer
000cfe  f88d101f          STRB     r1,[sp,#0x1f]
;;;408    							*((char*)&data2)=modbus_an_buffer[11];
000d02  7ac1              LDRB     r1,[r0,#0xb]  ; modbus_an_buffer
000d04  f88d1018          STRB     r1,[sp,#0x18]
;;;409    							*(((char*)&data2)+1)=modbus_an_buffer[12];
000d08  7b01              LDRB     r1,[r0,#0xc]  ; modbus_an_buffer
000d0a  f88d1019          STRB     r1,[sp,#0x19]
;;;410    							*(((char*)&data2)+2)=modbus_an_buffer[13];
000d0e  7b41              LDRB     r1,[r0,#0xd]  ; modbus_an_buffer
000d10  f88d101a          STRB     r1,[sp,#0x1a]
;;;411    							*(((char*)&data2)+3)=modbus_an_buffer[14];	
000d14  7b80              LDRB     r0,[r0,#0xe]  ; modbus_an_buffer
000d16  f88d001b          STRB     r0,[sp,#0x1b]
;;;412    							lc640_write_long(ptr,data1);
000d1a  4648              MOV      r0,r9
000d1c  9907              LDR      r1,[sp,#0x1c]
000d1e  f7fffffe          BL       lc640_write_long
;;;413    							lc640_write_long(ptr+4,data2);
000d22  f1090004          ADD      r0,r9,#4
000d26  9906              LDR      r1,[sp,#0x18]
000d28  f7fffffe          BL       lc640_write_long
;;;414    							
;;;415    							//data1=lc640_read_long(ptr);
;;;416    							//data2=lc640_read_long(ptr+4);
;;;417    							temp_out[0]='w';
000d2c  f04f0077          MOV      r0,#0x77
000d30  f88d0004          STRB     r0,[sp,#4]
;;;418    							temp_out[1]='r';
000d34  f04f0072          MOV      r0,#0x72
000d38  f88d0005          STRB     r0,[sp,#5]
;;;419    							temp_out[2]='i';
000d3c  f04f0069          MOV      r0,#0x69
000d40  f88d0006          STRB     r0,[sp,#6]
;;;420    							temp_out[3]='t';
000d44  f04f0074          MOV      r0,#0x74
000d48  f88d0007          STRB     r0,[sp,#7]
;;;421    							temp_out[4]='e';
000d4c  f04f0065          MOV      r0,#0x65
000d50  f88d0008          STRB     r0,[sp,#8]
;;;422    							temp_out[5]=*((char*)&ptr);
000d54  f89d0020          LDRB     r0,[sp,#0x20]
000d58  f88d0009          STRB     r0,[sp,#9]
;;;423    							temp_out[6]=*(((char*)&ptr)+1);	
000d5c  e024              B        |L1.3496|
                  |L1.3422|
000d5e  e05a              B        |L1.3606|
                  |L1.3424|
                          DCD      UVZ
                  |L1.3428|
                          DCD      TZAS
                  |L1.3432|
                          DCD      TMAX
                  |L1.3436|
                          DCD      TSIGN
                  |L1.3440|
                          DCD      TBATMAX
                  |L1.3444|
                          DCD      TBATSIGN
                  |L1.3448|
                          DCD      speedChrgCurr
                  |L1.3452|
                          DCD      speedChrgVolt
                  |L1.3456|
                          DCD      speedChrgTimeInHour
                  |L1.3460|
                          DCD      U_OUT_KONTR_MAX
                  |L1.3464|
                          DCD      U_OUT_KONTR_MIN
                  |L1.3468|
                          DCD      U_OUT_KONTR_DELAY
                  |L1.3472|
                          DCD      UMAXN
                  |L1.3476|
                          DCD      modbus_tcp_out_ptr
                  |L1.3480|
                          DCD      ||area_number.4||+0x3c
                  |L1.3484|
                          DCD      ||area_number.8||
                  |L1.3488|
                          DCD      i
                  |L1.3492|
                          DCD      pvlk
                  |L1.3496|
000da8  f89d0021          LDRB     r0,[sp,#0x21]
000dac  f88d000a          STRB     r0,[sp,#0xa]
;;;424    						
;;;425    							temp_out[7]=crc_87(temp_out,7);	
000db0  f04f0107          MOV      r1,#7
000db4  a801              ADD      r0,sp,#4
000db6  f7fffffe          BL       crc_87
000dba  f88d000b          STRB     r0,[sp,#0xb]
;;;426    							temp_out[8]=crc_95(temp_out,7);			
000dbe  2107              MOVS     r1,#7
000dc0  a801              ADD      r0,sp,#4
000dc2  f7fffffe          BL       crc_95
000dc6  f88d000c          STRB     r0,[sp,#0xc]
;;;427    							
;;;428    							temp_out[10]=0;
000dca  f88d800e          STRB     r8,[sp,#0xe]
;;;429    							for (i=0;i<9;i++)
000dce  f8878000          STRB     r8,[r7,#0]
000dd2  f10d0904          ADD      r9,sp,#4              ;401
                  |L1.3542|
;;;430    								{
;;;431    								putchar_sc16is700(temp_out[i]);
000dd6  7838              LDRB     r0,[r7,#0]  ; i
000dd8  f8190000          LDRB     r0,[r9,r0]
000ddc  f7fffffe          BL       putchar_sc16is700
;;;432    								temp_out[10]^=temp_out[i];
000de0  7838              LDRB     r0,[r7,#0]  ; i
000de2  f89d100e          LDRB     r1,[sp,#0xe]
000de6  f8192000          LDRB     r2,[r9,r0]
000dea  ea810102          EOR      r1,r1,r2
000dee  f88d100e          STRB     r1,[sp,#0xe]
000df2  f1000001          ADD      r0,r0,#1              ;429
000df6  b2c0              UXTB     r0,r0                 ;429
000df8  7038              STRB     r0,[r7,#0]            ;429
000dfa  2809              CMP      r0,#9                 ;429
000dfc  d3eb              BCC      |L1.3542|
;;;433    								}
;;;434    							putchar_sc16is700(9);
000dfe  2009              MOVS     r0,#9
000e00  f7fffffe          BL       putchar_sc16is700
;;;435    							putchar_sc16is700(temp_out[10]^9);
000e04  f89d000e          LDRB     r0,[sp,#0xe]
000e08  f0800009          EOR      r0,r0,#9
000e0c  f7fffffe          BL       putchar_sc16is700
;;;436    							putchar_sc16is700(0x0a);
000e10  200a              MOVS     r0,#0xa
000e12  f7fffffe          BL       putchar_sc16is700
                  |L1.3606|
;;;437    							}
;;;438    						}
;;;439    					}
;;;440    				}
;;;441    		   	}
;;;442    		}
;;;443    	}
;;;444    
;;;445    if(crc16_calculated==crc16_incapsulated)
000e16  45da              CMP      r10,r11
000e18  d14e              BNE      |L1.3768|
;;;446    	{
;;;447    	ica_plazma[4]++;
000e1a  4aed              LDR      r2,|L1.4560|
000e1c  7910              LDRB     r0,[r2,#4]  ; ica_plazma
000e1e  f1000001          ADD      r0,r0,#1
000e22  7110              STRB     r0,[r2,#4]
;;;448     	if(modbus_an_buffer[0]==MODBUS_ADRESS)
000e24  f8df93ac          LDR      r9,|L1.4564|
000e28  f8dfa3ac          LDR      r10,|L1.4568|
000e2c  f8991000          LDRB     r1,[r9,#0]  ; modbus_an_buffer
000e30  f9ba0000          LDRSH    r0,[r10,#0]  ; MODBUS_ADRESS
000e34  4281              CMP      r1,r0
000e36  d17e              BNE      |L1.3894|
;;;449    		{
;;;450    		modbus_modbus_adress_eq++;
000e38  49e8              LDR      r1,|L1.4572|
000e3a  880a              LDRH     r2,[r1,#0]  ; modbus_modbus_adress_eq
000e3c  f1020201          ADD      r2,r2,#1
000e40  800a              STRH     r2,[r1,#0]
;;;451    		if(modbus_func==3)		//чтение произвольного кол-ва регистров хранения
000e42  2e03              CMP      r6,#3
000e44  d10c              BNE      |L1.3680|
;;;452    			{
;;;453    			modbus_plazma++;
000e46  49e6              LDR      r1,|L1.4576|
000e48  888a              LDRH     r2,[r1,#4]  ; modbus_plazma
000e4a  f1020201          ADD      r2,r2,#1
000e4e  808a              STRH     r2,[r1,#4]
;;;454    			modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
000e50  4623              MOV      r3,r4
000e52  462a              MOV      r2,r5
000e54  4631              MOV      r1,r6
000e56  b2c0              UXTB     r0,r0
000e58  f8cd8000          STR      r8,[sp,#0]
000e5c  f7fffffe          BL       modbus_hold_registers_transmit
                  |L1.3680|
;;;455    			}
;;;456    
;;;457    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
000e60  2e04              CMP      r6,#4
000e62  d02b              BEQ      |L1.3772|
;;;458    			{
;;;459    			modbus_input_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
;;;460    			modbus_modbus4f_cnt++;
;;;461    			}
;;;462    
;;;463    		else if(modbus_func==6) 	//запись регистров хранения
000e64  2e06              CMP      r6,#6
000e66  d039              BEQ      |L1.3804|
;;;464    			{
;;;465    			if(modbus_rx_arg0==11)		//Установка времени 
;;;466    				{
;;;467    				LPC_RTC->YEAR=(uint16_t)modbus_rx_arg1;
;;;468    				}
;;;469    			if(modbus_rx_arg0==12)		//Установка времени 
;;;470    				{
;;;471    				LPC_RTC->MONTH=(uint16_t)modbus_rx_arg1;
;;;472    				}
;;;473    			if(modbus_rx_arg0==13)		//Установка времени 
;;;474    				{
;;;475    				LPC_RTC->DOM=(uint16_t)modbus_rx_arg1;
;;;476    				}
;;;477    			if(modbus_rx_arg0==14)		//Установка времени 
;;;478    				{
;;;479    				LPC_RTC->HOUR=(uint16_t)modbus_rx_arg1;
;;;480    				}
;;;481    			if(modbus_rx_arg0==15)		//Установка времени 
;;;482    				{
;;;483    				LPC_RTC->MIN=(uint16_t)modbus_rx_arg1;
;;;484    				}
;;;485    			if(modbus_rx_arg0==16)		//Установка времени 
;;;486    				{
;;;487    				LPC_RTC->SEC=(uint16_t)modbus_rx_arg1;
;;;488    				}
;;;489    			if(modbus_rx_arg0==20)		//ток стабилизации для режима стабилизации тока
;;;490    				{
;;;491    				if((modbus_rx_arg1>=0)&&(modbus_rx_arg1<=18))
;;;492    				lc640_write_int(EE_NUMIST,modbus_rx_arg1);  
;;;493    				}
;;;494    			if(modbus_rx_arg0==21)		//ток стабилизации для режима стабилизации тока
;;;495    				{
;;;496    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;497    				lc640_write_int(EE_PAR,modbus_rx_arg1);  
;;;498    				}
;;;499    			if(modbus_rx_arg0==22)		//ток стабилизации для режима стабилизации тока
;;;500    				{
;;;501    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;502    				lc640_write_int(EE_ZV_ON,modbus_rx_arg1);  
;;;503    				}
;;;504    			if(modbus_rx_arg0==23)		//ток стабилизации для режима стабилизации тока
;;;505    				{
;;;506    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;507    				lc640_write_int(EE_TERMOKOMP,modbus_rx_arg1);  
;;;508    				}
;;;509    			if(modbus_rx_arg0==24)		//ток стабилизации для режима стабилизации тока
;;;510    				{
;;;511    				if(/*(modbus_rx_arg1>=0)||*/(modbus_rx_arg1<=20))
;;;512    				lc640_write_int(EE_UBM_AV,modbus_rx_arg1);  
;;;513    				}
;;;514    
;;;515    
;;;516    			if(modbus_rx_arg0==30)		//напряжение стабилизации для режима стабилизации напряжения
;;;517    				{
;;;518    				if((modbus_rx_arg1>0)&&(modbus_rx_arg1<5))modbus_rx_arg1=0;
;;;519    				else if(modbus_rx_arg1>=60)TBAT=60;
;;;520    				else TBAT=modbus_rx_arg1;
;;;521    				lc640_write_int(EE_TBAT,TBAT);
;;;522    
;;;523    				main_kb_cnt=(TBAT*60)-20;
;;;524    	     		}
;;;525    			if(modbus_rx_arg0==31)		//
;;;526    				{
;;;527    				lc640_write_int(EE_UMAX,modbus_rx_arg1);
;;;528    	     		}
;;;529    			if(modbus_rx_arg0==32)		//
;;;530    				{
;;;531    				lc640_write_int(EE_DU,UB20-modbus_rx_arg1);
;;;532    	     		}
;;;533    			if(modbus_rx_arg0==33)		//
;;;534    				{
;;;535    				lc640_write_int(EE_UB0,modbus_rx_arg1);
;;;536    	     		}
;;;537    			if(modbus_rx_arg0==34)		//
;;;538    				{
;;;539    				lc640_write_int(EE_UB20,modbus_rx_arg1);
;;;540    	     		}
;;;541    			if(modbus_rx_arg0==35)		//
;;;542    				{
;;;543    				lc640_write_int(EE_USIGN,modbus_rx_arg1);
;;;544    	     		}
;;;545    			if(modbus_rx_arg0==36)		//
;;;546    				{
;;;547    				lc640_write_int(EE_UMN,modbus_rx_arg1);
;;;548    	     		}
;;;549    			if(modbus_rx_arg0==37)		//
;;;550    				{
;;;551    				lc640_write_int(EE_U0B,modbus_rx_arg1);
;;;552    	     		}
;;;553    			if(modbus_rx_arg0==38)		//
;;;554    				{
;;;555    				lc640_write_int(EE_IKB,modbus_rx_arg1);
;;;556    	     		}
;;;557    			if(modbus_rx_arg0==39)		//
;;;558    				{
;;;559    				lc640_write_int(EE_IZMAX,modbus_rx_arg1);
;;;560    	     		}
;;;561    			if(modbus_rx_arg0==40)		//
;;;562    				{
;;;563    				lc640_write_int(EE_IMAX,modbus_rx_arg1);
;;;564    	     		}
;;;565    			if(modbus_rx_arg0==41)		//
;;;566    				{
;;;567    				lc640_write_int(EE_IMIN,modbus_rx_arg1);
;;;568    	     		}
;;;569    			if(modbus_rx_arg0==42)		//
;;;570    				{
;;;571    				lc640_write_int(EE_UVZ,modbus_rx_arg1);
;;;572    	     		}
;;;573    			if(modbus_rx_arg0==43)		//
;;;574    				{
;;;575    				if((modbus_rx_arg1>=0)&&(modbus_rx_arg1<=3))lc640_write_int(EE_TZAS,modbus_rx_arg1);
;;;576    	     		}
;;;577    			if(modbus_rx_arg0==44)		//
;;;578    				{
;;;579    				lc640_write_int(EE_TMAX,modbus_rx_arg1);
;;;580    	     		}
;;;581    			if(modbus_rx_arg0==45)		//
;;;582    				{
;;;583    				lc640_write_int(EE_TSIGN,modbus_rx_arg1);
;;;584    	     		}
;;;585    			if(modbus_rx_arg0==46)		//
;;;586    				{
;;;587    				lc640_write_int(EE_TBATMAX,modbus_rx_arg1);
;;;588    	     		}
;;;589    			if(modbus_rx_arg0==47)		//
;;;590    				{
;;;591    				lc640_write_int(EE_TBATSIGN,modbus_rx_arg1);
;;;592    	     		}
;;;593    			if(modbus_rx_arg0==48)		//
;;;594    				{
;;;595    				lc640_write_int(EE_SPEED_CHRG_CURR,modbus_rx_arg1);
;;;596    	     		}
;;;597    			if(modbus_rx_arg0==49)		//
;;;598    				{
;;;599    				lc640_write_int(EE_SPEED_CHRG_VOLT,modbus_rx_arg1);
;;;600    	     		}
;;;601    			if(modbus_rx_arg0==50)		//
;;;602    				{
;;;603    				lc640_write_int(EE_SPEED_CHRG_TIME,modbus_rx_arg1);
;;;604    	     		}
;;;605    			if(modbus_rx_arg0==51)		//
;;;606    				{
;;;607    				lc640_write_int(EE_U_OUT_KONTR_MAX,modbus_rx_arg1);
;;;608    	     		}
;;;609    			if(modbus_rx_arg0==52)		//
;;;610    				{
;;;611    				lc640_write_int(EE_U_OUT_KONTR_MIN,modbus_rx_arg1);
;;;612    	     		}
;;;613    			if(modbus_rx_arg0==53)		//
;;;614    				{
;;;615    				if((modbus_rx_arg1>=5)&&(modbus_rx_arg1<=100))lc640_write_int(EE_U_OUT_KONTR_DELAY,modbus_rx_arg1);
;;;616    	     		}
;;;617    			if(modbus_rx_arg0==54)		//
;;;618    				{
;;;619    				lc640_write_int(EE_UB0,modbus_rx_arg1);
;;;620    				lc640_write_int(EE_UB20,modbus_rx_arg1);
;;;621    	     		}
;;;622    			if(modbus_rx_arg0==55)		//
;;;623    				{
;;;624    				lc640_write_int(EE_UMAXN,modbus_rx_arg1);
;;;625    	     		}
;;;626    			if(modbus_rx_arg0==19)		//вкл/выкл источника напр.
;;;627    				{
;;;628    	/*			if(modbus_rx_arg1==1)
;;;629    					{
;;;630    					if(work_stat!=wsPS)
;;;631    						{
;;;632    						work_stat=wsPS;
;;;633    						time_proc=0;
;;;634    						time_proc_remain=T_PROC_PS;
;;;635    						restart_on_PS();
;;;636    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIN);
;;;637    						}
;;;638    					}
;;;639    				if(modbus_rx_arg1==0)
;;;640    					{
;;;641    					if(work_stat==wsPS)
;;;642    						{
;;;643    						work_stat=wsOFF;
;;;644    						restart_off();
;;;645    						}
;;;646    					} */
;;;647    				}
;;;648    			if(modbus_rx_arg0==20)		//вкл/выкл источника тока
;;;649    				{
;;;650    /*				if(modbus_rx_arg1==1)
;;;651    					{
;;;652    					if(work_stat!=wsGS)
;;;653    						{
;;;654    						work_stat=wsGS;
;;;655    						time_proc=0;
;;;656    						time_proc_remain=T_PROC_GS;
;;;657    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIT);
;;;658    						}
;;;659    					}
;;;660    				if(modbus_rx_arg1==0)
;;;661    					{
;;;662    					if(work_stat==wsGS)
;;;663    						{
;;;664    						work_stat=wsOFF;
;;;665    						restart_off();
;;;666    						}
;;;667    					}*/
;;;668    				}
;;;669    			//modbus_hold_register_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0);
;;;670    
;;;671    			if(modbus_rx_arg0==100)		//Передача шима для управления от ведущего ИПС
;;;672    				{
;;;673    				//plazma1000[2]=modbus_rx_arg1;
;;;674    				if(modbus_rx_arg1&0x4000)
;;;675    					{
;;;676    					short tempSSSS;
;;;677    					
;;;678    					tempSSSS=modbus_rx_arg1&0x3fff;
;;;679    					//plazma1000[3]=tempSSSS;
;;;680    					if((tempSSSS>0)&&(tempSSSS<5))tempSSSS=0;
;;;681    					else if(tempSSSS>=60)tempSSSS=60;
;;;682    				//	else tempSSSS=modbus_rx_arg1;
;;;683    					if(TBAT!=tempSSSS)lc640_write_int(EE_TBAT,tempSSSS);
;;;684    
;;;685    					main_kb_cnt=(tempSSSS*60)-20;
;;;686    					}
;;;687    				else ica_cntrl_hndl=modbus_rx_arg1;
;;;688    				ica_cntrl_hndl_cnt=200;
;;;689    
;;;690    				//plazma1000[1]++;
;;;691    				}
;;;692    			if(modbus_rx_arg0==101)		//Значение тока в ведомом ИПСе (прочитанное мастером в ведомом и переданное ведущему)
;;;693    				{
;;;694    				ica_your_current==modbus_rx_arg1;
;;;695    				ica_cntrl_hndl_cnt=200;
;;;696    				//plazma1000[2]++;
;;;697    				}
;;;698    
;;;699    			//modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,1,MODBUS_RTU_PROT);
;;;700    				{
;;;701    			/*if(prot==MODBUS_RTU_PROT)
;;;702    				{*/
;;;703    				mem_copy(modbus_tx_buff,modbus_rx_buffer,8);
;;;704    	
;;;705    				for (i=0;i<(8);i++)
;;;706    					{
;;;707    					putchar0(modbus_tx_buff[i]);
;;;708    					}
;;;709    
;;;710    				for (i=0;i<(8);i++)
;;;711    					{
;;;712    					putchar_sc16is700(modbus_tx_buff[i]);
;;;713    					}
;;;714    			/*	}
;;;715    			else if(prot==MODBUS_TCP_PROT)
;;;716    				{
;;;717    				modbus_tcp_out_ptr=(char*)&modbus_registers[(reg_adr-1)*2];
;;;718    				}*/
;;;719    				}
;;;720    			}
;;;721    			else if(modbus_func==1) {	
000e68  2e01              CMP      r6,#1
000e6a  d125              BNE      |L1.3768|
;;;722    				if(modbus_an_buffer[2]==8){
000e6c  f8990002          LDRB     r0,[r9,#2]  ; modbus_an_buffer
000e70  2808              CMP      r0,#8
000e72  d121              BNE      |L1.3768|
;;;723    				  for(i_cnt=0;i_cnt<8;i_cnt++) {
000e74  f04f0100          MOV      r1,#0
;;;724    				  	for(j_cnt=0;j_cnt<8;j_cnt++){
;;;725    					   snmp_enmv_data[i_cnt*8+j_cnt]=(modbus_an_buffer[3+i_cnt]>>j_cnt)&0x01;
000e78  4cda              LDR      r4,|L1.4580|
;;;726    					}
;;;727    					enmv_data[i_cnt]=modbus_an_buffer[3+i_cnt];				   
000e7a  4ddb              LDR      r5,|L1.4584|
                  |L1.3708|
000e7c  f04f0000          MOV      r0,#0                 ;724
000e80  eb090201          ADD      r2,r9,r1              ;725
000e84  78d2              LDRB     r2,[r2,#3]            ;725
                  |L1.3718|
000e86  eb0006c1          ADD      r6,r0,r1,LSL #3       ;725
000e8a  fa22f300          LSR      r3,r2,r0              ;725
000e8e  f0030301          AND      r3,r3,#1              ;725
000e92  55a3              STRB     r3,[r4,r6]            ;725
000e94  f1000001          ADD      r0,r0,#1              ;724
000e98  b2c0              UXTB     r0,r0                 ;724
000e9a  2808              CMP      r0,#8                 ;724
000e9c  d3f3              BCC      |L1.3718|
000e9e  546a              STRB     r2,[r5,r1]
000ea0  f1010101          ADD      r1,r1,#1              ;723
000ea4  b2c9              UXTB     r1,r1                 ;723
000ea6  2908              CMP      r1,#8                 ;723
000ea8  d3e8              BCC      |L1.3708|
;;;728    				  }
;;;729    				  enmv_on=0;
000eaa  48d0              LDR      r0,|L1.4588|
000eac  f8808000          STRB     r8,[r0,#0]
;;;730    				  enmv_puts_en=1;
000eb0  49cf              LDR      r1,|L1.4592|
000eb2  f04f0001          MOV      r0,#1
000eb6  7008              STRB     r0,[r1,#0]
                  |L1.3768|
;;;731    				}
;;;732    			} 
;;;733    
;;;734    		} 
;;;735    	else if(modbus_an_buffer[0]==ICA_MODBUS_ADDRESS)
;;;736    		{
;;;737    		ica_plazma[3]++;
;;;738    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
;;;739    			{
;;;740    			ica_plazma[2]++;
;;;741    			if(modbus_an_buffer[2]==2)
;;;742    				{
;;;743    				ica_your_current=(((unsigned short)modbus_an_buffer[3])*((unsigned short)256))+((unsigned short)modbus_an_buffer[4]);
;;;744    				}
;;;745    			}
;;;746    		}
;;;747    	
;;;748    	}
;;;749    
;;;750    
;;;751    }
000eb8  b009              ADD      sp,sp,#0x24
000eba  e422              B        |L1.1794|
                  |L1.3772|
000ebc  f8cd8000          STR      r8,[sp,#0]            ;459
000ec0  f8ba0000          LDRH     r0,[r10,#0]           ;459  ; MODBUS_ADRESS
000ec4  4623              MOV      r3,r4                 ;459
000ec6  462a              MOV      r2,r5                 ;459
000ec8  4631              MOV      r1,r6                 ;459
000eca  b2c0              UXTB     r0,r0                 ;459
000ecc  f7fffffe          BL       modbus_input_registers_transmit
000ed0  49c8              LDR      r1,|L1.4596|
000ed2  8808              LDRH     r0,[r1,#0]            ;460  ; modbus_modbus4f_cnt
000ed4  f1000001          ADD      r0,r0,#1              ;460
000ed8  8008              STRH     r0,[r1,#0]            ;460
000eda  e7ed              B        |L1.3768|
                  |L1.3804|
000edc  48c6              LDR      r0,|L1.4600|
000ede  2d0b              CMP      r5,#0xb               ;465
000ee0  d100              BNE      |L1.3812|
000ee2  8784              STRH     r4,[r0,#0x3c]         ;467
                  |L1.3812|
000ee4  2d0c              CMP      r5,#0xc               ;469
000ee6  d101              BNE      |L1.3820|
000ee8  f8804038          STRB     r4,[r0,#0x38]         ;471
                  |L1.3820|
000eec  2d0d              CMP      r5,#0xd               ;473
000eee  d101              BNE      |L1.3828|
000ef0  f880402c          STRB     r4,[r0,#0x2c]         ;475
                  |L1.3828|
000ef4  2d0e              CMP      r5,#0xe               ;477
000ef6  d101              BNE      |L1.3836|
000ef8  f8804028          STRB     r4,[r0,#0x28]         ;479
                  |L1.3836|
000efc  2d0f              CMP      r5,#0xf               ;481
000efe  d101              BNE      |L1.3844|
000f00  f8804024          STRB     r4,[r0,#0x24]         ;483
                  |L1.3844|
000f04  2d10              CMP      r5,#0x10              ;485
000f06  d101              BNE      |L1.3852|
000f08  f8804020          STRB     r4,[r0,#0x20]         ;487
                  |L1.3852|
000f0c  2d14              CMP      r5,#0x14              ;489
000f0e  d105              BNE      |L1.3868|
000f10  2c12              CMP      r4,#0x12              ;491
000f12  d803              BHI      |L1.3868|
000f14  b221              SXTH     r1,r4                 ;492
000f16  2098              MOVS     r0,#0x98              ;492
000f18  f7fffffe          BL       lc640_write_int
                  |L1.3868|
000f1c  2d15              CMP      r5,#0x15              ;494
000f1e  d106              BNE      |L1.3886|
000f20  b10c              CBZ      r4,|L1.3878|
000f22  2c01              CMP      r4,#1                 ;496
000f24  d103              BNE      |L1.3886|
                  |L1.3878|
000f26  b221              SXTH     r1,r4                 ;497
000f28  20ca              MOVS     r0,#0xca              ;497
000f2a  f7fffffe          BL       lc640_write_int
                  |L1.3886|
000f2e  2d16              CMP      r5,#0x16              ;499
000f30  d108              BNE      |L1.3908|
000f32  b11c              CBZ      r4,|L1.3900|
000f34  e000              B        |L1.3896|
                  |L1.3894|
000f36  e12f              B        |L1.4504|
                  |L1.3896|
000f38  2c01              CMP      r4,#1                 ;501
000f3a  d103              BNE      |L1.3908|
                  |L1.3900|
000f3c  b221              SXTH     r1,r4                 ;502
000f3e  2086              MOVS     r0,#0x86              ;502
000f40  f7fffffe          BL       lc640_write_int
                  |L1.3908|
000f44  2d17              CMP      r5,#0x17              ;504
000f46  d106              BNE      |L1.3926|
000f48  b10c              CBZ      r4,|L1.3918|
000f4a  2c01              CMP      r4,#1                 ;506
000f4c  d103              BNE      |L1.3926|
                  |L1.3918|
000f4e  b221              SXTH     r1,r4                 ;507
000f50  20f2              MOVS     r0,#0xf2              ;507
000f52  f7fffffe          BL       lc640_write_int
                  |L1.3926|
000f56  2d18              CMP      r5,#0x18              ;509
000f58  d106              BNE      |L1.3944|
000f5a  2c14              CMP      r4,#0x14              ;511
000f5c  d804              BHI      |L1.3944|
000f5e  b221              SXTH     r1,r4                 ;512
000f60  f44f7019          MOV      r0,#0x264             ;512
000f64  f7fffffe          BL       lc640_write_int
                  |L1.3944|
000f68  4ea4              LDR      r6,|L1.4604|
000f6a  f06f0913          MVN      r9,#0x13              ;523
000f6e  2d1e              CMP      r5,#0x1e              ;516
000f70  d118              BNE      |L1.4004|
000f72  1e60              SUBS     r0,r4,#1              ;518
000f74  2804              CMP      r0,#4                 ;518
000f76  d202              BCS      |L1.3966|
000f78  f04f0400          MOV      r4,#0                 ;518
000f7c  e006              B        |L1.3980|
                  |L1.3966|
000f7e  2c3c              CMP      r4,#0x3c              ;519
000f80  d303              BCC      |L1.3978|
000f82  f04f003c          MOV      r0,#0x3c              ;519
000f86  8030              STRH     r0,[r6,#0]            ;519
000f88  e000              B        |L1.3980|
                  |L1.3978|
000f8a  8034              STRH     r4,[r6,#0]            ;520
                  |L1.3980|
000f8c  f9b61000          LDRSH    r1,[r6,#0]            ;521  ; TBAT
000f90  20c2              MOVS     r0,#0xc2              ;521
000f92  f7fffffe          BL       lc640_write_int
000f96  8830              LDRH     r0,[r6,#0]            ;523  ; TBAT
000f98  4999              LDR      r1,|L1.4608|
000f9a  ebc01000          RSB      r0,r0,r0,LSL #4       ;523
000f9e  eb090080          ADD      r0,r9,r0,LSL #2       ;523
000fa2  8008              STRH     r0,[r1,#0]            ;523
                  |L1.4004|
000fa4  2d1f              CMP      r5,#0x1f              ;525
000fa6  d103              BNE      |L1.4016|
000fa8  b221              SXTH     r1,r4                 ;527
000faa  2078              MOVS     r0,#0x78              ;527
000fac  f7fffffe          BL       lc640_write_int
                  |L1.4016|
000fb0  2d20              CMP      r5,#0x20              ;529
000fb2  d106              BNE      |L1.4034|
000fb4  4893              LDR      r0,|L1.4612|
000fb6  8800              LDRH     r0,[r0,#0]            ;531  ; UB20
000fb8  1b00              SUBS     r0,r0,r4              ;531
000fba  b201              SXTH     r1,r0                 ;531
000fbc  20c8              MOVS     r0,#0xc8              ;531
000fbe  f7fffffe          BL       lc640_write_int
                  |L1.4034|
000fc2  2d21              CMP      r5,#0x21              ;533
000fc4  d103              BNE      |L1.4046|
000fc6  b221              SXTH     r1,r4                 ;535
000fc8  207a              MOVS     r0,#0x7a              ;535
000fca  f7fffffe          BL       lc640_write_int
                  |L1.4046|
000fce  2d22              CMP      r5,#0x22              ;537
000fd0  d103              BNE      |L1.4058|
000fd2  b221              SXTH     r1,r4                 ;539
000fd4  207c              MOVS     r0,#0x7c              ;539
000fd6  f7fffffe          BL       lc640_write_int
                  |L1.4058|
000fda  2d23              CMP      r5,#0x23              ;541
000fdc  d103              BNE      |L1.4070|
000fde  b221              SXTH     r1,r4                 ;543
000fe0  2082              MOVS     r0,#0x82              ;543
000fe2  f7fffffe          BL       lc640_write_int
                  |L1.4070|
000fe6  2d24              CMP      r5,#0x24              ;545
000fe8  d103              BNE      |L1.4082|
000fea  b221              SXTH     r1,r4                 ;547
000fec  2084              MOVS     r0,#0x84              ;547
000fee  f7fffffe          BL       lc640_write_int
                  |L1.4082|
000ff2  2d25              CMP      r5,#0x25              ;549
000ff4  d103              BNE      |L1.4094|
000ff6  b221              SXTH     r1,r4                 ;551
000ff8  2094              MOVS     r0,#0x94              ;551
000ffa  f7fffffe          BL       lc640_write_int
                  |L1.4094|
000ffe  2d26              CMP      r5,#0x26              ;553
001000  d103              BNE      |L1.4106|
001002  b221              SXTH     r1,r4                 ;555
001004  2088              MOVS     r0,#0x88              ;555
001006  f7fffffe          BL       lc640_write_int
                  |L1.4106|
00100a  2d27              CMP      r5,#0x27              ;557
00100c  d103              BNE      |L1.4118|
00100e  b221              SXTH     r1,r4                 ;559
001010  2092              MOVS     r0,#0x92              ;559
001012  f7fffffe          BL       lc640_write_int
                  |L1.4118|
001016  2d28              CMP      r5,#0x28              ;561
001018  d103              BNE      |L1.4130|
00101a  b221              SXTH     r1,r4                 ;563
00101c  208c              MOVS     r0,#0x8c              ;563
00101e  f7fffffe          BL       lc640_write_int
                  |L1.4130|
001022  2d29              CMP      r5,#0x29              ;565
001024  d103              BNE      |L1.4142|
001026  b221              SXTH     r1,r4                 ;567
001028  208e              MOVS     r0,#0x8e              ;567
00102a  f7fffffe          BL       lc640_write_int
                  |L1.4142|
00102e  2d2a              CMP      r5,#0x2a              ;569
001030  d103              BNE      |L1.4154|
001032  b221              SXTH     r1,r4                 ;571
001034  20de              MOVS     r0,#0xde              ;571
001036  f7fffffe          BL       lc640_write_int
                  |L1.4154|
00103a  2d2b              CMP      r5,#0x2b              ;573
00103c  d105              BNE      |L1.4170|
00103e  2c03              CMP      r4,#3                 ;575
001040  d803              BHI      |L1.4170|
001042  b221              SXTH     r1,r4                 ;575
001044  2096              MOVS     r0,#0x96              ;575
001046  f7fffffe          BL       lc640_write_int
                  |L1.4170|
00104a  2d2c              CMP      r5,#0x2c              ;577
00104c  d103              BNE      |L1.4182|
00104e  b221              SXTH     r1,r4                 ;579
001050  207e              MOVS     r0,#0x7e              ;579
001052  f7fffffe          BL       lc640_write_int
                  |L1.4182|
001056  2d2d              CMP      r5,#0x2d              ;581
001058  d103              BNE      |L1.4194|
00105a  b221              SXTH     r1,r4                 ;583
00105c  20c6              MOVS     r0,#0xc6              ;583
00105e  f7fffffe          BL       lc640_write_int
                  |L1.4194|
001062  2d2e              CMP      r5,#0x2e              ;585
001064  d103              BNE      |L1.4206|
001066  b221              SXTH     r1,r4                 ;587
001068  20cc              MOVS     r0,#0xcc              ;587
00106a  f7fffffe          BL       lc640_write_int
                  |L1.4206|
00106e  2d2f              CMP      r5,#0x2f              ;589
001070  d103              BNE      |L1.4218|
001072  b221              SXTH     r1,r4                 ;591
001074  20ce              MOVS     r0,#0xce              ;591
001076  f7fffffe          BL       lc640_write_int
                  |L1.4218|
00107a  2d30              CMP      r5,#0x30              ;593
00107c  d104              BNE      |L1.4232|
00107e  b221              SXTH     r1,r4                 ;595
001080  f44f708b          MOV      r0,#0x116             ;595
001084  f7fffffe          BL       lc640_write_int
                  |L1.4232|
001088  2d31              CMP      r5,#0x31              ;597
00108a  d104              BNE      |L1.4246|
00108c  b221              SXTH     r1,r4                 ;599
00108e  f44f708c          MOV      r0,#0x118             ;599
001092  f7fffffe          BL       lc640_write_int
                  |L1.4246|
001096  2d32              CMP      r5,#0x32              ;601
001098  d104              BNE      |L1.4260|
00109a  b221              SXTH     r1,r4                 ;603
00109c  f44f708d          MOV      r0,#0x11a             ;603
0010a0  f7fffffe          BL       lc640_write_int
                  |L1.4260|
0010a4  2d33              CMP      r5,#0x33              ;605
0010a6  d104              BNE      |L1.4274|
0010a8  b221              SXTH     r1,r4                 ;607
0010aa  f44f7095          MOV      r0,#0x12a             ;607
0010ae  f7fffffe          BL       lc640_write_int
                  |L1.4274|
0010b2  2d34              CMP      r5,#0x34              ;609
0010b4  d104              BNE      |L1.4288|
0010b6  b221              SXTH     r1,r4                 ;611
0010b8  f44f7096          MOV      r0,#0x12c             ;611
0010bc  f7fffffe          BL       lc640_write_int
                  |L1.4288|
0010c0  2d35              CMP      r5,#0x35              ;613
0010c2  d107              BNE      |L1.4308|
0010c4  1f60              SUBS     r0,r4,#5              ;615
0010c6  285f              CMP      r0,#0x5f              ;615
0010c8  d804              BHI      |L1.4308|
0010ca  b221              SXTH     r1,r4                 ;615
0010cc  f44f7097          MOV      r0,#0x12e             ;615
0010d0  f7fffffe          BL       lc640_write_int
                  |L1.4308|
0010d4  2d36              CMP      r5,#0x36              ;617
0010d6  d108              BNE      |L1.4330|
0010d8  b221              SXTH     r1,r4                 ;619
0010da  468a              MOV      r10,r1                ;619
0010dc  207a              MOVS     r0,#0x7a              ;619
0010de  f7fffffe          BL       lc640_write_int
0010e2  4651              MOV      r1,r10                ;620
0010e4  207c              MOVS     r0,#0x7c              ;620
0010e6  f7fffffe          BL       lc640_write_int
                  |L1.4330|
0010ea  2d37              CMP      r5,#0x37              ;622
0010ec  d104              BNE      |L1.4344|
0010ee  b221              SXTH     r1,r4                 ;624
0010f0  f2411076          MOV      r0,#0x1176            ;624
0010f4  f7fffffe          BL       lc640_write_int
                  |L1.4344|
0010f8  f8dfb10c          LDR      r11,|L1.4616|
0010fc  f04f0ac8          MOV      r10,#0xc8             ;531
001100  2d64              CMP      r5,#0x64              ;671
001102  d121              BNE      |L1.4424|
001104  0460              LSLS     r0,r4,#17             ;674
001106  d51b              BPL      |L1.4416|
001108  f3c4040d          UBFX     r4,r4,#0,#14          ;678
00110c  f1a40001          SUB      r0,r4,#1              ;680
001110  2804              CMP      r0,#4                 ;680
001112  d202              BCS      |L1.4378|
001114  f04f0400          MOV      r4,#0                 ;680
001118  e003              B        |L1.4386|
                  |L1.4378|
00111a  2c3c              CMP      r4,#0x3c              ;681
00111c  db01              BLT      |L1.4386|
00111e  f04f043c          MOV      r4,#0x3c              ;681
                  |L1.4386|
001122  f9b60000          LDRSH    r0,[r6,#0]            ;683  ; TBAT
001126  42a0              CMP      r0,r4                 ;683
001128  d003              BEQ      |L1.4402|
00112a  4621              MOV      r1,r4                 ;683
00112c  20c2              MOVS     r0,#0xc2              ;683
00112e  f7fffffe          BL       lc640_write_int
                  |L1.4402|
001132  4933              LDR      r1,|L1.4608|
001134  ebc41004          RSB      r0,r4,r4,LSL #4       ;685
001138  eb090080          ADD      r0,r9,r0,LSL #2       ;685
00113c  8008              STRH     r0,[r1,#0]            ;685
00113e  e001              B        |L1.4420|
                  |L1.4416|
001140  4832              LDR      r0,|L1.4620|
001142  8004              STRH     r4,[r0,#0]            ;687
                  |L1.4420|
001144  f8aba000          STRH     r10,[r11,#0]          ;688
                  |L1.4424|
001148  2d65              CMP      r5,#0x65              ;692
00114a  d101              BNE      |L1.4432|
00114c  f8aba000          STRH     r10,[r11,#0]          ;695
                  |L1.4432|
001150  4920              LDR      r1,|L1.4564|
001152  2208              MOVS     r2,#8                 ;703
001154  391e              SUBS     r1,r1,#0x1e           ;703
001156  f101003c          ADD      r0,r1,#0x3c           ;703
00115a  f7fffffe          BL       mem_copy
00115e  f8878000          STRB     r8,[r7,#0]            ;705
001162  4c1c              LDR      r4,|L1.4564|
001164  341e              ADDS     r4,r4,#0x1e           ;703
                  |L1.4454|
001166  7838              LDRB     r0,[r7,#0]            ;707  ; i
001168  5c20              LDRB     r0,[r4,r0]            ;707
00116a  f7fffffe          BL       putchar0
00116e  7838              LDRB     r0,[r7,#0]            ;705  ; i
001170  f1000001          ADD      r0,r0,#1              ;705
001174  b2c0              UXTB     r0,r0                 ;705
001176  7038              STRB     r0,[r7,#0]            ;705
001178  2808              CMP      r0,#8                 ;705
00117a  d3f4              BCC      |L1.4454|
00117c  f8878000          STRB     r8,[r7,#0]            ;710
                  |L1.4480|
001180  7838              LDRB     r0,[r7,#0]            ;712  ; i
001182  5c20              LDRB     r0,[r4,r0]            ;712
001184  f7fffffe          BL       putchar_sc16is700
001188  7838              LDRB     r0,[r7,#0]            ;710  ; i
00118a  f1000001          ADD      r0,r0,#1              ;710
00118e  b2c0              UXTB     r0,r0                 ;710
001190  7038              STRB     r0,[r7,#0]            ;710
001192  2808              CMP      r0,#8                 ;710
001194  d3f4              BCC      |L1.4480|
                  |L1.4502|
001196  e68f              B        |L1.3768|
                  |L1.4504|
001198  481d              LDR      r0,|L1.4624|
00119a  f9b00000          LDRSH    r0,[r0,#0]            ;735  ; ICA_MODBUS_ADDRESS
00119e  4281              CMP      r1,r0                 ;735
0011a0  d1f9              BNE      |L1.4502|
0011a2  78d0              LDRB     r0,[r2,#3]            ;737  ; ica_plazma
0011a4  f1000001          ADD      r0,r0,#1              ;737
0011a8  70d0              STRB     r0,[r2,#3]            ;737
0011aa  2e04              CMP      r6,#4                 ;738
0011ac  d1f3              BNE      |L1.4502|
0011ae  7890              LDRB     r0,[r2,#2]            ;740  ; ica_plazma
0011b0  f1000001          ADD      r0,r0,#1              ;740
0011b4  7090              STRB     r0,[r2,#2]            ;740
0011b6  f8990002          LDRB     r0,[r9,#2]            ;741  ; modbus_an_buffer
0011ba  2802              CMP      r0,#2                 ;741
0011bc  d1eb              BNE      |L1.4502|
0011be  f8990004          LDRB     r0,[r9,#4]            ;743  ; modbus_an_buffer
0011c2  f8991003          LDRB     r1,[r9,#3]            ;743  ; modbus_an_buffer
0011c6  eb002001          ADD      r0,r0,r1,LSL #8       ;743
0011ca  4912              LDR      r1,|L1.4628|
0011cc  8008              STRH     r0,[r1,#0]            ;743
0011ce  e673              B        |L1.3768|
;;;752    /*
                          ENDP

                  |L1.4560|
                          DCD      ica_plazma
                  |L1.4564|
                          DCD      ||area_number.4||+0x1e
                  |L1.4568|
                          DCD      MODBUS_ADRESS
                  |L1.4572|
                          DCD      modbus_modbus_adress_eq
                  |L1.4576|
                          DCD      ||area_number.8||
                  |L1.4580|
                          DCD      snmp_enmv_data
                  |L1.4584|
                          DCD      enmv_data
                  |L1.4588|
                          DCD      enmv_on
                  |L1.4592|
                          DCD      enmv_puts_en
                  |L1.4596|
                          DCD      modbus_modbus4f_cnt
                  |L1.4600|
                          DCD      0x40024000
                  |L1.4604|
                          DCD      TBAT
                  |L1.4608|
                          DCD      main_kb_cnt
                  |L1.4612|
                          DCD      UB20
                  |L1.4616|
                          DCD      ica_cntrl_hndl_cnt
                  |L1.4620|
                          DCD      ica_cntrl_hndl
                  |L1.4624|
                          DCD      ICA_MODBUS_ADDRESS
                  |L1.4628|
                          DCD      ica_your_current

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  modbus_buf
                          %        20

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  modbus_rx_buffer
                          %        30
                  modbus_an_buffer
                          %        30
                  modbus_tx_buff
                          %        100

                          AREA ||.data||, DATA, ALIGN=1

                  modbus_crc16
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  modbus_timeout_cnt
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  bMODBUS_TIMEOUT
000000  00                DCB      0x00
                  modbus_rx_buffer_ptr
000001  00                DCB      0x00
                  modbus_rx_counter
000002  0000              DCB      0x00,0x00
                  modbus_plazma
000004  0000              DCB      0x00,0x00
                  modbus_plazma1
000006  0000              DCB      0x00,0x00
                  modbus_plazma2
000008  0000              DCB      0x00,0x00
                  modbus_plazma3
00000a  0000              DCB      0x00,0x00

                          AREA ||area_number.9||, DATA, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.data||
                  modbus_plazma_p
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.10||, DATA, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.data||
                  modbus_plazma_pp
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.11||, DATA, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.data||
                  modbus_rx_arg0
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.12||, DATA, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.data||
                  modbus_rx_arg1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.13||, DATA, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.data||
                  modbus_rx_arg2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.14||, DATA, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.data||
                  modbus_rx_arg3
000000  0000              DCB      0x00,0x00
